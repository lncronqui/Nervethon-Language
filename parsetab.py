
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functions\n                | global_dec Link_Start declare_statements statements functions\n                | global_dec declare_statements statements Link_End functions\n                | global_dec declare_statements statements functions global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | struct_dec : Struct id open_bracket struct_element1 close_bracket id_array1\n                    | Struct id struct_element1 id_array1\n                    | Struct open_bracket struct_element1 id_array1\n                    | Struct struct_element1 close_bracket id_array1\n                    | Struct id open_bracket struct_element1 id_array1\n                    | Struct id struct_element1 close_bracket id_array1\n                    | Struct open_bracket struct_element1 close_bracket id_array1\n                    | struct_element1 : data_type id_array_dec struct_element2 struct_element2 : struct_element1\n                        | data_type : Integer\n                | Decimal\n                | String\n                | Boolean data_type : id_array_dec : id id_array_dec2\n                    | id_array_dec2 : id_dec1 id_array_dec2 : open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | declare_statements : Generate const_var_dec declare_statements\n                            | const_var_dec : Fixed data_type id_array_const const_var_dec : data_type id_array_var const_var_dec : id_array_const : id id_array_const2\n                        | id_array_const2 : open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 id_array_const2 : equal value id_const1 id_array_const2 : id_const1 : comma id equal value id_const1 \n                | array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | id_array_var : id id_array_var2\n                    | id_array_var2 : var_init id_var1 id_array_var2 : open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | id_var1 : comma id var_init id_var1\n                | array_init : equal open_brace value1 close_brace array_var1 \n                | array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | value : num_value\n            | lit_str\n            | lit_bool\n            | value_opt : num_value_opt\n            | lit_str\n            | lit_bool num_value : id_array id_struct num_value : literals \n                | arithmetic_expression\n                | func_call num_value : num_value_opt : id_array_opt id_struct num_value_opt : literals_opt\n                | arithmetic_expression\n                | func_call id_array : id array\n                | id_array_opt : id array array : open_brace num_value close_brace array : open_brace close_brace array :  id_array1 : id_array id_array2\n                | id_array1 : id_array id_array id_array2 : comma id_array1\n                |literals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnega\n                |literals_opt : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                |value1 : value value2value2 : comma value1 \n            |value1_opt : value_opt value2_optvalue2_opt : comma value1_opt \n            |statements : assignment_statements statements \n                | for_statements statements\n                | while_statements statements\n                | if_statement statements\n                | switch_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                |assignment_statements : id assignment_statements2\n                            |assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_statements2 :assignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassignment_exp :assign_value : num_valueassign_value : more_id valuemore_id : id_array id_struct equal more_id\n            |assignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                |block : open_bracket inside_statements close_bracket\n            | inside_statements close_bracket\n            | open_bracket inside_statements\n            | inside_statementsfor_statements : For id In id open_brace close_brace colon block\n                        | For id In id open_brace close_brace colon\n                        | For id In id open_brace close_brace block\n                        | For id In id open_brace colon block\n                        | For id In id close_brace colon block\n                        | For id In open_brace close_brace colon block\n                        | For id id open_brace close_brace colon block\n                        | For In id open_brace close_brace colon block\n                        | For id In id open_brace close_brace\n                        | For id In id open_brace colon\n                        | For id In id open_brace block\n                        | For id In id close_brace colon\n                        | For id In id close_brace block\n                        | For id In id colon block\n                        | For id In open_brace close_brace colon\n                        | For id In open_brace close_brace block\n                        | For id In open_brace colon block\n                        | For id In close_brace colon block\n                        | For id id open_brace close_brace colon\n                        | For id id open_brace close_brace block\n                        | For id id open_brace colon block\n                        | For id id close_brace colon block\n                        | For id open_brace close_brace colon block\n                        | For In id open_brace close_brace colon\n                        | For In id open_brace close_brace block\n                        | For In id open_brace colon block\n                        | For In id close_brace colon block\n                        | For In open_brace close_brace colon block\n                        | For id In id open_brace\n                        | For id In id close_brace\n                        | For id In id colon\n                        | For id In id block\n                        | For id In open_brace close_brace\n                        | For id In open_brace colon\n                        | For id In open_brace block\n                        | For id In close_brace colon\n                        | For id In close_brace block\n                        | For id In colon block\n                        | For id id open_brace close_brace\n                        | For id id open_brace colon\n                        | For id id open_brace block\n                        | For id id close_brace colon\n                        | For id id close_brace block\n                        | For id id colon block\n                        | For id open_brace close_brace colon\n                        | For id open_brace close_brace block\n                        | For id open_brace colon block\n                        | For id close_brace colon block\n                        | For In id open_brace close_brace\n                        | For In id open_brace colon\n                        | For In id open_brace block\n                        | For In id close_brace colon\n                        | For In id close_brace block\n                        | For In id colon block\n                        | For In open_brace close_brace colon\n                        | For In open_brace close_brace block\n                        | For In open_brace colon block\n                        | For open_brace close_brace colon block\n                        | For id In id\n                        | For id In open_brace\n                        | For id In close_brace\n                        | For id In colon\n                        | For id In block\n                        | For id id open_brace\n                        | For id id close_brace\n                        | For id id colon\n                        | For id id block\n                        | For id open_brace close_brace\n                        | For id open_brace colon\n                        | For id open_brace block\n                        | For id close_brace colon\n                        | For id close_brace block\n                        | For id colon block\n                        | For In id open_brace\n                        | For In id close_brace\n                        | For In id colon\n                        | For In id block\n                        | For In open_brace close_brace\n                        | For In open_brace colon\n                        | For In open_brace block\n                        | For In close_brace colon\n                        | For In close_brace block\n                        | For In colon block\n                        | For open_brace close_brace colon\n                        | For open_brace close_brace block\n                        | For open_brace colon block\n                        | For close_brace colon block\n                        | For id In\n                        | For id id\n                        | For id open_brace\n                        | For id close_brace\n                        | For id colon\n                        | For id block\n                        | For In id\n                        | For In open_brace\n                        | For In close_brace\n                        | For In colon\n                        | For In block\n                        | For open_brace close_brace\n                        | For open_brace colon\n                        | For open_brace block\n                        | For close_brace colon\n                        | For close_brace block\n                        | For colon block\n                        | For id\n                        | For In\n                        | For open_brace\n                        | For close_brace\n                        | For colon\n                        | For blockwhile_statements : While open_par condition close_par colon block\n                        | While open_par condition close_par block\n                        | While open_par condition colon block\n                        | While condition close_par colon block\n                        | While open_par condition block\n                        | While condition close_par block\n                        | While condition colon blockinside_statements : statements control_statements\n                        | control_statements statements\n                        |control_statements : Break\n                        | Continue\n                        | Avoid\n                        | condition   : relational_expression\n                    | logical_expression\n                    | lit_bool condition   : Not open_par condition_not close_par condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par\n                            | open_par logical_operand close_par logical_operators open_par logical_operand\n                            | open_par logical_operand close_par logical_operators logical_operand close_par\n                            | open_par logical_operand logical_operators open_par logical_operand close_par\n                            | logical_operand close_par logical_operators open_par logical_operand close_par\n                            | open_par logical_operand close_par logical_operators logical_operand\n                            | open_par logical_operand logical_operators open_par logical_operand\n                            | open_par logical_operand logical_operators logical_operand close_par\n                            | logical_operand close_par logical_operators open_par logical_operand\n                            | logical_operand logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par logical_operand : relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon block condition_else\n                        | If open_par condition close_par block condition_else\n                        | If open_par condition colon block condition_else\n                        | If condition close_par colon block condition_else\n                        | If open_par condition block condition_else\n                        | If condition close_par block condition_else\n                        | If condition colon block condition_else condition_else  : elif_statement\n                        | else_statement condition_else  : elif_statement  : Elif open_par condition close_par colon block condition_else else_statement  : Else colon block\n                        | switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param function_param  : value1_opt more_param function_param : more_param  : comma function_param\n                    | functions   : Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement functions\n                    | Sys parameters open_bracket declare_statements statements return_statement functions\n                    | Sys parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | parameters  : data_type id more_parameters parameters  : more_parameters : comma data_type id more_parameters\n                        | return_statement    : Return value statements return_statement\n                            |'
    
_lr_action_items = {'Link_Start':([0,2,3,4,6,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,88,89,90,91,92,93,94,95,96,97,98,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,134,136,179,180,181,182,183,184,185,186,187,188,197,198,199,200,201,202,203,205,206,208,209,212,231,233,275,288,311,312,313,314,316,317,318,319,399,405,408,410,411,479,480,523,560,562,593,594,595,597,619,620,622,631,634,640,641,],[-7,7,-7,-7,-23,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-103,-77,-94,-95,-8,-83,-31,-28,-43,-51,-55,-50,-325,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'Generate':([0,2,3,4,6,7,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,55,88,89,90,91,92,93,94,95,96,97,98,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,134,136,179,180,181,182,183,184,185,186,187,188,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,219,220,231,233,275,288,311,312,313,314,316,317,318,319,320,322,323,325,326,328,331,399,405,408,410,411,413,414,418,422,479,480,483,500,523,548,560,562,593,594,595,597,619,620,622,631,634,640,641,],[6,6,6,6,-23,6,-6,-5,-23,-23,-25,-19,-20,-21,-22,6,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,6,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,6,6,6,6,-366,-103,-77,-94,-95,-8,-83,-31,-28,-43,-51,-55,-50,6,6,6,6,6,6,-363,-325,-27,-40,-53,-57,6,6,6,6,-52,-49,6,-366,-61,-365,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'id':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,88,89,90,91,92,93,94,95,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,125,129,130,131,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,166,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,197,198,199,200,201,202,203,205,206,208,209,210,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,274,275,276,277,278,279,285,287,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,384,385,386,387,388,389,392,393,394,397,399,401,403,405,406,408,409,410,411,413,414,415,417,418,419,421,422,423,425,427,429,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,479,480,481,482,483,484,485,489,493,498,500,501,502,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,522,523,527,548,550,553,554,560,562,564,588,590,593,594,595,597,615,616,619,620,621,622,629,631,634,638,640,641,],[-7,-33,-7,-7,11,-23,-33,32,-6,-5,-23,-23,47,-19,-20,-21,-22,-33,-23,51,32,32,32,32,32,32,32,32,32,-79,67,94,94,101,-321,-322,102,94,94,-23,94,94,94,-18,-29,-32,121,-35,-51,129,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,94,138,144,32,32,32,-254,32,-144,-268,32,-265,-266,-267,94,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,94,-104,-324,-60,94,94,-9,94,94,-10,94,-11,-16,-17,-24,-26,205,-34,-41,-46,-53,94,-23,-23,-33,220,-127,94,-78,32,238,243,32,32,-237,32,32,32,32,-242,32,32,-245,32,-247,-248,-143,-142,-262,-263,94,32,-271,32,32,94,94,-277,-278,-279,-280,-281,-282,-297,-298,94,-96,-97,-98,-99,-100,-101,-102,-65,-74,94,32,32,32,296,-323,94,-12,-13,-82,-80,94,-14,-29,-37,94,-48,317,-53,-23,-33,-33,-33,32,-33,-366,-122,94,94,-132,-133,-134,-135,-136,-137,-138,-103,-77,243,32,32,-211,32,32,32,32,-207,-79,32,32,-214,32,32,-216,-217,243,32,32,-221,32,32,-224,-225,-226,-227,32,-229,-230,-231,-141,-294,-295,-296,32,32,-259,94,-94,32,-260,-261,94,-276,94,-95,32,32,-310,32,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,32,-33,-33,32,-33,-33,32,-33,32,-363,-23,-125,-126,-128,94,-104,433,32,32,-185,32,-187,-188,243,32,32,-176,32,32,-179,32,-181,-182,-104,94,32,-190,-191,-192,32,32,-195,32,-197,-198,32,-200,-201,-202,94,32,-256,-257,94,94,-258,-272,-293,94,32,-310,-310,-305,-308,-309,-310,-306,-307,94,-325,296,475,-27,476,-40,478,-53,-57,-33,-33,32,32,-33,32,32,-33,32,32,94,500,-129,-65,32,-164,-165,-166,32,32,-155,32,-157,-158,32,-160,-161,-162,-167,32,-169,-170,-171,-172,-255,94,-288,-289,-290,-291,-292,-310,-302,-303,94,32,-304,-52,-49,524,94,-33,32,32,32,32,32,-366,94,94,-151,32,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,32,32,94,94,32,-365,-130,-145,-283,-43,-57,94,-123,32,-31,-45,-42,-54,-310,-314,-30,-39,630,-55,-311,-57,-56,94,-45,-44,]),'For':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,417,418,419,421,422,423,425,427,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,489,493,498,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,523,527,548,550,553,554,560,562,588,590,593,594,595,597,615,616,619,620,622,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,33,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,33,33,33,33,33,33,33,33,33,-79,33,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,33,33,33,33,33,-254,33,-144,-268,33,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,33,33,33,33,33,-237,33,33,33,33,-242,33,33,-245,33,-247,-248,-143,-142,-262,-263,33,-271,33,33,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,33,33,33,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,-33,-33,-33,33,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,33,33,33,-211,33,33,33,33,-207,-79,33,33,-214,33,33,-216,-217,33,33,33,-221,33,33,-224,-225,-226,-227,33,-229,-230,-231,-141,-294,-295,-296,33,33,-259,-94,33,-260,-261,-276,-95,33,33,-310,33,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,33,-33,-33,33,-33,-33,33,-33,33,-363,-125,-126,-128,-61,-104,33,33,-185,33,-187,-188,33,33,33,-176,33,33,-179,33,-181,-182,-104,33,-190,-191,-192,33,33,-195,33,-197,-198,33,-200,-201,-202,33,-256,-257,-258,-272,-293,33,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,33,33,-33,33,33,-33,33,33,-61,-129,-65,33,-164,-165,-166,33,33,-155,33,-157,-158,33,-160,-161,-162,-167,33,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,33,-304,-52,-49,-33,33,33,33,33,33,-366,-131,-151,33,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,33,33,-61,33,-365,-130,-145,-283,-43,-57,-123,33,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'While':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,417,418,419,421,422,423,425,427,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,489,493,498,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,523,527,548,550,553,554,560,562,588,590,593,594,595,597,615,616,619,620,622,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,34,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,34,34,34,34,34,34,34,34,34,-79,34,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,34,34,34,34,34,-254,34,-144,-268,34,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,34,34,34,34,34,-237,34,34,34,34,-242,34,34,-245,34,-247,-248,-143,-142,-262,-263,34,-271,34,34,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,34,34,34,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,-33,-33,-33,34,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,34,34,34,-211,34,34,34,34,-207,-79,34,34,-214,34,34,-216,-217,34,34,34,-221,34,34,-224,-225,-226,-227,34,-229,-230,-231,-141,-294,-295,-296,34,34,-259,-94,34,-260,-261,-276,-95,34,34,-310,34,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,34,-33,-33,34,-33,-33,34,-33,34,-363,-125,-126,-128,-61,-104,34,34,-185,34,-187,-188,34,34,34,-176,34,34,-179,34,-181,-182,-104,34,-190,-191,-192,34,34,-195,34,-197,-198,34,-200,-201,-202,34,-256,-257,-258,-272,-293,34,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,34,34,-33,34,34,-33,34,34,-61,-129,-65,34,-164,-165,-166,34,34,-155,34,-157,-158,34,-160,-161,-162,-167,34,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,34,-304,-52,-49,-33,34,34,34,34,34,-366,-131,-151,34,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,34,34,-61,34,-365,-130,-145,-283,-43,-57,-123,34,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'If':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,417,418,419,421,422,423,425,427,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,489,493,498,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,523,527,548,550,553,554,560,562,588,590,593,594,595,597,615,616,619,620,622,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,35,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,35,35,35,35,35,35,35,35,35,-79,35,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,35,35,35,35,35,-254,35,-144,-268,35,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,35,35,35,35,35,-237,35,35,35,35,-242,35,35,-245,35,-247,-248,-143,-142,-262,-263,35,-271,35,35,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,35,35,35,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,-33,-33,-33,35,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,35,35,35,-211,35,35,35,35,-207,-79,35,35,-214,35,35,-216,-217,35,35,35,-221,35,35,-224,-225,-226,-227,35,-229,-230,-231,-141,-294,-295,-296,35,35,-259,-94,35,-260,-261,-276,-95,35,35,-310,35,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,35,-33,-33,35,-33,-33,35,-33,35,-363,-125,-126,-128,-61,-104,35,35,-185,35,-187,-188,35,35,35,-176,35,35,-179,35,-181,-182,-104,35,-190,-191,-192,35,35,-195,35,-197,-198,35,-200,-201,-202,35,-256,-257,-258,-272,-293,35,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,35,35,-33,35,35,-33,35,35,-61,-129,-65,35,-164,-165,-166,35,35,-155,35,-157,-158,35,-160,-161,-162,-167,35,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,35,-304,-52,-49,-33,35,35,35,35,35,-366,-131,-151,35,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,35,35,-61,35,-365,-130,-145,-283,-43,-57,-123,35,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'Switch':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,417,418,419,421,422,423,425,427,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,489,493,498,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,523,527,548,550,553,554,560,562,588,590,593,594,595,597,615,616,619,620,622,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,36,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,36,36,36,36,36,36,36,36,36,-79,36,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,36,36,36,36,36,-254,36,-144,-268,36,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,36,36,36,36,36,-237,36,36,36,36,-242,36,36,-245,36,-247,-248,-143,-142,-262,-263,36,-271,36,36,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,36,36,36,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,-33,-33,-33,36,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,36,36,36,-211,36,36,36,36,-207,-79,36,36,-214,36,36,-216,-217,36,36,36,-221,36,36,-224,-225,-226,-227,36,-229,-230,-231,-141,-294,-295,-296,36,36,-259,-94,36,-260,-261,-276,-95,36,36,-310,36,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,36,-33,-33,36,-33,-33,36,-33,36,-363,-125,-126,-128,-61,-104,36,36,-185,36,-187,-188,36,36,36,-176,36,36,-179,36,-181,-182,-104,36,-190,-191,-192,36,36,-195,36,-197,-198,36,-200,-201,-202,36,-256,-257,-258,-272,-293,36,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,36,36,-33,36,36,-33,36,36,-61,-129,-65,36,-164,-165,-166,36,36,-155,36,-157,-158,36,-160,-161,-162,-167,36,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,36,-304,-52,-49,-33,36,36,36,36,36,-366,-131,-151,36,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,36,36,-61,36,-365,-130,-145,-283,-43,-57,-123,36,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'Sys_Call':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,88,89,90,91,92,93,94,95,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,166,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,274,275,276,277,278,279,285,287,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,384,385,386,387,388,389,392,393,394,397,399,401,403,405,408,410,411,413,414,415,417,418,419,421,422,423,425,427,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,479,480,482,483,484,485,489,493,498,500,501,502,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,522,523,527,548,550,553,554,560,562,564,588,590,593,594,595,597,615,616,619,620,622,629,631,634,638,640,641,],[-7,-33,-7,-7,-23,-33,39,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,39,39,39,39,39,39,39,39,39,-79,39,39,39,-321,-322,-75,39,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,39,39,39,39,39,39,-254,39,-144,-268,39,-265,-266,-267,39,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,39,-104,-324,-60,39,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,39,-364,-364,-33,-127,-75,-78,39,39,39,39,39,-237,39,39,39,39,-242,39,39,-245,39,-247,-248,-143,-142,-262,-263,39,39,-271,39,39,39,39,-277,-278,-279,-280,-281,-282,-297,-298,39,-96,-97,-98,-99,-100,-101,-102,-65,-74,39,39,39,39,39,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,39,-48,-53,-364,-33,-33,-33,39,-33,-366,-122,39,39,-132,-133,-134,-135,-136,-137,-138,-103,-77,39,39,39,-211,39,39,39,39,-207,-79,39,39,-214,39,39,-216,-217,39,39,39,-221,39,39,-224,-225,-226,-227,39,-229,-230,-231,-141,-294,-295,-296,39,39,-259,39,-94,39,-260,-261,39,-276,39,-95,39,39,-310,39,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,39,-33,-33,39,-33,-33,39,-33,39,-363,-125,-126,-128,39,-104,39,39,-185,39,-187,-188,39,39,39,-176,39,39,-179,39,-181,-182,-104,39,39,-190,-191,-192,39,39,-195,39,-197,-198,39,-200,-201,-202,39,39,-256,-257,39,39,-258,-272,-293,39,39,-310,-310,-305,-308,-309,-310,-306,-307,39,-325,39,39,-27,-40,-53,-57,-33,-33,39,39,-33,39,39,-33,39,39,39,-129,-65,39,-164,-165,-166,39,39,-155,39,-157,-158,39,-160,-161,-162,-167,39,-169,-170,-171,-172,-255,39,-288,-289,-290,-291,-292,-310,-302,-303,39,39,-304,-52,-49,39,-33,39,39,39,39,39,-366,-131,39,-151,39,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,39,39,39,39,39,-365,-130,-145,-283,-43,-57,39,-123,39,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,39,-45,-44,]),'Absorb':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,417,418,419,421,422,423,425,427,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,489,493,498,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,523,527,548,550,553,554,560,562,588,590,593,594,595,597,615,616,619,620,622,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,40,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,40,40,40,40,40,40,40,40,40,-79,40,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,40,40,40,40,40,-254,40,-144,-268,40,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,40,40,40,40,40,-237,40,40,40,40,-242,40,40,-245,40,-247,-248,-143,-142,-262,-263,40,-271,40,40,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,40,40,40,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,-33,-33,-33,40,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,40,40,40,-211,40,40,40,40,-207,-79,40,40,-214,40,40,-216,-217,40,40,40,-221,40,40,-224,-225,-226,-227,40,-229,-230,-231,-141,-294,-295,-296,40,40,-259,-94,40,-260,-261,-276,-95,40,40,-310,40,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,40,-33,-33,40,-33,-33,40,-33,40,-363,-125,-126,-128,-61,-104,40,40,-185,40,-187,-188,40,40,40,-176,40,40,-179,40,-181,-182,-104,40,-190,-191,-192,40,40,-195,40,-197,-198,40,-200,-201,-202,40,-256,-257,-258,-272,-293,40,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,40,40,-33,40,40,-33,40,40,-61,-129,-65,40,-164,-165,-166,40,40,-155,40,-157,-158,40,-160,-161,-162,-167,40,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,40,-304,-52,-49,-33,40,40,40,40,40,-366,-131,-151,40,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,40,40,-61,40,-365,-130,-145,-283,-43,-57,-123,40,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'Discharge':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,417,418,419,421,422,423,425,427,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,489,493,498,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,523,527,548,550,553,554,560,562,588,590,593,594,595,597,615,616,619,620,622,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,41,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,41,41,41,41,41,41,41,41,41,-79,41,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,41,41,41,41,41,-254,41,-144,-268,41,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,41,41,41,41,41,-237,41,41,41,41,-242,41,41,-245,41,-247,-248,-143,-142,-262,-263,41,-271,41,41,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,41,41,41,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,-33,-33,-33,41,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,41,41,41,-211,41,41,41,41,-207,-79,41,41,-214,41,41,-216,-217,41,41,41,-221,41,41,-224,-225,-226,-227,41,-229,-230,-231,-141,-294,-295,-296,41,41,-259,-94,41,-260,-261,-276,-95,41,41,-310,41,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,41,-33,-33,41,-33,-33,41,-33,41,-363,-125,-126,-128,-61,-104,41,41,-185,41,-187,-188,41,41,41,-176,41,41,-179,41,-181,-182,-104,41,-190,-191,-192,41,41,-195,41,-197,-198,41,-200,-201,-202,41,-256,-257,-258,-272,-293,41,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,41,41,-33,41,41,-33,41,41,-61,-129,-65,41,-164,-165,-166,41,41,-155,41,-157,-158,41,-160,-161,-162,-167,41,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,41,-304,-52,-49,-33,41,41,41,41,41,-366,-131,-151,41,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,41,41,-61,41,-365,-130,-145,-283,-43,-57,-123,41,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'Link_End':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,501,504,505,506,507,508,509,510,511,512,513,514,515,517,523,550,553,554,560,562,588,590,593,594,595,597,615,616,619,620,622,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,-119,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-119,53,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,126,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-119,-119,-119,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-294,-295,-296,-119,-119,-259,-94,-119,-260,-261,-276,-95,-119,-119,-310,-119,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-293,-119,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,-119,-304,-52,-49,-131,-151,-119,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,-61,-130,-145,-283,-43,-57,-123,-119,-31,-45,-42,-54,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'Sys':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,126,129,130,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,523,527,528,529,530,532,533,534,535,537,538,539,540,542,543,545,547,548,550,553,554,560,562,565,566,567,569,572,573,575,578,579,581,584,585,588,590,593,594,595,597,599,601,603,607,611,615,616,619,620,622,623,629,631,634,640,641,],[-7,-33,-7,-7,-23,-33,-119,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-119,55,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,55,55,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,55,-364,-364,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-119,-119,-119,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-364,-33,-33,-33,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-294,-295,-296,-119,-119,-259,-94,-119,-260,-261,-276,-95,-119,-119,-310,-119,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,-119,-363,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-293,-119,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,-119,-368,-119,-33,-119,-368,-119,-33,-119,-368,-119,-61,-368,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,-119,-304,-52,-49,-33,-119,-119,-368,55,-368,-119,-368,55,-368,-119,-368,55,-368,55,-119,55,-366,-131,-151,-119,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,-61,-119,-368,-368,55,55,55,-368,55,55,55,-368,55,55,55,-368,55,-365,-130,-145,-283,-43,-57,-368,55,55,55,55,55,55,55,55,55,55,-367,-123,-119,-31,-45,-42,-54,55,55,55,55,55,-310,-314,-30,-39,-55,55,-311,-57,-56,-45,-44,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,126,127,128,129,130,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,197,198,199,200,201,202,203,205,206,208,209,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,523,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,550,553,554,560,562,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,588,590,593,594,595,597,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,615,616,619,620,622,623,624,625,626,627,628,629,631,632,634,640,641,],[-7,0,-33,-7,-7,-23,-33,-119,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-119,-362,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-321,-322,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-362,-362,-4,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-362,-2,-3,-364,-364,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-119,-119,-119,-323,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-1,-364,-33,-33,-33,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-294,-295,-296,-119,-119,-259,-94,-119,-260,-261,-276,-95,-119,-119,-310,-119,-310,-310,-8,-83,-31,-28,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,-119,-363,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-293,-119,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,-119,-368,-119,-33,-119,-368,-119,-33,-119,-368,-119,-61,-368,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,-119,-304,-52,-49,-33,-119,-119,-368,-362,-368,-119,-368,-362,-368,-119,-368,-362,-368,-362,-119,-362,-366,-131,-151,-119,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,-61,-119,-368,-368,-362,-332,-362,-362,-368,-362,-333,-362,-362,-368,-362,-334,-362,-362,-336,-368,-335,-362,-365,-130,-145,-283,-43,-57,-368,-362,-362,-337,-362,-340,-338,-362,-362,-339,-362,-343,-341,-362,-362,-342,-362,-345,-344,-362,-367,-346,-123,-119,-31,-45,-42,-54,-362,-347,-362,-348,-362,-349,-351,-350,-362,-352,-354,-353,-362,-355,-356,-310,-314,-30,-39,-55,-362,-357,-358,-359,-360,-361,-311,-57,-331,-56,-45,-44,]),'Struct':([0,3,4,6,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,88,89,90,91,92,93,94,95,96,97,98,105,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,125,134,136,179,180,181,182,183,184,185,186,187,188,197,198,199,200,201,202,203,205,206,208,209,212,231,233,275,288,311,312,313,314,316,317,318,319,399,405,408,410,411,479,480,523,560,562,593,594,595,597,619,620,622,631,634,640,641,],[5,5,5,-23,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-103,-77,-94,-95,-8,-83,-31,-28,-43,-51,-55,-50,-325,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'open_bracket':([5,11,33,55,67,68,69,70,71,82,83,88,89,90,91,92,93,94,95,96,97,98,105,129,130,131,134,136,138,139,140,141,142,144,145,146,147,149,150,152,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,193,214,215,216,217,220,231,233,234,235,236,238,239,240,241,244,245,248,251,252,253,255,256,261,267,268,269,270,271,275,276,285,288,289,290,292,320,322,325,331,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,380,381,384,399,413,434,438,439,441,444,449,456,457,458,459,460,465,500,505,511,512,513,514,548,554,590,],[12,42,73,-364,73,73,73,73,73,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-364,-364,219,-75,-78,73,73,73,73,73,73,73,73,73,73,73,73,73,-271,73,73,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,73,73,73,295,-364,323,326,328,-366,-103,-77,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-294,-295,-296,73,73,-94,73,-276,-95,73,73,73,414,418,422,-363,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-272,-293,73,-325,483,73,73,73,73,73,73,-288,-289,-290,-291,-292,73,-366,73,-284,-285,-286,-287,-365,-283,73,]),'Integer':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,116,117,129,130,205,214,313,314,332,405,593,619,],[15,15,15,15,-25,-19,-20,-21,-22,15,15,15,-29,15,-24,-26,15,15,-29,15,-31,-28,15,-27,-31,-30,]),'Decimal':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,116,117,129,130,205,214,313,314,332,405,593,619,],[16,16,16,16,-25,-19,-20,-21,-22,16,16,16,-29,16,-24,-26,16,16,-29,16,-31,-28,16,-27,-31,-30,]),'String':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,116,117,129,130,205,214,313,314,332,405,593,619,],[17,17,17,17,-25,-19,-20,-21,-22,17,17,17,-29,17,-24,-26,17,17,-29,17,-31,-28,17,-27,-31,-30,]),'Boolean':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,116,117,129,130,205,214,313,314,332,405,593,619,],[18,18,18,18,-25,-19,-20,-21,-22,18,18,18,-29,18,-24,-26,18,18,-29,18,-31,-28,18,-27,-31,-30,]),'close_bracket':([5,6,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,114,115,116,117,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,205,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,405,408,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,486,487,488,489,490,491,492,493,494,495,496,498,499,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,523,527,528,529,530,533,534,535,538,539,540,543,545,548,550,553,554,556,560,562,565,566,567,573,579,585,588,590,593,594,595,597,599,615,616,619,620,622,629,631,634,640,641,],[-23,-23,-23,-23,45,-25,-19,-20,-21,-22,-33,-23,-47,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-321,-322,-75,-61,-23,109,112,-18,-29,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,156,-268,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,197,-16,-17,-24,-26,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,265,-142,-262,-263,-119,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-119,-119,-119,-323,-29,-37,-61,-48,-53,-364,-33,-33,-33,-119,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-294,-295,-296,-119,-119,-259,-94,-119,-260,-261,-276,-95,-119,-119,-310,-119,-310,-310,-31,-28,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,-368,-119,-363,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-293,-119,-310,-310,-305,-308,-309,-310,-306,-307,-325,-27,-40,-53,-57,-33,-33,-119,-368,-119,-33,-119,-368,-119,-33,-119,-368,-119,497,-61,-368,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,-119,-304,-52,-49,-33,-119,-119,-368,532,-368,-119,-368,537,-368,-119,-368,542,-368,-119,547,-366,-131,-151,-119,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,-119,-61,-119,-368,-368,569,572,-368,575,578,-368,581,584,-368,-365,-130,-145,-283,591,-43,-57,-368,601,603,607,611,-367,-123,-119,-31,-45,-42,-54,623,-310,-314,-30,-39,-55,-311,-57,-56,-45,-44,]),'Fixed':([6,],[20,]),'Return':([6,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,37,38,40,41,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,120,121,122,123,125,129,130,131,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,206,208,209,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,408,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,479,480,483,484,485,486,488,489,490,492,493,494,496,498,500,501,504,505,506,507,508,509,510,511,512,513,514,515,517,523,527,528,529,534,539,545,548,550,553,554,560,562,565,588,590,594,595,597,615,616,620,622,629,631,634,640,641,],[-23,-19,-20,-21,-22,-33,-23,-47,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-321,-322,-75,-61,-32,-38,-35,-51,-364,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-34,-41,-46,-53,-61,-364,-364,-33,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-119,-119,-119,-323,-37,-61,-48,-53,-364,-33,-33,-33,-119,-33,-366,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-294,-295,-296,-119,-119,-259,-94,-119,-260,-261,-276,-95,-119,-119,-310,-119,-310,-310,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,427,-119,-363,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-293,-119,-310,-310,-305,-308,-309,-310,-306,-307,-325,-40,-53,-57,-33,-33,-119,427,-119,-33,-119,427,-119,-33,-119,427,-119,-61,427,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,-119,-304,-52,-49,-33,-119,-119,427,427,-119,427,427,-119,427,427,-119,-366,-131,-151,-119,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,-61,-119,427,427,427,427,427,-365,-130,-145,-283,-43,-57,427,-123,-119,-45,-42,-54,-310,-314,-39,-55,-311,-57,-56,-45,-44,]),'comma':([11,12,14,15,16,17,18,42,43,44,45,46,47,51,88,89,90,91,92,93,94,95,96,97,98,105,107,109,110,112,114,115,116,117,123,125,134,136,179,180,181,182,183,184,185,186,187,188,197,202,205,208,212,220,231,233,275,288,296,298,299,300,301,302,303,304,305,306,307,308,309,310,313,314,316,317,318,319,398,399,402,404,405,410,411,472,474,475,479,482,500,502,522,523,526,560,562,564,593,594,597,619,622,631,634,638,640,],[-23,-23,-25,-19,-20,-21,-22,-23,-75,-75,-75,-18,119,-51,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-75,202,-75,-16,-17,-24,-26,210,-61,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-75,119,-61,210,332,-103,-77,-94,-95,-79,401,403,-62,-63,-64,-104,-71,-72,-73,-90,-91,-92,-93,406,-28,409,-51,-55,-50,-76,-325,-108,-70,-27,210,481,401,-109,-79,-52,-61,332,-61,-61,-61,564,409,481,-61,406,621,-54,-30,-55,481,-56,-61,621,]),'Break':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,519,550,553,554,557,588,590,615,616,629,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,77,-321,-322,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,77,77,77,77,77,-254,77,-144,77,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-127,-75,-78,77,77,77,77,77,-237,77,77,77,77,-242,77,77,-245,77,-247,-248,-143,-142,-262,-263,77,-271,77,77,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,77,77,77,-323,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,77,77,77,-211,77,77,77,77,-207,-79,77,77,-214,-119,77,-216,-217,77,77,77,-221,77,77,-224,-225,-226,-227,77,-229,-230,-231,-141,-294,-295,-296,77,77,-259,-94,77,-260,-261,-276,-95,77,77,-310,77,-310,-310,-125,-126,-128,-61,-104,77,77,-185,77,-187,-188,77,77,77,-176,77,77,-179,77,-181,-182,-104,77,-190,-191,-192,77,77,-195,77,-197,-198,77,-200,-201,-202,77,-256,-257,-258,-272,-293,77,-310,-310,-305,-308,-309,-310,-306,-307,-325,-129,-65,77,-164,-165,-166,77,77,-155,77,-157,-158,77,-160,-161,-162,-167,77,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,77,-304,-131,-151,77,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,77,-119,-130,-145,-283,592,-123,77,-310,-314,-311,]),'Continue':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,550,553,554,588,590,615,616,629,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,78,-321,-322,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,78,78,78,78,78,-254,78,-144,78,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-127,-75,-78,78,78,78,78,78,-237,78,78,78,78,-242,78,78,-245,78,-247,-248,-143,-142,-262,-263,78,-271,78,78,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,78,78,78,-323,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,78,78,78,-211,78,78,78,78,-207,-79,78,78,-214,-119,78,-216,-217,78,78,78,-221,78,78,-224,-225,-226,-227,78,-229,-230,-231,-141,-294,-295,-296,78,78,-259,-94,78,-260,-261,-276,-95,78,78,-310,78,-310,-310,-125,-126,-128,-61,-104,78,78,-185,78,-187,-188,78,78,78,-176,78,78,-179,78,-181,-182,-104,78,-190,-191,-192,78,78,-195,78,-197,-198,78,-200,-201,-202,78,-256,-257,-258,-272,-293,78,-310,-310,-305,-308,-309,-310,-306,-307,-325,-129,-65,78,-164,-165,-166,78,78,-155,78,-157,-158,78,-160,-161,-162,-167,78,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,78,-304,-131,-151,78,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,78,-130,-145,-283,-123,78,-310,-314,-311,]),'Avoid':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,501,504,505,506,507,508,509,510,511,512,513,514,515,517,518,550,553,554,588,590,615,616,629,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,79,-321,-322,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,79,79,79,79,79,-254,79,-144,79,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-127,-75,-78,79,79,79,79,79,-237,79,79,79,79,-242,79,79,-245,79,-247,-248,-143,-142,-262,-263,79,-271,79,79,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,79,79,79,-323,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,79,79,79,-211,79,79,79,79,-207,-79,79,79,-214,-119,79,-216,-217,79,79,79,-221,79,79,-224,-225,-226,-227,79,-229,-230,-231,-141,-294,-295,-296,79,79,-259,-94,79,-260,-261,-276,-95,79,79,-310,79,-310,-310,-125,-126,-128,-61,-104,79,79,-185,79,-187,-188,79,79,79,-176,79,79,-179,79,-181,-182,-104,79,-190,-191,-192,79,79,-195,79,-197,-198,79,-200,-201,-202,79,-256,-257,-258,-272,-293,79,-310,-310,-305,-308,-309,-310,-306,-307,-325,-129,-65,79,-164,-165,-166,79,79,-155,79,-157,-158,79,-160,-161,-162,-167,79,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,-310,-302,-303,79,-304,-131,-151,79,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,79,-130,-145,-283,-123,79,-310,-314,-311,]),'Elif':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,501,504,505,506,507,508,509,510,511,512,513,514,515,517,550,553,554,588,590,615,616,629,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-321,-322,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-119,-119,-119,-323,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-294,-295,-296,-119,-119,-259,-94,-119,-260,-261,-276,-95,-119,-119,390,-119,390,390,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-293,-119,390,390,-305,-308,-309,390,-306,-307,-325,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,390,-302,-303,-119,-304,-131,-151,-119,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,-130,-145,-283,-123,-119,390,-314,-311,]),'Else':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,88,89,90,91,92,93,94,95,96,97,98,103,104,105,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,163,165,166,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,192,195,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,285,288,289,290,291,292,293,294,333,334,335,336,337,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,379,380,381,384,385,386,387,388,389,392,393,394,399,430,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,465,466,501,504,505,506,507,508,509,510,511,512,513,514,515,517,550,553,554,588,590,615,616,629,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-321,-322,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-269,-270,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-324,-60,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-119,-119,-119,-323,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-294,-295,-296,-119,-119,-259,-94,-119,-260,-261,-276,-95,-119,-119,391,-119,391,391,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-293,-119,391,391,-305,-308,-309,391,-306,-307,-325,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-288,-289,-290,-291,-292,391,-302,-303,-119,-304,-131,-151,-119,-147,-148,-149,-150,-152,-284,-285,-286,-287,-301,-312,-130,-145,-283,-123,-119,391,-314,-311,]),'open_brace':([32,33,47,51,67,68,94,121,138,139,144,238,243,296,412,432,433,475,476,477,524,630,637,],[66,69,118,124,140,145,189,207,234,239,251,346,357,397,482,502,503,189,521,522,561,633,638,]),'period':([32,34,35,40,41,65,66,67,80,90,94,99,103,106,125,136,138,140,144,159,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,188,189,194,208,222,223,224,225,226,227,228,229,230,233,234,238,243,244,251,274,279,287,296,303,336,337,340,346,356,357,362,372,376,377,382,397,398,401,403,427,438,455,464,472,475,482,501,502,522,523,549,550,564,638,],[-79,-75,-75,-75,-75,134,-75,-79,-75,134,-79,-75,134,-75,-75,-78,-79,-75,-79,-75,-75,-75,-277,-278,-279,-280,-281,-282,-297,-298,-75,-96,-97,-98,-99,-100,-101,-102,-74,-75,-75,-75,-75,-75,-132,-133,-134,-135,-136,-137,-138,-77,-75,-79,-79,-78,-75,-75,-75,-75,-79,134,-75,134,-78,-75,134,-75,-78,-75,-75,-75,-75,-75,-74,-75,-75,-75,-78,-75,-75,-78,-79,-75,-75,-75,-75,-75,134,-130,-75,-75,]),'equal':([32,51,65,67,94,121,133,134,136,138,144,188,223,231,232,233,238,243,244,317,318,337,338,340,356,362,407,431,438,478,501,549,587,589,614,622,636,],[-79,125,-104,-79,-79,208,223,-75,-78,-79,-79,-74,-75,-103,339,-77,-79,-79,-78,125,412,-104,432,-78,-104,-78,477,501,-78,523,-75,-104,501,339,-139,412,637,]),'plus_equal':([32,65,67,94,133,134,136,138,144,188,231,233,238,243,244,340,356,362,438,],[-79,-104,-79,-79,224,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'minus_equal':([32,65,67,94,133,134,136,138,144,188,231,233,238,243,244,340,356,362,438,],[-79,-104,-79,-79,225,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'times_equal':([32,65,67,94,133,134,136,138,144,188,231,233,238,243,244,340,356,362,438,],[-79,-104,-79,-79,226,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'divide_equal':([32,65,67,94,133,134,136,138,144,188,231,233,238,243,244,340,356,362,438,],[-79,-104,-79,-79,227,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'divide_divide_equal':([32,65,67,94,133,134,136,138,144,188,231,233,238,243,244,340,356,362,438,],[-79,-104,-79,-79,228,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'modulo_equal':([32,65,67,94,133,134,136,138,144,188,231,233,238,243,244,340,356,362,438,],[-79,-104,-79,-79,229,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'times_times_equal':([32,65,67,94,133,134,136,138,144,188,231,233,238,243,244,340,356,362,438,],[-79,-104,-79,-79,230,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'In':([33,67,],[68,139,]),'close_brace':([33,66,67,68,69,88,89,90,91,92,93,94,95,96,97,98,105,134,135,136,137,138,139,140,144,145,179,180,181,182,183,184,185,186,187,188,189,204,211,231,233,234,238,239,243,247,251,275,288,315,346,356,357,397,399,482,502,522,525,526,551,552,558,559,563,564,596,598,635,638,639,],[70,136,141,146,149,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,232,-78,233,235,240,244,252,255,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,136,313,318,-103,-77,340,347,350,-79,-68,362,-94,-95,407,438,-74,136,472,-325,-61,-61,-61,562,-107,588,589,593,594,-105,-61,622,-106,636,-61,640,]),'colon':([33,67,68,69,70,81,82,83,84,88,89,90,91,92,93,94,95,96,97,98,100,101,105,134,136,138,139,140,141,144,145,146,149,160,163,165,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,191,231,233,234,235,238,239,240,244,251,252,255,267,268,269,270,275,285,288,289,340,346,347,350,362,380,381,391,399,438,456,457,458,459,460,467,468,469,470,471,511,512,513,514,554,555,],[71,142,147,150,152,166,-269,-270,-271,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,192,193,-60,-75,-78,236,241,245,248,253,256,258,261,271,-271,276,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,290,292,-103,-77,341,343,348,351,353,358,363,365,368,-294,-295,-296,373,-94,-276,-95,384,434,439,441,444,449,-272,-293,465,-325,505,-288,-289,-290,-291,-292,518,519,-316,-317,-318,-284,-285,-286,-287,-283,590,]),'open_par':([34,35,41,55,66,80,85,99,102,106,125,129,140,159,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,189,194,208,222,223,224,225,226,227,228,229,230,234,251,266,274,279,286,287,336,346,357,372,376,377,382,390,397,401,403,427,455,464,482,501,502,522,523,550,564,638,],[80,99,106,130,106,159,167,159,194,106,106,214,106,159,279,106,-277,-278,-279,-280,-281,-282,287,-297,-298,106,-96,-97,-98,-99,-100,-101,-102,106,106,106,106,106,-132,-133,-134,-135,-136,-137,-138,106,106,372,377,159,382,279,106,106,106,279,455,159,279,464,106,106,106,106,159,279,106,-131,106,106,106,-130,106,106,]),'lit_bool':([34,35,41,80,99,125,159,167,168,169,170,171,172,173,174,177,178,194,208,223,274,279,287,336,372,376,377,382,401,403,427,455,464,482,501,502,522,523,550,564,638,],[84,84,105,163,163,105,269,284,105,-277,-278,-279,-280,-281,-282,-297,-298,302,105,-131,269,269,269,105,269,269,269,269,302,302,105,269,84,105,-131,105,105,105,-130,105,105,]),'Not':([34,35,80,99,159,167,177,178,274,279,287,372,376,377,382,455,464,],[85,85,85,85,266,266,-297,-298,266,266,266,266,266,266,266,266,85,]),'lit_str':([34,35,41,80,99,125,159,167,168,169,170,171,172,173,174,177,178,194,208,223,274,279,287,336,372,376,377,382,396,401,403,427,455,464,482,501,502,522,523,550,564,638,],[89,89,89,89,89,89,89,89,89,-277,-278,-279,-280,-281,-282,-297,-298,301,89,-131,89,89,89,89,89,89,89,89,469,301,301,89,89,89,89,-131,89,89,89,-130,89,89,]),'greater_than':([34,35,80,84,86,88,89,90,91,92,93,94,95,96,97,98,99,134,136,159,162,163,164,167,177,178,179,180,181,182,183,184,185,186,187,188,231,233,269,274,275,279,284,287,288,372,376,377,382,399,455,464,],[-61,-61,-61,-60,169,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-60,-61,-94,-61,-60,-61,-95,-61,-61,-61,-61,-325,-61,-61,]),'less_than':([34,35,80,84,86,88,89,90,91,92,93,94,95,96,97,98,99,134,136,159,162,163,164,167,177,178,179,180,181,182,183,184,185,186,187,188,231,233,269,274,275,279,284,287,288,372,376,377,382,399,455,464,],[-61,-61,-61,-60,170,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-60,-61,-94,-61,-60,-61,-95,-61,-61,-61,-61,-325,-61,-61,]),'equal_equal':([34,35,80,84,86,88,89,90,91,92,93,94,95,96,97,98,99,134,136,159,162,163,164,167,177,178,179,180,181,182,183,184,185,186,187,188,231,233,269,274,275,279,284,287,288,372,376,377,382,399,455,464,],[-61,-61,-61,-60,171,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-60,-61,-94,-61,-60,-61,-95,-61,-61,-61,-61,-325,-61,-61,]),'not_equal':([34,35,80,84,86,88,89,90,91,92,93,94,95,96,97,98,99,134,136,159,162,163,164,167,177,178,179,180,181,182,183,184,185,186,187,188,231,233,269,274,275,279,284,287,288,372,376,377,382,399,455,464,],[-61,-61,-61,-60,172,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-60,-61,-94,-61,-60,-61,-95,-61,-61,-61,-61,-325,-61,-61,]),'great_than_equal':([34,35,80,84,86,88,89,90,91,92,93,94,95,96,97,98,99,134,136,159,162,163,164,167,177,178,179,180,181,182,183,184,185,186,187,188,231,233,269,274,275,279,284,287,288,372,376,377,382,399,455,464,],[-61,-61,-61,-60,173,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-60,-61,-94,-61,-60,-61,-95,-61,-61,-61,-61,-325,-61,-61,]),'less_than_equal':([34,35,80,84,86,88,89,90,91,92,93,94,95,96,97,98,99,134,136,159,162,163,164,167,177,178,179,180,181,182,183,184,185,186,187,188,231,233,269,274,275,279,284,287,288,372,376,377,382,399,455,464,],[-61,-61,-61,-60,174,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-60,-61,-94,-61,-60,-61,-95,-61,-61,-61,-61,-325,-61,-61,]),'plus':([34,35,41,66,80,88,90,91,92,93,94,95,96,97,98,99,106,125,134,135,136,137,140,159,162,164,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,194,196,208,222,223,224,225,226,227,228,229,230,231,233,234,243,247,251,274,275,279,287,288,296,305,306,307,308,309,310,333,335,336,337,346,356,357,372,376,377,382,397,398,399,401,403,427,431,455,464,472,475,482,501,502,522,523,550,564,638,],[-69,-69,-69,-69,-69,180,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,180,-69,-69,-67,180,-69,-69,-277,-278,-279,-280,-281,-282,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,180,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-69,-94,-69,-69,180,-79,-67,-68,-85,-86,-87,-88,180,180,-69,-104,-69,-74,-69,-69,-69,-69,-69,-69,-74,-325,-69,-69,-69,-65,-69,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,]),'minus':([34,35,41,66,80,88,90,91,92,93,94,95,96,97,98,99,106,125,134,135,136,137,140,159,162,164,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,194,196,208,222,223,224,225,226,227,228,229,230,231,233,234,243,247,251,274,275,279,287,288,296,305,306,307,308,309,310,333,335,336,337,346,356,357,372,376,377,382,397,398,399,401,403,427,431,455,464,472,475,482,501,502,522,523,550,564,638,],[-69,-69,-69,-69,-69,181,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,181,-69,-69,-67,181,-69,-69,-277,-278,-279,-280,-281,-282,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,181,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-69,-94,-69,-69,181,-79,-67,-68,-85,-86,-87,-88,181,181,-69,-104,-69,-74,-69,-69,-69,-69,-69,-69,-74,-325,-69,-69,-69,-65,-69,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,]),'times':([34,35,41,66,80,88,90,91,92,93,94,95,96,97,98,99,106,125,134,135,136,137,140,159,162,164,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,194,196,208,222,223,224,225,226,227,228,229,230,231,233,234,243,247,251,274,275,279,287,288,296,305,306,307,308,309,310,333,335,336,337,346,356,357,372,376,377,382,397,398,399,401,403,427,431,455,464,472,475,482,501,502,522,523,550,564,638,],[-69,-69,-69,-69,-69,182,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,182,-69,-69,-67,182,-69,-69,-277,-278,-279,-280,-281,-282,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,182,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-69,-94,-69,-69,182,-79,-67,-68,-85,-86,-87,-88,182,182,-69,-104,-69,-74,-69,-69,-69,-69,-69,-69,-74,-325,-69,-69,-69,-65,-69,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,]),'divide':([34,35,41,66,80,88,90,91,92,93,94,95,96,97,98,99,106,125,134,135,136,137,140,159,162,164,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,194,196,208,222,223,224,225,226,227,228,229,230,231,233,234,243,247,251,274,275,279,287,288,296,305,306,307,308,309,310,333,335,336,337,346,356,357,372,376,377,382,397,398,399,401,403,427,431,455,464,472,475,482,501,502,522,523,550,564,638,],[-69,-69,-69,-69,-69,183,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,183,-69,-69,-67,183,-69,-69,-277,-278,-279,-280,-281,-282,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,183,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-69,-94,-69,-69,183,-79,-67,-68,-85,-86,-87,-88,183,183,-69,-104,-69,-74,-69,-69,-69,-69,-69,-69,-74,-325,-69,-69,-69,-65,-69,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,]),'divide_divide':([34,35,41,66,80,88,90,91,92,93,94,95,96,97,98,99,106,125,134,135,136,137,140,159,162,164,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,194,196,208,222,223,224,225,226,227,228,229,230,231,233,234,243,247,251,274,275,279,287,288,296,305,306,307,308,309,310,333,335,336,337,346,356,357,372,376,377,382,397,398,399,401,403,427,431,455,464,472,475,482,501,502,522,523,550,564,638,],[-69,-69,-69,-69,-69,184,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,184,-69,-69,-67,184,-69,-69,-277,-278,-279,-280,-281,-282,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,184,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-69,-94,-69,-69,184,-79,-67,-68,-85,-86,-87,-88,184,184,-69,-104,-69,-74,-69,-69,-69,-69,-69,-69,-74,-325,-69,-69,-69,-65,-69,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,]),'modulo':([34,35,41,66,80,88,90,91,92,93,94,95,96,97,98,99,106,125,134,135,136,137,140,159,162,164,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,194,196,208,222,223,224,225,226,227,228,229,230,231,233,234,243,247,251,274,275,279,287,288,296,305,306,307,308,309,310,333,335,336,337,346,356,357,372,376,377,382,397,398,399,401,403,427,431,455,464,472,475,482,501,502,522,523,550,564,638,],[-69,-69,-69,-69,-69,185,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,185,-69,-69,-67,185,-69,-69,-277,-278,-279,-280,-281,-282,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,185,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-69,-94,-69,-69,185,-79,-67,-68,-85,-86,-87,-88,185,185,-69,-104,-69,-74,-69,-69,-69,-69,-69,-69,-74,-325,-69,-69,-69,-65,-69,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,]),'times_times':([34,35,41,66,80,88,90,91,92,93,94,95,96,97,98,99,106,125,134,135,136,137,140,159,162,164,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,194,196,208,222,223,224,225,226,227,228,229,230,231,233,234,243,247,251,274,275,279,287,288,296,305,306,307,308,309,310,333,335,336,337,346,356,357,372,376,377,382,397,398,399,401,403,427,431,455,464,472,475,482,501,502,522,523,550,564,638,],[-69,-69,-69,-69,-69,186,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,186,-69,-69,-67,186,-69,-69,-277,-278,-279,-280,-281,-282,-297,-298,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,186,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-69,-94,-69,-69,186,-79,-67,-68,-85,-86,-87,-88,186,186,-69,-104,-69,-74,-69,-69,-69,-69,-69,-69,-74,-325,-69,-69,-69,-65,-69,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,]),'lit_intposi':([34,35,41,66,80,99,106,118,124,125,140,159,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,189,194,207,208,222,223,224,225,226,227,228,229,230,234,251,274,279,287,336,346,357,372,376,377,382,396,397,401,403,427,455,464,482,501,502,503,521,522,523,550,561,564,633,638,],[95,95,95,135,95,95,95,204,211,95,135,95,95,95,-277,-278,-279,-280,-281,-282,-297,-298,95,-96,-97,-98,-99,-100,-101,-102,95,307,315,95,95,95,-132,-133,-134,-135,-136,-137,-138,135,135,95,95,95,95,135,135,95,95,95,95,470,95,307,307,95,95,95,95,-131,95,552,558,95,95,-130,596,95,635,95,]),'lit_intnega':([34,35,41,66,80,99,106,125,140,159,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,189,194,208,222,223,224,225,226,227,228,229,230,234,251,274,279,287,336,346,357,372,376,377,382,396,397,401,403,427,455,464,482,501,502,522,523,550,564,638,],[96,96,96,96,96,96,96,96,96,96,96,96,-277,-278,-279,-280,-281,-282,-297,-298,96,-96,-97,-98,-99,-100,-101,-102,96,308,96,96,96,-132,-133,-134,-135,-136,-137,-138,96,96,96,96,96,96,96,96,96,96,96,96,471,96,308,308,96,96,96,96,-131,96,96,96,-130,96,96,]),'lit_decposi':([34,35,41,66,80,99,106,125,140,159,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,189,194,208,222,223,224,225,226,227,228,229,230,234,251,274,279,287,336,346,357,372,376,377,382,397,401,403,427,455,464,482,501,502,522,523,550,564,638,],[97,97,97,97,97,97,97,97,97,97,97,97,-277,-278,-279,-280,-281,-282,-297,-298,97,-96,-97,-98,-99,-100,-101,-102,97,309,97,97,97,-132,-133,-134,-135,-136,-137,-138,97,97,97,97,97,97,97,97,97,97,97,97,97,309,309,97,97,97,97,-131,97,97,97,-130,97,97,]),'lit_decnega':([34,35,41,66,80,99,106,125,140,159,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,189,194,208,222,223,224,225,226,227,228,229,230,234,251,274,279,287,336,346,357,372,376,377,382,397,401,403,427,455,464,482,501,502,522,523,550,564,638,],[98,98,98,98,98,98,98,98,98,98,98,98,-277,-278,-279,-280,-281,-282,-297,-298,98,-96,-97,-98,-99,-100,-101,-102,98,310,98,98,98,-132,-133,-134,-135,-136,-137,-138,98,98,98,98,98,98,98,98,98,98,98,98,98,310,310,98,98,98,98,-131,98,98,98,-130,98,98,]),'close_par':([55,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,100,105,129,130,131,134,136,160,161,162,163,168,169,170,171,172,173,174,179,180,181,182,183,184,185,186,187,188,190,194,214,215,216,220,231,233,267,268,269,275,280,281,282,283,284,285,288,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,320,331,378,380,381,383,398,399,400,401,402,404,456,457,458,459,460,472,473,474,475,500,511,512,513,514,516,520,548,554,],[-364,165,-269,-270,-271,175,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,191,-60,-364,-364,217,-75,-78,270,273,275,-271,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,289,-328,-364,322,325,-366,-103,-77,-294,-295,-296,-94,380,381,-273,-274,-275,-276,-95,-79,399,-330,-110,-62,-63,-64,-104,-71,-72,-73,-90,-91,-92,-93,413,-363,458,-272,-293,460,-76,-325,-327,-328,-108,-70,512,513,-290,514,-292,-78,-329,-109,-79,-366,554,-285,-286,-287,555,-326,-365,-283,]),'And':([82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,105,134,136,161,163,168,169,170,171,172,173,174,175,179,180,181,182,183,184,185,186,187,188,231,233,267,268,269,273,275,281,282,283,284,285,288,378,381,383,399,456,457,458,459,460,511,512,513,514,554,],[-294,-295,-296,177,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-78,177,-296,-61,-277,-278,-279,-280,-281,-282,177,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-294,-295,-296,177,-94,177,-294,-295,-296,-276,-95,177,177,177,-325,177,177,177,177,177,177,177,177,177,177,]),'Or':([82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,105,134,136,161,163,168,169,170,171,172,173,174,175,179,180,181,182,183,184,185,186,187,188,231,233,267,268,269,273,275,281,282,283,284,285,288,378,381,383,399,456,457,458,459,460,511,512,513,514,554,],[-294,-295,-296,178,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-78,178,-296,-61,-277,-278,-279,-280,-281,-282,178,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,-294,-295,-296,178,-94,178,-294,-295,-296,-276,-95,178,178,178,-325,178,178,178,178,178,178,178,178,178,178,]),'Execute':([295,592,],[396,396,]),'Default':([395,592,617,618,],[467,-320,-315,-319,]),'End_Switch':([591,],[616,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,9,10,]),'declare_statements':([0,2,3,4,7,19,131,215,216,217,219,320,322,323,325,326,328,413,414,418,422,483,],[3,8,3,3,22,48,218,321,324,327,330,415,417,419,421,423,425,484,485,489,493,527,]),'struct_dec':([0,3,4,],[4,4,4,]),'struct_element1':([5,11,12,42,46,],[13,43,44,107,115,]),'data_type':([5,6,11,12,20,42,46,55,129,130,214,332,],[14,21,14,14,49,14,14,132,132,132,132,429,]),'const_var_dec':([6,],[19,]),'statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[23,52,56,57,58,59,60,61,62,63,75,75,75,75,75,75,75,158,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,329,75,75,75,75,75,75,75,75,75,63,75,75,75,75,75,75,75,75,75,75,75,75,75,416,420,424,428,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,486,488,490,492,494,496,75,75,75,75,75,75,75,528,529,534,539,545,75,75,557,565,75,]),'assignment_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_statement':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'switch_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'conditional_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'io_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'func_call':([8,22,24,25,26,27,28,29,30,31,33,34,35,41,66,67,68,69,70,71,73,76,80,99,106,125,138,139,140,141,142,144,145,146,147,149,150,152,159,160,165,166,167,168,179,189,190,191,192,194,208,218,222,223,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,274,276,279,287,289,290,292,321,324,327,330,336,340,341,343,346,347,348,350,351,353,357,358,362,363,365,368,372,373,376,377,382,384,397,401,403,415,417,419,421,423,425,427,434,438,439,441,444,449,455,464,465,482,484,485,489,493,498,502,505,518,519,522,523,527,564,590,638,],[31,31,31,31,31,31,31,31,31,31,31,93,93,93,93,31,31,31,31,31,31,31,93,93,93,93,31,31,247,31,31,31,31,31,31,31,31,31,93,31,31,31,93,93,93,93,31,31,31,306,93,31,93,93,247,31,31,31,31,31,31,31,31,31,31,247,31,31,31,31,31,31,31,93,31,93,93,31,31,31,31,31,31,31,93,31,31,31,247,31,31,31,31,31,93,31,31,31,31,31,93,31,93,93,93,31,93,306,306,31,31,31,31,31,31,93,31,31,31,31,31,31,93,93,31,93,31,31,31,31,31,93,31,31,31,93,93,31,93,31,93,]),'input_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'output_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,218,234,235,236,238,239,240,241,244,245,247,248,251,252,253,255,256,261,270,271,276,289,290,292,321,324,327,330,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,415,417,419,421,423,425,434,438,439,441,444,449,465,484,485,489,493,498,505,518,519,527,590,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'id_array_dec':([14,],[46,]),'id_array_var':([21,],[50,]),'functions':([23,52,53,126,487,491,495,497,499,530,532,533,535,537,538,540,542,543,547,566,567,569,572,573,575,578,579,581,584,599,601,603,607,611,623,],[54,127,128,213,531,536,541,544,546,568,570,571,574,576,577,580,582,583,586,600,602,604,605,606,608,609,610,612,613,624,625,626,627,628,632,]),'assignment_statements2':([32,67,138,144,238,243,],[64,64,64,64,64,64,]),'array':([32,67,94,138,144,238,243,296,475,],[65,65,188,65,65,65,356,398,398,]),'block':([33,67,68,69,70,71,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,234,235,236,238,239,240,241,244,245,248,251,252,253,255,256,261,270,271,276,289,290,292,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,434,438,439,441,444,449,465,505,590,],[72,143,148,151,153,154,237,242,246,249,250,254,257,259,260,262,263,264,272,277,278,291,293,294,342,344,345,349,352,354,355,359,360,361,364,366,367,369,370,371,374,375,379,385,386,392,435,436,437,440,442,443,445,446,447,448,450,451,452,453,454,461,504,506,507,508,509,510,517,553,615,]),'inside_statements':([33,67,68,69,70,71,73,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,234,235,236,238,239,240,241,244,245,248,251,252,253,255,256,261,270,271,276,289,290,292,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,434,438,439,441,444,449,465,505,518,590,],[74,74,74,74,74,74,155,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,556,74,]),'control_statements':([33,67,68,69,70,71,73,75,138,139,140,141,142,144,145,146,147,149,150,152,160,165,166,190,191,192,234,235,236,238,239,240,241,244,245,248,251,252,253,255,256,261,270,271,276,289,290,292,340,341,343,346,347,348,350,351,353,358,362,363,365,368,373,384,434,438,439,441,444,449,465,505,518,590,],[76,76,76,76,76,76,76,157,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'condition':([34,35,80,99,464,],[81,100,160,190,516,]),'relational_expression':([34,35,80,99,159,167,274,279,287,372,376,377,382,455,464,],[82,82,82,82,267,282,267,267,267,267,267,267,267,267,82,]),'logical_expression':([34,35,80,99,159,167,274,279,287,372,376,377,382,455,464,],[83,83,83,83,268,283,268,268,268,268,268,268,268,268,83,]),'value':([34,35,41,80,99,125,159,167,168,208,274,279,287,336,372,376,377,382,427,455,464,482,502,522,523,564,638,],[86,86,104,86,86,212,86,86,285,316,86,86,86,430,86,86,86,86,498,86,86,526,526,526,560,526,526,]),'logical_operand':([34,35,80,99,159,167,274,279,287,372,376,377,382,455,464,],[87,87,161,161,161,281,378,161,383,281,456,457,459,511,87,]),'num_value':([34,35,41,66,80,99,106,125,140,159,167,168,179,189,194,208,222,223,234,251,274,279,287,336,346,357,372,376,377,382,397,401,403,427,455,464,482,502,522,523,564,638,],[88,88,88,137,164,164,196,88,137,164,88,88,288,137,196,88,333,335,137,137,88,164,88,88,137,137,88,88,164,88,137,196,196,88,164,88,88,88,88,88,88,88,]),'id_array':([34,35,40,41,43,44,45,66,80,99,106,107,109,110,112,125,134,140,159,167,168,179,189,194,197,202,208,222,223,234,251,274,279,287,336,346,357,372,376,377,382,397,401,403,427,455,464,482,501,502,522,523,564,638,],[90,90,103,90,110,110,110,90,90,90,90,110,110,200,110,90,231,90,90,90,90,90,90,90,110,110,90,90,337,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,549,90,90,90,90,90,]),'literals':([34,35,41,66,80,99,106,125,140,159,167,168,179,189,194,208,222,223,234,251,274,279,287,336,346,357,372,376,377,382,397,401,403,427,455,464,482,502,522,523,564,638,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'arithmetic_expression':([34,35,41,66,80,99,106,125,140,159,167,168,179,189,194,208,222,223,234,251,274,279,287,336,346,357,372,376,377,382,397,401,403,427,455,464,482,502,522,523,564,638,],[92,92,92,92,162,162,162,92,92,162,92,92,92,92,305,92,92,92,92,92,92,162,92,92,92,92,92,92,162,92,92,305,305,92,162,92,92,92,92,92,92,92,]),'id_array1':([43,44,45,107,109,112,197,202,],[108,111,113,198,199,203,311,312,]),'struct_element2':([46,],[114,]),'id_array_dec2':([47,],[116,]),'id_dec1':([47,205,],[117,314,]),'id_array_const':([49,],[120,]),'id_array_var2':([51,],[122,]),'var_init':([51,317,],[123,410,]),'parameters':([55,129,130,214,],[131,215,216,320,]),'id_struct':([65,90,103,303,337,356,549,],[133,187,195,404,431,133,587,]),'relational_operators':([86,],[168,]),'logical_operators':([87,161,175,273,281,378,381,383,456,457,458,459,460,511,512,513,514,554,],[176,274,286,376,176,176,286,176,176,274,286,176,286,274,286,376,286,376,]),'arithmetic_operators':([88,137,164,196,288,333,335,],[179,179,179,179,179,179,179,]),'id_array2':([110,],[201,]),'id_array_const2':([121,],[206,]),'id_var1':([123,212,410,],[209,319,479,]),'assignment_exp':([133,],[221,]),'assignment_operators':([133,],[222,]),'condition_not':([167,],[280,]),'function_param':([194,401,],[297,473,]),'value1_opt':([194,401,403,],[298,298,474,]),'value_opt':([194,401,403,],[299,299,299,]),'num_value_opt':([194,401,403,],[300,300,300,]),'id_array_opt':([194,401,403,],[303,303,303,]),'literals_opt':([194,401,403,],[304,304,304,]),'more_parameters':([220,500,],[331,548,]),'assign_value':([223,],[334,]),'more_id':([223,501,],[336,550,]),'more_array':([232,589,],[338,614,]),'condition_else':([291,293,294,385,386,392,461,615,],[387,393,394,462,463,466,515,629,]),'elif_statement':([291,293,294,385,386,392,461,615,],[388,388,388,388,388,388,388,388,]),'else_statement':([291,293,294,385,386,392,461,615,],[389,389,389,389,389,389,389,389,]),'execute':([295,592,],[395,618,]),'more_param':([298,472,],[400,520,]),'value2_opt':([299,],[402,]),'array_dec1':([313,593,],[405,619,]),'id_const1':([316,560,],[408,595,]),'array_init':([318,622,],[411,631,]),'return_statement':([329,416,420,424,428,486,488,490,492,494,496,528,529,534,539,545,565,],[426,487,491,495,499,530,533,535,538,540,543,566,567,573,579,585,599,]),'switch_lit':([396,],[468,]),'array_var1':([411,562,631,],[480,597,634,]),'value1':([482,502,522,564,638,],[525,551,559,598,639,]),'value2':([526,],[563,]),'execute1':([592,],[617,]),'array_const1':([594,640,],[620,641,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',55),
  ('program -> global_dec Link_Start declare_statements statements functions','program',5,'p_program','syntax_analyze.py',56),
  ('program -> global_dec declare_statements statements Link_End functions','program',5,'p_program','syntax_analyze.py',57),
  ('program -> global_dec declare_statements statements functions','program',4,'p_program','syntax_analyze.py',58),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',74),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',75),
  ('global_dec -> <empty>','global_dec',0,'p_global_dec','syntax_analyze.py',76),
  ('struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1','struct_dec',6,'p_struct_dec','syntax_analyze.py',85),
  ('struct_dec -> Struct id struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',86),
  ('struct_dec -> Struct open_bracket struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',87),
  ('struct_dec -> Struct struct_element1 close_bracket id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',88),
  ('struct_dec -> Struct id open_bracket struct_element1 id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',89),
  ('struct_dec -> Struct id struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',90),
  ('struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',91),
  ('struct_dec -> <empty>','struct_dec',0,'p_struct_dec','syntax_analyze.py',92),
  ('struct_element1 -> data_type id_array_dec struct_element2','struct_element1',3,'p_struct_element1','syntax_analyze.py',108),
  ('struct_element2 -> struct_element1','struct_element2',1,'p_struct_element2','syntax_analyze.py',115),
  ('struct_element2 -> <empty>','struct_element2',0,'p_struct_element2','syntax_analyze.py',116),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',125),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',126),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',127),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',128),
  ('data_type -> <empty>','data_type',0,'p_data_type_error','syntax_analyze.py',133),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',139),
  ('id_array_dec -> <empty>','id_array_dec',0,'p_id_array_dec','syntax_analyze.py',140),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',150),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2_more','syntax_analyze.py',155),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',164),
  ('id_dec1 -> <empty>','id_dec1',0,'p_id_dec1','syntax_analyze.py',165),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',175),
  ('array_dec1 -> <empty>','array_dec1',0,'p_array_dec1','syntax_analyze.py',176),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',199),
  ('declare_statements -> <empty>','declare_statements',0,'p_declare_statements','syntax_analyze.py',200),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',210),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec_more','syntax_analyze.py',217),
  ('const_var_dec -> <empty>','const_var_dec',0,'p_const_var_dec_error','syntax_analyze.py',223),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',228),
  ('id_array_const -> <empty>','id_array_const',0,'p_id_array_const','syntax_analyze.py',229),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',239),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2_more','syntax_analyze.py',251),
  ('id_array_const2 -> <empty>','id_array_const2',0,'p_id_array_const2_error','syntax_analyze.py',258),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',263),
  ('id_const1 -> <empty>','id_const1',0,'p_id_const1','syntax_analyze.py',264),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',276),
  ('array_const1 -> <empty>','array_const1',0,'p_array_const1','syntax_analyze.py',277),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',294),
  ('id_array_var -> <empty>','id_array_var',0,'p_id_array_var','syntax_analyze.py',295),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',305),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2_more','syntax_analyze.py',311),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',321),
  ('var_init -> <empty>','var_init',0,'p_var_init','syntax_analyze.py',322),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',332),
  ('id_var1 -> <empty>','id_var1',0,'p_id_var1','syntax_analyze.py',333),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',344),
  ('array_init -> <empty>','array_init',0,'p_array_init','syntax_analyze.py',345),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',357),
  ('array_var1 -> <empty>','array_var1',0,'p_array_var1','syntax_analyze.py',358),
  ('value -> num_value','value',1,'p_value','syntax_analyze.py',372),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',373),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',374),
  ('value -> <empty>','value',0,'p_value','syntax_analyze.py',375),
  ('value_opt -> num_value_opt','value_opt',1,'p_value_opt','syntax_analyze.py',384),
  ('value_opt -> lit_str','value_opt',1,'p_value_opt','syntax_analyze.py',385),
  ('value_opt -> lit_bool','value_opt',1,'p_value_opt','syntax_analyze.py',386),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',391),
  ('num_value -> literals','num_value',1,'p_num_value_more','syntax_analyze.py',398),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value_more','syntax_analyze.py',399),
  ('num_value -> func_call','num_value',1,'p_num_value_more','syntax_analyze.py',400),
  ('num_value -> <empty>','num_value',0,'p_num_value_error','syntax_analyze.py',405),
  ('num_value_opt -> id_array_opt id_struct','num_value_opt',2,'p_num_value_opt','syntax_analyze.py',410),
  ('num_value_opt -> literals_opt','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',417),
  ('num_value_opt -> arithmetic_expression','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',418),
  ('num_value_opt -> func_call','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',419),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',426),
  ('id_array -> <empty>','id_array',0,'p_id_array','syntax_analyze.py',427),
  ('id_array_opt -> id array','id_array_opt',2,'p_id_array_opt','syntax_analyze.py',437),
  ('array -> open_brace num_value close_brace','array',3,'p_array','syntax_analyze.py',443),
  ('array -> open_brace close_brace','array',2,'p_array_more','syntax_analyze.py',450),
  ('array -> <empty>','array',0,'p_array_none','syntax_analyze.py',456),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',460),
  ('id_array1 -> <empty>','id_array1',0,'p_id_array1','syntax_analyze.py',461),
  ('id_array1 -> id_array id_array','id_array1',2,'p_id_array1_error','syntax_analyze.py',471),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',476),
  ('id_array2 -> <empty>','id_array2',0,'p_id_array2','syntax_analyze.py',477),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',486),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',487),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',488),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',489),
  ('literals -> <empty>','literals',0,'p_literals','syntax_analyze.py',490),
  ('literals_opt -> lit_intposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',499),
  ('literals_opt -> lit_intnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',500),
  ('literals_opt -> lit_decposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',501),
  ('literals_opt -> lit_decnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',502),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',507),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',514),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',522),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',523),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',524),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',525),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',526),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',527),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',528),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',533),
  ('id_struct -> <empty>','id_struct',0,'p_id_struct','syntax_analyze.py',534),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',544),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',550),
  ('value2 -> <empty>','value2',0,'p_value2','syntax_analyze.py',551),
  ('value1_opt -> value_opt value2_opt','value1_opt',2,'p_value1_opt','syntax_analyze.py',561),
  ('value2_opt -> comma value1_opt','value2_opt',2,'p_value2_opt','syntax_analyze.py',567),
  ('value2_opt -> <empty>','value2_opt',0,'p_value2_opt','syntax_analyze.py',568),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',577),
  ('statements -> for_statements statements','statements',2,'p_statements','syntax_analyze.py',578),
  ('statements -> while_statements statements','statements',2,'p_statements','syntax_analyze.py',579),
  ('statements -> if_statement statements','statements',2,'p_statements','syntax_analyze.py',580),
  ('statements -> switch_statements statements','statements',2,'p_statements','syntax_analyze.py',581),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',582),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',583),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',584),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyze.py',585),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',594),
  ('assignment_statements -> <empty>','assignment_statements',0,'p_assignment_statements','syntax_analyze.py',595),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',605),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',612),
  ('assignment_statements2 -> <empty>','assignment_statements2',0,'p_assignment_statements2_error','syntax_analyze.py',624),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',629),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',635),
  ('assignment_exp -> <empty>','assignment_exp',0,'p_assignment_exp_error','syntax_analyze.py',641),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',646),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value_more','syntax_analyze.py',651),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',657),
  ('more_id -> <empty>','more_id',0,'p_more_id','syntax_analyze.py',658),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',669),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',670),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',671),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',672),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',673),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',674),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',675),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',680),
  ('more_array -> <empty>','more_array',0,'p_more_array','syntax_analyze.py',681),
  ('block -> open_bracket inside_statements close_bracket','block',3,'p_block','syntax_analyze.py',694),
  ('block -> inside_statements close_bracket','block',2,'p_block','syntax_analyze.py',695),
  ('block -> open_bracket inside_statements','block',2,'p_block','syntax_analyze.py',696),
  ('block -> inside_statements','block',1,'p_block','syntax_analyze.py',697),
  ('for_statements -> For id In id open_brace close_brace colon block','for_statements',8,'p_for_statements','syntax_analyze.py',708),
  ('for_statements -> For id In id open_brace close_brace colon','for_statements',7,'p_for_statements','syntax_analyze.py',709),
  ('for_statements -> For id In id open_brace close_brace block','for_statements',7,'p_for_statements','syntax_analyze.py',710),
  ('for_statements -> For id In id open_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',711),
  ('for_statements -> For id In id close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',712),
  ('for_statements -> For id In open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',713),
  ('for_statements -> For id id open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',714),
  ('for_statements -> For In id open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',715),
  ('for_statements -> For id In id open_brace close_brace','for_statements',6,'p_for_statements','syntax_analyze.py',716),
  ('for_statements -> For id In id open_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',717),
  ('for_statements -> For id In id open_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',718),
  ('for_statements -> For id In id close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',719),
  ('for_statements -> For id In id close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',720),
  ('for_statements -> For id In id colon block','for_statements',6,'p_for_statements','syntax_analyze.py',721),
  ('for_statements -> For id In open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',722),
  ('for_statements -> For id In open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',723),
  ('for_statements -> For id In open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',724),
  ('for_statements -> For id In close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',725),
  ('for_statements -> For id id open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',726),
  ('for_statements -> For id id open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',727),
  ('for_statements -> For id id open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',728),
  ('for_statements -> For id id close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',729),
  ('for_statements -> For id open_brace close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',730),
  ('for_statements -> For In id open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',731),
  ('for_statements -> For In id open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',732),
  ('for_statements -> For In id open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',733),
  ('for_statements -> For In id close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',734),
  ('for_statements -> For In open_brace close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',735),
  ('for_statements -> For id In id open_brace','for_statements',5,'p_for_statements','syntax_analyze.py',736),
  ('for_statements -> For id In id close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',737),
  ('for_statements -> For id In id colon','for_statements',5,'p_for_statements','syntax_analyze.py',738),
  ('for_statements -> For id In id block','for_statements',5,'p_for_statements','syntax_analyze.py',739),
  ('for_statements -> For id In open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',740),
  ('for_statements -> For id In open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',741),
  ('for_statements -> For id In open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',742),
  ('for_statements -> For id In close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',743),
  ('for_statements -> For id In close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',744),
  ('for_statements -> For id In colon block','for_statements',5,'p_for_statements','syntax_analyze.py',745),
  ('for_statements -> For id id open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',746),
  ('for_statements -> For id id open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',747),
  ('for_statements -> For id id open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',748),
  ('for_statements -> For id id close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',749),
  ('for_statements -> For id id close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',750),
  ('for_statements -> For id id colon block','for_statements',5,'p_for_statements','syntax_analyze.py',751),
  ('for_statements -> For id open_brace close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',752),
  ('for_statements -> For id open_brace close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',753),
  ('for_statements -> For id open_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',754),
  ('for_statements -> For id close_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',755),
  ('for_statements -> For In id open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',756),
  ('for_statements -> For In id open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',757),
  ('for_statements -> For In id open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',758),
  ('for_statements -> For In id close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',759),
  ('for_statements -> For In id close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',760),
  ('for_statements -> For In id colon block','for_statements',5,'p_for_statements','syntax_analyze.py',761),
  ('for_statements -> For In open_brace close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',762),
  ('for_statements -> For In open_brace close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',763),
  ('for_statements -> For In open_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',764),
  ('for_statements -> For open_brace close_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',765),
  ('for_statements -> For id In id','for_statements',4,'p_for_statements','syntax_analyze.py',766),
  ('for_statements -> For id In open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',767),
  ('for_statements -> For id In close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',768),
  ('for_statements -> For id In colon','for_statements',4,'p_for_statements','syntax_analyze.py',769),
  ('for_statements -> For id In block','for_statements',4,'p_for_statements','syntax_analyze.py',770),
  ('for_statements -> For id id open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',771),
  ('for_statements -> For id id close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',772),
  ('for_statements -> For id id colon','for_statements',4,'p_for_statements','syntax_analyze.py',773),
  ('for_statements -> For id id block','for_statements',4,'p_for_statements','syntax_analyze.py',774),
  ('for_statements -> For id open_brace close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',775),
  ('for_statements -> For id open_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',776),
  ('for_statements -> For id open_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',777),
  ('for_statements -> For id close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',778),
  ('for_statements -> For id close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',779),
  ('for_statements -> For id colon block','for_statements',4,'p_for_statements','syntax_analyze.py',780),
  ('for_statements -> For In id open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',781),
  ('for_statements -> For In id close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',782),
  ('for_statements -> For In id colon','for_statements',4,'p_for_statements','syntax_analyze.py',783),
  ('for_statements -> For In id block','for_statements',4,'p_for_statements','syntax_analyze.py',784),
  ('for_statements -> For In open_brace close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',785),
  ('for_statements -> For In open_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',786),
  ('for_statements -> For In open_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',787),
  ('for_statements -> For In close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',788),
  ('for_statements -> For In close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',789),
  ('for_statements -> For In colon block','for_statements',4,'p_for_statements','syntax_analyze.py',790),
  ('for_statements -> For open_brace close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',791),
  ('for_statements -> For open_brace close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',792),
  ('for_statements -> For open_brace colon block','for_statements',4,'p_for_statements','syntax_analyze.py',793),
  ('for_statements -> For close_brace colon block','for_statements',4,'p_for_statements','syntax_analyze.py',794),
  ('for_statements -> For id In','for_statements',3,'p_for_statements','syntax_analyze.py',795),
  ('for_statements -> For id id','for_statements',3,'p_for_statements','syntax_analyze.py',796),
  ('for_statements -> For id open_brace','for_statements',3,'p_for_statements','syntax_analyze.py',797),
  ('for_statements -> For id close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',798),
  ('for_statements -> For id colon','for_statements',3,'p_for_statements','syntax_analyze.py',799),
  ('for_statements -> For id block','for_statements',3,'p_for_statements','syntax_analyze.py',800),
  ('for_statements -> For In id','for_statements',3,'p_for_statements','syntax_analyze.py',801),
  ('for_statements -> For In open_brace','for_statements',3,'p_for_statements','syntax_analyze.py',802),
  ('for_statements -> For In close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',803),
  ('for_statements -> For In colon','for_statements',3,'p_for_statements','syntax_analyze.py',804),
  ('for_statements -> For In block','for_statements',3,'p_for_statements','syntax_analyze.py',805),
  ('for_statements -> For open_brace close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',806),
  ('for_statements -> For open_brace colon','for_statements',3,'p_for_statements','syntax_analyze.py',807),
  ('for_statements -> For open_brace block','for_statements',3,'p_for_statements','syntax_analyze.py',808),
  ('for_statements -> For close_brace colon','for_statements',3,'p_for_statements','syntax_analyze.py',809),
  ('for_statements -> For close_brace block','for_statements',3,'p_for_statements','syntax_analyze.py',810),
  ('for_statements -> For colon block','for_statements',3,'p_for_statements','syntax_analyze.py',811),
  ('for_statements -> For id','for_statements',2,'p_for_statements','syntax_analyze.py',812),
  ('for_statements -> For In','for_statements',2,'p_for_statements','syntax_analyze.py',813),
  ('for_statements -> For open_brace','for_statements',2,'p_for_statements','syntax_analyze.py',814),
  ('for_statements -> For close_brace','for_statements',2,'p_for_statements','syntax_analyze.py',815),
  ('for_statements -> For colon','for_statements',2,'p_for_statements','syntax_analyze.py',816),
  ('for_statements -> For block','for_statements',2,'p_for_statements','syntax_analyze.py',817),
  ('while_statements -> While open_par condition close_par colon block','while_statements',6,'p_while_statements','syntax_analyze.py',833),
  ('while_statements -> While open_par condition close_par block','while_statements',5,'p_while_statements','syntax_analyze.py',834),
  ('while_statements -> While open_par condition colon block','while_statements',5,'p_while_statements','syntax_analyze.py',835),
  ('while_statements -> While condition close_par colon block','while_statements',5,'p_while_statements','syntax_analyze.py',836),
  ('while_statements -> While open_par condition block','while_statements',4,'p_while_statements','syntax_analyze.py',837),
  ('while_statements -> While condition close_par block','while_statements',4,'p_while_statements','syntax_analyze.py',838),
  ('while_statements -> While condition colon block','while_statements',4,'p_while_statements','syntax_analyze.py',839),
  ('inside_statements -> statements control_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',853),
  ('inside_statements -> control_statements statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',854),
  ('inside_statements -> <empty>','inside_statements',0,'p_inside_statements','syntax_analyze.py',855),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',864),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',865),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',866),
  ('control_statements -> <empty>','control_statements',0,'p_control_statements','syntax_analyze.py',867),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',875),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',876),
  ('condition -> lit_bool','condition',1,'p_condition','syntax_analyze.py',877),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition_more','syntax_analyze.py',882),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',894),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',895),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',900),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',905),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',912),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',913),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',914),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',915),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',916),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',917),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',922),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand','logical_expression',6,'p_logical_expression','syntax_analyze.py',923),
  ('logical_expression -> open_par logical_operand close_par logical_operators logical_operand close_par','logical_expression',6,'p_logical_expression','syntax_analyze.py',924),
  ('logical_expression -> open_par logical_operand logical_operators open_par logical_operand close_par','logical_expression',6,'p_logical_expression','syntax_analyze.py',925),
  ('logical_expression -> logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',6,'p_logical_expression','syntax_analyze.py',926),
  ('logical_expression -> open_par logical_operand close_par logical_operators logical_operand','logical_expression',5,'p_logical_expression','syntax_analyze.py',927),
  ('logical_expression -> open_par logical_operand logical_operators open_par logical_operand','logical_expression',5,'p_logical_expression','syntax_analyze.py',928),
  ('logical_expression -> open_par logical_operand logical_operators logical_operand close_par','logical_expression',5,'p_logical_expression','syntax_analyze.py',929),
  ('logical_expression -> logical_operand close_par logical_operators open_par logical_operand','logical_expression',5,'p_logical_expression','syntax_analyze.py',930),
  ('logical_expression -> logical_operand logical_operators open_par logical_operand close_par','logical_expression',5,'p_logical_expression','syntax_analyze.py',931),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',945),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',953),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',954),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more1','syntax_analyze.py',959),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',964),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',965),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',970),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',971),
  ('if_statement -> If open_par condition close_par colon block condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',976),
  ('if_statement -> If open_par condition close_par block condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',977),
  ('if_statement -> If open_par condition colon block condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',978),
  ('if_statement -> If condition close_par colon block condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',979),
  ('if_statement -> If open_par condition block condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',980),
  ('if_statement -> If condition close_par block condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',981),
  ('if_statement -> If condition colon block condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',982),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',997),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',998),
  ('condition_else -> <empty>','condition_else',0,'p_condition_else_empty','syntax_analyze.py',1003),
  ('elif_statement -> Elif open_par condition close_par colon block condition_else','elif_statement',7,'p_elif_statement','syntax_analyze.py',1007),
  ('else_statement -> Else colon block','else_statement',3,'p_else_statement','syntax_analyze.py',1020),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','syntax_analyze.py',1021),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',1034),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',1048),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',1058),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',1059),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',1060),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',1065),
  ('execute1 -> <empty>','execute1',0,'p_execute1_more','syntax_analyze.py',1070),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',1075),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',1076),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',1081),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',1088),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',1095),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',1104),
  ('function_param -> value1_opt more_param','function_param',2,'p_function_param_more','syntax_analyze.py',1112),
  ('function_param -> <empty>','function_param',0,'p_function_param_none','syntax_analyze.py',1118),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',1122),
  ('more_param -> <empty>','more_param',0,'p_more_param','syntax_analyze.py',1123),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',11,'p_functions','syntax_analyze.py',1132),
  ('functions -> Sys id parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1133),
  ('functions -> Sys open_par parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1134),
  ('functions -> Sys parameters close_par declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1135),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1136),
  ('functions -> Sys parameters declare_statements statements return_statement close_bracket functions','functions',7,'p_functions','syntax_analyze.py',1137),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1138),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1139),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1140),
  ('functions -> Sys id parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1141),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1142),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1143),
  ('functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1144),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1145),
  ('functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1146),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1147),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1148),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1149),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1150),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1151),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1152),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1153),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1154),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1155),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1156),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1157),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',10,'p_functions','syntax_analyze.py',1158),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1159),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1160),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1161),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1162),
  ('functions -> <empty>','functions',0,'p_functions','syntax_analyze.py',1163),
  ('parameters -> data_type id more_parameters','parameters',3,'p_parameters','syntax_analyze.py',1185),
  ('parameters -> <empty>','parameters',0,'p_parameters_none','syntax_analyze.py',1192),
  ('more_parameters -> comma data_type id more_parameters','more_parameters',4,'p_more_parameters','syntax_analyze.py',1196),
  ('more_parameters -> <empty>','more_parameters',0,'p_more_parameters','syntax_analyze.py',1197),
  ('return_statement -> Return value statements return_statement','return_statement',4,'p_return_statement','syntax_analyze.py',1208),
  ('return_statement -> <empty>','return_statement',0,'p_return_statement','syntax_analyze.py',1209),
]
