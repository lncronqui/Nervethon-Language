
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functions global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | struct_dec : Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 struct_element1 : data_type id_array_dec data_type : Integer\n                | Decimal\n                | String\n                | Boolean  id_array_dec : id id_array_dec2 id_array_dec2 : id_dec1 id_array_dec2 : open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | struct_element2 : comma struct_element1 struct_element2\n                        | declare_statements : Generate const_var_dec declare_statements\n                            | const_var_dec : Fixed data_type id_array_const const_var_dec : data_type id_array_var id_array_const : id id_array_const2  id_array_const2 : open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1  id_array_const2 : equal value id_const1 id_const1 : comma id equal value id_const1 \n                | array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | id_array_var : id id_array_var2  id_array_var2 : var_init id_var1 id_array_var2 : open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | id_var1 : comma id var_init id_var1\n                | array_init : equal open_brace value1 close_brace array_var1 \n                | array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | value : num_value value : lit_str\n            | lit_bool num_value : id_array id_struct num_value : literals \n                | arithmetic_expression\n                | func_call id_array : id array array : open_brace lit_intposi close_brace \n            | id_array1 : id_array id_array2 id_array2 : comma id_array1\n                |literals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                |value1 : value value2value2 : comma value1 \n            |statements : assignment_statements statements \n                | looping_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                |assignment_statements : id assignment_statements2assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassign_value : num_valueassign_value : more_id valuemore_id : id_array id_struct equal more_id\n            |assignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                |looping_statements : for_statements\n                        | while_statementsfor_statements : For id In id open_brace close_brace colon open_bracket inside_statements close_bracketwhile_statements : While open_par condition close_par colon open_bracket inside_statements close_bracketinside_statements : statements inside_statements\n                        | control_statements inside_statements\n                        |control_statements : Break\n                        | Continue\n                        | Avoid condition   : relational_expression\n                    | logical_expression condition   : Not open_par condition_not close_par condition   : lit_bool condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par logical_operand : relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else condition_else  : elif_statement\n                        | else_statement condition_else  : elif_statement  : Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else else_statement  : Else colon open_bracket inside_statements close_bracket switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param\n                        | function_param  : value1 more_param more_param  : comma function_param\n                    | functions   : Sys id open_par parameters close_par open_bracket declare_statements function_body close_bracket functions\n                    | parameters  : data_type id parameters\n                    | function_body   : statements function_body\n                        | return_statement function_body\n                        | return_statement    : Return value'
    
_lr_action_items = {'Link_Start':([0,2,3,4,8,9,11,20,22,23,46,48,49,67,69,70,71,72,73,74,75,76,77,78,79,85,88,91,109,119,129,130,131,132,144,170,171,172,173,178,180,181,192,209,210,216,217,242,269,271,287,288,290,305,307,321,330,345,346,],[-4,7,-4,-4,-3,-2,-21,-20,-23,-35,-22,-31,-37,-51,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-49,-45,-28,-35,-39,-34,-68,-60,-59,-5,-54,-26,-37,-41,-147,-50,-52,-36,-33,-53,-28,-41,-30,-27,-38,-25,-39,-41,-40,-30,-29,]),'Struct':([0,3,4,11,20,22,23,46,48,49,67,69,70,71,72,73,74,75,76,77,78,79,85,88,91,109,119,129,130,131,132,144,170,171,172,173,178,180,181,192,209,210,216,217,242,269,271,287,288,290,305,307,321,330,345,346,],[5,5,5,-21,-20,-23,-35,-22,-31,-37,-51,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-49,-45,-28,-35,-39,-34,-68,-60,-59,-5,-54,-26,-37,-41,-147,-50,-52,-36,-33,-53,-28,-41,-30,-27,-38,-25,-39,-41,-40,-30,-29,]),'Generate':([0,3,4,7,11,20,22,23,46,48,49,67,69,70,71,72,73,74,75,76,77,78,79,85,88,91,109,119,129,130,131,132,144,170,171,172,173,178,180,181,192,209,210,216,217,242,269,271,272,287,288,290,305,307,321,330,345,346,],[6,6,6,6,6,-20,-23,-35,-22,-31,-37,-51,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-49,-45,-28,-35,-39,-34,-68,-60,-59,-5,-54,-26,-37,-41,-147,-50,-52,-36,-33,-53,-28,-41,6,-30,-27,-38,-25,-39,-41,-40,-30,-29,]),'$end':([1,52,92,322,331,],[0,-154,-1,-154,-153,]),'id':([5,7,11,13,14,15,16,17,18,20,21,22,23,25,26,27,28,29,31,32,33,34,35,36,37,38,41,42,43,45,46,48,49,51,53,54,55,56,57,58,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,85,87,88,89,91,93,95,97,98,99,108,109,111,112,113,114,115,116,117,118,119,122,127,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,151,159,160,161,162,163,164,165,166,170,171,178,179,180,181,184,185,186,187,188,190,192,194,196,199,209,211,216,217,218,219,221,222,223,234,236,244,245,246,251,252,256,259,260,261,262,263,265,266,269,271,272,275,278,280,283,287,288,290,291,293,297,298,299,305,306,307,309,310,311,313,314,316,321,325,327,330,336,338,341,342,344,345,346,],[10,-21,-21,23,-7,-8,-9,-10,30,-20,47,-23,-35,30,30,30,30,30,-97,-98,-128,-129,-143,-144,61,62,65,67,67,84,-22,-31,-37,67,-73,-74,-75,-76,-77,-79,67,67,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,67,-24,67,-32,130,-37,133,67,146,150,67,-145,-49,67,-61,-62,-63,-64,-65,-66,-67,-45,67,176,-28,-35,-39,-34,-80,67,67,-88,-89,-90,-91,-92,-93,-94,-68,67,67,67,-115,-116,-117,-118,-119,-120,-60,-59,-26,215,-37,-41,-82,-83,-84,67,-69,225,-147,146,67,67,-50,67,-36,-33,247,67,250,-85,-45,30,30,267,67,67,67,67,67,30,30,-104,-105,-106,30,30,-28,-41,-21,-86,30,-100,-133,-30,-27,-38,30,-81,-130,-131,-132,-25,320,-39,30,30,67,-99,67,-136,-41,-160,30,-40,-135,30,67,-133,-134,-30,-29,]),'Fixed':([6,],[12,]),'Integer':([6,12,19,82,183,250,],[14,14,14,14,14,14,]),'Decimal':([6,12,19,82,183,250,],[15,15,15,15,15,15,]),'String':([6,12,19,82,183,250,],[16,16,16,16,16,16,]),'Boolean':([6,12,19,82,183,250,],[17,17,17,17,17,17,]),'Sys_Call':([7,11,18,20,22,23,25,26,27,28,29,31,32,33,34,35,36,43,46,48,49,51,53,54,55,56,57,58,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,85,87,88,91,97,99,108,109,111,112,113,114,115,116,117,118,119,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,151,159,160,161,162,163,164,165,166,170,171,178,180,181,184,185,186,187,188,192,194,196,199,209,216,217,219,222,223,234,236,245,246,251,252,256,259,260,261,262,263,265,266,269,271,272,275,278,280,283,287,288,290,291,293,297,298,299,305,307,309,310,311,313,314,316,321,325,327,330,336,338,341,342,344,345,346,],[-21,-21,37,-20,-23,-35,37,37,37,37,37,-97,-98,-128,-129,-143,-144,37,-22,-31,-37,37,-73,-74,-75,-76,-77,-79,37,37,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,37,-24,37,-32,-37,37,37,-145,-49,37,-61,-62,-63,-64,-65,-66,-67,-45,-28,-35,-39,-34,-80,37,37,-88,-89,-90,-91,-92,-93,-94,-68,37,37,37,-115,-116,-117,-118,-119,-120,-60,-59,-26,-37,-41,-82,-83,-84,37,-69,-147,37,37,37,-50,-36,-33,37,-85,-45,37,37,37,37,-87,37,37,37,37,-104,-105,-106,37,37,-28,-41,-21,-86,37,-100,-133,-30,-27,-38,37,-81,-130,-131,-132,-25,-39,37,37,37,-99,37,-136,-41,-160,37,-40,-135,37,37,-133,-134,-30,-29,]),'For':([7,11,18,20,22,23,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,234,236,259,260,261,262,263,265,266,269,271,272,278,280,283,287,288,290,291,293,297,298,299,305,307,309,310,313,316,321,325,327,330,336,338,342,344,345,346,],[-21,-21,38,-20,-23,-35,38,38,38,38,38,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,38,38,38,38,-104,-105,-106,38,38,-28,-41,-21,38,-100,-133,-30,-27,-38,38,-81,-130,-131,-132,-25,-39,38,38,-99,-136,-41,-160,38,-40,-135,38,-133,-134,-30,-29,]),'While':([7,11,18,20,22,23,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,234,236,259,260,261,262,263,265,266,269,271,272,278,280,283,287,288,290,291,293,297,298,299,305,307,309,310,313,316,321,325,327,330,336,338,342,344,345,346,],[-21,-21,39,-20,-23,-35,39,39,39,39,39,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,39,39,39,39,-104,-105,-106,39,39,-28,-41,-21,39,-100,-133,-30,-27,-38,39,-81,-130,-131,-132,-25,-39,39,39,-99,-136,-41,-160,39,-40,-135,39,-133,-134,-30,-29,]),'If':([7,11,18,20,22,23,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,234,236,259,260,261,262,263,265,266,269,271,272,278,280,283,287,288,290,291,293,297,298,299,305,307,309,310,313,316,321,325,327,330,336,338,342,344,345,346,],[-21,-21,40,-20,-23,-35,40,40,40,40,40,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,40,40,40,40,-104,-105,-106,40,40,-28,-41,-21,40,-100,-133,-30,-27,-38,40,-81,-130,-131,-132,-25,-39,40,40,-99,-136,-41,-160,40,-40,-135,40,-133,-134,-30,-29,]),'Switch':([7,11,18,20,22,23,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,234,236,259,260,261,262,263,265,266,269,271,272,278,280,283,287,288,290,291,293,297,298,299,305,307,309,310,313,316,321,325,327,330,336,338,342,344,345,346,],[-21,-21,41,-20,-23,-35,41,41,41,41,41,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,41,41,41,41,-104,-105,-106,41,41,-28,-41,-21,41,-100,-133,-30,-27,-38,41,-81,-130,-131,-132,-25,-39,41,41,-99,-136,-41,-160,41,-40,-135,41,-133,-134,-30,-29,]),'Absorb':([7,11,18,20,22,23,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,234,236,259,260,261,262,263,265,266,269,271,272,278,280,283,287,288,290,291,293,297,298,299,305,307,309,310,313,316,321,325,327,330,336,338,342,344,345,346,],[-21,-21,42,-20,-23,-35,42,42,42,42,42,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,42,42,42,42,-104,-105,-106,42,42,-28,-41,-21,42,-100,-133,-30,-27,-38,42,-81,-130,-131,-132,-25,-39,42,42,-99,-136,-41,-160,42,-40,-135,42,-133,-134,-30,-29,]),'Discharge':([7,11,18,20,22,23,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,234,236,259,260,261,262,263,265,266,269,271,272,278,280,283,287,288,290,291,293,297,298,299,305,307,309,310,313,316,321,325,327,330,336,338,342,344,345,346,],[-21,-21,43,-20,-23,-35,43,43,43,43,43,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,43,43,43,43,-104,-105,-106,43,43,-28,-41,-21,43,-100,-133,-30,-27,-38,43,-81,-130,-131,-132,-25,-39,43,43,-99,-136,-41,-160,43,-40,-135,43,-133,-134,-30,-29,]),'Link_End':([7,11,18,20,22,23,24,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,269,271,280,283,287,288,290,293,297,298,299,305,307,313,316,321,330,336,342,344,345,346,],[-21,-21,-78,-20,-23,-35,52,-78,-78,-78,-78,-78,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,-28,-41,-100,-133,-30,-27,-38,-81,-130,-131,-132,-25,-39,-99,-136,-41,-40,-135,-133,-134,-30,-29,]),'open_bracket':([10,107,200,206,249,255,315,335,],[19,168,234,236,272,278,327,338,]),'Return':([11,20,22,23,25,26,27,28,29,31,32,33,34,35,36,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,88,91,108,109,119,129,130,131,132,134,144,170,171,178,180,181,184,185,186,188,192,209,216,217,222,223,269,271,272,280,283,287,288,290,291,293,297,298,299,305,307,309,310,313,316,321,325,330,336,342,344,345,346,],[-21,-20,-23,-35,-78,-78,-78,-78,-78,-97,-98,-128,-129,-143,-144,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-24,-32,-37,-145,-49,-45,-28,-35,-39,-34,-80,-68,-60,-59,-26,-37,-41,-82,-83,-84,-69,-147,-50,-36,-33,-85,-45,-28,-41,-21,-100,-133,-30,-27,-38,311,-81,-130,-131,-132,-25,-39,311,311,-99,-136,-41,-160,-40,-135,-133,-134,-30,-29,]),'close_bracket':([11,20,22,23,25,26,27,28,29,31,32,33,34,35,36,44,46,48,49,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,88,91,108,109,119,123,124,125,129,130,131,132,134,144,170,171,174,176,178,180,181,184,185,186,188,192,209,212,213,216,217,222,223,234,236,243,258,259,260,261,262,263,264,265,269,271,272,278,280,281,282,283,284,287,288,290,291,293,295,297,298,299,305,307,308,309,310,313,316,319,321,323,324,325,327,328,330,333,336,338,340,342,344,345,346,],[-21,-20,-23,-35,-78,-78,-78,-78,-78,-97,-98,-128,-129,-143,-144,-19,-22,-31,-37,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,122,-6,-15,-24,-32,-37,-145,-49,-45,-19,-11,-12,-28,-35,-39,-34,-80,-68,-60,-59,-18,-15,-26,-37,-41,-82,-83,-84,-69,-147,-50,-17,-14,-36,-33,-85,-45,-78,-78,-13,280,-78,-78,-104,-105,-106,283,-78,-28,-41,-21,-78,-100,-101,-102,-133,302,-30,-27,-38,-78,-81,313,-130,-131,-132,-25,-39,322,-78,-78,-99,-136,-17,-41,-157,-158,-160,-78,-16,-40,336,-135,-78,342,-133,-134,-30,-29,]),'open_brace':([23,30,47,67,84,146,150,182,214,224,225,247,267,320,339,],[50,60,86,110,126,191,197,219,245,252,253,270,286,329,341,]),'equal':([23,30,47,59,67,94,109,130,131,144,145,177,188,189,209,215,223,274,292,294,307,312,337,],[51,-51,87,-69,-51,136,-49,51,182,-68,190,214,-69,224,-50,246,251,-69,251,190,182,-95,339,]),'comma':([23,44,49,67,69,70,71,72,73,74,75,76,77,78,79,83,84,91,109,119,123,124,125,129,130,131,132,144,146,148,149,170,171,173,176,180,181,192,195,209,212,213,216,226,228,243,269,271,287,290,307,319,321,328,330,345,],[-35,82,89,-51,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-6,127,89,-49,-45,82,-11,-12,179,-35,-39,-34,-68,-51,194,196,-60,-59,211,127,89,218,-147,-70,-50,244,-14,-36,194,-71,-13,179,218,306,-38,-39,244,218,-16,-40,306,]),'Break':([25,26,27,28,29,31,32,33,34,35,36,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,108,109,119,134,144,170,171,184,185,186,188,192,209,222,223,234,236,259,260,261,262,263,265,266,278,280,283,285,293,297,298,299,313,316,327,336,338,342,344,],[-78,-78,-78,-78,-78,-97,-98,-128,-129,-143,-144,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-145,-49,-45,-80,-68,-60,-59,-82,-83,-84,-69,-147,-50,-85,-45,261,261,261,261,-104,-105,-106,261,-78,261,-100,-133,303,-81,-130,-131,-132,-99,-136,261,-135,261,-133,-134,]),'Continue':([25,26,27,28,29,31,32,33,34,35,36,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,108,109,119,134,144,170,171,184,185,186,188,192,209,222,223,234,236,259,260,261,262,263,265,278,280,283,293,297,298,299,313,316,327,336,338,342,344,],[-78,-78,-78,-78,-78,-97,-98,-128,-129,-143,-144,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-145,-49,-45,-80,-68,-60,-59,-82,-83,-84,-69,-147,-50,-85,-45,262,262,262,262,-104,-105,-106,262,262,-100,-133,-81,-130,-131,-132,-99,-136,262,-135,262,-133,-134,]),'Avoid':([25,26,27,28,29,31,32,33,34,35,36,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,108,109,119,134,144,170,171,184,185,186,188,192,209,222,223,234,236,259,260,261,262,263,265,278,280,283,293,297,298,299,313,316,327,336,338,342,344,],[-78,-78,-78,-78,-78,-97,-98,-128,-129,-143,-144,-73,-74,-75,-76,-77,-79,-69,-51,-146,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-145,-49,-45,-80,-68,-60,-59,-82,-83,-84,-69,-147,-50,-85,-45,263,263,263,263,-104,-105,-106,263,263,-100,-133,-81,-130,-131,-132,-99,-136,263,-135,263,-133,-134,]),'period':([30,59,66,67,72,109,145,146,188,209,274,],[-51,95,95,-51,95,-49,-50,-51,95,-50,95,]),'plus_equal':([30,59,67,94,109,144,145,209,],[-51,-69,-51,137,-49,-68,-50,-50,]),'minus_equal':([30,59,67,94,109,144,145,209,],[-51,-69,-51,138,-49,-68,-50,-50,]),'times_equal':([30,59,67,94,109,144,145,209,],[-51,-69,-51,139,-49,-68,-50,-50,]),'divide_equal':([30,59,67,94,109,144,145,209,],[-51,-69,-51,140,-49,-68,-50,-50,]),'divide_divide_equal':([30,59,67,94,109,144,145,209,],[-51,-69,-51,141,-49,-68,-50,-50,]),'modulo_equal':([30,59,67,94,109,144,145,209,],[-51,-69,-51,142,-49,-68,-50,-50,]),'times_times_equal':([30,59,67,94,109,144,145,209,],[-51,-69,-51,143,-49,-68,-50,-50,]),'open_par':([39,40,43,51,61,63,64,80,87,97,99,103,111,112,113,114,115,116,117,118,133,135,136,137,138,139,140,141,142,143,151,153,159,160,161,162,163,164,165,166,187,194,196,199,219,230,231,232,245,246,251,252,256,275,300,311,314,341,],[63,64,80,80,97,99,99,80,80,80,151,159,80,-61,-62,-63,-64,-65,-66,-67,183,80,80,-88,-89,-90,-91,-92,-93,-94,151,199,99,80,-115,-116,-117,-118,-119,-120,80,80,80,99,80,256,-126,-127,80,80,-87,80,99,-86,314,80,99,80,]),'lit_str':([43,51,63,64,87,97,99,136,151,159,160,161,162,163,164,165,166,187,194,196,199,208,219,245,246,251,252,256,275,311,314,341,],[70,70,70,70,70,70,70,-87,70,70,70,-115,-116,-117,-118,-119,-120,70,70,70,70,239,70,70,70,-87,70,70,-86,70,70,70,]),'lit_bool':([43,51,63,64,87,97,99,136,151,159,160,161,162,163,164,165,166,187,194,196,199,219,245,246,251,252,256,275,311,314,341,],[71,71,104,104,71,71,156,-87,156,204,71,-115,-116,-117,-118,-119,-120,71,71,71,156,71,71,71,-87,71,156,-86,71,104,71,]),'lit_intposi':([43,50,51,60,63,64,80,86,87,97,99,110,111,112,113,114,115,116,117,118,126,135,136,137,138,139,140,141,142,143,151,159,160,161,162,163,164,165,166,187,191,194,196,199,208,219,245,246,251,252,253,256,270,275,286,311,314,329,341,],[76,90,76,96,76,76,76,128,76,76,76,169,76,-61,-62,-63,-64,-65,-66,-67,175,76,76,-88,-89,-90,-91,-92,-93,-94,76,76,76,-115,-116,-117,-118,-119,-120,76,169,76,76,76,240,76,76,76,-87,76,277,76,289,-86,304,76,76,334,76,]),'lit_intnega':([43,51,63,64,80,87,97,99,111,112,113,114,115,116,117,118,135,136,137,138,139,140,141,142,143,151,159,160,161,162,163,164,165,166,187,194,196,199,208,219,245,246,251,252,256,275,311,314,341,],[77,77,77,77,77,77,77,77,77,-61,-62,-63,-64,-65,-66,-67,77,77,-88,-89,-90,-91,-92,-93,-94,77,77,77,-115,-116,-117,-118,-119,-120,77,77,77,77,241,77,77,77,-87,77,77,-86,77,77,77,]),'lit_decposi':([43,51,63,64,80,87,97,99,111,112,113,114,115,116,117,118,135,136,137,138,139,140,141,142,143,151,159,160,161,162,163,164,165,166,187,194,196,199,219,245,246,251,252,256,275,311,314,341,],[78,78,78,78,78,78,78,78,78,-61,-62,-63,-64,-65,-66,-67,78,78,-88,-89,-90,-91,-92,-93,-94,78,78,78,-115,-116,-117,-118,-119,-120,78,78,78,78,78,78,78,-87,78,78,-86,78,78,78,]),'lit_decnega':([43,51,63,64,80,87,97,99,111,112,113,114,115,116,117,118,135,136,137,138,139,140,141,142,143,151,159,160,161,162,163,164,165,166,187,194,196,199,219,245,246,251,252,256,275,311,314,341,],[79,79,79,79,79,79,79,79,79,-61,-62,-63,-64,-65,-66,-67,79,79,-88,-89,-90,-91,-92,-93,-94,79,79,79,-115,-116,-117,-118,-119,-120,79,79,79,79,79,79,79,-87,79,79,-86,79,79,79,]),'Sys':([52,322,],[93,93,]),'In':([62,],[98,]),'Not':([63,64,99,151,199,256,314,],[103,103,153,153,153,153,103,]),'colon':([65,158,167,229,237,238,239,240,241,301,332,],[107,200,206,255,265,266,-138,-139,-140,315,335,]),'plus':([67,69,72,73,74,75,76,77,78,79,109,119,120,121,144,146,157,170,171,184,186,188,192,209,223,],[-51,112,-69,-46,-47,-48,-55,-56,-57,-58,-49,-45,-47,112,-68,-51,112,112,-59,112,112,-69,-147,-50,-45,]),'minus':([67,69,72,73,74,75,76,77,78,79,109,119,120,121,144,146,157,170,171,184,186,188,192,209,223,],[-51,113,-69,-46,-47,-48,-55,-56,-57,-58,-49,-45,-47,113,-68,-51,113,113,-59,113,113,-69,-147,-50,-45,]),'times':([67,69,72,73,74,75,76,77,78,79,109,119,120,121,144,146,157,170,171,184,186,188,192,209,223,],[-51,114,-69,-46,-47,-48,-55,-56,-57,-58,-49,-45,-47,114,-68,-51,114,114,-59,114,114,-69,-147,-50,-45,]),'divide':([67,69,72,73,74,75,76,77,78,79,109,119,120,121,144,146,157,170,171,184,186,188,192,209,223,],[-51,115,-69,-46,-47,-48,-55,-56,-57,-58,-49,-45,-47,115,-68,-51,115,115,-59,115,115,-69,-147,-50,-45,]),'divide_divide':([67,69,72,73,74,75,76,77,78,79,109,119,120,121,144,146,157,170,171,184,186,188,192,209,223,],[-51,116,-69,-46,-47,-48,-55,-56,-57,-58,-49,-45,-47,116,-68,-51,116,116,-59,116,116,-69,-147,-50,-45,]),'modulo':([67,69,72,73,74,75,76,77,78,79,109,119,120,121,144,146,157,170,171,184,186,188,192,209,223,],[-51,117,-69,-46,-47,-48,-55,-56,-57,-58,-49,-45,-47,117,-68,-51,117,117,-59,117,117,-69,-147,-50,-45,]),'times_times':([67,69,72,73,74,75,76,77,78,79,109,119,120,121,144,146,157,170,171,184,186,188,192,209,223,],[-51,118,-69,-46,-47,-48,-55,-56,-57,-58,-49,-45,-47,118,-68,-51,118,118,-59,118,118,-69,-147,-50,-45,]),'greater_than':([67,69,70,72,73,74,75,76,77,78,79,104,105,109,119,120,144,156,157,170,171,192,204,209,],[-51,-42,-43,-69,-46,-47,-48,-55,-56,-57,-58,-44,161,-49,-45,-47,-68,-44,-42,-60,-59,-147,-44,-50,]),'less_than':([67,69,70,72,73,74,75,76,77,78,79,104,105,109,119,120,144,156,157,170,171,192,204,209,],[-51,-42,-43,-69,-46,-47,-48,-55,-56,-57,-58,-44,162,-49,-45,-47,-68,-44,-42,-60,-59,-147,-44,-50,]),'equal_equal':([67,69,70,72,73,74,75,76,77,78,79,104,105,109,119,120,144,156,157,170,171,192,204,209,],[-51,-42,-43,-69,-46,-47,-48,-55,-56,-57,-58,-44,163,-49,-45,-47,-68,-44,-42,-60,-59,-147,-44,-50,]),'not_equal':([67,69,70,72,73,74,75,76,77,78,79,104,105,109,119,120,144,156,157,170,171,192,204,209,],[-51,-42,-43,-69,-46,-47,-48,-55,-56,-57,-58,-44,164,-49,-45,-47,-68,-44,-42,-60,-59,-147,-44,-50,]),'great_than_equal':([67,69,70,72,73,74,75,76,77,78,79,104,105,109,119,120,144,156,157,170,171,192,204,209,],[-51,-42,-43,-69,-46,-47,-48,-55,-56,-57,-58,-44,165,-49,-45,-47,-68,-44,-42,-60,-59,-147,-44,-50,]),'less_than_equal':([67,69,70,72,73,74,75,76,77,78,79,104,105,109,119,120,144,156,157,170,171,192,204,209,],[-51,-42,-43,-69,-46,-47,-48,-55,-56,-57,-58,-44,166,-49,-45,-47,-68,-44,-42,-60,-59,-147,-44,-50,]),'close_par':([67,69,70,71,72,73,74,75,76,77,78,79,97,100,101,102,104,106,109,119,120,144,146,147,148,149,152,154,155,156,170,171,183,192,193,194,195,201,202,203,204,205,209,220,226,227,228,233,235,250,254,257,273,279,296,326,],[-51,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,-149,158,-107,-108,-110,167,-49,-45,171,-68,-51,192,-152,-72,198,-123,-124,-125,-60,-59,-156,-147,-150,-149,-70,235,-111,-112,-113,-114,-50,249,-152,-151,-71,257,-109,-156,-148,-122,-155,296,-121,332,]),'close_brace':([67,69,70,71,72,73,74,75,76,77,78,79,90,96,109,119,128,144,149,169,170,171,175,191,192,195,197,209,228,248,268,276,277,289,304,334,343,],[-51,-42,-43,-44,-69,-46,-47,-48,-55,-56,-57,-58,131,145,-49,-45,177,-68,-72,209,-60,-59,212,226,-147,-70,229,-50,-71,271,287,293,294,307,319,337,345,]),'Execute':([168,303,],[208,208,]),'And':([198,],[231,]),'Or':([198,],[232,]),'Default':([207,303,317,318,],[237,-142,-137,-141,]),'Elif':([283,342,],[300,300,]),'Else':([283,342,],[301,301,]),'End_Switch':([302,],[316,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,8,9,]),'declare_statements':([0,3,4,7,11,272,],[3,3,3,18,20,291,]),'struct_dec':([0,3,4,],[4,4,4,]),'const_var_dec':([6,],[11,]),'data_type':([6,12,19,82,183,250,],[13,21,45,45,221,221,]),'id_array_var':([13,],[22,]),'statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[24,53,54,55,56,57,259,259,259,259,259,285,259,309,309,309,259,259,]),'assignment_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'looping_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'conditional_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'io_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'func_call':([18,25,26,27,28,29,43,51,63,64,80,87,97,99,111,135,136,151,159,160,187,194,196,199,219,234,236,245,246,252,256,259,260,265,266,278,291,309,310,311,314,327,338,341,],[29,29,29,29,29,29,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,29,29,75,75,75,75,29,29,29,29,29,29,29,29,75,75,29,29,75,]),'for_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'while_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'if_statement':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'switch_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'input_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'output_statements':([18,25,26,27,28,29,234,236,259,260,265,266,278,291,309,310,327,338,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'struct_element1':([19,82,],[44,123,]),'id_array_const':([21,],[46,]),'id_array_var2':([23,],[48,]),'var_init':([23,130,],[49,180,]),'assignment_statements2':([30,],[58,]),'array':([30,67,146,],[59,109,109,]),'id_array':([42,43,51,63,64,80,87,95,97,99,111,122,135,136,151,159,160,187,194,196,199,211,219,245,246,251,252,256,311,314,341,],[66,72,72,72,72,72,72,144,72,72,72,173,72,188,72,72,72,72,72,72,72,173,72,72,72,274,72,72,72,72,72,]),'value':([43,51,63,64,87,97,99,151,159,160,187,194,196,199,219,245,246,252,256,311,314,341,],[68,91,105,105,129,149,105,105,105,205,222,149,149,105,149,149,269,149,105,325,105,149,]),'num_value':([43,51,63,64,80,87,97,99,111,135,136,151,159,160,187,194,196,199,219,245,246,252,256,311,314,341,],[69,69,69,69,121,69,69,157,170,184,186,157,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'literals':([43,51,63,64,80,87,97,99,111,135,136,151,159,160,187,194,196,199,219,245,246,252,256,311,314,341,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'arithmetic_expression':([43,51,63,64,80,87,97,99,111,135,136,151,159,160,187,194,196,199,219,245,246,252,256,311,314,341,],[74,74,74,74,120,74,74,120,74,74,74,120,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'struct_element2':([44,123,],[81,174,]),'id_array_dec':([45,],[83,]),'id_array_const2':([47,],[85,]),'id_var1':([49,91,180,],[88,132,216,]),'functions':([52,322,],[92,331,]),'id_struct':([59,66,72,188,274,],[94,108,119,223,292,]),'condition':([63,64,314,],[100,106,326,]),'relational_expression':([63,64,99,151,159,199,256,314,],[101,101,154,154,202,154,154,101,]),'logical_expression':([63,64,99,151,159,199,256,314,],[102,102,155,155,203,155,155,102,]),'arithmetic_operators':([69,121,157,170,184,186,],[111,111,111,111,111,111,]),'id_array_dec2':([84,],[124,]),'id_dec1':([84,176,],[125,213,]),'assignment_exp':([94,],[134,]),'assignment_operators':([94,],[135,]),'function_param':([97,194,],[147,227,]),'value1':([97,194,196,219,245,252,341,],[148,148,228,248,268,276,343,]),'logical_operand':([99,151,199,256,],[152,152,233,279,]),'relational_operators':([105,],[160,]),'id_array1':([122,211,],[172,242,]),'id_const1':([129,269,],[178,288,]),'array_init':([131,307,],[181,321,]),'assign_value':([136,],[185,]),'more_id':([136,251,],[187,275,]),'more_array':([145,294,],[189,312,]),'more_param':([148,226,],[193,254,]),'value2':([149,],[195,]),'condition_not':([159,],[201,]),'execute':([168,303,],[207,318,]),'id_array2':([173,],[210,]),'array_var1':([181,271,321,],[217,290,330,]),'parameters':([183,250,],[220,273,]),'logical_operators':([198,],[230,]),'switch_lit':([208,],[238,]),'array_dec1':([212,319,],[243,328,]),'inside_statements':([234,236,259,260,265,278,327,338,],[258,264,281,282,284,295,333,340,]),'control_statements':([234,236,259,260,265,278,327,338,],[260,260,260,260,260,260,260,260,]),'condition_else':([283,342,],[297,344,]),'elif_statement':([283,342,],[298,298,]),'else_statement':([283,342,],[299,299,]),'array_const1':([287,345,],[305,346,]),'function_body':([291,309,310,],[308,323,324,]),'return_statement':([291,309,310,],[310,310,310,]),'execute1':([303,],[317,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',33),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',44),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',45),
  ('global_dec -> <empty>','global_dec',0,'p_global_dec','syntax_analyze.py',46),
  ('struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1','struct_dec',7,'p_struct_dec','syntax_analyze.py',55),
  ('struct_element1 -> data_type id_array_dec','struct_element1',2,'p_struct_element1','syntax_analyze.py',66),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',73),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',74),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',75),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',76),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',82),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',88),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2_more','syntax_analyze.py',93),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',101),
  ('id_dec1 -> <empty>','id_dec1',0,'p_id_dec1','syntax_analyze.py',102),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',112),
  ('array_dec1 -> <empty>','array_dec1',0,'p_array_dec1','syntax_analyze.py',113),
  ('struct_element2 -> comma struct_element1 struct_element2','struct_element2',3,'p_struct_element2','syntax_analyze.py',126),
  ('struct_element2 -> <empty>','struct_element2',0,'p_struct_element2','syntax_analyze.py',127),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',137),
  ('declare_statements -> <empty>','declare_statements',0,'p_declare_statements','syntax_analyze.py',138),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',148),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec_more','syntax_analyze.py',155),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',161),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',167),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2_more','syntax_analyze.py',179),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',186),
  ('id_const1 -> <empty>','id_const1',0,'p_id_const1','syntax_analyze.py',187),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',200),
  ('array_const1 -> <empty>','array_const1',0,'p_array_const1','syntax_analyze.py',201),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',218),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',224),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2_more','syntax_analyze.py',230),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',239),
  ('var_init -> <empty>','var_init',0,'p_var_init','syntax_analyze.py',240),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',250),
  ('id_var1 -> <empty>','id_var1',0,'p_id_var1','syntax_analyze.py',251),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',262),
  ('array_init -> <empty>','array_init',0,'p_array_init','syntax_analyze.py',263),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',276),
  ('array_var1 -> <empty>','array_var1',0,'p_array_var1','syntax_analyze.py',277),
  ('value -> num_value','value',1,'p_value_num_value','syntax_analyze.py',291),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',296),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',297),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',302),
  ('num_value -> literals','num_value',1,'p_num_value_more','syntax_analyze.py',309),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value_more','syntax_analyze.py',310),
  ('num_value -> func_call','num_value',1,'p_num_value_more','syntax_analyze.py',311),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',316),
  ('array -> open_brace lit_intposi close_brace','array',3,'p_array','syntax_analyze.py',322),
  ('array -> <empty>','array',0,'p_array','syntax_analyze.py',323),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',334),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',340),
  ('id_array2 -> <empty>','id_array2',0,'p_id_array2','syntax_analyze.py',341),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',351),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',352),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',353),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',354),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',359),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',366),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',374),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',375),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',376),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',377),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',378),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',379),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',380),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',385),
  ('id_struct -> <empty>','id_struct',0,'p_id_struct','syntax_analyze.py',386),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',396),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',402),
  ('value2 -> <empty>','value2',0,'p_value2','syntax_analyze.py',403),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',412),
  ('statements -> looping_statements statements','statements',2,'p_statements','syntax_analyze.py',413),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',414),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',415),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',416),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyze.py',417),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',426),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',432),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',439),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',451),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',457),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',463),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value_more','syntax_analyze.py',468),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',474),
  ('more_id -> <empty>','more_id',0,'p_more_id','syntax_analyze.py',475),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',486),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',487),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',488),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',489),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',490),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',491),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',492),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',497),
  ('more_array -> <empty>','more_array',0,'p_more_array','syntax_analyze.py',498),
  ('looping_statements -> for_statements','looping_statements',1,'p_looping_statements','syntax_analyze.py',511),
  ('looping_statements -> while_statements','looping_statements',1,'p_looping_statements','syntax_analyze.py',512),
  ('for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket','for_statements',10,'p_for_statements','syntax_analyze.py',517),
  ('while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket','while_statements',8,'p_while_statements','syntax_analyze.py',531),
  ('inside_statements -> statements inside_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',543),
  ('inside_statements -> control_statements inside_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',544),
  ('inside_statements -> <empty>','inside_statements',0,'p_inside_statements','syntax_analyze.py',545),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',554),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',555),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',556),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',561),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',562),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition_more','syntax_analyze.py',567),
  ('condition -> lit_bool','condition',1,'p_condition_more1','syntax_analyze.py',575),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',580),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',581),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',586),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',591),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',598),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',599),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',600),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',601),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',602),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',603),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',608),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',619),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',627),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',628),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more1','syntax_analyze.py',633),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',638),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',639),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',644),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',645),
  ('if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','if_statement',9,'p_if_statement','syntax_analyze.py',650),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',662),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',663),
  ('condition_else -> <empty>','condition_else',0,'p_condition_else_empty','syntax_analyze.py',668),
  ('elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','elif_statement',9,'p_elif_statement','syntax_analyze.py',672),
  ('else_statement -> Else colon open_bracket inside_statements close_bracket','else_statement',5,'p_else_statement','syntax_analyze.py',685),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',694),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',708),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',718),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',719),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',720),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',725),
  ('execute1 -> <empty>','execute1',0,'p_execute1_more','syntax_analyze.py',730),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',735),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',736),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',741),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',748),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',754),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',763),
  ('function_param -> <empty>','function_param',0,'p_function_param','syntax_analyze.py',764),
  ('function_param -> value1 more_param','function_param',2,'p_function_param_more','syntax_analyze.py',775),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',781),
  ('more_param -> <empty>','more_param',0,'p_more_param','syntax_analyze.py',782),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements function_body close_bracket functions','functions',10,'p_functions','syntax_analyze.py',791),
  ('functions -> <empty>','functions',0,'p_functions','syntax_analyze.py',792),
  ('parameters -> data_type id parameters','parameters',3,'p_parameters','syntax_analyze.py',809),
  ('parameters -> <empty>','parameters',0,'p_parameters','syntax_analyze.py',810),
  ('function_body -> statements function_body','function_body',2,'p_function_body','syntax_analyze.py',820),
  ('function_body -> return_statement function_body','function_body',2,'p_function_body','syntax_analyze.py',821),
  ('function_body -> <empty>','function_body',0,'p_function_body','syntax_analyze.py',822),
  ('return_statement -> Return value','return_statement',2,'p_return_statement','syntax_analyze.py',831),
]
