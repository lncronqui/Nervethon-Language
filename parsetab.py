
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functions\n                | global_dec Link_Start declare_statements statements functions\n                | global_dec declare_statements statements Link_End functions\n                | global_dec declare_statements statements functions global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | struct_dec : Struct id open_bracket struct_element1 close_bracket id_array1\n                    | Struct id struct_element1 id_array1\n                    | Struct open_bracket struct_element1 id_array1\n                    | Struct struct_element1 close_bracket id_array1\n                    | Struct id open_bracket struct_element1 id_array1\n                    | Struct id struct_element1 close_bracket id_array1\n                    | Struct open_bracket struct_element1 close_bracket id_array1\n                    | struct_element1 : data_type id_array_dec struct_element2 struct_element2 : struct_element1\n                        | data_type : Integer\n                | Decimal\n                | String\n                | Boolean data_type : id_array_dec : id id_array_dec2\n                    | id_array_dec2 : id_dec1 id_array_dec2 : open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | declare_statements : Generate const_var_dec declare_statements\n                            | const_var_dec : Fixed data_type id_array_const const_var_dec : data_type id_array_var const_var_dec :  id_array_const : id id_array_const2\n                        | id_array_const2 : open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 id_array_const2 : equal value id_const1 id_array_const2 : id_const1 : comma id equal value id_const1 \n                | array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | id_array_var : id id_array_var2  id_array_var2 : var_init id_var1 id_array_var2 : open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | id_var1 : comma id var_init id_var1\n                | array_init : equal open_brace value1 close_brace array_var1 \n                | array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | value : num_value\n            | lit_str\n            | lit_bool\n            | value_opt : num_value_opt\n            | lit_str\n            | lit_bool num_value : id_array id_struct num_value : literals \n                | arithmetic_expression\n                | func_call num_value : num_value_opt : id_array_opt id_struct num_value_opt : literals_opt\n                | arithmetic_expression\n                | func_call id_array : id array\n                | id_array_opt : id array array : open_brace num_value close_brace array : open_brace close_brace array :  id_array1 : id_array id_array2\n                | id_array2 : comma id_array1\n                |literals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnega\n                |literals_opt : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                |value1 : value value2value2 : comma value1 \n            |value1_opt : value_opt value2_optvalue2_opt : comma value1_opt \n            |statements : assignment_statements statements \n                | for_statements statements\n                | while_statements statements\n                | if_statement statements\n                | switch_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                |assignment_statements : id assignment_statements2\n                            |assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassignment_exp :assign_value : num_valueassign_value : more_id valuemore_id : id_array id_struct equal more_id\n            |assignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                |for_statements : For id In id open_brace close_brace colon open_bracket inside_statements close_bracket\n                        |while_statements : While open_par condition close_par colon open_bracket inside_statements close_bracket\n                        |inside_statements : statements control_statements\n                        | control_statements statements\n                        |control_statements : Break\n                        | Continue\n                        | Avoid\n                        | condition   : relational_expression\n                    | logical_expression condition   : Not open_par condition_not close_par condition   : lit_bool condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par logical_operand : relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else\n                        | condition_else  : elif_statement\n                        | else_statement condition_else  : elif_statement  : Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else else_statement  : Else colon open_bracket inside_statements close_bracket\n                        | switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param function_param  : value1_opt more_param function_param : more_param  : comma function_param\n                    | functions   : Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement functions\n                    | Sys parameters open_bracket declare_statements statements return_statement functions\n                    | Sys parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | parameters  : data_type id more_parameters parameters  : more_parameters : comma data_type id more_parameters\n                        | return_statement    : Return value statements return_statement\n                            |'
    
_lr_action_items = {'Link_Start':([0,2,3,4,6,9,10,11,12,14,15,16,17,18,19,20,42,43,44,45,46,47,48,49,50,51,73,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,114,116,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,176,178,213,214,215,216,217,218,220,221,222,223,258,264,267,269,270,313,314,353,393,395,432,433,434,436,460,461,463,473,478,490,491,],[-7,7,-7,-7,-36,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-78,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-74,-77,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-191,-27,-40,-52,-56,-51,-48,-60,-43,-56,-31,-45,-42,-53,-30,-39,-54,-56,-55,-45,-44,]),'Generate':([0,2,3,4,6,7,9,10,11,12,14,15,16,17,18,19,20,42,43,44,45,46,47,48,49,50,51,55,73,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,114,116,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,164,165,176,178,213,214,215,216,217,218,220,221,222,223,224,226,227,229,230,232,235,258,264,267,269,270,272,273,277,281,313,314,317,334,353,378,393,395,432,433,434,436,460,461,463,473,478,490,491,],[6,6,6,6,-36,6,-6,-5,-23,-23,-25,-19,-20,-21,-22,6,-23,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-78,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,6,-74,-77,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,6,6,6,6,-232,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,6,6,6,6,6,6,-229,-191,-27,-40,-52,-56,6,6,6,6,-51,-48,6,-232,-60,-231,-43,-56,-31,-45,-42,-53,-30,-39,-54,-56,-55,-45,-44,]),'id':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,66,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,109,110,111,112,113,114,116,118,119,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,180,188,189,190,191,192,193,194,195,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,241,243,246,256,258,260,262,264,265,267,268,269,270,272,273,274,276,277,278,280,281,282,284,286,288,289,290,298,300,313,314,315,316,317,318,319,323,327,332,334,335,336,339,343,344,345,346,348,349,352,353,357,378,380,383,385,388,393,395,397,421,425,426,427,432,433,434,436,454,455,457,460,461,462,463,471,473,478,480,482,486,487,488,490,491,],[-7,-33,-7,-7,11,-23,-33,32,-6,-5,-23,-23,47,-19,-20,-21,-22,-33,-23,51,32,32,32,32,32,32,32,32,32,-78,67,70,-187,-188,71,73,73,-23,73,73,73,-18,-29,-32,101,-35,-50,109,-118,-102,73,73,73,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,73,73,-9,73,-82,-10,73,-11,-16,-17,-24,-26,150,-34,-41,-46,-52,73,-23,-23,-33,165,-124,73,-77,179,73,198,-189,-73,73,73,-94,-95,-96,-97,-98,-99,-100,-64,73,-12,-13,-79,73,-14,-29,-37,73,-47,221,-52,-23,-33,-33,-33,32,-33,-232,-120,73,73,-129,-130,-131,-132,-133,-134,-135,-101,-76,73,73,73,-157,-158,-159,-160,-161,-162,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,32,-33,-33,32,-33,-33,32,-33,32,-229,-23,-122,-123,-125,73,-102,292,73,73,-191,198,309,-27,310,-40,312,-52,-56,-33,-33,32,32,-33,32,32,-33,32,32,73,334,-126,-64,32,32,-51,-48,354,73,-33,32,32,32,32,32,-232,73,73,73,32,-145,-146,-147,32,32,73,73,32,-231,-127,32,-140,-176,-43,-56,73,-121,-172,-174,-175,-31,-45,-42,-53,-138,73,-180,-30,-39,472,-54,32,-56,-55,-178,32,-176,73,-177,-45,-44,]),'For':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,276,277,278,280,281,282,284,286,289,290,298,300,313,314,317,318,319,323,327,332,334,335,343,344,345,346,348,349,353,357,378,380,383,385,388,393,395,421,425,426,427,432,433,434,436,454,457,460,461,463,471,473,478,480,482,486,488,490,491,],[-7,-33,-7,-7,-36,-33,33,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,33,33,33,33,33,33,33,33,33,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,-33,-33,-33,33,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,33,-33,-33,33,-33,-33,33,-33,33,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,33,33,-33,33,33,-33,33,33,-60,-126,-64,33,33,-51,-48,-33,33,33,33,33,33,-232,-128,33,-145,-146,-147,33,33,-60,33,-231,-127,33,-140,-176,-43,-56,-121,-172,-174,-175,-31,-45,-42,-53,-138,-180,-30,-39,-54,33,-56,-55,-178,33,-176,-177,-45,-44,]),'While':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,276,277,278,280,281,282,284,286,289,290,298,300,313,314,317,318,319,323,327,332,334,335,343,344,345,346,348,349,353,357,378,380,383,385,388,393,395,421,425,426,427,432,433,434,436,454,457,460,461,463,471,473,478,480,482,486,488,490,491,],[-7,-33,-7,-7,-36,-33,34,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,34,34,34,34,34,34,34,34,34,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,-33,-33,-33,34,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,34,-33,-33,34,-33,-33,34,-33,34,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,34,34,-33,34,34,-33,34,34,-60,-126,-64,34,34,-51,-48,-33,34,34,34,34,34,-232,-128,34,-145,-146,-147,34,34,-60,34,-231,-127,34,-140,-176,-43,-56,-121,-172,-174,-175,-31,-45,-42,-53,-138,-180,-30,-39,-54,34,-56,-55,-178,34,-176,-177,-45,-44,]),'If':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,276,277,278,280,281,282,284,286,289,290,298,300,313,314,317,318,319,323,327,332,334,335,343,344,345,346,348,349,353,357,378,380,383,385,388,393,395,421,425,426,427,432,433,434,436,454,457,460,461,463,471,473,478,480,482,486,488,490,491,],[-7,-33,-7,-7,-36,-33,35,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,35,35,35,35,35,35,35,35,35,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,-33,-33,-33,35,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,35,-33,-33,35,-33,-33,35,-33,35,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,35,35,-33,35,35,-33,35,35,-60,-126,-64,35,35,-51,-48,-33,35,35,35,35,35,-232,-128,35,-145,-146,-147,35,35,-60,35,-231,-127,35,-140,-176,-43,-56,-121,-172,-174,-175,-31,-45,-42,-53,-138,-180,-30,-39,-54,35,-56,-55,-178,35,-176,-177,-45,-44,]),'Switch':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,276,277,278,280,281,282,284,286,289,290,298,300,313,314,317,318,319,323,327,332,334,335,343,344,345,346,348,349,353,357,378,380,383,385,388,393,395,421,425,426,427,432,433,434,436,454,457,460,461,463,471,473,478,480,482,486,488,490,491,],[-7,-33,-7,-7,-36,-33,36,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,36,36,36,36,36,36,36,36,36,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,-33,-33,-33,36,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,36,-33,-33,36,-33,-33,36,-33,36,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,36,36,-33,36,36,-33,36,36,-60,-126,-64,36,36,-51,-48,-33,36,36,36,36,36,-232,-128,36,-145,-146,-147,36,36,-60,36,-231,-127,36,-140,-176,-43,-56,-121,-172,-174,-175,-31,-45,-42,-53,-138,-180,-30,-39,-54,36,-56,-55,-178,36,-176,-177,-45,-44,]),'Sys_Call':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,66,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,119,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,180,188,189,190,191,192,193,194,195,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,246,256,258,260,262,264,267,269,270,272,273,274,276,277,278,280,281,282,284,286,289,290,298,300,313,314,316,317,318,319,323,327,332,334,335,336,339,343,344,345,346,348,349,352,353,357,378,380,383,385,388,393,395,397,421,425,426,427,432,433,434,436,454,455,457,460,461,463,471,473,478,480,482,486,487,488,490,491,],[-7,-33,-7,-7,-36,-33,39,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,39,39,39,39,39,39,39,39,39,-78,-187,-188,-74,39,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-118,-102,39,39,39,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,39,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,39,-230,-230,-33,-124,-74,-77,39,39,-189,-73,39,39,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,39,-47,-52,-230,-33,-33,-33,39,-33,-232,-120,39,39,-129,-130,-131,-132,-133,-134,-135,-101,-76,39,39,39,-157,-158,-159,-160,-161,-162,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,39,-33,-33,39,-33,-33,39,-33,39,-229,-122,-123,-125,39,-102,39,39,-191,39,39,-27,-40,-52,-56,-33,-33,39,39,-33,39,39,-33,39,39,39,-126,-64,39,39,-51,-48,39,-33,39,39,39,39,39,-232,-128,39,39,39,-145,-146,-147,39,39,39,39,39,-231,-127,39,-140,-176,-43,-56,39,-121,-172,-174,-175,-31,-45,-42,-53,-138,39,-180,-30,-39,-54,39,-56,-55,-178,39,-176,39,-177,-45,-44,]),'Absorb':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,276,277,278,280,281,282,284,286,289,290,298,300,313,314,317,318,319,323,327,332,334,335,343,344,345,346,348,349,353,357,378,380,383,385,388,393,395,421,425,426,427,432,433,434,436,454,457,460,461,463,471,473,478,480,482,486,488,490,491,],[-7,-33,-7,-7,-36,-33,40,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,40,40,40,40,40,40,40,40,40,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,-33,-33,-33,40,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,40,-33,-33,40,-33,-33,40,-33,40,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,40,40,-33,40,40,-33,40,40,-60,-126,-64,40,40,-51,-48,-33,40,40,40,40,40,-232,-128,40,-145,-146,-147,40,40,-60,40,-231,-127,40,-140,-176,-43,-56,-121,-172,-174,-175,-31,-45,-42,-53,-138,-180,-30,-39,-54,40,-56,-55,-178,40,-176,-177,-45,-44,]),'Discharge':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,276,277,278,280,281,282,284,286,289,290,298,300,313,314,317,318,319,323,327,332,334,335,343,344,345,346,348,349,353,357,378,380,383,385,388,393,395,421,425,426,427,432,433,434,436,454,457,460,461,463,471,473,478,480,482,486,488,490,491,],[-7,-33,-7,-7,-36,-33,41,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,41,41,41,41,41,41,41,41,41,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-230,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,-33,-33,-33,41,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,41,-33,-33,41,-33,-33,41,-33,41,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,41,41,-33,41,41,-33,41,41,-60,-126,-64,41,41,-51,-48,-33,41,41,41,41,41,-232,-128,41,-145,-146,-147,41,41,-60,41,-231,-127,41,-140,-176,-43,-56,-121,-172,-174,-175,-31,-45,-42,-53,-138,-180,-30,-39,-54,41,-56,-55,-178,41,-176,-177,-45,-44,]),'Link_End':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,237,238,239,240,241,258,264,267,269,270,289,290,313,314,335,353,380,385,388,393,395,421,425,426,427,432,433,434,436,454,457,460,461,463,473,478,480,486,488,490,491,],[-7,-33,-7,-7,-36,-33,-117,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-117,53,-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,106,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-126,-64,-51,-48,-128,-60,-127,-140,-176,-43,-56,-121,-172,-174,-175,-31,-45,-42,-53,-138,-180,-30,-39,-54,-56,-55,-178,-176,-177,-45,-44,]),'Sys':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,106,109,110,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,289,290,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,353,357,358,359,360,362,363,364,365,367,368,369,370,372,373,375,377,378,380,385,388,393,395,398,399,400,402,405,406,408,411,412,414,417,418,421,425,426,427,432,433,434,436,438,440,442,446,450,454,457,460,461,463,464,473,478,480,486,488,490,491,],[-7,-33,-7,-7,-36,-33,-117,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-117,55,-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,55,55,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,55,-230,-230,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-230,-33,-33,-33,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,-117,-33,-33,-117,-33,-33,-117,-33,-117,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,-117,-234,-117,-33,-117,-234,-117,-33,-117,-234,-117,-60,-234,-126,-64,-51,-48,-33,-117,-117,-234,55,-234,-117,-234,55,-234,-117,-234,55,-234,55,-117,55,-232,-128,-60,-117,-234,-234,55,55,55,-234,55,55,55,-234,55,55,55,-234,55,-231,-127,-140,-176,-43,-56,-234,55,55,55,55,55,55,55,55,55,55,-233,-121,-172,-174,-175,-31,-45,-42,-53,55,55,55,55,55,-138,-180,-30,-39,-54,55,-56,-55,-178,-176,-177,-45,-44,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,106,107,108,109,110,113,114,116,129,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,289,290,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,353,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,385,388,393,395,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,425,426,427,432,433,434,436,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,454,457,460,461,463,464,465,466,467,468,469,473,474,478,480,486,488,490,491,],[-7,0,-33,-7,-7,-36,-33,-117,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-117,-228,-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-228,-228,-4,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-228,-2,-3,-230,-230,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-1,-230,-33,-33,-33,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-33,-117,-33,-33,-117,-33,-33,-117,-33,-117,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,-117,-234,-117,-33,-117,-234,-117,-33,-117,-234,-117,-60,-234,-126,-64,-51,-48,-33,-117,-117,-234,-228,-234,-117,-234,-228,-234,-117,-234,-228,-234,-228,-117,-228,-232,-128,-60,-117,-234,-234,-228,-198,-228,-228,-234,-228,-199,-228,-228,-234,-228,-200,-228,-228,-202,-234,-201,-228,-231,-127,-140,-176,-43,-56,-234,-228,-228,-203,-228,-206,-204,-228,-228,-205,-228,-209,-207,-228,-228,-208,-228,-211,-210,-228,-233,-212,-121,-172,-174,-175,-31,-45,-42,-53,-228,-213,-228,-214,-228,-215,-217,-216,-228,-218,-220,-219,-228,-221,-222,-138,-180,-30,-39,-54,-228,-223,-224,-225,-226,-227,-56,-197,-55,-178,-176,-177,-45,-44,]),'Struct':([0,3,4,6,11,12,14,15,16,17,18,19,20,42,43,44,45,46,47,48,49,50,51,73,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,105,114,116,130,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,150,151,153,154,157,176,178,213,214,215,216,217,218,220,221,222,223,258,264,267,269,270,313,314,353,393,395,432,433,434,436,460,461,463,473,478,490,491,],[5,5,5,-36,-23,-23,-25,-19,-20,-21,-22,-33,-23,-23,-74,-74,-74,-18,-29,-32,-38,-35,-50,-78,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-9,-74,-82,-10,-74,-11,-16,-17,-24,-26,-34,-41,-46,-52,-60,-74,-77,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-12,-13,-79,-74,-14,-29,-37,-60,-47,-52,-101,-76,-93,-92,-8,-81,-31,-28,-43,-50,-54,-49,-191,-27,-40,-52,-56,-51,-48,-60,-43,-56,-31,-45,-42,-53,-30,-39,-54,-56,-55,-45,-44,]),'open_bracket':([5,11,55,109,110,111,127,159,160,161,162,165,224,226,229,235,247,253,272,334,338,378,456,479,],[12,42,-230,-230,-230,164,197,-230,227,230,232,-232,273,277,281,-229,298,300,317,-232,383,-231,471,482,]),'Integer':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,96,97,109,110,150,159,217,218,236,264,432,460,],[15,15,15,15,-25,-19,-20,-21,-22,15,15,15,-29,15,-24,-26,15,15,-29,15,-31,-28,15,-27,-31,-30,]),'Decimal':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,96,97,109,110,150,159,217,218,236,264,432,460,],[16,16,16,16,-25,-19,-20,-21,-22,16,16,16,-29,16,-24,-26,16,16,-29,16,-31,-28,16,-27,-31,-30,]),'String':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,96,97,109,110,150,159,217,218,236,264,432,460,],[17,17,17,17,-25,-19,-20,-21,-22,17,17,17,-29,17,-24,-26,17,17,-29,17,-31,-28,17,-27,-31,-30,]),'Boolean':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,96,97,109,110,150,159,217,218,236,264,432,460,],[18,18,18,18,-25,-19,-20,-21,-22,18,18,18,-29,18,-24,-26,18,18,-29,18,-31,-28,18,-27,-31,-30,]),'close_bracket':([5,6,11,12,13,14,15,16,17,18,19,20,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,94,95,96,97,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,150,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,258,264,267,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,298,300,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,341,342,343,344,345,346,347,348,353,357,358,359,360,363,364,365,368,369,370,373,375,378,380,383,385,386,387,388,389,393,395,398,399,400,406,412,418,421,423,425,426,427,432,433,434,436,438,454,457,460,461,463,471,473,476,478,480,482,484,486,488,490,491,],[-23,-36,-23,-23,45,-25,-19,-20,-21,-22,-33,-23,-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-23,89,92,-18,-29,-32,-38,-35,-50,-230,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,143,-16,-17,-24,-26,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-29,-37,-60,-47,-52,-230,-33,-33,-33,-117,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-31,-28,-43,-50,-54,-49,-33,-117,-33,-33,-117,-33,-33,-117,-33,-234,-117,-229,-122,-123,-125,-60,-102,-191,-27,-40,-52,-56,-33,-33,-117,-234,-117,-33,-117,-234,-117,-33,-117,-234,-117,331,-60,-234,-126,-64,-117,-117,-51,-48,-33,-117,-117,-234,362,-234,-117,-234,367,-234,-117,-234,372,-234,-117,377,-232,-128,385,-148,-117,-145,-146,-147,388,-117,-60,-117,-234,-234,402,405,-234,408,411,-234,414,417,-234,-231,-127,-117,-140,-142,-143,-176,430,-43,-56,-234,440,442,446,450,-233,-121,454,-172,-174,-175,-31,-45,-42,-53,464,-138,-180,-30,-39,-54,-117,-56,480,-55,-178,-117,486,-176,-177,-45,-44,]),'Fixed':([6,],[20,]),'Return':([6,15,16,17,18,19,20,24,25,26,27,28,29,30,31,32,37,38,40,41,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,100,101,102,103,105,109,110,111,113,114,116,129,130,132,133,134,135,136,137,138,139,140,151,153,154,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,213,214,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,258,267,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,289,290,313,314,317,318,319,320,322,323,324,326,327,328,330,332,334,335,353,357,358,359,364,369,375,378,380,385,388,393,395,398,421,425,426,427,433,434,436,454,457,461,463,473,478,480,486,488,490,491,],[-36,-19,-20,-21,-22,-33,-23,-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-32,-38,-35,-50,-230,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-34,-41,-46,-52,-60,-230,-230,-33,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-37,-60,-47,-52,-230,-33,-33,-33,-117,-33,-232,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-43,-50,-54,-49,-33,-117,-33,-33,-117,-33,-33,-117,-33,286,-117,-229,-122,-123,-125,-60,-102,-191,-40,-52,-56,-33,-33,-117,286,-117,-33,-117,286,-117,-33,-117,286,-117,-60,286,-126,-64,-51,-48,-33,-117,-117,286,286,-117,286,286,-117,286,286,-117,-232,-128,-60,-117,286,286,286,286,286,-231,-127,-140,-176,-43,-56,286,-121,-172,-174,-175,-45,-42,-53,-138,-180,-39,-54,-56,-55,-178,-176,-177,-45,-44,]),'comma':([11,12,14,15,16,17,18,42,43,44,45,46,47,51,73,75,76,77,78,79,80,81,82,83,84,85,87,89,90,92,94,95,96,97,103,105,114,116,130,132,133,134,135,136,137,138,139,140,143,147,150,153,157,165,176,178,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,217,218,220,221,222,223,257,258,261,263,264,269,270,306,308,309,313,316,334,336,352,353,356,393,395,397,432,433,436,460,463,473,478,487,490,],[-23,-23,-25,-19,-20,-21,-22,-23,-74,-74,-74,-18,99,-50,-78,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,-74,147,-74,-16,-17,-24,-26,155,-60,-74,-77,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-74,-74,99,-60,155,236,-101,-76,-78,260,262,-61,-62,-63,-102,-70,-71,-72,-88,-89,-90,-91,-93,-92,265,-28,268,-50,-54,-49,-75,-191,-106,-69,-27,155,315,260,-107,-78,-51,-60,236,-60,-60,-60,397,268,315,-60,265,462,-53,-30,-54,315,-55,-60,462,]),'Break':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,113,114,116,129,130,132,133,134,135,136,137,138,139,140,166,167,168,169,170,171,172,173,174,175,176,178,213,214,237,238,239,240,241,258,289,290,298,300,335,342,348,349,380,383,385,388,390,421,425,426,427,454,457,471,480,482,486,488,],[-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-122,-123,-125,-60,-102,-191,-126,-64,344,344,-128,344,344,-117,-127,344,-140,-176,431,-121,-172,-174,-175,-138,-180,344,-178,344,-176,-177,]),'Continue':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,113,114,116,129,130,132,133,134,135,136,137,138,139,140,166,167,168,169,170,171,172,173,174,175,176,178,213,214,237,238,239,240,241,258,289,290,298,300,335,342,348,380,383,385,388,421,425,426,427,454,457,471,480,482,486,488,],[-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-122,-123,-125,-60,-102,-191,-126,-64,345,345,-128,345,345,-127,345,-140,-176,-121,-172,-174,-175,-138,-180,345,-178,345,-176,-177,]),'Avoid':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,113,114,116,129,130,132,133,134,135,136,137,138,139,140,166,167,168,169,170,171,172,173,174,175,176,178,213,214,237,238,239,240,241,258,289,290,298,300,335,342,348,380,383,385,388,421,425,426,427,454,457,471,480,482,486,488,],[-117,-117,-117,-117,-117,-117,-117,-117,-78,-187,-188,-74,-60,-109,-110,-111,-112,-113,-114,-115,-116,-118,-102,-102,-78,-190,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-124,-74,-77,-189,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-120,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-93,-92,-122,-123,-125,-60,-102,-191,-126,-64,346,346,-128,346,346,-127,346,-140,-176,-121,-172,-174,-175,-138,-180,346,-178,346,-176,-177,]),'open_brace':([32,47,51,73,101,179,198,271,291,292,309,310,311,354,472,485,],[66,98,104,131,152,244,256,316,336,337,131,351,352,394,477,487,]),'period':([32,40,41,65,66,68,69,72,73,78,86,105,116,119,128,130,131,132,133,134,135,136,137,138,139,153,167,168,169,170,171,172,173,174,175,178,180,188,189,190,191,192,193,194,195,198,205,240,241,246,256,257,260,262,286,306,309,316,335,336,339,352,353,379,380,397,455,487,],[-78,-74,-74,114,-74,-74,-74,114,-78,114,-74,-74,-77,-74,-74,-73,-74,-74,-94,-95,-96,-97,-98,-99,-100,-74,-74,-74,-129,-130,-131,-132,-133,-134,-135,-76,-74,-74,-74,-157,-158,-159,-160,-161,-162,-78,114,-74,114,-74,-74,-73,-74,-74,-74,-77,-78,-74,-74,-74,-74,-74,-74,114,-127,-74,-74,-74,]),'equal':([32,51,65,73,101,113,114,116,130,168,176,177,178,221,222,241,242,266,290,312,335,379,420,422,453,463,483,],[-78,105,-102,-78,153,168,-74,-77,-73,-74,-101,243,-76,105,271,-102,291,311,335,353,-74,-102,335,243,-136,271,485,]),'plus_equal':([32,65,73,113,114,116,130,176,178,],[-78,-102,-78,169,-74,-77,-73,-101,-76,]),'minus_equal':([32,65,73,113,114,116,130,176,178,],[-78,-102,-78,170,-74,-77,-73,-101,-76,]),'times_equal':([32,65,73,113,114,116,130,176,178,],[-78,-102,-78,171,-74,-77,-73,-101,-76,]),'divide_equal':([32,65,73,113,114,116,130,176,178,],[-78,-102,-78,172,-74,-77,-73,-101,-76,]),'divide_divide_equal':([32,65,73,113,114,116,130,176,178,],[-78,-102,-78,173,-74,-77,-73,-101,-76,]),'modulo_equal':([32,65,73,113,114,116,130,176,178,],[-78,-102,-78,174,-74,-77,-73,-101,-76,]),'times_times_equal':([32,65,73,113,114,116,130,176,178,],[-78,-102,-78,175,-74,-77,-73,-101,-76,]),'open_par':([34,35,41,55,66,68,69,71,86,105,109,119,123,128,131,132,133,134,135,136,137,138,139,153,167,168,169,170,171,172,173,174,175,180,182,188,189,190,191,192,193,194,195,240,246,256,260,262,286,294,295,296,316,335,336,339,352,353,380,397,428,455,487,],[68,69,86,110,86,119,119,128,86,86,159,180,188,86,86,86,-94,-95,-96,-97,-98,-99,-100,86,86,86,-129,-130,-131,-132,-133,-134,-135,180,246,119,86,-157,-158,-159,-160,-161,-162,86,119,86,86,86,86,339,-168,-169,86,-128,86,119,86,86,-127,86,455,119,86,]),'lit_str':([41,68,69,105,119,128,153,168,180,188,189,190,191,192,193,194,195,240,246,255,260,262,286,316,335,336,339,352,353,380,397,455,487,],[76,76,76,76,76,203,76,-128,76,76,76,-157,-158,-159,-160,-161,-162,76,76,303,203,203,76,76,-128,76,76,76,76,-127,76,76,76,]),'lit_bool':([41,68,69,105,119,128,153,168,180,188,189,190,191,192,193,194,195,240,246,260,262,286,316,335,336,339,352,353,380,397,455,487,],[77,124,124,77,185,204,77,-128,185,251,77,-157,-158,-159,-160,-161,-162,77,185,204,204,77,77,-128,77,185,77,77,-127,77,124,77,]),'plus':([41,66,68,69,73,75,78,79,80,81,82,83,84,85,86,105,114,115,116,117,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,153,167,168,169,170,171,172,173,174,175,176,178,180,186,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,214,237,239,240,241,246,256,257,258,260,262,286,290,306,309,316,335,336,339,352,353,380,397,455,487,],[-68,-68,-68,-68,-78,133,-102,-65,-66,-67,-83,-84,-85,-86,-68,-68,-74,-83,-77,133,-68,-68,-73,-68,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,133,-68,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-68,133,-68,-68,-157,-158,-159,-160,-161,-162,-78,-66,-67,-83,-84,-85,-86,133,-92,133,133,-68,-102,-68,-68,-73,-191,-68,-68,-68,-64,-77,-78,-68,-128,-68,-68,-68,-68,-127,-68,-68,-68,]),'minus':([41,66,68,69,73,75,78,79,80,81,82,83,84,85,86,105,114,115,116,117,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,153,167,168,169,170,171,172,173,174,175,176,178,180,186,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,214,237,239,240,241,246,256,257,258,260,262,286,290,306,309,316,335,336,339,352,353,380,397,455,487,],[-68,-68,-68,-68,-78,134,-102,-65,-66,-67,-83,-84,-85,-86,-68,-68,-74,-83,-77,134,-68,-68,-73,-68,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,134,-68,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-68,134,-68,-68,-157,-158,-159,-160,-161,-162,-78,-66,-67,-83,-84,-85,-86,134,-92,134,134,-68,-102,-68,-68,-73,-191,-68,-68,-68,-64,-77,-78,-68,-128,-68,-68,-68,-68,-127,-68,-68,-68,]),'times':([41,66,68,69,73,75,78,79,80,81,82,83,84,85,86,105,114,115,116,117,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,153,167,168,169,170,171,172,173,174,175,176,178,180,186,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,214,237,239,240,241,246,256,257,258,260,262,286,290,306,309,316,335,336,339,352,353,380,397,455,487,],[-68,-68,-68,-68,-78,135,-102,-65,-66,-67,-83,-84,-85,-86,-68,-68,-74,-83,-77,135,-68,-68,-73,-68,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,135,-68,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-68,135,-68,-68,-157,-158,-159,-160,-161,-162,-78,-66,-67,-83,-84,-85,-86,135,-92,135,135,-68,-102,-68,-68,-73,-191,-68,-68,-68,-64,-77,-78,-68,-128,-68,-68,-68,-68,-127,-68,-68,-68,]),'divide':([41,66,68,69,73,75,78,79,80,81,82,83,84,85,86,105,114,115,116,117,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,153,167,168,169,170,171,172,173,174,175,176,178,180,186,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,214,237,239,240,241,246,256,257,258,260,262,286,290,306,309,316,335,336,339,352,353,380,397,455,487,],[-68,-68,-68,-68,-78,136,-102,-65,-66,-67,-83,-84,-85,-86,-68,-68,-74,-83,-77,136,-68,-68,-73,-68,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,136,-68,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-68,136,-68,-68,-157,-158,-159,-160,-161,-162,-78,-66,-67,-83,-84,-85,-86,136,-92,136,136,-68,-102,-68,-68,-73,-191,-68,-68,-68,-64,-77,-78,-68,-128,-68,-68,-68,-68,-127,-68,-68,-68,]),'divide_divide':([41,66,68,69,73,75,78,79,80,81,82,83,84,85,86,105,114,115,116,117,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,153,167,168,169,170,171,172,173,174,175,176,178,180,186,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,214,237,239,240,241,246,256,257,258,260,262,286,290,306,309,316,335,336,339,352,353,380,397,455,487,],[-68,-68,-68,-68,-78,137,-102,-65,-66,-67,-83,-84,-85,-86,-68,-68,-74,-83,-77,137,-68,-68,-73,-68,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,137,-68,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-68,137,-68,-68,-157,-158,-159,-160,-161,-162,-78,-66,-67,-83,-84,-85,-86,137,-92,137,137,-68,-102,-68,-68,-73,-191,-68,-68,-68,-64,-77,-78,-68,-128,-68,-68,-68,-68,-127,-68,-68,-68,]),'modulo':([41,66,68,69,73,75,78,79,80,81,82,83,84,85,86,105,114,115,116,117,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,153,167,168,169,170,171,172,173,174,175,176,178,180,186,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,214,237,239,240,241,246,256,257,258,260,262,286,290,306,309,316,335,336,339,352,353,380,397,455,487,],[-68,-68,-68,-68,-78,138,-102,-65,-66,-67,-83,-84,-85,-86,-68,-68,-74,-83,-77,138,-68,-68,-73,-68,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,138,-68,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-68,138,-68,-68,-157,-158,-159,-160,-161,-162,-78,-66,-67,-83,-84,-85,-86,138,-92,138,138,-68,-102,-68,-68,-73,-191,-68,-68,-68,-64,-77,-78,-68,-128,-68,-68,-68,-68,-127,-68,-68,-68,]),'times_times':([41,66,68,69,73,75,78,79,80,81,82,83,84,85,86,105,114,115,116,117,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,153,167,168,169,170,171,172,173,174,175,176,178,180,186,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,214,237,239,240,241,246,256,257,258,260,262,286,290,306,309,316,335,336,339,352,353,380,397,455,487,],[-68,-68,-68,-68,-78,139,-102,-65,-66,-67,-83,-84,-85,-86,-68,-68,-74,-83,-77,139,-68,-68,-73,-68,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,139,-68,-68,-68,-129,-130,-131,-132,-133,-134,-135,-101,-76,-68,139,-68,-68,-157,-158,-159,-160,-161,-162,-78,-66,-67,-83,-84,-85,-86,139,-92,139,139,-68,-102,-68,-68,-73,-191,-68,-68,-68,-64,-77,-78,-68,-128,-68,-68,-68,-68,-127,-68,-68,-68,]),'lit_intposi':([41,66,68,69,86,98,104,105,119,128,131,132,133,134,135,136,137,138,139,152,153,167,168,169,170,171,172,173,174,175,180,188,189,190,191,192,193,194,195,240,246,255,256,260,262,286,316,335,336,337,339,351,352,353,380,394,397,455,477,487,],[82,115,82,82,82,149,156,82,82,209,82,82,-94,-95,-96,-97,-98,-99,-100,219,82,82,82,-129,-130,-131,-132,-133,-134,-135,82,82,82,-157,-158,-159,-160,-161,-162,82,82,304,82,209,209,82,82,-128,82,382,82,391,82,82,-127,435,82,82,481,82,]),'lit_intnega':([41,66,68,69,86,105,119,128,131,132,133,134,135,136,137,138,139,153,167,168,169,170,171,172,173,174,175,180,188,189,190,191,192,193,194,195,240,246,255,256,260,262,286,316,335,336,339,352,353,380,397,455,487,],[83,83,83,83,83,83,83,210,83,83,-94,-95,-96,-97,-98,-99,-100,83,83,83,-129,-130,-131,-132,-133,-134,-135,83,83,83,-157,-158,-159,-160,-161,-162,83,83,305,83,210,210,83,83,-128,83,83,83,83,-127,83,83,83,]),'lit_decposi':([41,66,68,69,86,105,119,128,131,132,133,134,135,136,137,138,139,153,167,168,169,170,171,172,173,174,175,180,188,189,190,191,192,193,194,195,240,246,256,260,262,286,316,335,336,339,352,353,380,397,455,487,],[84,84,84,84,84,84,84,211,84,84,-94,-95,-96,-97,-98,-99,-100,84,84,84,-129,-130,-131,-132,-133,-134,-135,84,84,84,-157,-158,-159,-160,-161,-162,84,84,84,211,211,84,84,-128,84,84,84,84,-127,84,84,84,]),'lit_decnega':([41,66,68,69,86,105,119,128,131,132,133,134,135,136,137,138,139,153,167,168,169,170,171,172,173,174,175,180,188,189,190,191,192,193,194,195,240,246,256,260,262,286,316,335,336,339,352,353,380,397,455,487,],[85,85,85,85,85,85,85,212,85,85,-94,-95,-96,-97,-98,-99,-100,85,85,85,-129,-130,-131,-132,-133,-134,-135,85,85,85,-157,-158,-159,-160,-161,-162,85,85,85,212,212,85,85,-128,85,85,85,85,-127,85,85,85,]),'close_par':([55,73,75,76,77,78,79,80,81,82,83,84,85,109,110,111,114,116,120,121,122,124,126,128,130,132,133,134,135,136,137,138,139,140,141,159,160,161,165,176,178,181,183,184,185,189,190,191,192,193,194,195,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,224,235,248,249,250,251,252,257,258,259,260,261,263,297,299,306,307,308,309,334,340,350,378,384,424,470,],[-230,-78,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-230,-230,162,-74,-77,187,-149,-150,-152,196,-194,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,214,-230,226,229,-232,-101,-76,245,-165,-166,-167,-60,-157,-158,-159,-160,-161,-162,-78,258,-196,-108,-61,-62,-63,-102,-70,-71,-72,-88,-89,-90,-91,-93,-92,272,-229,299,-153,-154,-155,-156,-75,-191,-193,-194,-106,-69,340,-151,-77,-195,-107,-78,-232,-164,-192,-231,424,-163,475,]),'close_brace':([66,73,75,76,77,78,79,80,81,82,83,84,85,114,115,116,117,130,131,132,133,134,135,136,137,138,139,140,149,156,176,178,213,214,219,244,256,258,316,336,352,355,356,381,382,391,392,396,397,435,437,481,487,489,],[116,-78,-57,-58,-59,-102,-65,-66,-67,-83,-84,-85,-86,-74,177,-77,178,-73,116,-68,-94,-95,-96,-97,-98,-99,-100,-64,217,222,-101,-76,-93,-92,266,293,306,-191,-60,-60,-60,395,-105,421,422,432,433,-103,-60,463,-104,483,-60,490,]),'In':([67,],[118,]),'Not':([68,69,119,180,246,339,455,],[123,123,182,182,182,182,123,]),'greater_than':([68,69,73,75,76,78,79,80,81,82,83,84,85,114,116,119,124,125,130,132,133,134,135,136,137,138,139,140,141,176,178,180,185,186,188,213,214,246,251,258,339,455,],[-60,-60,-78,-57,-58,-102,-65,-66,-67,-83,-84,-85,-86,-74,-77,-60,-59,190,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,-101,-76,-60,-59,-57,-60,-93,-92,-60,-59,-191,-60,-60,]),'less_than':([68,69,73,75,76,78,79,80,81,82,83,84,85,114,116,119,124,125,130,132,133,134,135,136,137,138,139,140,141,176,178,180,185,186,188,213,214,246,251,258,339,455,],[-60,-60,-78,-57,-58,-102,-65,-66,-67,-83,-84,-85,-86,-74,-77,-60,-59,191,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,-101,-76,-60,-59,-57,-60,-93,-92,-60,-59,-191,-60,-60,]),'equal_equal':([68,69,73,75,76,78,79,80,81,82,83,84,85,114,116,119,124,125,130,132,133,134,135,136,137,138,139,140,141,176,178,180,185,186,188,213,214,246,251,258,339,455,],[-60,-60,-78,-57,-58,-102,-65,-66,-67,-83,-84,-85,-86,-74,-77,-60,-59,192,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,-101,-76,-60,-59,-57,-60,-93,-92,-60,-59,-191,-60,-60,]),'not_equal':([68,69,73,75,76,78,79,80,81,82,83,84,85,114,116,119,124,125,130,132,133,134,135,136,137,138,139,140,141,176,178,180,185,186,188,213,214,246,251,258,339,455,],[-60,-60,-78,-57,-58,-102,-65,-66,-67,-83,-84,-85,-86,-74,-77,-60,-59,193,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,-101,-76,-60,-59,-57,-60,-93,-92,-60,-59,-191,-60,-60,]),'great_than_equal':([68,69,73,75,76,78,79,80,81,82,83,84,85,114,116,119,124,125,130,132,133,134,135,136,137,138,139,140,141,176,178,180,185,186,188,213,214,246,251,258,339,455,],[-60,-60,-78,-57,-58,-102,-65,-66,-67,-83,-84,-85,-86,-74,-77,-60,-59,194,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,-101,-76,-60,-59,-57,-60,-93,-92,-60,-59,-191,-60,-60,]),'less_than_equal':([68,69,73,75,76,78,79,80,81,82,83,84,85,114,116,119,124,125,130,132,133,134,135,136,137,138,139,140,141,176,178,180,185,186,188,213,214,246,251,258,339,455,],[-60,-60,-78,-57,-58,-102,-65,-66,-67,-83,-84,-85,-86,-74,-77,-60,-59,195,-73,-68,-94,-95,-96,-97,-98,-99,-100,-64,-66,-101,-76,-60,-59,-57,-60,-93,-92,-60,-59,-191,-60,-60,]),'colon':([70,187,196,293,301,302,303,304,305,429,475,],[127,247,253,338,348,349,-182,-183,-184,456,479,]),'Execute':([197,431,],[255,255,]),'And':([245,],[295,]),'Or':([245,],[296,]),'Default':([254,431,458,459,],[301,-186,-181,-185,]),'Elif':([388,486,],[428,428,]),'Else':([388,486,],[429,429,]),'End_Switch':([430,],[457,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,9,10,]),'declare_statements':([0,2,3,4,7,19,111,160,161,162,164,224,226,227,229,230,232,272,273,277,281,317,],[3,8,3,3,22,48,163,225,228,231,234,274,276,278,280,282,284,318,319,323,327,357,]),'struct_dec':([0,3,4,],[4,4,4,]),'struct_element1':([5,11,12,42,46,],[13,43,44,87,95,]),'data_type':([5,6,11,12,20,42,46,55,109,110,159,236,],[14,21,14,14,49,14,14,112,112,112,112,288,]),'const_var_dec':([6,],[19,]),'statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[23,52,56,57,58,59,60,61,62,63,233,275,279,283,287,320,322,324,326,328,330,342,342,358,359,364,369,375,387,342,390,398,342,342,342,]),'assignment_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_statement':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'switch_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'conditional_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'io_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'func_call':([8,22,24,25,26,27,28,29,30,31,41,66,68,69,86,105,119,128,131,132,153,163,167,168,180,188,189,225,228,231,234,240,246,256,260,262,274,276,278,280,282,284,286,298,300,316,318,319,323,327,332,336,339,343,348,349,352,353,357,383,397,455,471,482,487,],[31,31,31,31,31,31,31,31,31,31,81,81,81,81,81,81,81,208,81,81,81,31,81,81,81,81,81,31,31,31,31,81,81,81,208,208,31,31,31,31,31,31,81,31,31,81,31,31,31,31,31,81,81,31,31,31,81,81,31,31,81,81,31,31,81,]),'input_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'output_statements':([8,22,24,25,26,27,28,29,30,31,163,225,228,231,234,274,276,278,280,282,284,298,300,318,319,323,327,332,343,348,349,357,383,471,482,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'id_array_dec':([14,],[46,]),'id_array_var':([21,],[50,]),'functions':([23,52,53,106,321,325,329,331,333,360,362,363,365,367,368,370,372,373,377,399,400,402,405,406,408,411,412,414,417,438,440,442,446,450,464,],[54,107,108,158,361,366,371,374,376,401,403,404,407,409,410,413,415,416,419,439,441,443,444,445,447,448,449,451,452,465,466,467,468,469,474,]),'assignment_statements2':([32,],[64,]),'array':([32,73,198,309,],[65,130,257,257,]),'id_array':([40,41,43,44,45,66,68,69,86,87,89,92,105,114,119,128,131,132,143,147,153,167,168,180,188,189,240,246,256,260,262,286,316,335,336,339,352,353,397,455,487,],[72,78,90,90,90,78,78,78,78,90,90,90,78,176,78,78,78,78,90,90,78,78,241,78,78,78,78,78,78,78,78,78,78,379,78,78,78,78,78,78,78,]),'value':([41,68,69,105,119,153,180,188,189,240,246,286,316,336,339,352,353,397,455,487,],[74,125,125,157,125,220,125,125,252,289,125,332,356,356,125,356,393,356,125,356,]),'num_value':([41,66,68,69,86,105,119,128,131,132,153,167,168,180,188,189,240,246,256,260,262,286,316,336,339,352,353,397,455,487,],[75,117,75,75,142,75,186,142,117,213,75,237,239,186,75,75,75,75,117,142,142,75,75,75,75,75,75,75,75,75,]),'literals':([41,66,68,69,86,105,119,128,131,132,153,167,168,180,188,189,240,246,256,260,262,286,316,336,339,352,353,397,455,487,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'arithmetic_expression':([41,66,68,69,86,105,119,128,131,132,153,167,168,180,188,189,240,246,256,260,262,286,316,336,339,352,353,397,455,487,],[80,80,80,80,141,80,141,207,80,80,80,80,80,141,80,80,80,80,80,207,207,80,80,80,80,80,80,80,80,80,]),'id_array1':([43,44,45,87,89,92,143,147,],[88,91,93,144,145,148,215,216,]),'struct_element2':([46,],[94,]),'id_array_dec2':([47,],[96,]),'id_dec1':([47,150,],[97,218,]),'id_array_const':([49,],[100,]),'id_array_var2':([51,],[102,]),'var_init':([51,221,],[103,269,]),'parameters':([55,109,110,159,],[111,160,161,224,]),'id_struct':([65,72,78,205,241,379,],[113,129,140,263,290,420,]),'condition':([68,69,455,],[120,126,470,]),'relational_expression':([68,69,119,180,188,246,339,455,],[121,121,183,183,249,183,183,121,]),'logical_expression':([68,69,119,180,188,246,339,455,],[122,122,184,184,250,184,184,122,]),'arithmetic_operators':([75,117,142,186,213,237,239,],[132,132,132,132,132,132,132,]),'id_array2':([90,],[146,]),'id_array_const2':([101,],[151,]),'id_var1':([103,157,269,],[154,223,313,]),'assignment_exp':([113,],[166,]),'assignment_operators':([113,],[167,]),'logical_operand':([119,180,246,339,],[181,181,297,384,]),'relational_operators':([125,],[189,]),'function_param':([128,260,],[199,307,]),'value1_opt':([128,260,262,],[200,200,308,]),'value_opt':([128,260,262,],[201,201,201,]),'num_value_opt':([128,260,262,],[202,202,202,]),'id_array_opt':([128,260,262,],[205,205,205,]),'literals_opt':([128,260,262,],[206,206,206,]),'more_parameters':([165,334,],[235,378,]),'assign_value':([168,],[238,]),'more_id':([168,335,],[240,380,]),'more_array':([177,422,],[242,453,]),'condition_not':([188,],[248,]),'execute':([197,431,],[254,459,]),'more_param':([200,306,],[259,350,]),'value2_opt':([201,],[261,]),'array_dec1':([217,432,],[264,460,]),'id_const1':([220,393,],[267,434,]),'array_init':([222,463,],[270,473,]),'return_statement':([233,275,279,283,287,320,322,324,326,328,330,358,359,364,369,375,398,],[285,321,325,329,333,360,363,365,368,370,373,399,400,406,412,418,438,]),'logical_operators':([245,],[294,]),'switch_lit':([255,],[302,]),'array_var1':([270,395,473,],[314,436,478,]),'inside_statements':([298,300,348,383,471,482,],[341,347,389,423,476,484,]),'control_statements':([298,300,342,348,383,471,482,],[343,343,386,343,343,343,343,]),'value1':([316,336,352,397,487,],[355,381,392,437,489,]),'value2':([356,],[396,]),'condition_else':([388,486,],[425,488,]),'elif_statement':([388,486,],[426,426,]),'else_statement':([388,486,],[427,427,]),'execute1':([431,],[458,]),'array_const1':([433,490,],[461,491,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',55),
  ('program -> global_dec Link_Start declare_statements statements functions','program',5,'p_program','syntax_analyze.py',56),
  ('program -> global_dec declare_statements statements Link_End functions','program',5,'p_program','syntax_analyze.py',57),
  ('program -> global_dec declare_statements statements functions','program',4,'p_program','syntax_analyze.py',58),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',74),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',75),
  ('global_dec -> <empty>','global_dec',0,'p_global_dec','syntax_analyze.py',76),
  ('struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1','struct_dec',6,'p_struct_dec','syntax_analyze.py',85),
  ('struct_dec -> Struct id struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',86),
  ('struct_dec -> Struct open_bracket struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',87),
  ('struct_dec -> Struct struct_element1 close_bracket id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',88),
  ('struct_dec -> Struct id open_bracket struct_element1 id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',89),
  ('struct_dec -> Struct id struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',90),
  ('struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',91),
  ('struct_dec -> <empty>','struct_dec',0,'p_struct_dec','syntax_analyze.py',92),
  ('struct_element1 -> data_type id_array_dec struct_element2','struct_element1',3,'p_struct_element1','syntax_analyze.py',109),
  ('struct_element2 -> struct_element1','struct_element2',1,'p_struct_element2','syntax_analyze.py',115),
  ('struct_element2 -> <empty>','struct_element2',0,'p_struct_element2','syntax_analyze.py',116),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',123),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',124),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',125),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',126),
  ('data_type -> <empty>','data_type',0,'p_data_type_error','syntax_analyze.py',131),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',137),
  ('id_array_dec -> <empty>','id_array_dec',0,'p_id_array_dec','syntax_analyze.py',138),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',148),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2_more','syntax_analyze.py',153),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',162),
  ('id_dec1 -> <empty>','id_dec1',0,'p_id_dec1','syntax_analyze.py',163),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',173),
  ('array_dec1 -> <empty>','array_dec1',0,'p_array_dec1','syntax_analyze.py',174),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',197),
  ('declare_statements -> <empty>','declare_statements',0,'p_declare_statements','syntax_analyze.py',198),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',208),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec_more','syntax_analyze.py',215),
  ('const_var_dec -> <empty>','const_var_dec',0,'p_const_var_dec_error','syntax_analyze.py',221),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',226),
  ('id_array_const -> <empty>','id_array_const',0,'p_id_array_const','syntax_analyze.py',227),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',237),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2_more','syntax_analyze.py',249),
  ('id_array_const2 -> <empty>','id_array_const2',0,'p_id_array_const2_error','syntax_analyze.py',256),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',261),
  ('id_const1 -> <empty>','id_const1',0,'p_id_const1','syntax_analyze.py',262),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',274),
  ('array_const1 -> <empty>','array_const1',0,'p_array_const1','syntax_analyze.py',275),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',292),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',298),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2_more','syntax_analyze.py',304),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',314),
  ('var_init -> <empty>','var_init',0,'p_var_init','syntax_analyze.py',315),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',325),
  ('id_var1 -> <empty>','id_var1',0,'p_id_var1','syntax_analyze.py',326),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',337),
  ('array_init -> <empty>','array_init',0,'p_array_init','syntax_analyze.py',338),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',350),
  ('array_var1 -> <empty>','array_var1',0,'p_array_var1','syntax_analyze.py',351),
  ('value -> num_value','value',1,'p_value','syntax_analyze.py',365),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',366),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',367),
  ('value -> <empty>','value',0,'p_value','syntax_analyze.py',368),
  ('value_opt -> num_value_opt','value_opt',1,'p_value_opt','syntax_analyze.py',377),
  ('value_opt -> lit_str','value_opt',1,'p_value_opt','syntax_analyze.py',378),
  ('value_opt -> lit_bool','value_opt',1,'p_value_opt','syntax_analyze.py',379),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',384),
  ('num_value -> literals','num_value',1,'p_num_value_more','syntax_analyze.py',391),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value_more','syntax_analyze.py',392),
  ('num_value -> func_call','num_value',1,'p_num_value_more','syntax_analyze.py',393),
  ('num_value -> <empty>','num_value',0,'p_num_value_error','syntax_analyze.py',398),
  ('num_value_opt -> id_array_opt id_struct','num_value_opt',2,'p_num_value_opt','syntax_analyze.py',403),
  ('num_value_opt -> literals_opt','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',410),
  ('num_value_opt -> arithmetic_expression','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',411),
  ('num_value_opt -> func_call','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',412),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',419),
  ('id_array -> <empty>','id_array',0,'p_id_array','syntax_analyze.py',420),
  ('id_array_opt -> id array','id_array_opt',2,'p_id_array_opt','syntax_analyze.py',430),
  ('array -> open_brace num_value close_brace','array',3,'p_array','syntax_analyze.py',436),
  ('array -> open_brace close_brace','array',2,'p_array_more','syntax_analyze.py',443),
  ('array -> <empty>','array',0,'p_array_none','syntax_analyze.py',449),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',453),
  ('id_array1 -> <empty>','id_array1',0,'p_id_array1','syntax_analyze.py',454),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',464),
  ('id_array2 -> <empty>','id_array2',0,'p_id_array2','syntax_analyze.py',465),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',474),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',475),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',476),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',477),
  ('literals -> <empty>','literals',0,'p_literals','syntax_analyze.py',478),
  ('literals_opt -> lit_intposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',487),
  ('literals_opt -> lit_intnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',488),
  ('literals_opt -> lit_decposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',489),
  ('literals_opt -> lit_decnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',490),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',495),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',502),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',510),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',511),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',512),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',513),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',514),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',515),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',516),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',521),
  ('id_struct -> <empty>','id_struct',0,'p_id_struct','syntax_analyze.py',522),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',532),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',538),
  ('value2 -> <empty>','value2',0,'p_value2','syntax_analyze.py',539),
  ('value1_opt -> value_opt value2_opt','value1_opt',2,'p_value1_opt','syntax_analyze.py',549),
  ('value2_opt -> comma value1_opt','value2_opt',2,'p_value2_opt','syntax_analyze.py',555),
  ('value2_opt -> <empty>','value2_opt',0,'p_value2_opt','syntax_analyze.py',556),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',565),
  ('statements -> for_statements statements','statements',2,'p_statements','syntax_analyze.py',566),
  ('statements -> while_statements statements','statements',2,'p_statements','syntax_analyze.py',567),
  ('statements -> if_statement statements','statements',2,'p_statements','syntax_analyze.py',568),
  ('statements -> switch_statements statements','statements',2,'p_statements','syntax_analyze.py',569),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',570),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',571),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',572),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyze.py',573),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',582),
  ('assignment_statements -> <empty>','assignment_statements',0,'p_assignment_statements','syntax_analyze.py',583),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',593),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',600),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',612),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',618),
  ('assignment_exp -> <empty>','assignment_exp',0,'p_assignment_exp_error','syntax_analyze.py',624),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',629),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value_more','syntax_analyze.py',634),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',640),
  ('more_id -> <empty>','more_id',0,'p_more_id','syntax_analyze.py',641),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',652),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',653),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',654),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',655),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',656),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',657),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',658),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',663),
  ('more_array -> <empty>','more_array',0,'p_more_array','syntax_analyze.py',664),
  ('for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket','for_statements',10,'p_for_statements','syntax_analyze.py',683),
  ('for_statements -> <empty>','for_statements',0,'p_for_statements','syntax_analyze.py',684),
  ('while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket','while_statements',8,'p_while_statements','syntax_analyze.py',702),
  ('while_statements -> <empty>','while_statements',0,'p_while_statements','syntax_analyze.py',703),
  ('inside_statements -> statements control_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',719),
  ('inside_statements -> control_statements statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',720),
  ('inside_statements -> <empty>','inside_statements',0,'p_inside_statements','syntax_analyze.py',721),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',730),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',731),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',732),
  ('control_statements -> <empty>','control_statements',0,'p_control_statements','syntax_analyze.py',733),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',741),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',742),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition_more','syntax_analyze.py',747),
  ('condition -> lit_bool','condition',1,'p_condition_more1','syntax_analyze.py',759),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',764),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',765),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',770),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',775),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',782),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',783),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',784),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',785),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',786),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',787),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',792),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',803),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',811),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',812),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more1','syntax_analyze.py',817),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',822),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',823),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',828),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',829),
  ('if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','if_statement',9,'p_if_statement','syntax_analyze.py',834),
  ('if_statement -> <empty>','if_statement',0,'p_if_statement','syntax_analyze.py',835),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',851),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',852),
  ('condition_else -> <empty>','condition_else',0,'p_condition_else_empty','syntax_analyze.py',857),
  ('elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','elif_statement',9,'p_elif_statement','syntax_analyze.py',861),
  ('else_statement -> Else colon open_bracket inside_statements close_bracket','else_statement',5,'p_else_statement','syntax_analyze.py',874),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','syntax_analyze.py',875),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',888),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',902),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',912),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',913),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',914),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',919),
  ('execute1 -> <empty>','execute1',0,'p_execute1_more','syntax_analyze.py',924),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',929),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',930),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',935),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',942),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',949),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',958),
  ('function_param -> value1_opt more_param','function_param',2,'p_function_param_more','syntax_analyze.py',966),
  ('function_param -> <empty>','function_param',0,'p_function_param_none','syntax_analyze.py',972),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',976),
  ('more_param -> <empty>','more_param',0,'p_more_param','syntax_analyze.py',977),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',11,'p_functions','syntax_analyze.py',986),
  ('functions -> Sys id parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',987),
  ('functions -> Sys open_par parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',988),
  ('functions -> Sys parameters close_par declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',989),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',990),
  ('functions -> Sys parameters declare_statements statements return_statement close_bracket functions','functions',7,'p_functions','syntax_analyze.py',991),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',992),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',993),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',994),
  ('functions -> Sys id parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',995),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',996),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',997),
  ('functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',998),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',999),
  ('functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1000),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1001),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1002),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1003),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1004),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1005),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1006),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1007),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1008),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1009),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1010),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1011),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',10,'p_functions','syntax_analyze.py',1012),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1013),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1014),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1015),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1016),
  ('functions -> <empty>','functions',0,'p_functions','syntax_analyze.py',1017),
  ('parameters -> data_type id more_parameters','parameters',3,'p_parameters','syntax_analyze.py',1039),
  ('parameters -> <empty>','parameters',0,'p_parameters_none','syntax_analyze.py',1046),
  ('more_parameters -> comma data_type id more_parameters','more_parameters',4,'p_more_parameters','syntax_analyze.py',1050),
  ('more_parameters -> <empty>','more_parameters',0,'p_more_parameters','syntax_analyze.py',1051),
  ('return_statement -> Return value statements return_statement','return_statement',4,'p_return_statement','syntax_analyze.py',1062),
  ('return_statement -> <empty>','return_statement',0,'p_return_statement','syntax_analyze.py',1063),
]
