
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functions\n                | global_dec Link_Start declare_statements statements functions\n                | global_dec declare_statements statements Link_End functions\n                | global_dec declare_statements statements functions global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | struct_dec : Struct id open_bracket struct_element1 close_bracket id_array1\n                    | Struct id struct_element1 id_array1\n                    | Struct open_bracket struct_element1 id_array1\n                    | Struct struct_element1 close_bracket id_array1\n                    | Struct id open_bracket struct_element1 id_array1\n                    | Struct id struct_element1 close_bracket id_array1\n                    | Struct open_bracket struct_element1 close_bracket id_array1\n                    | struct_element1 : data_type id_array_dec struct_element2 struct_element2 : struct_element1\n                        | data_type : Integer\n                | Decimal\n                | String\n                | Boolean data_type : id_array_dec : id id_array_dec2\n                    | id_array_dec2 : id_dec1 id_array_dec2 : open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | declare_statements : Generate const_var_dec declare_statements\n                            | const_var_dec : Fixed data_type id_array_const const_var_dec : data_type id_array_var const_var_dec : id_array_const : id id_array_const2\n                        | id_array_const2 : open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 id_array_const2 : equal value id_const1 id_array_const2 : id_const1 : comma id equal value id_const1 \n                | array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | id_array_var : id id_array_var2\n                    | id_array_var2 : var_init id_var1 id_array_var2 : open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | id_var1 : comma id var_init id_var1\n                | array_init : equal open_brace value1 close_brace array_var1 \n                | array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | value : num_value\n            | lit_str\n            | lit_bool\n            | value_opt : num_value_opt\n            | lit_str\n            | lit_bool num_value : id_array id_struct num_value : literals \n                | arithmetic_expression\n                | func_call num_value : num_value_opt : id_array_opt id_struct num_value_opt : literals_opt\n                | arithmetic_expression\n                | func_call id_array : id array\n                | id_array_opt : id array array : open_brace num_value close_brace array : open_brace close_brace array :  id_array1 : id_array id_array2\n                | id_array1 : id_array id_array id_array2 : comma id_array1\n                |literals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnega\n                |literals_opt : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                |value1 : value value2value2 : comma value1 \n            |value1_opt : value_opt value2_optvalue2_opt : comma value1_opt \n            |statements : assignment_statements statements \n                | for_statements statements\n                | while_statements statements\n                | if_statement statements\n                | switch_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                |assignment_statements : id assignment_statements2\n                            |assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_statements2 :assignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassignment_exp :assign_value : num_valueassign_value : more_id valuemore_id : id_array id_struct equal more_id\n            |assignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                |block : open_bracket inside_statements close_bracket\n            | inside_statements close_bracket\n            | open_bracket inside_statements\n            | inside_statementsfor_statements : For id In id open_brace close_brace colon block\n                        | For id In id open_brace close_brace colon\n                        | For id In id open_brace close_brace block\n                        | For id In id open_brace colon block\n                        | For id In id close_brace colon block\n                        | For id In open_brace close_brace colon block\n                        | For id id open_brace close_brace colon block\n                        | For In id open_brace close_brace colon block\n                        | For id In id open_brace close_brace\n                        | For id In id open_brace colon\n                        | For id In id open_brace block\n                        | For id In id close_brace colon\n                        | For id In id close_brace block\n                        | For id In id colon block\n                        | For id In open_brace close_brace colon\n                        | For id In open_brace close_brace block\n                        | For id In open_brace colon block\n                        | For id In close_brace colon block\n                        | For id id open_brace close_brace colon\n                        | For id id open_brace close_brace block\n                        | For id id open_brace colon block\n                        | For id id close_brace colon block\n                        | For id open_brace close_brace colon block\n                        | For In id open_brace close_brace colon\n                        | For In id open_brace close_brace block\n                        | For In id open_brace colon block\n                        | For In id close_brace colon block\n                        | For In open_brace close_brace colon block\n                        | For id In id open_brace\n                        | For id In id close_brace\n                        | For id In id colon\n                        | For id In id block\n                        | For id In open_brace close_brace\n                        | For id In open_brace colon\n                        | For id In open_brace block\n                        | For id In close_brace colon\n                        | For id In close_brace block\n                        | For id In colon block\n                        | For id id open_brace close_brace\n                        | For id id open_brace colon\n                        | For id id open_brace block\n                        | For id id close_brace colon\n                        | For id id close_brace block\n                        | For id id colon block\n                        | For id open_brace close_brace colon\n                        | For id open_brace close_brace block\n                        | For id open_brace colon block\n                        | For id close_brace colon block\n                        | For In id open_brace close_brace\n                        | For In id open_brace colon\n                        | For In id open_brace block\n                        | For In id close_brace colon\n                        | For In id close_brace block\n                        | For In id colon block\n                        | For In open_brace close_brace colon\n                        | For In open_brace close_brace block\n                        | For In open_brace colon block\n                        | For open_brace close_brace colon block\n                        | For id In id\n                        | For id In open_brace\n                        | For id In close_brace\n                        | For id In colon\n                        | For id In block\n                        | For id id open_brace\n                        | For id id close_brace\n                        | For id id colon\n                        | For id id block\n                        | For id open_brace close_brace\n                        | For id open_brace colon\n                        | For id open_brace block\n                        | For id close_brace colon\n                        | For id close_brace block\n                        | For id colon block\n                        | For In id open_brace\n                        | For In id close_brace\n                        | For In id colon\n                        | For In id block\n                        | For In open_brace close_brace\n                        | For In open_brace colon\n                        | For In open_brace block\n                        | For In close_brace colon\n                        | For In close_brace block\n                        | For In colon block\n                        | For open_brace close_brace colon\n                        | For open_brace close_brace block\n                        | For open_brace colon block\n                        | For close_brace colon block\n                        | For id In\n                        | For id id\n                        | For id open_brace\n                        | For id close_brace\n                        | For id colon\n                        | For id block\n                        | For In id\n                        | For In open_brace\n                        | For In close_brace\n                        | For In colon\n                        | For In block\n                        | For open_brace close_brace\n                        | For open_brace colon\n                        | For open_brace block\n                        | For close_brace colon\n                        | For close_brace block\n                        | For colon block\n                        | For id\n                        | For In\n                        | For open_brace\n                        | For close_brace\n                        | For colon\n                        | For blockwhile_statements : While open_par condition close_par colon block\n                        | While open_par condition close_par block\n                        | While open_par condition colon block\n                        | While condition close_par colon block\n                        | While open_par condition block\n                        | While condition close_par block\n                        | While condition colon blockinside_statements : statements control_statements\n                        | control_statements statements\n                        |control_statements : Break\n                        | Continue\n                        | Avoid\n                        | condition   : relational_expression\n                    | logical_expression\n                    | lit_bool condition   : Not open_par condition_not close_par condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par logical_operand : relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon block condition_else condition_else  : elif_statement\n                        | else_statement condition_else  : elif_statement  : Elif open_par condition close_par colon block condition_else else_statement  : Else colon block\n                        | switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param function_param  : value1_opt more_param function_param : more_param  : comma function_param\n                    | functions   : Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement functions\n                    | Sys parameters open_bracket declare_statements statements return_statement functions\n                    | Sys parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | parameters  : data_type id more_parameters parameters  : more_parameters : comma data_type id more_parameters\n                        | return_statement    : Return value statements return_statement\n                            |'
    
_lr_action_items = {'Link_Start':([0,2,3,4,6,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,87,88,89,90,91,92,93,94,95,96,97,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,132,134,176,177,178,179,180,181,182,183,184,185,193,194,195,196,197,198,199,201,202,204,205,208,227,229,270,280,298,299,300,301,303,304,305,306,377,383,386,388,389,448,449,491,529,531,563,564,565,567,589,590,592,601,605,612,613,],[-7,7,-7,-7,-23,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-103,-77,-94,-95,-8,-83,-31,-28,-43,-51,-55,-50,-310,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'Generate':([0,2,3,4,6,7,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,55,87,88,89,90,91,92,93,94,95,96,97,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,132,134,176,177,178,179,180,181,182,183,184,185,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,215,216,227,229,270,280,298,299,300,301,303,304,305,306,307,309,310,312,313,315,318,377,383,386,388,389,391,392,396,400,448,449,452,469,491,516,529,531,563,564,565,567,589,590,592,601,605,612,613,],[6,6,6,6,-23,6,-6,-5,-23,-23,-25,-19,-20,-21,-22,6,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,6,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,6,6,6,6,-351,-103,-77,-94,-95,-8,-83,-31,-28,-43,-51,-55,-50,6,6,6,6,6,6,-348,-310,-27,-40,-53,-57,6,6,6,6,-52,-49,6,-351,-61,-350,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'id':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,127,128,129,130,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,193,194,195,196,197,198,199,201,202,204,205,206,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,271,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,370,371,372,375,377,379,381,383,384,386,387,388,389,391,392,393,395,396,397,399,400,401,403,405,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,448,449,450,451,452,453,454,458,462,467,469,470,471,473,474,475,476,477,478,479,481,482,483,486,487,490,491,495,516,518,521,522,523,524,529,531,533,557,560,563,564,565,567,586,589,590,591,592,599,601,603,605,606,610,612,613,],[-7,-33,-7,-7,11,-23,-33,32,-6,-5,-23,-23,47,-19,-20,-21,-22,-33,-23,51,32,32,32,32,32,32,32,32,32,-79,67,93,99,-306,-307,100,93,93,-23,93,93,93,-18,-29,-32,119,-35,-51,127,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,93,136,142,32,32,32,-254,32,-144,-268,32,-265,-266,-267,93,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,93,-104,-309,-60,93,93,-9,93,93,-10,93,-11,-16,-17,-24,-26,201,-34,-41,-46,-53,93,-23,-23,-33,216,-127,93,-78,32,234,239,32,32,-237,32,32,32,32,-242,32,32,-245,32,-247,-248,-143,-142,-262,-263,93,32,-269,-270,-271,32,32,93,93,-277,-278,-279,-280,-281,-282,93,-96,-97,-98,-99,-100,-101,-102,-65,-74,93,93,283,-308,93,-12,-13,-82,-80,93,-14,-29,-37,93,-48,304,-53,-23,-33,-33,-33,32,-33,-351,-122,93,93,-132,-133,-134,-135,-136,-137,-138,-103,-77,239,32,32,-211,32,32,32,32,-207,-79,32,32,-214,32,32,-216,-217,239,32,32,-221,32,32,-224,-225,-226,-227,32,-229,-230,-231,-141,32,32,-259,-94,93,32,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,32,-33,-33,32,-33,-33,32,-33,32,-348,-23,-125,-126,-128,93,-104,411,32,32,-185,32,-187,-188,239,32,32,-176,32,32,-179,32,-181,-182,-104,93,32,-190,-191,-192,32,32,-195,32,-197,-198,32,-200,-201,-202,93,32,-256,-257,-258,-272,32,93,-310,283,444,-27,445,-40,447,-53,-57,-33,-33,32,32,-33,32,32,-33,32,32,93,469,-129,-65,32,-164,-165,-166,32,32,-155,32,-157,-158,32,-160,-161,-162,-167,32,-169,-170,-171,-172,-255,93,-295,-52,-49,492,93,-33,32,32,32,32,32,-351,93,93,-151,32,-147,-148,-149,-150,-152,-292,-293,-294,32,32,93,93,32,-350,-130,-145,-283,93,32,-43,-57,93,-123,-297,-31,-45,-42,-54,-299,-30,-39,600,-55,32,-57,-295,-56,-296,93,-45,-44,]),'For':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,395,396,397,399,400,401,403,405,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,458,462,467,469,470,473,474,475,476,477,478,479,481,482,483,486,487,491,495,516,518,521,522,524,529,531,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,33,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,33,33,33,33,33,33,33,33,33,-79,33,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,33,33,33,33,33,-254,33,-144,-268,33,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,33,33,33,33,33,-237,33,33,33,33,-242,33,33,-245,33,-247,-248,-143,-142,-262,-263,33,-269,-270,-271,33,33,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,-33,-33,-33,33,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,33,33,33,-211,33,33,33,33,-207,-79,33,33,-214,33,33,-216,-217,33,33,33,-221,33,33,-224,-225,-226,-227,33,-229,-230,-231,-141,33,33,-259,-94,33,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,33,-33,-33,33,-33,-33,33,-33,33,-348,-125,-126,-128,-61,-104,33,33,-185,33,-187,-188,33,33,33,-176,33,33,-179,33,-181,-182,-104,33,-190,-191,-192,33,33,-195,33,-197,-198,33,-200,-201,-202,33,-256,-257,-258,-272,33,-310,-27,-40,-53,-57,-33,-33,33,33,-33,33,33,-33,33,33,-61,-129,-65,33,-164,-165,-166,33,33,-155,33,-157,-158,33,-160,-161,-162,-167,33,-169,-170,-171,-172,-255,-295,-52,-49,-33,33,33,33,33,33,-351,-131,-151,33,-147,-148,-149,-150,-152,-292,-293,-294,33,33,-61,33,-350,-130,-145,-283,33,-43,-57,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,33,-57,-295,-56,-296,-45,-44,]),'While':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,395,396,397,399,400,401,403,405,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,458,462,467,469,470,473,474,475,476,477,478,479,481,482,483,486,487,491,495,516,518,521,522,524,529,531,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,34,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,34,34,34,34,34,34,34,34,34,-79,34,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,34,34,34,34,34,-254,34,-144,-268,34,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,34,34,34,34,34,-237,34,34,34,34,-242,34,34,-245,34,-247,-248,-143,-142,-262,-263,34,-269,-270,-271,34,34,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,-33,-33,-33,34,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,34,34,34,-211,34,34,34,34,-207,-79,34,34,-214,34,34,-216,-217,34,34,34,-221,34,34,-224,-225,-226,-227,34,-229,-230,-231,-141,34,34,-259,-94,34,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,34,-33,-33,34,-33,-33,34,-33,34,-348,-125,-126,-128,-61,-104,34,34,-185,34,-187,-188,34,34,34,-176,34,34,-179,34,-181,-182,-104,34,-190,-191,-192,34,34,-195,34,-197,-198,34,-200,-201,-202,34,-256,-257,-258,-272,34,-310,-27,-40,-53,-57,-33,-33,34,34,-33,34,34,-33,34,34,-61,-129,-65,34,-164,-165,-166,34,34,-155,34,-157,-158,34,-160,-161,-162,-167,34,-169,-170,-171,-172,-255,-295,-52,-49,-33,34,34,34,34,34,-351,-131,-151,34,-147,-148,-149,-150,-152,-292,-293,-294,34,34,-61,34,-350,-130,-145,-283,34,-43,-57,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,34,-57,-295,-56,-296,-45,-44,]),'If':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,395,396,397,399,400,401,403,405,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,458,462,467,469,470,473,474,475,476,477,478,479,481,482,483,486,487,491,495,516,518,521,522,524,529,531,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,35,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,35,35,35,35,35,35,35,35,35,-79,35,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,35,35,35,35,35,-254,35,-144,-268,35,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,35,35,35,35,35,-237,35,35,35,35,-242,35,35,-245,35,-247,-248,-143,-142,-262,-263,35,-269,-270,-271,35,35,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,-33,-33,-33,35,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,35,35,35,-211,35,35,35,35,-207,-79,35,35,-214,35,35,-216,-217,35,35,35,-221,35,35,-224,-225,-226,-227,35,-229,-230,-231,-141,35,35,-259,-94,35,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,35,-33,-33,35,-33,-33,35,-33,35,-348,-125,-126,-128,-61,-104,35,35,-185,35,-187,-188,35,35,35,-176,35,35,-179,35,-181,-182,-104,35,-190,-191,-192,35,35,-195,35,-197,-198,35,-200,-201,-202,35,-256,-257,-258,-272,35,-310,-27,-40,-53,-57,-33,-33,35,35,-33,35,35,-33,35,35,-61,-129,-65,35,-164,-165,-166,35,35,-155,35,-157,-158,35,-160,-161,-162,-167,35,-169,-170,-171,-172,-255,-295,-52,-49,-33,35,35,35,35,35,-351,-131,-151,35,-147,-148,-149,-150,-152,-292,-293,-294,35,35,-61,35,-350,-130,-145,-283,35,-43,-57,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,35,-57,-295,-56,-296,-45,-44,]),'Switch':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,395,396,397,399,400,401,403,405,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,458,462,467,469,470,473,474,475,476,477,478,479,481,482,483,486,487,491,495,516,518,521,522,524,529,531,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,36,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,36,36,36,36,36,36,36,36,36,-79,36,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,36,36,36,36,36,-254,36,-144,-268,36,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,36,36,36,36,36,-237,36,36,36,36,-242,36,36,-245,36,-247,-248,-143,-142,-262,-263,36,-269,-270,-271,36,36,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,-33,-33,-33,36,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,36,36,36,-211,36,36,36,36,-207,-79,36,36,-214,36,36,-216,-217,36,36,36,-221,36,36,-224,-225,-226,-227,36,-229,-230,-231,-141,36,36,-259,-94,36,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,36,-33,-33,36,-33,-33,36,-33,36,-348,-125,-126,-128,-61,-104,36,36,-185,36,-187,-188,36,36,36,-176,36,36,-179,36,-181,-182,-104,36,-190,-191,-192,36,36,-195,36,-197,-198,36,-200,-201,-202,36,-256,-257,-258,-272,36,-310,-27,-40,-53,-57,-33,-33,36,36,-33,36,36,-33,36,36,-61,-129,-65,36,-164,-165,-166,36,36,-155,36,-157,-158,36,-160,-161,-162,-167,36,-169,-170,-171,-172,-255,-295,-52,-49,-33,36,36,36,36,36,-351,-131,-151,36,-147,-148,-149,-150,-152,-292,-293,-294,36,36,-61,36,-350,-130,-145,-283,36,-43,-57,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,36,-57,-295,-56,-296,-45,-44,]),'Sys_Call':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,271,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,370,371,372,375,377,379,381,383,386,388,389,391,392,393,395,396,397,399,400,401,403,405,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,448,449,451,452,453,454,458,462,467,469,470,471,473,474,475,476,477,478,479,481,482,483,486,487,490,491,495,516,518,521,522,523,524,529,531,533,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,610,612,613,],[-7,-33,-7,-7,-23,-33,39,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,39,39,39,39,39,39,39,39,39,-79,39,39,-306,-307,-75,39,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,39,39,39,39,39,39,-254,39,-144,-268,39,-265,-266,-267,39,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,39,-104,-309,-60,39,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,39,-349,-349,-33,-127,-75,-78,39,39,39,39,39,-237,39,39,39,39,-242,39,39,-245,39,-247,-248,-143,-142,-262,-263,39,39,-269,-270,-271,39,39,39,39,-277,-278,-279,-280,-281,-282,39,-96,-97,-98,-99,-100,-101,-102,-65,-74,39,39,39,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,39,-48,-53,-349,-33,-33,-33,39,-33,-351,-122,39,39,-132,-133,-134,-135,-136,-137,-138,-103,-77,39,39,39,-211,39,39,39,39,-207,-79,39,39,-214,39,39,-216,-217,39,39,39,-221,39,39,-224,-225,-226,-227,39,-229,-230,-231,-141,39,39,-259,-94,39,39,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,39,-33,-33,39,-33,-33,39,-33,39,-348,-125,-126,-128,39,-104,39,39,-185,39,-187,-188,39,39,39,-176,39,39,-179,39,-181,-182,-104,39,39,-190,-191,-192,39,39,-195,39,-197,-198,39,-200,-201,-202,39,39,-256,-257,-258,-272,39,39,-310,39,39,-27,-40,-53,-57,-33,-33,39,39,-33,39,39,-33,39,39,39,-129,-65,39,-164,-165,-166,39,39,-155,39,-157,-158,39,-160,-161,-162,-167,39,-169,-170,-171,-172,-255,39,-295,-52,-49,39,-33,39,39,39,39,39,-351,-131,39,-151,39,-147,-148,-149,-150,-152,-292,-293,-294,39,39,39,39,39,-350,-130,-145,-283,39,39,-43,-57,39,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,39,-57,-295,-56,-296,39,-45,-44,]),'Absorb':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,395,396,397,399,400,401,403,405,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,458,462,467,469,470,473,474,475,476,477,478,479,481,482,483,486,487,491,495,516,518,521,522,524,529,531,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,40,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,40,40,40,40,40,40,40,40,40,-79,40,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,40,40,40,40,40,-254,40,-144,-268,40,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,40,40,40,40,40,-237,40,40,40,40,-242,40,40,-245,40,-247,-248,-143,-142,-262,-263,40,-269,-270,-271,40,40,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,-33,-33,-33,40,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,40,40,40,-211,40,40,40,40,-207,-79,40,40,-214,40,40,-216,-217,40,40,40,-221,40,40,-224,-225,-226,-227,40,-229,-230,-231,-141,40,40,-259,-94,40,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,40,-33,-33,40,-33,-33,40,-33,40,-348,-125,-126,-128,-61,-104,40,40,-185,40,-187,-188,40,40,40,-176,40,40,-179,40,-181,-182,-104,40,-190,-191,-192,40,40,-195,40,-197,-198,40,-200,-201,-202,40,-256,-257,-258,-272,40,-310,-27,-40,-53,-57,-33,-33,40,40,-33,40,40,-33,40,40,-61,-129,-65,40,-164,-165,-166,40,40,-155,40,-157,-158,40,-160,-161,-162,-167,40,-169,-170,-171,-172,-255,-295,-52,-49,-33,40,40,40,40,40,-351,-131,-151,40,-147,-148,-149,-150,-152,-292,-293,-294,40,40,-61,40,-350,-130,-145,-283,40,-43,-57,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,40,-57,-295,-56,-296,-45,-44,]),'Discharge':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,395,396,397,399,400,401,403,405,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,458,462,467,469,470,473,474,475,476,477,478,479,481,482,483,486,487,491,495,516,518,521,522,524,529,531,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,41,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,41,41,41,41,41,41,41,41,41,-79,41,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,41,41,41,41,41,-254,41,-144,-268,41,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,41,41,41,41,41,-237,41,41,41,41,-242,41,41,-245,41,-247,-248,-143,-142,-262,-263,41,-269,-270,-271,41,41,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,-33,-33,-33,41,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,41,41,41,-211,41,41,41,41,-207,-79,41,41,-214,41,41,-216,-217,41,41,41,-221,41,41,-224,-225,-226,-227,41,-229,-230,-231,-141,41,41,-259,-94,41,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,41,-33,-33,41,-33,-33,41,-33,41,-348,-125,-126,-128,-61,-104,41,41,-185,41,-187,-188,41,41,41,-176,41,41,-179,41,-181,-182,-104,41,-190,-191,-192,41,41,-195,41,-197,-198,41,-200,-201,-202,41,-256,-257,-258,-272,41,-310,-27,-40,-53,-57,-33,-33,41,41,-33,41,41,-33,41,41,-61,-129,-65,41,-164,-165,-166,41,41,-155,41,-157,-158,41,-160,-161,-162,-167,41,-169,-170,-171,-172,-255,-295,-52,-49,-33,41,41,41,41,41,-351,-131,-151,41,-147,-148,-149,-150,-152,-292,-293,-294,41,41,-61,41,-350,-130,-145,-283,41,-43,-57,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,41,-57,-295,-56,-296,-45,-44,]),'Link_End':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,470,473,474,475,476,477,478,479,481,482,483,491,518,521,522,524,529,531,557,560,563,564,565,567,586,589,590,592,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,-119,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-119,53,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,124,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-269,-270,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-119,-119,-259,-94,-119,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-119,-310,-27,-40,-53,-57,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-295,-52,-49,-131,-151,-119,-147,-148,-149,-150,-152,-292,-293,-294,-61,-130,-145,-283,-119,-43,-57,-123,-297,-31,-45,-42,-54,-299,-30,-39,-55,-119,-57,-295,-56,-296,-45,-44,]),'Sys':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,124,127,128,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,473,474,475,476,477,478,479,481,482,483,491,495,496,497,498,500,501,502,503,505,506,507,508,510,511,513,515,516,518,521,522,524,529,531,534,535,536,538,541,542,544,547,548,550,553,554,557,560,563,564,565,567,569,571,573,577,581,586,589,590,592,593,599,601,603,605,606,612,613,],[-7,-33,-7,-7,-23,-33,-119,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-119,55,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,55,55,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,55,-349,-349,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-269,-270,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-349,-33,-33,-33,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-119,-119,-259,-94,-119,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,-119,-348,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-119,-310,-27,-40,-53,-57,-33,-33,-119,-353,-119,-33,-119,-353,-119,-33,-119,-353,-119,-61,-353,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-295,-52,-49,-33,-119,-119,-353,55,-353,-119,-353,55,-353,-119,-353,55,-353,55,-119,55,-351,-131,-151,-119,-147,-148,-149,-150,-152,-292,-293,-294,-61,-119,-353,-353,55,55,55,-353,55,55,55,-353,55,55,55,-353,55,-350,-130,-145,-283,-119,-43,-57,-353,55,55,55,55,55,55,55,55,55,55,-352,-123,-297,-31,-45,-42,-54,55,55,55,55,55,-299,-30,-39,-55,55,-119,-57,-295,-56,-296,-45,-44,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,124,125,126,127,128,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,199,201,202,204,205,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,473,474,475,476,477,478,479,481,482,483,491,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,518,521,522,524,529,531,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,557,560,563,564,565,567,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,586,589,590,592,593,594,595,596,597,598,599,601,602,603,605,606,612,613,],[-7,0,-33,-7,-7,-23,-33,-119,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-119,-347,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-306,-307,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-347,-4,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-2,-3,-349,-349,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-269,-270,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-1,-349,-33,-33,-33,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-119,-119,-259,-94,-119,-260,-261,-276,-95,-8,-83,-31,-28,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,-119,-348,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-119,-310,-27,-40,-53,-57,-33,-33,-119,-353,-119,-33,-119,-353,-119,-33,-119,-353,-119,-61,-353,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-295,-52,-49,-33,-119,-119,-353,-347,-353,-119,-353,-347,-353,-119,-353,-347,-353,-347,-119,-347,-351,-131,-151,-119,-147,-148,-149,-150,-152,-292,-293,-294,-61,-119,-353,-353,-347,-317,-347,-347,-353,-347,-318,-347,-347,-353,-347,-319,-347,-347,-321,-353,-320,-347,-350,-130,-145,-283,-119,-43,-57,-353,-347,-347,-322,-347,-325,-323,-347,-347,-324,-347,-328,-326,-347,-347,-327,-347,-330,-329,-347,-352,-331,-123,-297,-31,-45,-42,-54,-347,-332,-347,-333,-347,-334,-336,-335,-347,-337,-339,-338,-347,-340,-341,-299,-30,-39,-55,-347,-342,-343,-344,-345,-346,-119,-57,-316,-295,-56,-296,-45,-44,]),'Struct':([0,3,4,6,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,87,88,89,90,91,92,93,94,95,96,97,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,132,134,176,177,178,179,180,181,182,183,184,185,193,194,195,196,197,198,199,201,202,204,205,208,227,229,270,280,298,299,300,301,303,304,305,306,377,383,386,388,389,448,449,491,529,531,563,564,565,567,589,590,592,601,605,612,613,],[5,5,5,-23,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-9,-75,-75,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-12,-13,-82,-80,-75,-14,-29,-37,-61,-48,-53,-103,-77,-94,-95,-8,-83,-31,-28,-43,-51,-55,-50,-310,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'open_bracket':([5,11,33,55,67,68,69,70,71,87,88,89,90,91,92,93,94,95,96,97,103,127,128,129,132,134,136,137,138,139,140,142,143,144,145,147,148,150,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,189,210,211,212,213,216,227,229,230,231,232,234,235,236,237,240,241,244,247,248,249,251,252,257,266,267,270,272,279,280,307,309,312,318,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,371,372,377,391,412,416,417,419,422,427,469,474,516,522,524,599,],[12,42,73,-349,73,73,73,73,73,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-349,-349,215,-75,-78,73,73,73,73,73,73,73,73,73,73,73,73,73,-269,-270,-271,73,73,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,282,-349,310,313,315,-351,-103,-77,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-94,73,-276,-95,392,396,400,-348,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-272,73,-310,452,73,73,73,73,73,73,-351,73,-350,-283,73,73,]),'Integer':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,201,210,300,301,319,383,563,589,],[15,15,15,15,-25,-19,-20,-21,-22,15,15,15,-29,15,-24,-26,15,15,-29,15,-31,-28,15,-27,-31,-30,]),'Decimal':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,201,210,300,301,319,383,563,589,],[16,16,16,16,-25,-19,-20,-21,-22,16,16,16,-29,16,-24,-26,16,16,-29,16,-31,-28,16,-27,-31,-30,]),'String':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,201,210,300,301,319,383,563,589,],[17,17,17,17,-25,-19,-20,-21,-22,17,17,17,-29,17,-24,-26,17,17,-29,17,-31,-28,17,-27,-31,-30,]),'Boolean':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,201,210,300,301,319,383,563,589,],[18,18,18,18,-25,-19,-20,-21,-22,18,18,18,-29,18,-24,-26,18,18,-29,18,-31,-28,18,-27,-31,-30,]),'close_bracket':([5,6,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,201,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,383,386,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,473,474,475,476,477,478,479,481,482,483,486,491,495,496,497,498,501,502,503,506,507,508,511,513,516,518,521,522,524,525,529,531,534,535,536,542,548,554,557,560,563,564,565,567,569,586,589,590,592,599,601,603,605,606,612,613,],[-23,-23,-23,-23,45,-25,-19,-20,-21,-22,-33,-23,-47,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-306,-307,-75,-61,-23,107,110,-18,-29,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,154,-268,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,193,-16,-17,-24,-26,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,261,-142,-262,-263,-119,-269,-270,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-29,-37,-61,-48,-53,-349,-33,-33,-33,-119,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-119,-119,-259,-94,-119,-260,-261,-276,-95,-31,-28,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,-353,-119,-348,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-119,-310,-27,-40,-53,-57,-33,-33,-119,-353,-119,-33,-119,-353,-119,-33,-119,-353,-119,466,-61,-353,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-295,-52,-49,-33,-119,-119,-353,500,-353,-119,-353,505,-353,-119,-353,510,-353,-119,515,-351,-131,-151,-119,-147,-148,-149,-150,-152,-292,-293,-294,-119,-61,-119,-353,-353,538,541,-353,544,547,-353,550,553,-353,-350,-130,-145,-283,-119,561,-43,-57,-353,571,573,577,581,-352,-123,-297,-31,-45,-42,-54,593,-299,-30,-39,-55,-119,-57,-295,-56,-296,-45,-44,]),'Fixed':([6,],[20,]),'Return':([6,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,37,38,40,41,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,202,204,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,386,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,448,449,452,453,454,455,457,458,459,461,462,463,465,467,469,470,473,474,475,476,477,478,479,481,482,483,491,495,496,497,502,507,513,516,518,521,522,524,529,531,534,557,560,564,565,567,586,590,592,599,601,603,605,606,612,613,],[-23,-19,-20,-21,-22,-33,-23,-47,-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-306,-307,-75,-61,-32,-38,-35,-51,-349,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-34,-41,-46,-53,-61,-349,-349,-33,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-269,-270,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-37,-61,-48,-53,-349,-33,-33,-33,-119,-33,-351,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-119,-119,-259,-94,-119,-260,-261,-276,-95,-43,-51,-55,-50,-33,-119,-33,-33,-119,-33,-33,-119,-33,405,-119,-348,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-119,-310,-40,-53,-57,-33,-33,-119,405,-119,-33,-119,405,-119,-33,-119,405,-119,-61,405,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,-295,-52,-49,-33,-119,-119,405,405,-119,405,405,-119,405,405,-119,-351,-131,-151,-119,-147,-148,-149,-150,-152,-292,-293,-294,-61,-119,405,405,405,405,405,-350,-130,-145,-283,-119,-43,-57,405,-123,-297,-45,-42,-54,-299,-39,-55,-119,-57,-295,-56,-296,-45,-44,]),'comma':([11,12,14,15,16,17,18,42,43,44,45,46,47,51,87,88,89,90,91,92,93,94,95,96,97,103,105,107,108,110,112,113,114,115,121,123,132,134,176,177,178,179,180,181,182,183,184,185,193,198,201,204,208,216,227,229,270,280,283,285,286,287,288,289,290,291,292,293,294,295,296,297,300,301,303,304,305,306,376,377,380,382,383,388,389,441,443,444,448,451,469,471,490,491,494,529,531,533,563,564,567,589,592,601,605,610,612,],[-23,-23,-25,-19,-20,-21,-22,-23,-75,-75,-75,-18,117,-51,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,-75,198,-75,-16,-17,-24,-26,206,-61,-75,-78,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-75,-75,117,-61,206,319,-103,-77,-94,-95,-79,379,381,-62,-63,-64,-104,-71,-72,-73,-90,-91,-92,-93,384,-28,387,-51,-55,-50,-76,-310,-108,-70,-27,206,450,379,-109,-79,-52,-61,319,-61,-61,-61,533,387,450,-61,384,591,-54,-30,-55,450,-56,-61,591,]),'Break':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,470,473,474,475,476,477,478,479,481,482,483,486,487,518,521,522,524,526,557,560,586,599,603,606,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,77,-306,-307,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,77,77,77,77,77,-254,77,-144,77,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-127,-75,-78,77,77,77,77,77,-237,77,77,77,77,-242,77,77,-245,77,-247,-248,-143,-142,-262,-263,77,-269,-270,-271,77,77,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,77,77,77,-211,77,77,77,77,-207,-79,77,77,-214,-119,77,-216,-217,77,77,77,-221,77,77,-224,-225,-226,-227,77,-229,-230,-231,-141,77,77,-259,-94,77,-260,-261,-276,-95,-125,-126,-128,-61,-104,77,77,-185,77,-187,-188,77,77,77,-176,77,77,-179,77,-181,-182,-104,77,-190,-191,-192,77,77,-195,77,-197,-198,77,-200,-201,-202,77,-256,-257,-258,-272,77,-310,-129,-65,77,-164,-165,-166,77,77,-155,77,-157,-158,77,-160,-161,-162,-167,77,-169,-170,-171,-172,-255,-295,-131,-151,77,-147,-148,-149,-150,-152,-292,-293,-294,77,-119,-130,-145,-283,77,562,-123,-297,-299,77,-295,-296,]),'Continue':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,470,473,474,475,476,477,478,479,481,482,483,486,518,521,522,524,557,560,586,599,603,606,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,78,-306,-307,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,78,78,78,78,78,-254,78,-144,78,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-127,-75,-78,78,78,78,78,78,-237,78,78,78,78,-242,78,78,-245,78,-247,-248,-143,-142,-262,-263,78,-269,-270,-271,78,78,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,78,78,78,-211,78,78,78,78,-207,-79,78,78,-214,-119,78,-216,-217,78,78,78,-221,78,78,-224,-225,-226,-227,78,-229,-230,-231,-141,78,78,-259,-94,78,-260,-261,-276,-95,-125,-126,-128,-61,-104,78,78,-185,78,-187,-188,78,78,78,-176,78,78,-179,78,-181,-182,-104,78,-190,-191,-192,78,78,-195,78,-197,-198,78,-200,-201,-202,78,-256,-257,-258,-272,78,-310,-129,-65,78,-164,-165,-166,78,78,-155,78,-157,-158,78,-160,-161,-162,-167,78,-169,-170,-171,-172,-255,-295,-131,-151,78,-147,-148,-149,-150,-152,-292,-293,-294,78,-130,-145,-283,78,-123,-297,-299,78,-295,-296,]),'Avoid':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,470,473,474,475,476,477,478,479,481,482,483,486,518,521,522,524,557,560,586,599,603,606,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,79,-306,-307,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,79,79,79,79,79,-254,79,-144,79,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-127,-75,-78,79,79,79,79,79,-237,79,79,79,79,-242,79,79,-245,79,-247,-248,-143,-142,-262,-263,79,-269,-270,-271,79,79,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,79,79,79,-211,79,79,79,79,-207,-79,79,79,-214,-119,79,-216,-217,79,79,79,-221,79,79,-224,-225,-226,-227,79,-229,-230,-231,-141,79,79,-259,-94,79,-260,-261,-276,-95,-125,-126,-128,-61,-104,79,79,-185,79,-187,-188,79,79,79,-176,79,79,-179,79,-181,-182,-104,79,-190,-191,-192,79,79,-195,79,-197,-198,79,-200,-201,-202,79,-256,-257,-258,-272,79,-310,-129,-65,79,-164,-165,-166,79,79,-155,79,-157,-158,79,-160,-161,-162,-167,79,-169,-170,-171,-172,-255,-295,-131,-151,79,-147,-148,-149,-150,-152,-292,-293,-294,79,-130,-145,-283,79,-123,-297,-299,79,-295,-296,]),'Elif':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,470,473,474,475,476,477,478,479,481,482,483,518,521,522,524,557,560,586,599,603,606,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-306,-307,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-269,-270,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-119,-119,-259,-94,-119,-260,-261,-276,-95,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-119,-310,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,484,-131,-151,-119,-147,-148,-149,-150,-152,-292,-293,-294,-130,-145,-283,-119,-123,-297,-299,-119,484,-296,]),'Else':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,266,267,268,270,272,273,274,279,280,320,321,322,323,324,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,370,371,372,377,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,435,470,473,474,475,476,477,478,479,481,482,483,518,521,522,524,557,560,586,599,603,606,],[-119,-119,-119,-119,-119,-119,-119,-119,-79,-119,-306,-307,-75,-61,-111,-112,-113,-114,-115,-116,-117,-118,-120,-104,-79,-119,-119,-119,-119,-254,-119,-144,-268,-119,-265,-266,-267,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-104,-309,-60,-127,-75,-78,-79,-119,-119,-119,-119,-237,-79,-119,-119,-119,-242,-119,-119,-245,-119,-247,-248,-143,-142,-262,-263,-119,-269,-270,-271,-119,-119,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-308,-122,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-119,-119,-119,-211,-79,-119,-119,-119,-207,-79,-78,-119,-214,-119,-119,-216,-217,-119,-119,-119,-221,-119,-119,-224,-225,-226,-227,-119,-229,-230,-231,-141,-119,-119,-259,-94,-119,-260,-261,-276,-95,-125,-126,-128,-61,-104,-78,-119,-185,-119,-187,-188,-119,-119,-119,-176,-119,-119,-179,-119,-181,-182,-104,-119,-190,-191,-192,-78,-119,-195,-119,-197,-198,-119,-200,-201,-202,-119,-256,-257,-258,-272,-119,-310,-129,-65,-119,-164,-165,-166,-78,-119,-155,-119,-157,-158,-119,-160,-161,-162,-167,-119,-169,-170,-171,-172,-255,485,-131,-151,-119,-147,-148,-149,-150,-152,-292,-293,-294,-130,-145,-283,-119,-123,-297,-299,-119,485,-296,]),'open_brace':([32,33,47,51,67,68,93,119,136,137,142,234,239,283,390,410,411,444,445,446,492,600,609,],[66,69,116,122,138,143,186,203,230,235,247,333,344,375,451,471,472,186,489,490,530,604,610,]),'period':([32,34,40,41,65,66,67,80,89,93,98,101,104,123,134,136,138,142,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,190,204,218,219,220,221,222,223,224,225,226,229,230,234,239,240,247,271,283,290,323,324,327,333,343,344,349,359,375,376,379,381,405,416,433,441,444,451,470,471,490,491,517,518,523,533,610,],[-79,-75,-75,-75,132,-75,-79,-75,132,-79,-75,132,-75,-75,-78,-79,-75,-79,-75,-75,-75,-277,-278,-279,-280,-281,-282,-75,-96,-97,-98,-99,-100,-101,-102,-74,-75,-75,-75,-75,-75,-75,-132,-133,-134,-135,-136,-137,-138,-77,-75,-79,-79,-78,-75,-75,-79,132,-75,132,-78,-75,132,-75,-78,-75,-75,-74,-75,-75,-75,-78,-75,-78,-79,-75,-75,-75,-75,-75,132,-130,-75,-75,-75,]),'equal':([32,51,65,67,93,119,131,132,134,136,142,185,219,227,228,229,234,239,240,304,305,324,325,327,343,349,385,409,416,447,470,517,556,558,584,592,608,],[-79,123,-104,-79,-79,204,219,-75,-78,-79,-79,-74,-75,-103,326,-77,-79,-79,-78,123,390,-104,410,-78,-104,-78,446,470,-78,491,-75,-104,470,326,-139,390,609,]),'plus_equal':([32,65,67,93,131,132,134,136,142,185,227,229,234,239,240,327,343,349,416,],[-79,-104,-79,-79,220,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'minus_equal':([32,65,67,93,131,132,134,136,142,185,227,229,234,239,240,327,343,349,416,],[-79,-104,-79,-79,221,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'times_equal':([32,65,67,93,131,132,134,136,142,185,227,229,234,239,240,327,343,349,416,],[-79,-104,-79,-79,222,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'divide_equal':([32,65,67,93,131,132,134,136,142,185,227,229,234,239,240,327,343,349,416,],[-79,-104,-79,-79,223,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'divide_divide_equal':([32,65,67,93,131,132,134,136,142,185,227,229,234,239,240,327,343,349,416,],[-79,-104,-79,-79,224,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'modulo_equal':([32,65,67,93,131,132,134,136,142,185,227,229,234,239,240,327,343,349,416,],[-79,-104,-79,-79,225,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'times_times_equal':([32,65,67,93,131,132,134,136,142,185,227,229,234,239,240,327,343,349,416,],[-79,-104,-79,-79,226,-75,-78,-79,-79,-74,-103,-77,-79,-79,-78,-78,-104,-78,-78,]),'In':([33,67,],[68,137,]),'close_brace':([33,66,67,68,69,87,88,89,90,91,92,93,94,95,96,97,103,132,133,134,135,136,137,138,142,143,176,177,178,179,180,181,182,183,184,185,186,200,207,227,229,230,234,235,239,243,247,270,280,302,333,343,344,375,377,451,471,490,493,494,519,520,527,528,532,533,566,568,607,610,611,],[70,134,139,144,147,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-75,228,-78,229,231,236,240,248,251,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,134,300,305,-103,-77,327,334,337,-79,-68,349,-94,-95,385,416,-74,134,441,-310,-61,-61,-61,531,-107,557,558,563,564,-105,-61,592,-106,608,-61,612,]),'colon':([33,67,68,69,70,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,99,103,132,134,136,137,138,139,142,143,144,147,158,161,162,163,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,227,229,230,231,234,235,236,240,247,248,251,266,270,279,280,281,327,333,334,337,349,371,377,416,436,437,438,439,440,485,522,585,],[71,140,145,148,150,167,-269,-270,-271,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,189,-60,-75,-78,232,237,241,244,249,252,254,257,267,-269,-270,-271,272,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-103,-77,328,330,335,338,340,345,350,352,355,360,-94,-276,-95,372,412,417,419,422,427,-272,-310,474,486,487,-301,-302,-303,524,-283,599,]),'open_par':([34,35,41,55,66,80,85,98,100,104,123,127,138,157,164,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,204,218,219,220,221,222,223,224,225,226,230,247,262,271,323,333,344,359,363,364,365,375,379,381,405,433,451,470,471,484,490,491,518,523,533,610,],[80,98,104,128,104,157,168,187,190,104,104,210,104,157,271,187,104,-277,-278,-279,-280,-281,-282,104,-96,-97,-98,-99,-100,-101,-102,104,157,104,104,104,104,-132,-133,-134,-135,-136,-137,-138,104,104,359,187,104,104,104,187,433,-288,-289,104,104,104,104,187,104,-131,104,523,104,104,-130,187,104,104,]),'lit_bool':([34,41,80,98,123,157,168,169,170,171,172,173,174,175,187,190,204,219,271,323,359,379,381,405,433,451,470,471,490,491,518,523,533,610,],[84,103,163,84,103,265,278,103,-277,-278,-279,-280,-281,-282,265,289,103,-131,369,103,265,289,289,103,265,103,-131,103,103,103,-130,84,103,103,]),'Not':([34,80,98,157,187,271,359,433,523,],[85,164,85,262,262,262,262,262,85,]),'lit_str':([34,41,80,98,123,157,168,169,170,171,172,173,174,175,187,190,204,219,271,323,359,374,379,381,405,433,451,470,471,490,491,518,523,533,610,],[88,88,88,88,88,88,88,88,-277,-278,-279,-280,-281,-282,88,288,88,-131,88,88,88,438,288,288,88,88,88,-131,88,88,88,-130,88,88,88,]),'greater_than':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,227,229,265,270,271,278,280,359,369,377,433,523,],[-61,-61,-60,170,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-61,-103,-77,-60,-94,-61,-60,-95,-61,-60,-310,-61,-61,]),'less_than':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,227,229,265,270,271,278,280,359,369,377,433,523,],[-61,-61,-60,171,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-61,-103,-77,-60,-94,-61,-60,-95,-61,-60,-310,-61,-61,]),'equal_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,227,229,265,270,271,278,280,359,369,377,433,523,],[-61,-61,-60,172,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-61,-103,-77,-60,-94,-61,-60,-95,-61,-60,-310,-61,-61,]),'not_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,227,229,265,270,271,278,280,359,369,377,433,523,],[-61,-61,-60,173,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-61,-103,-77,-60,-94,-61,-60,-95,-61,-60,-310,-61,-61,]),'great_than_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,227,229,265,270,271,278,280,359,369,377,433,523,],[-61,-61,-60,174,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-61,-103,-77,-60,-94,-61,-60,-95,-61,-60,-310,-61,-61,]),'less_than_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,227,229,265,270,271,278,280,359,369,377,433,523,],[-61,-61,-60,175,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-61,-75,-78,-61,-67,-60,-58,-61,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-61,-103,-77,-60,-94,-61,-60,-95,-61,-60,-310,-61,-61,]),'plus':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,204,218,219,220,221,222,223,224,225,226,227,229,230,239,243,247,270,271,280,283,292,293,294,295,296,297,320,322,323,324,333,343,344,359,375,376,377,379,381,405,409,433,441,444,451,470,471,490,491,518,523,533,610,],[-69,-69,-69,-69,177,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,177,-69,-69,-67,177,-69,-69,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,-69,177,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-94,-69,177,-79,-67,-68,-85,-86,-87,-88,177,177,-69,-104,-69,-74,-69,-69,-69,-74,-310,-69,-69,-69,-65,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,-69,]),'minus':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,204,218,219,220,221,222,223,224,225,226,227,229,230,239,243,247,270,271,280,283,292,293,294,295,296,297,320,322,323,324,333,343,344,359,375,376,377,379,381,405,409,433,441,444,451,470,471,490,491,518,523,533,610,],[-69,-69,-69,-69,178,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,178,-69,-69,-67,178,-69,-69,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,-69,178,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-94,-69,178,-79,-67,-68,-85,-86,-87,-88,178,178,-69,-104,-69,-74,-69,-69,-69,-74,-310,-69,-69,-69,-65,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,-69,]),'times':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,204,218,219,220,221,222,223,224,225,226,227,229,230,239,243,247,270,271,280,283,292,293,294,295,296,297,320,322,323,324,333,343,344,359,375,376,377,379,381,405,409,433,441,444,451,470,471,490,491,518,523,533,610,],[-69,-69,-69,-69,179,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,179,-69,-69,-67,179,-69,-69,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,-69,179,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-94,-69,179,-79,-67,-68,-85,-86,-87,-88,179,179,-69,-104,-69,-74,-69,-69,-69,-74,-310,-69,-69,-69,-65,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,-69,]),'divide':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,204,218,219,220,221,222,223,224,225,226,227,229,230,239,243,247,270,271,280,283,292,293,294,295,296,297,320,322,323,324,333,343,344,359,375,376,377,379,381,405,409,433,441,444,451,470,471,490,491,518,523,533,610,],[-69,-69,-69,-69,180,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,180,-69,-69,-67,180,-69,-69,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,-69,180,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-94,-69,180,-79,-67,-68,-85,-86,-87,-88,180,180,-69,-104,-69,-74,-69,-69,-69,-74,-310,-69,-69,-69,-65,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,-69,]),'divide_divide':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,204,218,219,220,221,222,223,224,225,226,227,229,230,239,243,247,270,271,280,283,292,293,294,295,296,297,320,322,323,324,333,343,344,359,375,376,377,379,381,405,409,433,441,444,451,470,471,490,491,518,523,533,610,],[-69,-69,-69,-69,181,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,181,-69,-69,-67,181,-69,-69,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,-69,181,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-94,-69,181,-79,-67,-68,-85,-86,-87,-88,181,181,-69,-104,-69,-74,-69,-69,-69,-74,-310,-69,-69,-69,-65,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,-69,]),'modulo':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,204,218,219,220,221,222,223,224,225,226,227,229,230,239,243,247,270,271,280,283,292,293,294,295,296,297,320,322,323,324,333,343,344,359,375,376,377,379,381,405,409,433,441,444,451,470,471,490,491,518,523,533,610,],[-69,-69,-69,-69,182,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,182,-69,-69,-67,182,-69,-69,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,-69,182,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-94,-69,182,-79,-67,-68,-85,-86,-87,-88,182,182,-69,-104,-69,-74,-69,-69,-69,-74,-310,-69,-69,-69,-65,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,-69,]),'times_times':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,204,218,219,220,221,222,223,224,225,226,227,229,230,239,243,247,270,271,280,283,292,293,294,295,296,297,320,322,323,324,333,343,344,359,375,376,377,379,381,405,409,433,441,444,451,470,471,490,491,518,523,533,610,],[-69,-69,-69,-69,183,-104,-66,-67,-68,-79,-85,-86,-87,-88,-69,-69,-69,-75,-85,-78,183,-69,-69,-67,183,-69,-69,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,-69,-69,-69,183,-69,-69,-69,-132,-133,-134,-135,-136,-137,-138,-103,-77,-69,-79,-68,-69,-94,-69,183,-79,-67,-68,-85,-86,-87,-88,183,183,-69,-104,-69,-74,-69,-69,-69,-74,-310,-69,-69,-69,-65,-69,-78,-79,-69,-131,-69,-69,-69,-130,-69,-69,-69,]),'lit_intposi':([34,41,66,80,98,104,116,122,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,203,204,218,219,220,221,222,223,224,225,226,230,247,271,323,333,344,359,374,375,379,381,405,433,451,470,471,472,489,490,491,518,523,530,533,604,610,],[94,94,133,94,94,94,200,207,94,133,94,94,94,-277,-278,-279,-280,-281,-282,94,-96,-97,-98,-99,-100,-101,-102,94,94,294,302,94,94,94,-132,-133,-134,-135,-136,-137,-138,133,133,94,94,133,133,94,439,94,294,294,94,94,94,-131,94,520,527,94,94,-130,94,566,94,607,94,]),'lit_intnega':([34,41,66,80,98,104,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,204,218,219,220,221,222,223,224,225,226,230,247,271,323,333,344,359,374,375,379,381,405,433,451,470,471,490,491,518,523,533,610,],[95,95,95,95,95,95,95,95,95,95,95,-277,-278,-279,-280,-281,-282,95,-96,-97,-98,-99,-100,-101,-102,95,95,295,95,95,95,-132,-133,-134,-135,-136,-137,-138,95,95,95,95,95,95,95,440,95,295,295,95,95,95,-131,95,95,95,-130,95,95,95,]),'lit_decposi':([34,41,66,80,98,104,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,204,218,219,220,221,222,223,224,225,226,230,247,271,323,333,344,359,375,379,381,405,433,451,470,471,490,491,518,523,533,610,],[96,96,96,96,96,96,96,96,96,96,96,-277,-278,-279,-280,-281,-282,96,-96,-97,-98,-99,-100,-101,-102,96,96,296,96,96,96,-132,-133,-134,-135,-136,-137,-138,96,96,96,96,96,96,96,96,296,296,96,96,96,-131,96,96,96,-130,96,96,96,]),'lit_decnega':([34,41,66,80,98,104,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,204,218,219,220,221,222,223,224,225,226,230,247,271,323,333,344,359,375,379,381,405,433,451,470,471,490,491,518,523,533,610,],[97,97,97,97,97,97,97,97,97,97,97,-277,-278,-279,-280,-281,-282,97,-96,-97,-98,-99,-100,-101,-102,97,97,297,97,97,97,-132,-133,-134,-135,-136,-137,-138,97,97,97,97,97,97,97,97,297,297,97,97,97,-131,97,97,97,-130,97,97,97,]),'close_par':([55,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,103,127,128,129,132,134,158,159,160,161,162,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,190,210,211,212,216,227,229,263,264,265,270,275,276,277,278,279,280,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,307,318,366,367,368,369,371,376,377,378,379,380,382,434,441,442,443,444,469,480,488,516,522,559,],[-349,166,-269,-270,-271,-58,-59,-104,-66,-67,-68,-79,-85,-86,-87,-88,-60,-349,-349,213,-75,-78,266,269,270,-269,-270,-271,-61,-277,-278,-279,-280,-281,-282,-69,-96,-97,-98,-99,-100,-101,-102,-65,-74,281,-313,-349,309,312,-351,-103,-77,-285,-286,-287,-94,371,-273,-274,-275,-276,-95,-79,377,-315,-110,-62,-63,-64,-104,-71,-72,-73,-90,-91,-92,-93,391,-348,434,-273,-274,-275,-272,-76,-310,-312,-313,-108,-70,-284,-78,-314,-109,-79,-351,522,-311,-350,-283,585,]),'And':([269,],[364,]),'Or':([269,],[365,]),'Execute':([282,562,],[374,374,]),'Default':([373,562,587,588,],[436,-305,-300,-304,]),'End_Switch':([561,],[586,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,9,10,]),'declare_statements':([0,2,3,4,7,19,129,211,212,213,215,307,309,310,312,313,315,391,392,396,400,452,],[3,8,3,3,22,48,214,308,311,314,317,393,395,397,399,401,403,453,454,458,462,495,]),'struct_dec':([0,3,4,],[4,4,4,]),'struct_element1':([5,11,12,42,46,],[13,43,44,105,113,]),'data_type':([5,6,11,12,20,42,46,55,127,128,210,319,],[14,21,14,14,49,14,14,130,130,130,130,407,]),'const_var_dec':([6,],[19,]),'statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[23,52,56,57,58,59,60,61,62,63,75,75,75,75,75,75,75,156,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,316,75,75,75,75,75,75,75,75,75,63,75,75,75,75,75,75,75,75,75,75,394,398,402,406,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,455,457,459,461,463,465,75,75,75,75,75,75,496,497,502,507,513,75,75,526,534,75,75,]),'assignment_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_statement':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'switch_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'conditional_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'io_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'func_call':([8,22,24,25,26,27,28,29,30,31,33,34,41,66,67,68,69,70,71,73,76,80,98,104,123,136,137,138,139,140,142,143,144,145,147,148,150,157,158,166,167,168,169,176,186,187,190,204,214,218,219,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,271,272,308,311,314,317,323,327,328,330,333,334,335,337,338,340,344,345,349,350,352,355,359,360,372,375,379,381,393,395,397,399,401,403,405,412,416,417,419,422,427,433,451,453,454,458,462,467,471,474,486,487,490,491,495,523,524,533,599,610,],[31,31,31,31,31,31,31,31,31,31,31,92,92,92,31,31,31,31,31,31,31,92,92,92,92,31,31,243,31,31,31,31,31,31,31,31,31,92,31,31,31,92,92,92,92,92,293,92,31,92,92,243,31,31,31,31,31,31,31,31,31,31,243,31,31,31,31,31,31,31,92,31,31,31,31,31,92,31,31,31,243,31,31,31,31,31,92,31,31,31,31,31,92,31,31,92,293,293,31,31,31,31,31,31,92,31,31,31,31,31,31,92,92,31,31,31,31,31,92,31,31,31,92,92,31,92,31,92,31,92,]),'input_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'output_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,214,230,231,232,234,235,236,237,240,241,243,244,247,248,249,251,252,257,266,267,272,308,311,314,317,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,393,395,397,399,401,403,412,416,417,419,422,427,453,454,458,462,467,474,486,487,495,524,599,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'id_array_dec':([14,],[46,]),'id_array_var':([21,],[50,]),'functions':([23,52,53,124,456,460,464,466,468,498,500,501,503,505,506,508,510,511,515,535,536,538,541,542,544,547,548,550,553,569,571,573,577,581,593,],[54,125,126,209,499,504,509,512,514,537,539,540,543,545,546,549,551,552,555,570,572,574,575,576,578,579,580,582,583,594,595,596,597,598,602,]),'assignment_statements2':([32,67,136,142,234,239,],[64,64,64,64,64,64,]),'array':([32,67,93,136,142,234,239,283,444,],[65,65,185,65,65,65,343,376,376,]),'block':([33,67,68,69,70,71,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,230,231,232,234,235,236,237,240,241,244,247,248,249,251,252,257,266,267,272,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,412,416,417,419,422,427,474,524,599,],[72,141,146,149,151,152,233,238,242,245,246,250,253,255,256,258,259,260,268,273,274,329,331,332,336,339,341,342,346,347,348,351,353,354,356,357,358,361,362,370,413,414,415,418,420,421,423,424,425,426,428,429,430,431,432,435,473,475,476,477,478,479,521,560,603,]),'inside_statements':([33,67,68,69,70,71,73,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,230,231,232,234,235,236,237,240,241,244,247,248,249,251,252,257,266,267,272,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,412,416,417,419,422,427,474,486,524,599,],[74,74,74,74,74,74,153,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,525,74,74,]),'control_statements':([33,67,68,69,70,71,73,75,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,230,231,232,234,235,236,237,240,241,244,247,248,249,251,252,257,266,267,272,327,328,330,333,334,335,337,338,340,345,349,350,352,355,360,372,412,416,417,419,422,427,474,486,524,599,],[76,76,76,76,76,76,76,155,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'condition':([34,80,98,523,],[81,158,188,559,]),'relational_expression':([34,80,98,157,168,187,271,359,433,523,],[82,161,82,263,276,263,367,263,263,82,]),'logical_expression':([34,80,98,157,168,187,271,359,433,523,],[83,162,83,264,277,264,368,264,264,83,]),'value':([34,41,80,98,123,157,168,169,187,204,271,323,359,405,433,451,471,490,491,523,533,610,],[86,102,86,86,208,86,86,279,86,303,86,408,86,467,86,494,494,494,529,86,494,494,]),'num_value':([34,41,66,80,98,104,123,138,157,168,169,176,186,187,190,204,218,219,230,247,271,323,333,344,359,375,379,381,405,433,451,471,490,491,523,533,610,],[87,87,135,165,87,192,87,135,165,87,87,280,135,165,192,87,320,322,135,135,87,87,135,135,87,135,192,192,87,87,87,87,87,87,87,87,87,]),'id_array':([34,40,41,43,44,45,66,80,98,104,105,107,108,110,123,132,138,157,168,169,176,186,187,190,193,198,204,218,219,230,247,271,323,333,344,359,375,379,381,405,433,451,470,471,490,491,523,533,610,],[89,101,89,108,108,108,89,89,89,89,108,108,196,108,89,227,89,89,89,89,89,89,89,89,108,108,89,89,324,89,89,89,89,89,89,89,89,89,89,89,89,89,517,89,89,89,89,89,89,]),'literals':([34,41,66,80,98,104,123,138,157,168,169,176,186,187,190,204,218,219,230,247,271,323,333,344,359,375,379,381,405,433,451,471,490,491,523,533,610,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'arithmetic_expression':([34,41,66,80,98,104,123,138,157,168,169,176,186,187,190,204,218,219,230,247,271,323,333,344,359,375,379,381,405,433,451,471,490,491,523,533,610,],[91,91,91,160,91,160,91,91,160,91,91,91,91,160,292,91,91,91,91,91,91,91,91,91,91,91,292,292,91,91,91,91,91,91,91,91,91,]),'id_array1':([43,44,45,105,107,110,193,198,],[106,109,111,194,195,199,298,299,]),'struct_element2':([46,],[112,]),'id_array_dec2':([47,],[114,]),'id_dec1':([47,201,],[115,301,]),'id_array_const':([49,],[118,]),'id_array_var2':([51,],[120,]),'var_init':([51,304,],[121,388,]),'parameters':([55,127,128,210,],[129,211,212,307,]),'id_struct':([65,89,101,290,324,343,517,],[131,184,191,382,409,131,556,]),'logical_operand':([80,157,187,271,359,433,],[159,159,159,366,366,480,]),'relational_operators':([86,],[169,]),'arithmetic_operators':([87,135,165,192,280,320,322,],[176,176,176,176,176,176,176,]),'id_array2':([108,],[197,]),'id_array_const2':([119,],[202,]),'id_var1':([121,208,388,],[205,306,448,]),'assignment_exp':([131,],[217,]),'assignment_operators':([131,],[218,]),'condition_not':([168,271,],[275,275,]),'function_param':([190,379,],[284,442,]),'value1_opt':([190,379,381,],[285,285,443,]),'value_opt':([190,379,381,],[286,286,286,]),'num_value_opt':([190,379,381,],[287,287,287,]),'id_array_opt':([190,379,381,],[290,290,290,]),'literals_opt':([190,379,381,],[291,291,291,]),'more_parameters':([216,469,],[318,516,]),'assign_value':([219,],[321,]),'more_id':([219,470,],[323,518,]),'more_array':([228,558,],[325,584,]),'logical_operators':([269,],[363,]),'execute':([282,562,],[373,588,]),'more_param':([285,441,],[378,488,]),'value2_opt':([286,],[380,]),'array_dec1':([300,563,],[383,589,]),'id_const1':([303,529,],[386,565,]),'array_init':([305,592,],[389,601,]),'return_statement':([316,394,398,402,406,455,457,459,461,463,465,496,497,502,507,513,534,],[404,456,460,464,468,498,501,503,506,508,511,535,536,542,548,554,569,]),'switch_lit':([374,],[437,]),'array_var1':([389,531,601,],[449,567,605,]),'condition_else':([435,603,],[481,606,]),'elif_statement':([435,603,],[482,482,]),'else_statement':([435,603,],[483,483,]),'value1':([451,471,490,533,610,],[493,519,528,568,611,]),'value2':([494,],[532,]),'execute1':([562,],[587,]),'array_const1':([564,612,],[590,613,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',55),
  ('program -> global_dec Link_Start declare_statements statements functions','program',5,'p_program','syntax_analyze.py',56),
  ('program -> global_dec declare_statements statements Link_End functions','program',5,'p_program','syntax_analyze.py',57),
  ('program -> global_dec declare_statements statements functions','program',4,'p_program','syntax_analyze.py',58),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',74),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',75),
  ('global_dec -> <empty>','global_dec',0,'p_global_dec','syntax_analyze.py',76),
  ('struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1','struct_dec',6,'p_struct_dec','syntax_analyze.py',85),
  ('struct_dec -> Struct id struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',86),
  ('struct_dec -> Struct open_bracket struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',87),
  ('struct_dec -> Struct struct_element1 close_bracket id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',88),
  ('struct_dec -> Struct id open_bracket struct_element1 id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',89),
  ('struct_dec -> Struct id struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',90),
  ('struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',91),
  ('struct_dec -> <empty>','struct_dec',0,'p_struct_dec','syntax_analyze.py',92),
  ('struct_element1 -> data_type id_array_dec struct_element2','struct_element1',3,'p_struct_element1','syntax_analyze.py',108),
  ('struct_element2 -> struct_element1','struct_element2',1,'p_struct_element2','syntax_analyze.py',115),
  ('struct_element2 -> <empty>','struct_element2',0,'p_struct_element2','syntax_analyze.py',116),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',125),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',126),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',127),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',128),
  ('data_type -> <empty>','data_type',0,'p_data_type_error','syntax_analyze.py',133),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',139),
  ('id_array_dec -> <empty>','id_array_dec',0,'p_id_array_dec','syntax_analyze.py',140),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',150),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2_more','syntax_analyze.py',155),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',164),
  ('id_dec1 -> <empty>','id_dec1',0,'p_id_dec1','syntax_analyze.py',165),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',175),
  ('array_dec1 -> <empty>','array_dec1',0,'p_array_dec1','syntax_analyze.py',176),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',199),
  ('declare_statements -> <empty>','declare_statements',0,'p_declare_statements','syntax_analyze.py',200),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',210),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec_more','syntax_analyze.py',217),
  ('const_var_dec -> <empty>','const_var_dec',0,'p_const_var_dec_error','syntax_analyze.py',223),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',228),
  ('id_array_const -> <empty>','id_array_const',0,'p_id_array_const','syntax_analyze.py',229),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',239),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2_more','syntax_analyze.py',251),
  ('id_array_const2 -> <empty>','id_array_const2',0,'p_id_array_const2_error','syntax_analyze.py',258),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',263),
  ('id_const1 -> <empty>','id_const1',0,'p_id_const1','syntax_analyze.py',264),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',276),
  ('array_const1 -> <empty>','array_const1',0,'p_array_const1','syntax_analyze.py',277),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',294),
  ('id_array_var -> <empty>','id_array_var',0,'p_id_array_var','syntax_analyze.py',295),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',305),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2_more','syntax_analyze.py',311),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',321),
  ('var_init -> <empty>','var_init',0,'p_var_init','syntax_analyze.py',322),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',332),
  ('id_var1 -> <empty>','id_var1',0,'p_id_var1','syntax_analyze.py',333),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',344),
  ('array_init -> <empty>','array_init',0,'p_array_init','syntax_analyze.py',345),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',357),
  ('array_var1 -> <empty>','array_var1',0,'p_array_var1','syntax_analyze.py',358),
  ('value -> num_value','value',1,'p_value','syntax_analyze.py',372),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',373),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',374),
  ('value -> <empty>','value',0,'p_value','syntax_analyze.py',375),
  ('value_opt -> num_value_opt','value_opt',1,'p_value_opt','syntax_analyze.py',384),
  ('value_opt -> lit_str','value_opt',1,'p_value_opt','syntax_analyze.py',385),
  ('value_opt -> lit_bool','value_opt',1,'p_value_opt','syntax_analyze.py',386),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',391),
  ('num_value -> literals','num_value',1,'p_num_value_more','syntax_analyze.py',398),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value_more','syntax_analyze.py',399),
  ('num_value -> func_call','num_value',1,'p_num_value_more','syntax_analyze.py',400),
  ('num_value -> <empty>','num_value',0,'p_num_value_error','syntax_analyze.py',405),
  ('num_value_opt -> id_array_opt id_struct','num_value_opt',2,'p_num_value_opt','syntax_analyze.py',410),
  ('num_value_opt -> literals_opt','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',417),
  ('num_value_opt -> arithmetic_expression','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',418),
  ('num_value_opt -> func_call','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',419),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',426),
  ('id_array -> <empty>','id_array',0,'p_id_array','syntax_analyze.py',427),
  ('id_array_opt -> id array','id_array_opt',2,'p_id_array_opt','syntax_analyze.py',437),
  ('array -> open_brace num_value close_brace','array',3,'p_array','syntax_analyze.py',443),
  ('array -> open_brace close_brace','array',2,'p_array_more','syntax_analyze.py',450),
  ('array -> <empty>','array',0,'p_array_none','syntax_analyze.py',456),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',460),
  ('id_array1 -> <empty>','id_array1',0,'p_id_array1','syntax_analyze.py',461),
  ('id_array1 -> id_array id_array','id_array1',2,'p_id_array1_error','syntax_analyze.py',471),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',476),
  ('id_array2 -> <empty>','id_array2',0,'p_id_array2','syntax_analyze.py',477),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',486),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',487),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',488),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',489),
  ('literals -> <empty>','literals',0,'p_literals','syntax_analyze.py',490),
  ('literals_opt -> lit_intposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',499),
  ('literals_opt -> lit_intnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',500),
  ('literals_opt -> lit_decposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',501),
  ('literals_opt -> lit_decnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',502),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',507),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',514),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',522),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',523),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',524),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',525),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',526),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',527),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',528),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',533),
  ('id_struct -> <empty>','id_struct',0,'p_id_struct','syntax_analyze.py',534),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',544),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',550),
  ('value2 -> <empty>','value2',0,'p_value2','syntax_analyze.py',551),
  ('value1_opt -> value_opt value2_opt','value1_opt',2,'p_value1_opt','syntax_analyze.py',561),
  ('value2_opt -> comma value1_opt','value2_opt',2,'p_value2_opt','syntax_analyze.py',567),
  ('value2_opt -> <empty>','value2_opt',0,'p_value2_opt','syntax_analyze.py',568),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',577),
  ('statements -> for_statements statements','statements',2,'p_statements','syntax_analyze.py',578),
  ('statements -> while_statements statements','statements',2,'p_statements','syntax_analyze.py',579),
  ('statements -> if_statement statements','statements',2,'p_statements','syntax_analyze.py',580),
  ('statements -> switch_statements statements','statements',2,'p_statements','syntax_analyze.py',581),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',582),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',583),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',584),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyze.py',585),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',594),
  ('assignment_statements -> <empty>','assignment_statements',0,'p_assignment_statements','syntax_analyze.py',595),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',605),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',612),
  ('assignment_statements2 -> <empty>','assignment_statements2',0,'p_assignment_statements2_error','syntax_analyze.py',624),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',629),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',635),
  ('assignment_exp -> <empty>','assignment_exp',0,'p_assignment_exp_error','syntax_analyze.py',641),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',646),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value_more','syntax_analyze.py',651),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',657),
  ('more_id -> <empty>','more_id',0,'p_more_id','syntax_analyze.py',658),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',669),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',670),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',671),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',672),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',673),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',674),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',675),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',680),
  ('more_array -> <empty>','more_array',0,'p_more_array','syntax_analyze.py',681),
  ('block -> open_bracket inside_statements close_bracket','block',3,'p_block','syntax_analyze.py',694),
  ('block -> inside_statements close_bracket','block',2,'p_block','syntax_analyze.py',695),
  ('block -> open_bracket inside_statements','block',2,'p_block','syntax_analyze.py',696),
  ('block -> inside_statements','block',1,'p_block','syntax_analyze.py',697),
  ('for_statements -> For id In id open_brace close_brace colon block','for_statements',8,'p_for_statements','syntax_analyze.py',708),
  ('for_statements -> For id In id open_brace close_brace colon','for_statements',7,'p_for_statements','syntax_analyze.py',709),
  ('for_statements -> For id In id open_brace close_brace block','for_statements',7,'p_for_statements','syntax_analyze.py',710),
  ('for_statements -> For id In id open_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',711),
  ('for_statements -> For id In id close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',712),
  ('for_statements -> For id In open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',713),
  ('for_statements -> For id id open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',714),
  ('for_statements -> For In id open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',715),
  ('for_statements -> For id In id open_brace close_brace','for_statements',6,'p_for_statements','syntax_analyze.py',716),
  ('for_statements -> For id In id open_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',717),
  ('for_statements -> For id In id open_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',718),
  ('for_statements -> For id In id close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',719),
  ('for_statements -> For id In id close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',720),
  ('for_statements -> For id In id colon block','for_statements',6,'p_for_statements','syntax_analyze.py',721),
  ('for_statements -> For id In open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',722),
  ('for_statements -> For id In open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',723),
  ('for_statements -> For id In open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',724),
  ('for_statements -> For id In close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',725),
  ('for_statements -> For id id open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',726),
  ('for_statements -> For id id open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',727),
  ('for_statements -> For id id open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',728),
  ('for_statements -> For id id close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',729),
  ('for_statements -> For id open_brace close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',730),
  ('for_statements -> For In id open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',731),
  ('for_statements -> For In id open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',732),
  ('for_statements -> For In id open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',733),
  ('for_statements -> For In id close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',734),
  ('for_statements -> For In open_brace close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',735),
  ('for_statements -> For id In id open_brace','for_statements',5,'p_for_statements','syntax_analyze.py',736),
  ('for_statements -> For id In id close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',737),
  ('for_statements -> For id In id colon','for_statements',5,'p_for_statements','syntax_analyze.py',738),
  ('for_statements -> For id In id block','for_statements',5,'p_for_statements','syntax_analyze.py',739),
  ('for_statements -> For id In open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',740),
  ('for_statements -> For id In open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',741),
  ('for_statements -> For id In open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',742),
  ('for_statements -> For id In close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',743),
  ('for_statements -> For id In close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',744),
  ('for_statements -> For id In colon block','for_statements',5,'p_for_statements','syntax_analyze.py',745),
  ('for_statements -> For id id open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',746),
  ('for_statements -> For id id open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',747),
  ('for_statements -> For id id open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',748),
  ('for_statements -> For id id close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',749),
  ('for_statements -> For id id close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',750),
  ('for_statements -> For id id colon block','for_statements',5,'p_for_statements','syntax_analyze.py',751),
  ('for_statements -> For id open_brace close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',752),
  ('for_statements -> For id open_brace close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',753),
  ('for_statements -> For id open_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',754),
  ('for_statements -> For id close_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',755),
  ('for_statements -> For In id open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',756),
  ('for_statements -> For In id open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',757),
  ('for_statements -> For In id open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',758),
  ('for_statements -> For In id close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',759),
  ('for_statements -> For In id close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',760),
  ('for_statements -> For In id colon block','for_statements',5,'p_for_statements','syntax_analyze.py',761),
  ('for_statements -> For In open_brace close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',762),
  ('for_statements -> For In open_brace close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',763),
  ('for_statements -> For In open_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',764),
  ('for_statements -> For open_brace close_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',765),
  ('for_statements -> For id In id','for_statements',4,'p_for_statements','syntax_analyze.py',766),
  ('for_statements -> For id In open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',767),
  ('for_statements -> For id In close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',768),
  ('for_statements -> For id In colon','for_statements',4,'p_for_statements','syntax_analyze.py',769),
  ('for_statements -> For id In block','for_statements',4,'p_for_statements','syntax_analyze.py',770),
  ('for_statements -> For id id open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',771),
  ('for_statements -> For id id close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',772),
  ('for_statements -> For id id colon','for_statements',4,'p_for_statements','syntax_analyze.py',773),
  ('for_statements -> For id id block','for_statements',4,'p_for_statements','syntax_analyze.py',774),
  ('for_statements -> For id open_brace close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',775),
  ('for_statements -> For id open_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',776),
  ('for_statements -> For id open_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',777),
  ('for_statements -> For id close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',778),
  ('for_statements -> For id close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',779),
  ('for_statements -> For id colon block','for_statements',4,'p_for_statements','syntax_analyze.py',780),
  ('for_statements -> For In id open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',781),
  ('for_statements -> For In id close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',782),
  ('for_statements -> For In id colon','for_statements',4,'p_for_statements','syntax_analyze.py',783),
  ('for_statements -> For In id block','for_statements',4,'p_for_statements','syntax_analyze.py',784),
  ('for_statements -> For In open_brace close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',785),
  ('for_statements -> For In open_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',786),
  ('for_statements -> For In open_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',787),
  ('for_statements -> For In close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',788),
  ('for_statements -> For In close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',789),
  ('for_statements -> For In colon block','for_statements',4,'p_for_statements','syntax_analyze.py',790),
  ('for_statements -> For open_brace close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',791),
  ('for_statements -> For open_brace close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',792),
  ('for_statements -> For open_brace colon block','for_statements',4,'p_for_statements','syntax_analyze.py',793),
  ('for_statements -> For close_brace colon block','for_statements',4,'p_for_statements','syntax_analyze.py',794),
  ('for_statements -> For id In','for_statements',3,'p_for_statements','syntax_analyze.py',795),
  ('for_statements -> For id id','for_statements',3,'p_for_statements','syntax_analyze.py',796),
  ('for_statements -> For id open_brace','for_statements',3,'p_for_statements','syntax_analyze.py',797),
  ('for_statements -> For id close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',798),
  ('for_statements -> For id colon','for_statements',3,'p_for_statements','syntax_analyze.py',799),
  ('for_statements -> For id block','for_statements',3,'p_for_statements','syntax_analyze.py',800),
  ('for_statements -> For In id','for_statements',3,'p_for_statements','syntax_analyze.py',801),
  ('for_statements -> For In open_brace','for_statements',3,'p_for_statements','syntax_analyze.py',802),
  ('for_statements -> For In close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',803),
  ('for_statements -> For In colon','for_statements',3,'p_for_statements','syntax_analyze.py',804),
  ('for_statements -> For In block','for_statements',3,'p_for_statements','syntax_analyze.py',805),
  ('for_statements -> For open_brace close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',806),
  ('for_statements -> For open_brace colon','for_statements',3,'p_for_statements','syntax_analyze.py',807),
  ('for_statements -> For open_brace block','for_statements',3,'p_for_statements','syntax_analyze.py',808),
  ('for_statements -> For close_brace colon','for_statements',3,'p_for_statements','syntax_analyze.py',809),
  ('for_statements -> For close_brace block','for_statements',3,'p_for_statements','syntax_analyze.py',810),
  ('for_statements -> For colon block','for_statements',3,'p_for_statements','syntax_analyze.py',811),
  ('for_statements -> For id','for_statements',2,'p_for_statements','syntax_analyze.py',812),
  ('for_statements -> For In','for_statements',2,'p_for_statements','syntax_analyze.py',813),
  ('for_statements -> For open_brace','for_statements',2,'p_for_statements','syntax_analyze.py',814),
  ('for_statements -> For close_brace','for_statements',2,'p_for_statements','syntax_analyze.py',815),
  ('for_statements -> For colon','for_statements',2,'p_for_statements','syntax_analyze.py',816),
  ('for_statements -> For block','for_statements',2,'p_for_statements','syntax_analyze.py',817),
  ('while_statements -> While open_par condition close_par colon block','while_statements',6,'p_while_statements','syntax_analyze.py',833),
  ('while_statements -> While open_par condition close_par block','while_statements',5,'p_while_statements','syntax_analyze.py',834),
  ('while_statements -> While open_par condition colon block','while_statements',5,'p_while_statements','syntax_analyze.py',835),
  ('while_statements -> While condition close_par colon block','while_statements',5,'p_while_statements','syntax_analyze.py',836),
  ('while_statements -> While open_par condition block','while_statements',4,'p_while_statements','syntax_analyze.py',837),
  ('while_statements -> While condition close_par block','while_statements',4,'p_while_statements','syntax_analyze.py',838),
  ('while_statements -> While condition colon block','while_statements',4,'p_while_statements','syntax_analyze.py',839),
  ('inside_statements -> statements control_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',853),
  ('inside_statements -> control_statements statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',854),
  ('inside_statements -> <empty>','inside_statements',0,'p_inside_statements','syntax_analyze.py',855),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',864),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',865),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',866),
  ('control_statements -> <empty>','control_statements',0,'p_control_statements','syntax_analyze.py',867),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',875),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',876),
  ('condition -> lit_bool','condition',1,'p_condition','syntax_analyze.py',877),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition_more','syntax_analyze.py',882),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',894),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',895),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',900),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',905),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',912),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',913),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',914),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',915),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',916),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',917),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',922),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',933),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',941),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',942),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more1','syntax_analyze.py',947),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',952),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',953),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',958),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',959),
  ('if_statement -> If open_par condition close_par colon block condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',964),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',979),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',980),
  ('condition_else -> <empty>','condition_else',0,'p_condition_else_empty','syntax_analyze.py',985),
  ('elif_statement -> Elif open_par condition close_par colon block condition_else','elif_statement',7,'p_elif_statement','syntax_analyze.py',989),
  ('else_statement -> Else colon block','else_statement',3,'p_else_statement','syntax_analyze.py',1002),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','syntax_analyze.py',1003),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',1016),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',1030),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',1040),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',1041),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',1042),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',1047),
  ('execute1 -> <empty>','execute1',0,'p_execute1_more','syntax_analyze.py',1052),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',1057),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',1058),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',1063),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',1070),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',1077),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',1086),
  ('function_param -> value1_opt more_param','function_param',2,'p_function_param_more','syntax_analyze.py',1094),
  ('function_param -> <empty>','function_param',0,'p_function_param_none','syntax_analyze.py',1100),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',1104),
  ('more_param -> <empty>','more_param',0,'p_more_param','syntax_analyze.py',1105),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',11,'p_functions','syntax_analyze.py',1114),
  ('functions -> Sys id parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1115),
  ('functions -> Sys open_par parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1116),
  ('functions -> Sys parameters close_par declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1117),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1118),
  ('functions -> Sys parameters declare_statements statements return_statement close_bracket functions','functions',7,'p_functions','syntax_analyze.py',1119),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1120),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1121),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1122),
  ('functions -> Sys id parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1123),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1124),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1125),
  ('functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1126),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1127),
  ('functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1128),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1129),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1130),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1131),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1132),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1133),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1134),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1135),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1136),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1137),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1138),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1139),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',10,'p_functions','syntax_analyze.py',1140),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1141),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1142),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1143),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1144),
  ('functions -> <empty>','functions',0,'p_functions','syntax_analyze.py',1145),
  ('parameters -> data_type id more_parameters','parameters',3,'p_parameters','syntax_analyze.py',1167),
  ('parameters -> <empty>','parameters',0,'p_parameters_none','syntax_analyze.py',1174),
  ('more_parameters -> comma data_type id more_parameters','more_parameters',4,'p_more_parameters','syntax_analyze.py',1178),
  ('more_parameters -> <empty>','more_parameters',0,'p_more_parameters','syntax_analyze.py',1179),
  ('return_statement -> Return value statements return_statement','return_statement',4,'p_return_statement','syntax_analyze.py',1190),
  ('return_statement -> <empty>','return_statement',0,'p_return_statement','syntax_analyze.py',1191),
]
