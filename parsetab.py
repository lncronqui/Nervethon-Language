
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functionsprogram : global_dec Link_Start declare_statements statements functionsprogram : global_dec declare_statements statements Link_End functionsprogram : global_dec declare_statements statements functions global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | struct_dec : Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 struct_element1 : data_type id_array_dec data_type : Integer\n                | Decimal\n                | String\n                | Boolean  id_array_dec : id id_array_dec2 id_array_dec2 : id_dec1 id_array_dec2 : open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | struct_element2 : comma struct_element1 struct_element2\n                        | declare_statements : Generate const_var_dec declare_statements\n                            | const_var_dec : Fixed data_type id_array_const const_var_dec : data_type id_array_var id_array_const : id id_array_const2  id_array_const2 : open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1  id_array_const2 : equal value id_const1 id_const1 : comma id equal value id_const1 \n                | array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | id_array_var : id id_array_var2  id_array_var2 : var_init id_var1 id_array_var2 : open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | id_var1 : comma id var_init id_var1\n                | array_init : equal open_brace value1 close_brace array_var1 \n                | array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | value : num_value value : lit_str\n            | lit_bool num_value : id_array id_struct num_value : literals \n                | arithmetic_expression\n                | func_call id_array : id array array : open_brace lit_intposi close_brace \n            | id_array1 : id_array id_array2 id_array2 : comma id_array1\n                |literals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                |value1 : value value2value2 : comma value1 \n            |statements : assignment_statements statements \n                | looping_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                |assignment_statements : id assignment_statements2assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassign_value : num_valueassign_value : more_id valuemore_id : id_array id_struct equal more_id\n            |assignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                |looping_statements : for_statements\n                        | while_statementsfor_statements : For id In id open_brace close_brace colon open_bracket inside_statements close_bracketwhile_statements : While open_par condition close_par colon open_bracket inside_statements close_bracketinside_statements : statements inside_statements\n                        | control_statements inside_statements\n                        |control_statements : Break\n                        | Continue\n                        | Avoid condition   : relational_expression\n                    | logical_expression condition   : Not open_par condition_not close_par condition   : lit_bool condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par logical_operand : relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else condition_else  : elif_statement\n                        | else_statement condition_else  : elif_statement  : Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else else_statement  : Else colon open_bracket inside_statements close_bracket switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param\n                        | function_param  : value1 more_param more_param  : comma function_param\n                    | functions   : Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | parameters  : data_type id parameters parameters  : return_statement    : Return value statements return_statement\n                            |'
    
_lr_action_items = {'Link_Start':([0,2,3,4,9,10,12,41,43,44,63,65,66,67,68,69,70,71,72,73,74,75,79,81,82,104,114,121,124,127,140,166,167,175,176,177,178,189,206,207,208,213,215,216,240,246,247,268,290,292,307,308,310,321,323,330,337,350,351,],[-7,7,-7,-7,-6,-5,-24,-23,-26,-38,-54,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-52,-48,-27,-35,-40,-71,-63,-62,-31,-38,-42,-37,-150,-53,-8,-57,-29,-40,-44,-55,-39,-36,-56,-31,-44,-33,-30,-41,-28,-42,-44,-43,-33,-32,]),'Generate':([0,2,3,4,7,9,10,12,41,43,44,63,65,66,67,68,69,70,71,72,73,74,75,79,81,82,104,114,121,124,127,140,166,167,175,176,177,178,189,206,207,208,213,215,216,240,246,247,250,268,290,292,307,308,310,321,323,330,337,350,351,],[6,6,6,6,6,-6,-5,6,-23,-26,-38,-54,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-52,-48,-27,-35,-40,-71,-63,-62,-31,-38,-42,-37,-150,-53,-8,-57,-29,-40,-44,-55,-39,-36,6,-56,-31,-44,-33,-30,-41,-28,-42,-44,-43,-33,-32,]),'id':([0,2,3,4,5,7,8,9,10,12,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,41,42,43,44,48,49,50,51,52,53,54,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,81,82,84,90,92,93,94,103,104,106,107,108,109,110,111,112,113,114,121,123,124,125,127,130,131,132,133,134,135,136,137,138,139,140,147,155,156,157,158,159,160,161,162,166,167,168,173,175,176,177,178,180,181,182,183,184,185,187,189,191,193,196,206,207,208,213,214,215,216,220,221,232,234,240,241,246,247,248,249,250,252,253,257,260,261,262,263,264,266,267,268,270,271,272,275,277,280,282,285,290,292,295,299,300,301,307,308,310,312,314,315,317,321,322,323,325,327,330,337,340,342,346,347,348,350,351,],[-7,-24,-7,-7,11,-24,26,-6,-5,-24,44,-10,-11,-12,-13,26,26,26,26,26,26,-100,-101,-131,-132,-146,-147,57,58,61,63,63,-23,80,-26,-38,88,-76,-77,-78,-79,-80,-82,63,63,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,63,120,-25,-34,-40,63,63,142,146,63,-148,-52,63,-64,-65,-66,-67,-68,-69,-70,-48,-27,63,-35,176,-40,-83,63,63,-91,-92,-93,-94,-95,-96,-97,-71,63,63,63,-118,-119,-120,-121,-122,-123,-63,-62,63,211,-31,-38,-42,-37,219,-85,-86,-87,63,-72,223,-150,142,63,63,-53,-8,-57,-29,245,-40,-44,-88,-48,26,26,-55,63,-39,-36,273,63,-24,63,63,63,26,26,-107,-108,-109,26,26,-56,288,63,63,26,-89,26,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,63,-102,63,-139,-28,329,-42,26,26,-44,-43,-138,26,-136,63,-137,-33,-32,]),'Sys_Call':([0,2,3,4,7,8,9,10,12,19,21,22,23,24,25,27,28,29,30,31,32,39,41,43,44,49,50,51,52,53,54,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,82,84,92,94,103,104,106,107,108,109,110,111,112,113,114,121,123,124,127,130,131,132,133,134,135,136,137,138,139,140,147,155,156,157,158,159,160,161,162,166,167,175,176,177,178,181,182,183,184,185,189,191,193,196,206,207,208,213,215,216,220,221,232,234,240,246,247,249,250,252,253,257,260,261,262,263,264,266,267,268,271,272,275,277,280,282,285,290,292,295,299,300,301,307,308,310,312,314,315,317,321,323,325,327,330,337,340,342,346,347,348,350,351,],[-7,-24,-7,-7,-24,33,-6,-5,-24,33,33,33,33,33,33,-100,-101,-131,-132,-146,-147,33,-23,-26,-38,-76,-77,-78,-79,-80,-82,33,33,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,33,-25,-34,-40,33,33,33,-148,-52,33,-64,-65,-66,-67,-68,-69,-70,-48,-27,33,-35,-40,-83,33,33,-91,-92,-93,-94,-95,-96,-97,-71,33,33,33,-118,-119,-120,-121,-122,-123,-63,-62,-31,-38,-42,-37,-85,-86,-87,33,-72,-150,33,33,33,-53,-8,-57,-29,-40,-44,-88,-48,33,33,-55,-39,-36,33,-24,-90,33,33,33,33,-107,-108,-109,33,33,-56,33,33,33,-89,33,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,33,-102,33,-139,-28,-42,33,33,-44,-43,-138,33,-136,33,-137,-33,-32,]),'For':([0,2,3,4,7,8,9,10,12,19,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,232,234,240,246,247,250,260,261,262,263,264,266,267,268,275,280,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,325,327,330,337,340,342,346,348,350,351,],[-7,-24,-7,-7,-24,34,-6,-5,-24,34,34,34,34,34,34,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,34,34,-55,-39,-36,-24,34,34,-107,-108,-109,34,34,-56,34,34,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,34,34,-44,-43,-138,34,-136,-137,-33,-32,]),'While':([0,2,3,4,7,8,9,10,12,19,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,232,234,240,246,247,250,260,261,262,263,264,266,267,268,275,280,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,325,327,330,337,340,342,346,348,350,351,],[-7,-24,-7,-7,-24,35,-6,-5,-24,35,35,35,35,35,35,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,35,35,-55,-39,-36,-24,35,35,-107,-108,-109,35,35,-56,35,35,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,35,35,-44,-43,-138,35,-136,-137,-33,-32,]),'If':([0,2,3,4,7,8,9,10,12,19,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,232,234,240,246,247,250,260,261,262,263,264,266,267,268,275,280,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,325,327,330,337,340,342,346,348,350,351,],[-7,-24,-7,-7,-24,36,-6,-5,-24,36,36,36,36,36,36,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,36,36,-55,-39,-36,-24,36,36,-107,-108,-109,36,36,-56,36,36,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,36,36,-44,-43,-138,36,-136,-137,-33,-32,]),'Switch':([0,2,3,4,7,8,9,10,12,19,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,232,234,240,246,247,250,260,261,262,263,264,266,267,268,275,280,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,325,327,330,337,340,342,346,348,350,351,],[-7,-24,-7,-7,-24,37,-6,-5,-24,37,37,37,37,37,37,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,37,37,-55,-39,-36,-24,37,37,-107,-108,-109,37,37,-56,37,37,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,37,37,-44,-43,-138,37,-136,-137,-33,-32,]),'Absorb':([0,2,3,4,7,8,9,10,12,19,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,232,234,240,246,247,250,260,261,262,263,264,266,267,268,275,280,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,325,327,330,337,340,342,346,348,350,351,],[-7,-24,-7,-7,-24,38,-6,-5,-24,38,38,38,38,38,38,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,38,38,-55,-39,-36,-24,38,38,-107,-108,-109,38,38,-56,38,38,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,38,38,-44,-43,-138,38,-136,-137,-33,-32,]),'Discharge':([0,2,3,4,7,8,9,10,12,19,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,232,234,240,246,247,250,260,261,262,263,264,266,267,268,275,280,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,325,327,330,337,340,342,346,348,350,351,],[-7,-24,-7,-7,-24,39,-6,-5,-24,39,39,39,39,39,39,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,39,39,-55,-39,-36,-24,39,39,-107,-108,-109,39,39,-56,39,39,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,39,39,-44,-43,-138,39,-136,-137,-33,-32,]),'Link_End':([0,2,3,4,7,8,9,10,12,19,20,21,22,23,24,25,27,28,29,30,31,32,41,43,44,45,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,240,246,247,268,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,330,337,340,346,348,350,351,],[-7,-24,-7,-7,-24,-81,-6,-5,-24,-81,46,-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-23,-26,-38,85,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,-55,-39,-36,-56,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,-44,-43,-138,-136,-137,-33,-32,]),'Sys':([0,2,3,4,7,8,9,10,12,19,20,21,22,23,24,25,27,28,29,30,31,32,41,43,44,45,46,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,85,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,240,246,247,268,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,324,330,337,340,346,348,350,351,],[-7,-24,-7,-7,-24,-81,-6,-5,-24,-81,48,-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-23,-26,-38,48,48,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,48,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,-55,-39,-36,-56,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,48,-44,-43,-138,-136,-137,-33,-32,]),'$end':([0,1,2,3,4,7,8,9,10,12,19,20,21,22,23,24,25,27,28,29,30,31,32,41,43,44,45,46,47,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,85,86,87,103,104,114,121,124,127,128,130,140,166,167,175,176,177,178,181,182,183,185,189,206,207,208,213,215,216,220,221,240,246,247,268,282,285,290,292,295,299,300,301,307,308,310,314,317,321,323,324,330,331,337,340,346,348,350,351,],[-7,0,-24,-7,-7,-24,-81,-6,-5,-24,-81,-157,-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-23,-26,-38,-157,-157,-4,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-157,-2,-3,-148,-52,-48,-27,-35,-40,-1,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-8,-57,-29,-40,-44,-88,-48,-55,-39,-36,-56,-103,-136,-31,-44,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,-157,-44,-156,-43,-138,-136,-137,-33,-32,]),'Struct':([0,3,4,12,41,43,44,63,65,66,67,68,69,70,71,72,73,74,75,79,81,82,104,114,121,124,127,140,166,167,175,176,177,178,189,206,207,208,213,215,216,240,246,247,268,290,292,307,308,310,321,323,330,337,350,351,],[5,5,5,-24,-23,-26,-38,-54,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-52,-48,-27,-35,-40,-71,-63,-62,-31,-38,-42,-37,-150,-53,-8,-57,-29,-40,-44,-55,-39,-36,-56,-31,-44,-33,-30,-41,-28,-42,-44,-43,-33,-32,]),'Fixed':([6,],[13,]),'Integer':([6,13,40,118,129,219,],[15,15,15,15,15,15,]),'Decimal':([6,13,40,118,129,219,],[16,16,16,16,16,16,]),'String':([6,13,40,118,129,219,],[17,17,17,17,17,17,]),'Boolean':([6,13,40,118,129,219,],[18,18,18,18,18,18,]),'open_bracket':([11,102,197,203,218,256,316,339,],[40,164,232,234,250,280,327,342,]),'Return':([12,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,81,82,103,104,114,121,124,127,130,140,166,167,175,176,177,178,181,182,183,185,189,206,213,215,216,220,221,246,247,250,275,282,285,290,292,293,295,299,300,301,307,308,310,314,317,321,323,325,330,332,337,340,346,348,350,351,],[-24,-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-25,-34,-40,-148,-52,-48,-27,-35,-40,-83,-71,-63,-62,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-29,-40,-44,-88,-48,-39,-36,-24,-81,-103,-136,-31,-44,312,-84,-133,-134,-135,-33,-30,-41,-102,-139,-28,-42,-81,-44,312,-43,-138,-136,-137,-33,-32,]),'close_bracket':([12,21,22,23,24,25,27,28,29,30,31,32,41,43,44,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,81,82,103,104,114,117,119,120,121,124,127,130,140,166,167,169,170,171,175,176,177,178,181,182,183,185,189,206,209,211,213,215,216,220,221,232,234,242,243,246,247,250,259,260,261,262,263,264,265,266,269,275,280,282,283,284,285,286,290,292,293,295,297,299,300,301,307,308,310,311,314,317,321,323,325,327,328,330,332,334,335,337,338,340,342,344,346,348,350,351,],[-24,-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-23,-26,-38,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-22,-25,-34,-40,-148,-52,-48,168,-9,-18,-27,-35,-40,-83,-71,-63,-62,-22,-14,-15,-31,-38,-42,-37,-85,-86,-87,-72,-150,-53,-21,-18,-29,-40,-44,-88,-48,-81,-81,-20,-17,-39,-36,-24,282,-81,-81,-107,-108,-109,285,-81,-16,-81,-81,-103,-104,-105,-136,304,-31,-44,-161,-84,314,-133,-134,-135,-33,-30,-41,324,-102,-139,-28,-42,-81,-81,-20,-44,-161,340,-19,-43,-160,-138,-81,346,-136,-137,-33,-32,]),'Break':([21,22,23,24,25,27,28,29,30,31,32,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,103,104,114,130,140,166,167,181,182,183,185,189,206,220,221,232,234,260,261,262,263,264,266,267,280,282,285,287,295,299,300,301,314,317,327,340,342,346,348,],[-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-148,-52,-48,-83,-71,-63,-62,-85,-86,-87,-72,-150,-53,-88,-48,262,262,262,262,-107,-108,-109,262,-81,262,-103,-136,305,-84,-133,-134,-135,-102,-139,262,-138,262,-136,-137,]),'Continue':([21,22,23,24,25,27,28,29,30,31,32,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,103,104,114,130,140,166,167,181,182,183,185,189,206,220,221,232,234,260,261,262,263,264,266,280,282,285,295,299,300,301,314,317,327,340,342,346,348,],[-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-148,-52,-48,-83,-71,-63,-62,-85,-86,-87,-72,-150,-53,-88,-48,263,263,263,263,-107,-108,-109,263,263,-103,-136,-84,-133,-134,-135,-102,-139,263,-138,263,-136,-137,]),'Avoid':([21,22,23,24,25,27,28,29,30,31,32,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,103,104,114,130,140,166,167,181,182,183,185,189,206,220,221,232,234,260,261,262,263,264,266,280,282,285,295,299,300,301,314,317,327,340,342,346,348,],[-81,-81,-81,-81,-81,-100,-101,-131,-132,-146,-147,-76,-77,-78,-79,-80,-82,-72,-54,-149,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-148,-52,-48,-83,-71,-63,-62,-85,-86,-87,-72,-150,-53,-88,-48,264,264,264,264,-107,-108,-109,264,264,-103,-136,-84,-133,-134,-135,-102,-139,264,-138,264,-136,-137,]),'open_brace':([26,44,63,80,120,142,146,217,222,223,244,273,288,329,345,],[56,83,105,122,172,188,194,249,253,254,271,291,306,336,347,]),'period':([26,55,62,63,68,104,141,142,185,206,276,],[-54,90,90,-54,90,-52,-53,-54,90,-53,90,]),'equal':([26,44,55,63,80,89,104,140,141,176,177,185,186,206,212,221,245,276,294,296,313,323,343,],[-54,84,-72,-54,123,132,-52,-71,187,84,217,-72,222,-53,244,252,272,-72,252,187,-98,217,345,]),'plus_equal':([26,55,63,89,104,140,141,206,],[-54,-72,-54,133,-52,-71,-53,-53,]),'minus_equal':([26,55,63,89,104,140,141,206,],[-54,-72,-54,134,-52,-71,-53,-53,]),'times_equal':([26,55,63,89,104,140,141,206,],[-54,-72,-54,135,-52,-71,-53,-53,]),'divide_equal':([26,55,63,89,104,140,141,206,],[-54,-72,-54,136,-52,-71,-53,-53,]),'divide_divide_equal':([26,55,63,89,104,140,141,206,],[-54,-72,-54,137,-52,-71,-53,-53,]),'modulo_equal':([26,55,63,89,104,140,141,206,],[-54,-72,-54,138,-52,-71,-53,-53,]),'times_times_equal':([26,55,63,89,104,140,141,206,],[-54,-72,-54,139,-52,-71,-53,-53,]),'open_par':([35,36,39,57,59,60,76,84,88,92,94,98,106,107,108,109,110,111,112,113,123,131,132,133,134,135,136,137,138,139,147,149,155,156,157,158,159,160,161,162,184,191,193,196,228,229,230,249,252,253,257,271,272,277,302,312,315,347,],[59,60,76,92,94,94,76,76,129,76,147,155,76,-64,-65,-66,-67,-68,-69,-70,76,76,76,-91,-92,-93,-94,-95,-96,-97,147,196,94,76,-118,-119,-120,-121,-122,-123,76,76,76,94,257,-129,-130,76,-90,76,94,76,76,-89,315,76,94,76,]),'lit_str':([39,59,60,84,92,94,123,132,147,155,156,157,158,159,160,161,162,184,191,193,196,205,249,252,253,257,271,272,277,312,315,347,],[66,66,66,66,66,66,66,-90,66,66,66,-118,-119,-120,-121,-122,-123,66,66,66,66,237,66,-90,66,66,66,66,-89,66,66,66,]),'lit_bool':([39,59,60,84,92,94,123,132,147,155,156,157,158,159,160,161,162,184,191,193,196,249,252,253,257,271,272,277,312,315,347,],[67,99,99,67,67,152,67,-90,152,201,67,-118,-119,-120,-121,-122,-123,67,67,67,152,67,-90,67,152,67,67,-89,67,99,67,]),'lit_intposi':([39,56,59,60,76,83,84,92,94,105,106,107,108,109,110,111,112,113,122,123,131,132,133,134,135,136,137,138,139,147,155,156,157,158,159,160,161,162,172,184,188,191,193,196,205,249,252,253,254,257,271,272,277,291,306,312,315,336,347,],[72,91,72,72,72,126,72,72,72,165,72,-64,-65,-66,-67,-68,-69,-70,174,72,72,72,-91,-92,-93,-94,-95,-96,-97,72,72,72,-118,-119,-120,-121,-122,-123,210,72,165,72,72,72,238,72,-90,72,279,72,72,72,-89,309,320,72,72,341,72,]),'lit_intnega':([39,59,60,76,84,92,94,106,107,108,109,110,111,112,113,123,131,132,133,134,135,136,137,138,139,147,155,156,157,158,159,160,161,162,184,191,193,196,205,249,252,253,257,271,272,277,312,315,347,],[73,73,73,73,73,73,73,73,-64,-65,-66,-67,-68,-69,-70,73,73,73,-91,-92,-93,-94,-95,-96,-97,73,73,73,-118,-119,-120,-121,-122,-123,73,73,73,73,239,73,-90,73,73,73,73,-89,73,73,73,]),'lit_decposi':([39,59,60,76,84,92,94,106,107,108,109,110,111,112,113,123,131,132,133,134,135,136,137,138,139,147,155,156,157,158,159,160,161,162,184,191,193,196,249,252,253,257,271,272,277,312,315,347,],[74,74,74,74,74,74,74,74,-64,-65,-66,-67,-68,-69,-70,74,74,74,-91,-92,-93,-94,-95,-96,-97,74,74,74,-118,-119,-120,-121,-122,-123,74,74,74,74,74,-90,74,74,74,74,-89,74,74,74,]),'lit_decnega':([39,59,60,76,84,92,94,106,107,108,109,110,111,112,113,123,131,132,133,134,135,136,137,138,139,147,155,156,157,158,159,160,161,162,184,191,193,196,249,252,253,257,271,272,277,312,315,347,],[75,75,75,75,75,75,75,75,-64,-65,-66,-67,-68,-69,-70,75,75,75,-91,-92,-93,-94,-95,-96,-97,75,75,75,-118,-119,-120,-121,-122,-123,75,75,75,75,75,-90,75,75,75,75,-89,75,75,75,]),'comma':([44,63,65,66,67,68,69,70,71,72,73,74,75,77,82,104,114,119,120,127,140,142,144,145,166,167,169,170,171,175,176,177,178,189,192,206,208,211,215,216,224,226,242,243,246,269,290,292,307,310,323,328,330,335,337,350,],[-38,-54,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,118,125,-52,-48,-9,173,125,-71,-54,191,193,-63,-62,118,-14,-15,214,-38,-42,-37,-150,-73,-53,241,173,125,248,191,-74,270,-17,-39,-16,214,248,322,-41,-42,270,248,-19,-43,322,]),'In':([58,],[93,]),'Not':([59,60,94,147,196,257,315,],[98,98,149,149,149,149,98,]),'colon':([61,154,163,227,235,236,237,238,239,303,333,],[102,197,203,256,266,267,-141,-142,-143,316,339,]),'plus':([63,65,68,69,70,71,72,73,74,75,104,114,115,116,140,142,153,166,167,181,183,185,189,206,221,],[-54,107,-72,-49,-50,-51,-58,-59,-60,-61,-52,-48,-50,107,-71,-54,107,107,-62,107,107,-72,-150,-53,-48,]),'minus':([63,65,68,69,70,71,72,73,74,75,104,114,115,116,140,142,153,166,167,181,183,185,189,206,221,],[-54,108,-72,-49,-50,-51,-58,-59,-60,-61,-52,-48,-50,108,-71,-54,108,108,-62,108,108,-72,-150,-53,-48,]),'times':([63,65,68,69,70,71,72,73,74,75,104,114,115,116,140,142,153,166,167,181,183,185,189,206,221,],[-54,109,-72,-49,-50,-51,-58,-59,-60,-61,-52,-48,-50,109,-71,-54,109,109,-62,109,109,-72,-150,-53,-48,]),'divide':([63,65,68,69,70,71,72,73,74,75,104,114,115,116,140,142,153,166,167,181,183,185,189,206,221,],[-54,110,-72,-49,-50,-51,-58,-59,-60,-61,-52,-48,-50,110,-71,-54,110,110,-62,110,110,-72,-150,-53,-48,]),'divide_divide':([63,65,68,69,70,71,72,73,74,75,104,114,115,116,140,142,153,166,167,181,183,185,189,206,221,],[-54,111,-72,-49,-50,-51,-58,-59,-60,-61,-52,-48,-50,111,-71,-54,111,111,-62,111,111,-72,-150,-53,-48,]),'modulo':([63,65,68,69,70,71,72,73,74,75,104,114,115,116,140,142,153,166,167,181,183,185,189,206,221,],[-54,112,-72,-49,-50,-51,-58,-59,-60,-61,-52,-48,-50,112,-71,-54,112,112,-62,112,112,-72,-150,-53,-48,]),'times_times':([63,65,68,69,70,71,72,73,74,75,104,114,115,116,140,142,153,166,167,181,183,185,189,206,221,],[-54,113,-72,-49,-50,-51,-58,-59,-60,-61,-52,-48,-50,113,-71,-54,113,113,-62,113,113,-72,-150,-53,-48,]),'greater_than':([63,65,66,68,69,70,71,72,73,74,75,99,100,104,114,115,140,152,153,166,167,189,201,206,],[-54,-45,-46,-72,-49,-50,-51,-58,-59,-60,-61,-47,157,-52,-48,-50,-71,-47,-45,-63,-62,-150,-47,-53,]),'less_than':([63,65,66,68,69,70,71,72,73,74,75,99,100,104,114,115,140,152,153,166,167,189,201,206,],[-54,-45,-46,-72,-49,-50,-51,-58,-59,-60,-61,-47,158,-52,-48,-50,-71,-47,-45,-63,-62,-150,-47,-53,]),'equal_equal':([63,65,66,68,69,70,71,72,73,74,75,99,100,104,114,115,140,152,153,166,167,189,201,206,],[-54,-45,-46,-72,-49,-50,-51,-58,-59,-60,-61,-47,159,-52,-48,-50,-71,-47,-45,-63,-62,-150,-47,-53,]),'not_equal':([63,65,66,68,69,70,71,72,73,74,75,99,100,104,114,115,140,152,153,166,167,189,201,206,],[-54,-45,-46,-72,-49,-50,-51,-58,-59,-60,-61,-47,160,-52,-48,-50,-71,-47,-45,-63,-62,-150,-47,-53,]),'great_than_equal':([63,65,66,68,69,70,71,72,73,74,75,99,100,104,114,115,140,152,153,166,167,189,201,206,],[-54,-45,-46,-72,-49,-50,-51,-58,-59,-60,-61,-47,161,-52,-48,-50,-71,-47,-45,-63,-62,-150,-47,-53,]),'less_than_equal':([63,65,66,68,69,70,71,72,73,74,75,99,100,104,114,115,140,152,153,166,167,189,201,206,],[-54,-45,-46,-72,-49,-50,-51,-58,-59,-60,-61,-47,162,-52,-48,-50,-71,-47,-45,-63,-62,-150,-47,-53,]),'close_par':([63,65,66,67,68,69,70,71,72,73,74,75,92,95,96,97,99,101,104,114,115,129,140,142,143,144,145,148,150,151,152,166,167,179,189,190,191,192,198,199,200,201,202,206,219,224,225,226,231,233,251,255,258,281,298,326,],[-54,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,-152,154,-110,-111,-113,163,-52,-48,167,-159,-71,-54,189,-155,-75,195,-126,-127,-128,-63,-62,218,-150,-153,-152,-73,233,-114,-115,-116,-117,-53,-159,-155,-154,-74,258,-112,-158,-151,-125,298,-124,333,]),'close_brace':([63,65,66,67,68,69,70,71,72,73,74,75,91,104,114,126,140,145,165,166,167,174,188,189,192,194,206,210,226,274,278,279,289,309,320,341,349,],[-54,-45,-46,-47,-72,-49,-50,-51,-58,-59,-60,-61,141,-52,-48,177,-71,-75,206,-63,-62,212,224,-150,-73,227,-53,242,-74,292,295,296,307,323,328,343,350,]),'Execute':([164,305,],[205,205,]),'And':([195,],[229,]),'Or':([195,],[230,]),'Default':([204,305,318,319,],[235,-145,-140,-144,]),'Elif':([285,346,],[302,302,]),'Else':([285,346,],[303,303,]),'End_Switch':([304,],[317,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,9,10,]),'declare_statements':([0,2,3,4,7,12,250,],[3,8,3,3,19,41,275,]),'struct_dec':([0,3,4,],[4,4,4,]),'const_var_dec':([6,],[12,]),'data_type':([6,13,40,118,129,219,],[14,42,78,78,180,180,]),'statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[20,45,49,50,51,52,53,260,260,260,260,260,287,293,260,332,260,260,]),'assignment_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'looping_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'conditional_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'io_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'func_call':([8,19,21,22,23,24,25,39,59,60,76,84,92,94,106,123,131,132,147,155,156,184,191,193,196,232,234,249,253,257,260,261,266,267,271,272,275,280,312,315,325,327,342,347,],[25,25,25,25,25,25,25,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,25,25,71,71,71,25,25,25,25,71,71,25,25,71,71,25,25,25,71,]),'for_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'while_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'if_statement':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'switch_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'input_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'output_statements':([8,19,21,22,23,24,25,232,234,260,261,266,267,275,280,325,327,342,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'id_array_var':([14,],[43,]),'functions':([20,45,46,85,324,],[47,86,87,128,331,]),'assignment_statements2':([26,],[54,]),'array':([26,63,142,],[55,104,104,]),'id_array':([38,39,59,60,76,84,90,92,94,106,123,131,132,147,155,156,168,184,191,193,196,241,249,252,253,257,271,272,312,315,347,],[62,68,68,68,68,68,140,68,68,68,68,68,185,68,68,68,208,68,68,68,68,208,68,276,68,68,68,68,68,68,68,]),'value':([39,59,60,84,92,94,123,147,155,156,184,191,193,196,249,253,257,271,272,312,315,347,],[64,100,100,127,145,100,175,100,100,202,220,145,145,100,145,145,100,145,290,325,100,145,]),'num_value':([39,59,60,76,84,92,94,106,123,131,132,147,155,156,184,191,193,196,249,253,257,271,272,312,315,347,],[65,65,65,116,65,65,153,166,65,181,183,153,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'literals':([39,59,60,76,84,92,94,106,123,131,132,147,155,156,184,191,193,196,249,253,257,271,272,312,315,347,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'arithmetic_expression':([39,59,60,76,84,92,94,106,123,131,132,147,155,156,184,191,193,196,249,253,257,271,272,312,315,347,],[70,70,70,115,70,70,115,70,70,70,70,115,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'struct_element1':([40,118,],[77,169,]),'id_array_const':([42,],[79,]),'id_array_var2':([44,],[81,]),'var_init':([44,176,],[82,215,]),'id_struct':([55,62,68,185,276,],[89,103,114,221,294,]),'condition':([59,60,315,],[95,101,326,]),'relational_expression':([59,60,94,147,155,196,257,315,],[96,96,150,150,199,150,150,96,]),'logical_expression':([59,60,94,147,155,196,257,315,],[97,97,151,151,200,151,151,97,]),'arithmetic_operators':([65,116,153,166,181,183,],[106,106,106,106,106,106,]),'struct_element2':([77,169,],[117,209,]),'id_array_dec':([78,],[119,]),'id_array_const2':([80,],[121,]),'id_var1':([82,127,215,],[124,178,246,]),'assignment_exp':([89,],[130,]),'assignment_operators':([89,],[131,]),'function_param':([92,191,],[143,225,]),'value1':([92,191,193,249,253,271,347,],[144,144,226,274,278,289,349,]),'logical_operand':([94,147,196,257,],[148,148,231,281,]),'relational_operators':([100,],[156,]),'id_array_dec2':([120,],[170,]),'id_dec1':([120,211,],[171,243,]),'parameters':([129,219,],[179,251,]),'assign_value':([132,],[182,]),'more_id':([132,252,],[184,277,]),'more_array':([141,296,],[186,313,]),'more_param':([144,224,],[190,255,]),'value2':([145,],[192,]),'condition_not':([155,],[198,]),'execute':([164,305,],[204,319,]),'id_array1':([168,241,],[207,268,]),'id_const1':([175,290,],[213,308,]),'array_init':([177,323,],[216,330,]),'logical_operators':([195,],[228,]),'switch_lit':([205,],[236,]),'id_array2':([208,],[240,]),'array_var1':([216,292,330,],[247,310,337,]),'inside_statements':([232,234,260,261,266,280,327,342,],[259,265,283,284,286,297,334,344,]),'control_statements':([232,234,260,261,266,280,327,342,],[261,261,261,261,261,261,261,261,]),'array_dec1':([242,328,],[269,335,]),'condition_else':([285,346,],[299,348,]),'elif_statement':([285,346,],[300,300,]),'else_statement':([285,346,],[301,301,]),'return_statement':([293,332,],[311,338,]),'execute1':([305,],[318,]),'array_const1':([307,350,],[321,351,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',66),
  ('program -> global_dec Link_Start declare_statements statements functions','program',5,'p_program_error1','syntax_analyze.py',76),
  ('program -> global_dec declare_statements statements Link_End functions','program',5,'p_program_error2','syntax_analyze.py',86),
  ('program -> global_dec declare_statements statements functions','program',4,'p_program_error3','syntax_analyze.py',96),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',107),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',108),
  ('global_dec -> <empty>','global_dec',0,'p_global_dec','syntax_analyze.py',109),
  ('struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1','struct_dec',7,'p_struct_dec','syntax_analyze.py',118),
  ('struct_element1 -> data_type id_array_dec','struct_element1',2,'p_struct_element1','syntax_analyze.py',129),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',136),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',137),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',138),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',139),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',145),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',151),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2_more','syntax_analyze.py',156),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',164),
  ('id_dec1 -> <empty>','id_dec1',0,'p_id_dec1','syntax_analyze.py',165),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',175),
  ('array_dec1 -> <empty>','array_dec1',0,'p_array_dec1','syntax_analyze.py',176),
  ('struct_element2 -> comma struct_element1 struct_element2','struct_element2',3,'p_struct_element2','syntax_analyze.py',189),
  ('struct_element2 -> <empty>','struct_element2',0,'p_struct_element2','syntax_analyze.py',190),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',200),
  ('declare_statements -> <empty>','declare_statements',0,'p_declare_statements','syntax_analyze.py',201),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',211),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec_more','syntax_analyze.py',218),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',224),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',230),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2_more','syntax_analyze.py',242),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',249),
  ('id_const1 -> <empty>','id_const1',0,'p_id_const1','syntax_analyze.py',250),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',263),
  ('array_const1 -> <empty>','array_const1',0,'p_array_const1','syntax_analyze.py',264),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',281),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',287),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2_more','syntax_analyze.py',293),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',302),
  ('var_init -> <empty>','var_init',0,'p_var_init','syntax_analyze.py',303),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',313),
  ('id_var1 -> <empty>','id_var1',0,'p_id_var1','syntax_analyze.py',314),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',325),
  ('array_init -> <empty>','array_init',0,'p_array_init','syntax_analyze.py',326),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',339),
  ('array_var1 -> <empty>','array_var1',0,'p_array_var1','syntax_analyze.py',340),
  ('value -> num_value','value',1,'p_value_num_value','syntax_analyze.py',354),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',359),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',360),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',365),
  ('num_value -> literals','num_value',1,'p_num_value_more','syntax_analyze.py',372),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value_more','syntax_analyze.py',373),
  ('num_value -> func_call','num_value',1,'p_num_value_more','syntax_analyze.py',374),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',379),
  ('array -> open_brace lit_intposi close_brace','array',3,'p_array','syntax_analyze.py',385),
  ('array -> <empty>','array',0,'p_array','syntax_analyze.py',386),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',397),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',403),
  ('id_array2 -> <empty>','id_array2',0,'p_id_array2','syntax_analyze.py',404),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',414),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',415),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',416),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',417),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',422),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',429),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',437),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',438),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',439),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',440),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',441),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',442),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',443),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',448),
  ('id_struct -> <empty>','id_struct',0,'p_id_struct','syntax_analyze.py',449),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',459),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',465),
  ('value2 -> <empty>','value2',0,'p_value2','syntax_analyze.py',466),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',475),
  ('statements -> looping_statements statements','statements',2,'p_statements','syntax_analyze.py',476),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',477),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',478),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',479),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyze.py',480),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',489),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',495),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',502),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',514),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',520),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',526),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value_more','syntax_analyze.py',531),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',537),
  ('more_id -> <empty>','more_id',0,'p_more_id','syntax_analyze.py',538),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',549),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',550),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',551),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',552),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',553),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',554),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',555),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',560),
  ('more_array -> <empty>','more_array',0,'p_more_array','syntax_analyze.py',561),
  ('looping_statements -> for_statements','looping_statements',1,'p_looping_statements','syntax_analyze.py',574),
  ('looping_statements -> while_statements','looping_statements',1,'p_looping_statements','syntax_analyze.py',575),
  ('for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket','for_statements',10,'p_for_statements','syntax_analyze.py',580),
  ('while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket','while_statements',8,'p_while_statements','syntax_analyze.py',594),
  ('inside_statements -> statements inside_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',606),
  ('inside_statements -> control_statements inside_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',607),
  ('inside_statements -> <empty>','inside_statements',0,'p_inside_statements','syntax_analyze.py',608),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',617),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',618),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',619),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',624),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',625),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition_more','syntax_analyze.py',630),
  ('condition -> lit_bool','condition',1,'p_condition_more1','syntax_analyze.py',638),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',643),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',644),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',649),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',654),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',661),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',662),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',663),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',664),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',665),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',666),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',671),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',682),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',690),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',691),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more1','syntax_analyze.py',696),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',701),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',702),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',707),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',708),
  ('if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','if_statement',9,'p_if_statement','syntax_analyze.py',713),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',725),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',726),
  ('condition_else -> <empty>','condition_else',0,'p_condition_else_empty','syntax_analyze.py',731),
  ('elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','elif_statement',9,'p_elif_statement','syntax_analyze.py',735),
  ('else_statement -> Else colon open_bracket inside_statements close_bracket','else_statement',5,'p_else_statement','syntax_analyze.py',748),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',757),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',771),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',781),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',782),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',783),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',788),
  ('execute1 -> <empty>','execute1',0,'p_execute1_more','syntax_analyze.py',793),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',798),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',799),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',804),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',811),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',817),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',826),
  ('function_param -> <empty>','function_param',0,'p_function_param','syntax_analyze.py',827),
  ('function_param -> value1 more_param','function_param',2,'p_function_param_more','syntax_analyze.py',838),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',844),
  ('more_param -> <empty>','more_param',0,'p_more_param','syntax_analyze.py',845),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',11,'p_functions','syntax_analyze.py',854),
  ('functions -> <empty>','functions',0,'p_functions','syntax_analyze.py',855),
  ('parameters -> data_type id parameters','parameters',3,'p_parameters','syntax_analyze.py',873),
  ('parameters -> <empty>','parameters',0,'p_parameters_none','syntax_analyze.py',880),
  ('return_statement -> Return value statements return_statement','return_statement',4,'p_return_statement','syntax_analyze.py',884),
  ('return_statement -> <empty>','return_statement',0,'p_return_statement','syntax_analyze.py',885),
]
