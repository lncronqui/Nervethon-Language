
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal error1 error2 great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functions empty : global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | empty struct_dec : Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 struct_element1 : data_type id_array_dec data_type : Integer\n                | Decimal\n                | String\n                | Boolean  id_array_dec : id id_array_dec2 id_array_dec2 : id_dec1\n                    | open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | empty array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | empty struct_element2 : comma struct_element1 struct_element2\n                        | empty declare_statements : Generate const_var_dec declare_statements\n                            | empty const_var_dec : Fixed data_type id_array_const\n                    | data_type id_array_var  id_array_const : id id_array_const2  id_array_const2 : equal value id_const1 \n                        | open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1  id_const1 : comma id equal value id_const1 \n                | empty array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | empty id_array_var : id id_array_var2  id_array_var2 : var_init id_var1\n                    | open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | empty id_var1 : comma id var_init id_var1\n                | empty array_init : equal open_brace value1 close_brace array_var1 \n                | empty array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | empty value : num_value value : lit_str\n            | lit_bool num_value : id_array id_struct\n                | literals \n                | arithmetic_expression\n                | func_call  id_array : id array array : open_brace lit_intposi close_brace \n            | empty id_array1 : id_array id_array2 id_array2 : comma id_array1\n                | emptyliterals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                | emptyvalue1 : value value2value2 : comma value1 \n            | emptystatements : assignment_statements statements \n                | looping_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                | emptyassignment_statements : id assignment_statements2assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassign_value : num_value\n                    | more_id valuemore_id : id_array id_struct equal more_id\n            | emptyassignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                | emptylooping_statements : for_statements\n                        | while_statementsfor_statements : For id In id open_brace close_brace colon open_bracket inside_statements close_bracketwhile_statements : While open_par condition close_par colon open_bracket inside_statements close_bracketinside_statements : statements inside_statements\n                        | control_statements inside_statements\n                        | emptycontrol_statements : Break\n                        | Continue\n                        | Avoid condition   : relational_expression\n                    | logical_expression\n                    | Not open_par condition_not close_par condition   : lit_bool condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par\n                        | relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else condition_else  : elif_statement\n                        | else_statement condition_else  : empty elif_statement  : Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else else_statement  : Else colon open_bracket inside_statements close_bracket switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : empty io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param\n                        | empty function_param  : value1 more_param more_param  : comma function_param\n                    | empty functions   : Sys id open_par parameters close_par open_bracket declare_statements function_body close_bracket functions\n                    | empty parameters  : data_type id parameters\n                    | empty function_body   : statements function_body\n                        | return_statement function_body\n                        | empty return_statement    : Return value'
    
_lr_action_items = {'Struct':([0,3,4,5,12,20,22,24,25,49,51,52,55,65,72,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,118,128,138,140,141,142,154,181,182,183,184,188,190,192,193,195,207,226,227,229,234,235,237,262,290,293,309,310,312,328,330,331,347,356,371,372,],[6,6,6,-22,-2,-22,-21,-24,-2,-23,-32,-2,-36,-52,-2,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-50,-46,-2,-2,-2,-35,-69,-61,-60,-6,-2,-26,-29,-2,-2,-40,-148,-51,-53,-55,-37,-34,-42,-54,-2,-2,-28,-2,-39,-27,-31,-2,-2,-41,-2,-30,]),'Generate':([0,3,4,5,8,12,20,22,24,25,49,51,52,55,65,72,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,118,128,138,140,141,142,154,181,182,183,184,188,190,192,193,195,207,226,227,229,234,235,237,262,290,293,294,309,310,312,328,330,331,347,356,371,372,],[7,7,7,-22,7,7,-22,-21,-24,-2,-23,-32,-2,-36,-52,-2,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-50,-46,-2,-2,-2,-35,-69,-61,-60,-6,-2,-26,-29,-2,-2,-40,-148,-51,-53,-55,-37,-34,-42,-54,-2,-2,7,-28,-2,-39,-27,-31,-2,-2,-41,-2,-30,]),'Link_Start':([0,2,3,4,5,9,10,12,20,22,24,25,49,51,52,55,65,72,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,118,128,138,140,141,142,154,181,182,183,184,188,190,192,193,195,207,226,227,229,234,235,237,262,290,293,309,310,312,328,330,331,347,356,371,372,],[-2,8,-2,-2,-5,-4,-3,-2,-22,-21,-24,-2,-23,-32,-2,-36,-52,-2,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-50,-46,-2,-2,-2,-35,-69,-61,-60,-6,-2,-26,-29,-2,-2,-40,-148,-51,-53,-55,-37,-34,-42,-54,-2,-2,-28,-2,-39,-27,-31,-2,-2,-41,-2,-30,]),'$end':([1,56,99,101,348,357,],[0,-2,-1,-155,-2,-154,]),'id':([6,8,12,14,15,16,17,18,19,20,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,44,45,46,48,49,51,52,54,55,57,58,59,60,61,62,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,92,94,95,96,98,100,103,104,106,107,108,117,118,120,121,122,123,124,125,126,127,128,131,136,138,140,141,142,144,145,146,147,148,149,150,151,152,153,154,162,170,171,172,173,174,175,176,177,181,182,188,189,190,192,193,195,197,198,199,200,201,202,204,207,209,212,216,226,228,234,235,236,237,238,240,242,243,254,256,264,266,267,272,273,277,280,281,282,283,284,285,287,288,290,293,294,297,300,302,305,309,310,312,313,315,319,320,321,322,328,329,330,331,333,334,335,336,338,339,341,347,351,353,356,362,364,367,368,370,371,372,],[11,-2,-2,25,-8,-9,-10,-11,33,-22,-21,50,-24,-2,33,33,33,33,33,-79,-98,-99,-129,-130,-144,-145,66,67,70,72,72,90,-23,-32,-2,72,-36,-74,-75,-76,-77,-78,-80,-52,72,72,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,72,-25,72,-33,140,-38,-2,143,72,-70,156,161,72,-146,-50,72,-62,-63,-64,-65,-66,-67,-68,-46,72,187,-2,-2,-2,-35,-81,72,72,-89,-90,-91,-92,-93,-94,-95,-69,72,72,72,-116,-117,-118,-119,-120,-121,-61,-60,-26,232,-29,-2,-2,-40,-83,-84,-85,72,-2,-88,245,-148,156,72,72,-51,72,-37,-34,268,-42,72,271,-86,-46,33,33,289,72,72,72,72,72,33,33,-79,-105,-106,-107,33,33,-2,-2,-2,-87,33,-101,-2,-28,-2,-39,33,-82,-131,-132,-133,-134,-27,346,-31,-2,33,33,-79,72,-100,72,-137,-2,-161,33,-41,-136,33,72,-2,-135,-2,-30,]),'Fixed':([7,],[13,]),'Integer':([7,13,21,87,196,271,],[15,15,15,15,15,15,]),'Decimal':([7,13,21,87,196,271,],[16,16,16,16,16,16,]),'String':([7,13,21,87,196,271,],[17,17,17,17,17,17,]),'Boolean':([7,13,21,87,196,271,],[18,18,18,18,18,18,]),'Sys_Call':([8,12,19,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,46,49,51,52,54,55,57,58,59,60,61,62,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,92,94,96,98,104,106,108,117,118,120,121,122,123,124,125,126,127,128,138,140,141,142,144,145,146,147,148,149,150,151,152,153,154,162,170,171,172,173,174,175,176,177,181,182,188,190,192,193,195,197,198,199,200,201,202,207,209,212,216,226,234,235,237,238,242,243,254,256,266,267,272,273,277,280,281,282,283,284,285,287,288,290,293,294,297,300,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,336,338,339,341,347,351,353,356,362,364,367,368,370,371,372,],[-2,-2,40,-22,-21,-24,-2,40,40,40,40,40,-79,-98,-99,-129,-130,-144,-145,40,-23,-32,-2,40,-36,-74,-75,-76,-77,-78,-80,-52,40,40,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,40,-25,40,-33,-38,-2,-70,40,40,-146,-50,40,-62,-63,-64,-65,-66,-67,-68,-46,-2,-2,-2,-35,-81,40,40,-89,-90,-91,-92,-93,-94,-95,-69,40,40,40,-116,-117,-118,-119,-120,-121,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,40,-2,-88,-148,40,40,40,-51,-37,-34,-42,40,-86,-46,40,40,40,40,-2,40,40,40,40,-79,-105,-106,-107,40,40,-2,-2,-2,-87,40,-101,-2,-28,-2,-39,40,-82,-131,-132,-133,-134,-27,-31,-2,40,40,-79,40,-100,40,-137,-2,-161,40,-41,-136,40,40,-2,-135,-2,-30,]),'For':([8,12,19,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,254,256,280,281,282,283,284,285,287,288,290,293,294,300,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,338,341,347,351,353,356,362,364,368,370,371,372,],[-2,-2,41,-22,-21,-24,-2,41,41,41,41,41,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,41,41,41,41,-79,-105,-106,-107,41,41,-2,-2,-2,41,-101,-2,-28,-2,-39,41,-82,-131,-132,-133,-134,-27,-31,-2,41,41,-79,-100,-137,-2,-161,41,-41,-136,41,-2,-135,-2,-30,]),'While':([8,12,19,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,254,256,280,281,282,283,284,285,287,288,290,293,294,300,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,338,341,347,351,353,356,362,364,368,370,371,372,],[-2,-2,42,-22,-21,-24,-2,42,42,42,42,42,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,42,42,42,42,-79,-105,-106,-107,42,42,-2,-2,-2,42,-101,-2,-28,-2,-39,42,-82,-131,-132,-133,-134,-27,-31,-2,42,42,-79,-100,-137,-2,-161,42,-41,-136,42,-2,-135,-2,-30,]),'If':([8,12,19,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,254,256,280,281,282,283,284,285,287,288,290,293,294,300,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,338,341,347,351,353,356,362,364,368,370,371,372,],[-2,-2,43,-22,-21,-24,-2,43,43,43,43,43,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,43,43,43,43,-79,-105,-106,-107,43,43,-2,-2,-2,43,-101,-2,-28,-2,-39,43,-82,-131,-132,-133,-134,-27,-31,-2,43,43,-79,-100,-137,-2,-161,43,-41,-136,43,-2,-135,-2,-30,]),'Switch':([8,12,19,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,254,256,280,281,282,283,284,285,287,288,290,293,294,300,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,338,341,347,351,353,356,362,364,368,370,371,372,],[-2,-2,44,-22,-21,-24,-2,44,44,44,44,44,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,44,44,44,44,-79,-105,-106,-107,44,44,-2,-2,-2,44,-101,-2,-28,-2,-39,44,-82,-131,-132,-133,-134,-27,-31,-2,44,44,-79,-100,-137,-2,-161,44,-41,-136,44,-2,-135,-2,-30,]),'Absorb':([8,12,19,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,254,256,280,281,282,283,284,285,287,288,290,293,294,300,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,338,341,347,351,353,356,362,364,368,370,371,372,],[-2,-2,45,-22,-21,-24,-2,45,45,45,45,45,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,45,45,45,45,-79,-105,-106,-107,45,45,-2,-2,-2,45,-101,-2,-28,-2,-39,45,-82,-131,-132,-133,-134,-27,-31,-2,45,45,-79,-100,-137,-2,-161,45,-41,-136,45,-2,-135,-2,-30,]),'Discharge':([8,12,19,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,254,256,280,281,282,283,284,285,287,288,290,293,294,300,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,338,341,347,351,353,356,362,364,368,370,371,372,],[-2,-2,46,-22,-21,-24,-2,46,46,46,46,46,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,46,46,46,46,-79,-105,-106,-107,46,46,-2,-2,-2,46,-101,-2,-28,-2,-39,46,-82,-131,-132,-133,-134,-27,-31,-2,46,46,-79,-100,-137,-2,-161,46,-41,-136,46,-2,-135,-2,-30,]),'Link_End':([8,12,19,20,22,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,290,293,302,305,309,310,312,315,319,320,321,322,328,330,331,338,341,347,356,362,368,370,371,372,],[-2,-2,-2,-22,-21,-24,-2,56,-2,-2,-2,-2,-2,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,-2,-2,-101,-2,-28,-2,-39,-82,-131,-132,-133,-134,-27,-31,-2,-100,-137,-2,-41,-136,-2,-135,-2,-30,]),'open_bracket':([11,116,217,223,270,276,340,361,],[21,179,254,256,294,300,353,364,]),'Return':([12,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,94,96,98,104,117,118,128,138,140,141,142,144,154,181,182,188,190,192,193,195,197,198,199,201,207,226,234,235,237,242,243,290,293,294,302,305,309,310,312,313,315,319,320,321,322,328,330,331,333,334,335,338,341,347,351,356,362,368,370,371,372,],[-2,-22,-21,-24,-2,-2,-2,-2,-2,-2,-79,-98,-99,-129,-130,-144,-145,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-25,-33,-38,-2,-70,-146,-50,-46,-2,-2,-2,-35,-81,-69,-61,-60,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-37,-34,-42,-86,-46,-2,-2,-2,-101,-2,-28,-2,-39,336,-82,-131,-132,-133,-134,-27,-31,-2,336,336,-79,-100,-137,-2,-161,-41,-136,-2,-135,-2,-30,]),'close_bracket':([12,20,22,24,25,27,28,29,30,31,32,34,35,36,37,38,39,47,49,51,52,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,89,90,91,94,96,98,104,117,118,128,132,133,134,137,138,140,141,142,144,154,181,182,185,187,188,190,192,193,195,197,198,199,201,207,226,230,231,234,235,237,242,243,254,256,263,265,279,280,281,282,283,284,285,286,287,290,293,294,300,302,303,304,305,306,309,310,312,313,315,317,319,320,321,322,328,330,331,332,333,334,335,338,341,345,347,349,350,351,353,354,356,359,362,364,366,368,370,371,372,],[-2,-22,-21,-24,-2,-2,-2,-2,-2,-2,-79,-98,-99,-129,-130,-144,-145,-2,-23,-32,-2,-36,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,131,-20,-7,-2,-25,-33,-38,-2,-70,-146,-50,-46,-2,-12,-13,-16,-2,-2,-2,-35,-81,-69,-61,-60,-19,-2,-26,-29,-2,-2,-40,-83,-84,-85,-2,-148,-51,-2,-15,-37,-34,-42,-86,-46,-2,-2,-14,-18,302,-2,-2,-79,-105,-106,-107,305,-2,-2,-2,-2,-2,-101,-102,-103,-2,325,-28,-2,-39,-2,-82,338,-131,-132,-133,-134,-27,-31,-2,348,-2,-2,-79,-100,-137,-2,-2,-158,-159,-161,-2,-17,-41,362,-136,-2,368,-2,-135,-2,-30,]),'open_brace':([25,33,50,72,90,156,161,194,233,244,245,268,289,346,365,],[53,64,93,119,135,206,214,238,267,273,274,292,308,355,367,]),'equal':([25,33,50,63,65,72,102,104,118,140,141,154,155,191,201,203,205,226,232,243,296,314,316,331,337,363,],[54,-2,92,-2,-52,-2,146,-70,-50,54,194,-69,204,233,-2,244,-97,-51,266,272,-2,272,204,194,-96,365,]),'comma':([25,47,52,55,65,72,74,75,76,77,78,79,80,81,82,83,84,89,90,96,98,104,118,128,132,133,134,137,138,140,141,142,154,156,159,160,181,182,184,187,192,193,195,207,211,213,226,230,231,234,237,246,248,263,265,290,293,310,312,331,345,347,354,356,371,],[-2,87,95,-36,-52,-2,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-7,136,-38,95,-70,-50,-46,87,-12,-13,-16,189,-2,-2,-35,-69,-2,209,212,-61,-60,228,136,95,236,-40,-148,-71,-73,-51,264,-15,-37,-42,209,-72,-14,-18,189,236,329,-39,-2,264,236,-17,-41,329,]),'Break':([27,28,29,30,31,32,34,35,36,37,38,39,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,104,117,118,128,144,154,181,182,197,198,199,201,207,226,242,243,254,256,280,281,282,283,284,285,287,288,300,302,305,307,315,319,320,321,322,338,341,353,362,364,368,370,],[-2,-2,-2,-2,-2,-79,-98,-99,-129,-130,-144,-145,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-70,-146,-50,-46,-81,-69,-61,-60,-83,-84,-85,-2,-148,-51,-86,-46,283,283,283,283,-79,-105,-106,-107,283,-2,283,-101,-2,326,-82,-131,-132,-133,-134,-100,-137,283,-136,283,-2,-135,]),'Continue':([27,28,29,30,31,32,34,35,36,37,38,39,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,104,117,118,128,144,154,181,182,197,198,199,201,207,226,242,243,254,256,280,281,282,283,284,285,287,300,302,305,315,319,320,321,322,338,341,353,362,364,368,370,],[-2,-2,-2,-2,-2,-79,-98,-99,-129,-130,-144,-145,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-70,-146,-50,-46,-81,-69,-61,-60,-83,-84,-85,-2,-148,-51,-86,-46,284,284,284,284,-79,-105,-106,-107,284,284,-101,-2,-82,-131,-132,-133,-134,-100,-137,284,-136,284,-2,-135,]),'Avoid':([27,28,29,30,31,32,34,35,36,37,38,39,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,79,80,81,82,83,84,104,117,118,128,144,154,181,182,197,198,199,201,207,226,242,243,254,256,280,281,282,283,284,285,287,300,302,305,315,319,320,321,322,338,341,353,362,364,368,370,],[-2,-2,-2,-2,-2,-79,-98,-99,-129,-130,-144,-145,-74,-75,-76,-77,-78,-80,-52,-2,-2,-147,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-70,-146,-50,-46,-81,-69,-61,-60,-83,-84,-85,-2,-148,-51,-86,-46,285,285,285,285,-79,-105,-106,-107,285,285,-101,-2,-82,-131,-132,-133,-134,-100,-137,285,-136,285,-2,-135,]),'period':([33,63,65,71,72,77,118,155,156,201,226,296,],[-2,103,-52,103,-2,103,-50,-51,-2,103,-51,103,]),'plus_equal':([33,63,65,72,102,104,118,154,155,226,],[-2,-2,-52,-2,147,-70,-50,-69,-51,-51,]),'minus_equal':([33,63,65,72,102,104,118,154,155,226,],[-2,-2,-52,-2,148,-70,-50,-69,-51,-51,]),'times_equal':([33,63,65,72,102,104,118,154,155,226,],[-2,-2,-52,-2,149,-70,-50,-69,-51,-51,]),'divide_equal':([33,63,65,72,102,104,118,154,155,226,],[-2,-2,-52,-2,150,-70,-50,-69,-51,-51,]),'divide_divide_equal':([33,63,65,72,102,104,118,154,155,226,],[-2,-2,-52,-2,151,-70,-50,-69,-51,-51,]),'modulo_equal':([33,63,65,72,102,104,118,154,155,226,],[-2,-2,-52,-2,152,-70,-50,-69,-51,-51,]),'times_times_equal':([33,63,65,72,102,104,118,154,155,226,],[-2,-2,-52,-2,153,-70,-50,-69,-51,-51,]),'open_par':([42,43,46,54,66,68,69,85,92,106,108,112,120,121,122,123,124,125,126,127,143,145,146,147,148,149,150,151,152,153,162,164,170,171,172,173,174,175,176,177,200,202,209,212,216,238,250,251,252,266,267,272,273,277,297,323,336,339,367,],[68,69,85,85,106,108,108,85,85,85,162,170,85,-62,-63,-64,-65,-66,-67,-68,196,85,85,-89,-90,-91,-92,-93,-94,-95,162,216,108,85,-116,-117,-118,-119,-120,-121,85,-88,85,85,108,85,277,-127,-128,85,85,-2,85,108,-87,339,85,108,85,]),'lit_str':([46,54,68,69,92,106,108,146,162,170,171,172,173,174,175,176,177,200,202,209,212,216,225,238,266,267,272,273,277,297,336,339,367,],[75,75,75,75,75,75,75,-2,75,75,75,-116,-117,-118,-119,-120,-121,75,-88,75,75,75,259,75,75,75,-2,75,75,-87,75,75,75,]),'lit_bool':([46,54,68,69,92,106,108,146,162,170,171,172,173,174,175,176,177,200,202,209,212,216,238,266,267,272,273,277,297,336,339,367,],[76,76,113,113,76,76,167,-2,167,221,76,-116,-117,-118,-119,-120,-121,76,-88,76,76,167,76,76,76,-2,76,167,-87,76,113,76,]),'lit_intposi':([46,53,54,64,68,69,85,92,93,106,108,119,120,121,122,123,124,125,126,127,135,145,146,147,148,149,150,151,152,153,162,170,171,172,173,174,175,176,177,200,202,206,209,212,216,225,238,266,267,272,273,274,277,292,297,308,336,339,355,367,],[81,97,81,105,81,81,81,81,139,81,81,180,81,-62,-63,-64,-65,-66,-67,-68,186,81,81,-89,-90,-91,-92,-93,-94,-95,81,81,81,-116,-117,-118,-119,-120,-121,81,-88,180,81,81,81,260,81,81,81,-2,81,299,81,311,-87,327,81,81,360,81,]),'lit_intnega':([46,54,68,69,85,92,106,108,120,121,122,123,124,125,126,127,145,146,147,148,149,150,151,152,153,162,170,171,172,173,174,175,176,177,200,202,209,212,216,225,238,266,267,272,273,277,297,336,339,367,],[82,82,82,82,82,82,82,82,82,-62,-63,-64,-65,-66,-67,-68,82,82,-89,-90,-91,-92,-93,-94,-95,82,82,82,-116,-117,-118,-119,-120,-121,82,-88,82,82,82,261,82,82,82,-2,82,82,-87,82,82,82,]),'lit_decposi':([46,54,68,69,85,92,106,108,120,121,122,123,124,125,126,127,145,146,147,148,149,150,151,152,153,162,170,171,172,173,174,175,176,177,200,202,209,212,216,238,266,267,272,273,277,297,336,339,367,],[83,83,83,83,83,83,83,83,83,-62,-63,-64,-65,-66,-67,-68,83,83,-89,-90,-91,-92,-93,-94,-95,83,83,83,-116,-117,-118,-119,-120,-121,83,-88,83,83,83,83,83,83,-2,83,83,-87,83,83,83,]),'lit_decnega':([46,54,68,69,85,92,106,108,120,121,122,123,124,125,126,127,145,146,147,148,149,150,151,152,153,162,170,171,172,173,174,175,176,177,200,202,209,212,216,238,266,267,272,273,277,297,336,339,367,],[84,84,84,84,84,84,84,84,84,-62,-63,-64,-65,-66,-67,-68,84,84,-89,-90,-91,-92,-93,-94,-95,84,84,84,-116,-117,-118,-119,-120,-121,84,-88,84,84,84,84,84,84,-2,84,84,-87,84,84,84,]),'Sys':([56,348,],[100,100,]),'plus':([65,72,74,77,78,79,80,81,82,83,84,104,118,128,129,130,154,156,168,181,182,197,199,201,207,226,243,],[-52,-2,121,-2,-47,-48,-49,-56,-57,-58,-59,-70,-50,-46,-48,121,-69,-2,121,121,-60,121,121,-2,-148,-51,-46,]),'minus':([65,72,74,77,78,79,80,81,82,83,84,104,118,128,129,130,154,156,168,181,182,197,199,201,207,226,243,],[-52,-2,122,-2,-47,-48,-49,-56,-57,-58,-59,-70,-50,-46,-48,122,-69,-2,122,122,-60,122,122,-2,-148,-51,-46,]),'times':([65,72,74,77,78,79,80,81,82,83,84,104,118,128,129,130,154,156,168,181,182,197,199,201,207,226,243,],[-52,-2,123,-2,-47,-48,-49,-56,-57,-58,-59,-70,-50,-46,-48,123,-69,-2,123,123,-60,123,123,-2,-148,-51,-46,]),'divide':([65,72,74,77,78,79,80,81,82,83,84,104,118,128,129,130,154,156,168,181,182,197,199,201,207,226,243,],[-52,-2,124,-2,-47,-48,-49,-56,-57,-58,-59,-70,-50,-46,-48,124,-69,-2,124,124,-60,124,124,-2,-148,-51,-46,]),'divide_divide':([65,72,74,77,78,79,80,81,82,83,84,104,118,128,129,130,154,156,168,181,182,197,199,201,207,226,243,],[-52,-2,125,-2,-47,-48,-49,-56,-57,-58,-59,-70,-50,-46,-48,125,-69,-2,125,125,-60,125,125,-2,-148,-51,-46,]),'modulo':([65,72,74,77,78,79,80,81,82,83,84,104,118,128,129,130,154,156,168,181,182,197,199,201,207,226,243,],[-52,-2,126,-2,-47,-48,-49,-56,-57,-58,-59,-70,-50,-46,-48,126,-69,-2,126,126,-60,126,126,-2,-148,-51,-46,]),'times_times':([65,72,74,77,78,79,80,81,82,83,84,104,118,128,129,130,154,156,168,181,182,197,199,201,207,226,243,],[-52,-2,127,-2,-47,-48,-49,-56,-57,-58,-59,-70,-50,-46,-48,127,-69,-2,127,127,-60,127,127,-2,-148,-51,-46,]),'greater_than':([65,72,74,75,77,78,79,80,81,82,83,84,104,113,114,118,128,129,154,167,168,181,182,207,221,226,],[-52,-2,-43,-44,-2,-47,-48,-49,-56,-57,-58,-59,-70,-45,172,-50,-46,-48,-69,-45,-43,-61,-60,-148,-45,-51,]),'less_than':([65,72,74,75,77,78,79,80,81,82,83,84,104,113,114,118,128,129,154,167,168,181,182,207,221,226,],[-52,-2,-43,-44,-2,-47,-48,-49,-56,-57,-58,-59,-70,-45,173,-50,-46,-48,-69,-45,-43,-61,-60,-148,-45,-51,]),'equal_equal':([65,72,74,75,77,78,79,80,81,82,83,84,104,113,114,118,128,129,154,167,168,181,182,207,221,226,],[-52,-2,-43,-44,-2,-47,-48,-49,-56,-57,-58,-59,-70,-45,174,-50,-46,-48,-69,-45,-43,-61,-60,-148,-45,-51,]),'not_equal':([65,72,74,75,77,78,79,80,81,82,83,84,104,113,114,118,128,129,154,167,168,181,182,207,221,226,],[-52,-2,-43,-44,-2,-47,-48,-49,-56,-57,-58,-59,-70,-45,175,-50,-46,-48,-69,-45,-43,-61,-60,-148,-45,-51,]),'great_than_equal':([65,72,74,75,77,78,79,80,81,82,83,84,104,113,114,118,128,129,154,167,168,181,182,207,221,226,],[-52,-2,-43,-44,-2,-47,-48,-49,-56,-57,-58,-59,-70,-45,176,-50,-46,-48,-69,-45,-43,-61,-60,-148,-45,-51,]),'less_than_equal':([65,72,74,75,77,78,79,80,81,82,83,84,104,113,114,118,128,129,154,167,168,181,182,207,221,226,],[-52,-2,-43,-44,-2,-47,-48,-49,-56,-57,-58,-59,-70,-45,177,-50,-46,-48,-69,-45,-43,-61,-60,-148,-45,-51,]),'close_par':([65,72,74,75,76,77,78,79,80,81,82,83,84,104,106,109,110,111,113,115,118,128,129,154,156,157,158,159,160,163,165,166,167,181,182,196,207,208,209,210,211,213,218,219,220,221,222,226,239,241,246,247,248,253,255,271,275,278,295,301,318,352,],[-52,-2,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,-70,-2,169,-108,-109,-111,178,-50,-46,182,-69,-2,207,-150,-2,-2,215,-124,-125,-126,-61,-60,-2,-148,-151,-2,-153,-71,-73,255,-112,-113,-114,-115,-51,270,-157,-2,-152,-72,278,-110,-2,-149,-123,-156,318,-122,358,]),'close_brace':([65,72,74,75,76,77,78,79,80,81,82,83,84,97,104,105,118,128,139,154,160,180,181,182,186,206,207,211,213,214,226,248,269,291,298,299,311,327,360,369,],[-52,-2,-43,-44,-45,-2,-47,-48,-49,-56,-57,-58,-59,141,-70,155,-50,-46,191,-69,-2,226,-61,-60,230,246,-148,-71,-73,249,-51,-72,293,310,315,316,331,345,363,371,]),'In':([67,],[107,]),'Not':([68,69,108,162,216,277,339,],[112,112,164,164,164,164,112,]),'colon':([70,169,178,249,257,258,259,260,261,324,358,],[116,217,223,276,287,288,-139,-140,-141,340,361,]),'Execute':([179,326,],[225,225,]),'And':([215,],[251,]),'Or':([215,],[252,]),'Default':([224,326,342,343,344,],[257,-2,-138,-142,-143,]),'Elif':([305,368,],[323,323,]),'Else':([305,368,],[324,324,]),'End_Switch':([325,],[341,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,9,10,]),'declare_statements':([0,3,4,8,12,294,],[3,3,3,19,22,313,]),'struct_dec':([0,3,4,],[4,4,4,]),'empty':([0,3,4,8,12,19,25,27,28,29,30,31,33,47,52,56,63,71,72,77,90,98,106,132,138,140,141,146,155,156,159,160,184,187,192,193,196,201,209,230,246,254,256,271,272,280,281,287,288,290,293,294,296,300,305,310,313,316,326,331,333,334,345,347,348,353,364,368,371,],[5,5,5,20,20,32,55,32,32,32,32,32,65,88,96,101,104,104,65,104,137,96,158,88,190,55,195,202,205,65,210,213,229,137,96,237,241,104,158,265,210,282,282,241,202,282,282,282,32,190,237,20,104,282,322,330,335,205,344,195,335,335,265,237,101,282,282,322,330,]),'const_var_dec':([7,],[12,]),'data_type':([7,13,21,87,196,271,],[14,23,48,48,240,240,]),'id_array_var':([14,],[24,]),'statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[26,57,58,59,60,61,280,280,280,280,280,307,280,333,333,333,280,280,]),'assignment_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'looping_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'conditional_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'io_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'func_call':([19,27,28,29,30,31,46,54,68,69,85,92,106,108,120,145,146,162,170,171,200,209,212,216,238,254,256,266,267,273,277,280,281,287,288,300,313,333,334,336,339,353,364,367,],[31,31,31,31,31,31,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,31,31,80,80,80,80,31,31,31,31,31,31,31,31,80,80,31,31,80,]),'for_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'while_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'if_statement':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'switch_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'input_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'output_statements':([19,27,28,29,30,31,254,256,280,281,287,288,300,313,333,334,353,364,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'struct_element1':([21,87,],[47,132,]),'id_array_const':([23,],[49,]),'id_array_var2':([25,],[51,]),'var_init':([25,140,],[52,192,]),'assignment_statements2':([33,],[62,]),'array':([33,72,156,],[63,118,118,]),'id_array':([45,46,54,68,69,85,92,103,106,108,120,131,145,146,162,170,171,200,209,212,216,228,238,266,267,272,273,277,336,339,367,],[71,77,77,77,77,77,77,154,77,77,77,184,77,201,77,77,77,77,77,77,77,184,77,77,77,296,77,77,77,77,77,]),'value':([46,54,68,69,92,106,108,162,170,171,200,209,212,216,238,266,267,273,277,336,339,367,],[73,98,114,114,138,160,114,114,114,222,242,160,160,114,160,290,160,160,114,351,114,160,]),'num_value':([46,54,68,69,85,92,106,108,120,145,146,162,170,171,200,209,212,216,238,266,267,273,277,336,339,367,],[74,74,74,74,130,74,74,168,181,197,199,168,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'literals':([46,54,68,69,85,92,106,108,120,145,146,162,170,171,200,209,212,216,238,266,267,273,277,336,339,367,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'arithmetic_expression':([46,54,68,69,85,92,106,108,120,145,146,162,170,171,200,209,212,216,238,266,267,273,277,336,339,367,],[79,79,79,79,129,79,79,129,79,79,79,129,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'struct_element2':([47,132,],[86,185,]),'id_array_dec':([48,],[89,]),'id_array_const2':([50,],[91,]),'id_var1':([52,98,192,],[94,142,234,]),'functions':([56,348,],[99,357,]),'id_struct':([63,71,77,201,296,],[102,117,128,243,314,]),'condition':([68,69,339,],[109,115,352,]),'relational_expression':([68,69,108,162,170,216,277,339,],[110,110,165,165,219,165,165,110,]),'logical_expression':([68,69,108,162,170,216,277,339,],[111,111,166,166,220,166,166,111,]),'arithmetic_operators':([74,130,168,181,197,199,],[120,120,120,120,120,120,]),'id_array_dec2':([90,],[133,]),'id_dec1':([90,187,],[134,231,]),'assignment_exp':([102,],[144,]),'assignment_operators':([102,],[145,]),'function_param':([106,209,],[157,247,]),'value1':([106,209,212,238,267,273,367,],[159,159,248,269,291,298,369,]),'logical_operand':([108,162,216,277,],[163,163,253,301,]),'relational_operators':([114,],[171,]),'id_array1':([131,228,],[183,262,]),'id_const1':([138,290,],[188,309,]),'array_init':([141,331,],[193,347,]),'assign_value':([146,],[198,]),'more_id':([146,272,],[200,297,]),'more_array':([155,316,],[203,337,]),'more_param':([159,246,],[208,275,]),'value2':([160,],[211,]),'condition_not':([170,],[218,]),'execute':([179,326,],[224,343,]),'id_array2':([184,],[227,]),'array_var1':([193,293,347,],[235,312,356,]),'parameters':([196,271,],[239,295,]),'logical_operators':([215,],[250,]),'switch_lit':([225,],[258,]),'array_dec1':([230,345,],[263,354,]),'inside_statements':([254,256,280,281,287,300,353,364,],[279,286,303,304,306,317,359,366,]),'control_statements':([254,256,280,281,287,300,353,364,],[281,281,281,281,281,281,281,281,]),'condition_else':([305,368,],[319,370,]),'elif_statement':([305,368,],[320,320,]),'else_statement':([305,368,],[321,321,]),'array_const1':([310,371,],[328,372,]),'function_body':([313,333,334,],[332,349,350,]),'return_statement':([313,333,334,],[334,334,334,]),'execute1':([326,],[342,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',21),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyze.py',25),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',29),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',30),
  ('global_dec -> empty','global_dec',1,'p_global_dec','syntax_analyze.py',31),
  ('struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1','struct_dec',7,'p_struct_dec','syntax_analyze.py',38),
  ('struct_element1 -> data_type id_array_dec','struct_element1',2,'p_struct_element1','syntax_analyze.py',42),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',46),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',47),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',48),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',49),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',53),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',57),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2','syntax_analyze.py',58),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',65),
  ('id_dec1 -> empty','id_dec1',1,'p_id_dec1','syntax_analyze.py',66),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',73),
  ('array_dec1 -> empty','array_dec1',1,'p_array_dec1','syntax_analyze.py',74),
  ('struct_element2 -> comma struct_element1 struct_element2','struct_element2',3,'p_struct_element2','syntax_analyze.py',81),
  ('struct_element2 -> empty','struct_element2',1,'p_struct_element2','syntax_analyze.py',82),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',89),
  ('declare_statements -> empty','declare_statements',1,'p_declare_statements','syntax_analyze.py',90),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',97),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec','syntax_analyze.py',98),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',105),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2','syntax_analyze.py',109),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',110),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',115),
  ('id_const1 -> empty','id_const1',1,'p_id_const1','syntax_analyze.py',116),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',123),
  ('array_const1 -> empty','array_const1',1,'p_array_const1','syntax_analyze.py',124),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',131),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',135),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2','syntax_analyze.py',136),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',143),
  ('var_init -> empty','var_init',1,'p_var_init','syntax_analyze.py',144),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',151),
  ('id_var1 -> empty','id_var1',1,'p_id_var1','syntax_analyze.py',152),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',159),
  ('array_init -> empty','array_init',1,'p_array_init','syntax_analyze.py',160),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',167),
  ('array_var1 -> empty','array_var1',1,'p_array_var1','syntax_analyze.py',168),
  ('value -> num_value','value',1,'p_value_num_value','syntax_analyze.py',175),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',179),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',180),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',184),
  ('num_value -> literals','num_value',1,'p_num_value','syntax_analyze.py',185),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value','syntax_analyze.py',186),
  ('num_value -> func_call','num_value',1,'p_num_value','syntax_analyze.py',187),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',194),
  ('array -> open_brace lit_intposi close_brace','array',3,'p_array','syntax_analyze.py',198),
  ('array -> empty','array',1,'p_array','syntax_analyze.py',199),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',206),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',210),
  ('id_array2 -> empty','id_array2',1,'p_id_array2','syntax_analyze.py',211),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',218),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',219),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',220),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',221),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',225),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',229),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',234),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',235),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',236),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',237),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',238),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',239),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',240),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',244),
  ('id_struct -> empty','id_struct',1,'p_id_struct','syntax_analyze.py',245),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',253),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',257),
  ('value2 -> empty','value2',1,'p_value2','syntax_analyze.py',258),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',265),
  ('statements -> looping_statements statements','statements',2,'p_statements','syntax_analyze.py',266),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',267),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',268),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',269),
  ('statements -> empty','statements',1,'p_statements','syntax_analyze.py',270),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',277),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',281),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',285),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',289),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',293),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',297),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value','syntax_analyze.py',298),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',305),
  ('more_id -> empty','more_id',1,'p_more_id','syntax_analyze.py',306),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',313),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',314),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',315),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',316),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',317),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',318),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',319),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',323),
  ('more_array -> empty','more_array',1,'p_more_array','syntax_analyze.py',324),
  ('looping_statements -> for_statements','looping_statements',1,'p_looping_statements','syntax_analyze.py',331),
  ('looping_statements -> while_statements','looping_statements',1,'p_looping_statements','syntax_analyze.py',332),
  ('for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket','for_statements',10,'p_for_statements','syntax_analyze.py',336),
  ('while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket','while_statements',8,'p_while_statements','syntax_analyze.py',340),
  ('inside_statements -> statements inside_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',344),
  ('inside_statements -> control_statements inside_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',345),
  ('inside_statements -> empty','inside_statements',1,'p_inside_statements','syntax_analyze.py',346),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',353),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',354),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',355),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',359),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',360),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition','syntax_analyze.py',361),
  ('condition -> lit_bool','condition',1,'p_condition_more','syntax_analyze.py',368),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',372),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',373),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',377),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',381),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',385),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',386),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',387),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',388),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',389),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',390),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',394),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',398),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand','syntax_analyze.py',399),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand','syntax_analyze.py',400),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',407),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',411),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',412),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',416),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',417),
  ('if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','if_statement',9,'p_if_statement','syntax_analyze.py',421),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',425),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',426),
  ('condition_else -> empty','condition_else',1,'p_condition_else_empty','syntax_analyze.py',430),
  ('elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','elif_statement',9,'p_elif_statement','syntax_analyze.py',434),
  ('else_statement -> Else colon open_bracket inside_statements close_bracket','else_statement',5,'p_else_statement','syntax_analyze.py',439),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',443),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',447),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',451),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',452),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',453),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',457),
  ('execute1 -> empty','execute1',1,'p_execute1_more','syntax_analyze.py',461),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',466),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',467),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',471),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',475),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',479),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',483),
  ('function_param -> empty','function_param',1,'p_function_param','syntax_analyze.py',484),
  ('function_param -> value1 more_param','function_param',2,'p_function_param_more','syntax_analyze.py',491),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',495),
  ('more_param -> empty','more_param',1,'p_more_param','syntax_analyze.py',496),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements function_body close_bracket functions','functions',10,'p_functions','syntax_analyze.py',503),
  ('functions -> empty','functions',1,'p_functions','syntax_analyze.py',504),
  ('parameters -> data_type id parameters','parameters',3,'p_parameters','syntax_analyze.py',511),
  ('parameters -> empty','parameters',1,'p_parameters','syntax_analyze.py',512),
  ('function_body -> statements function_body','function_body',2,'p_function_body','syntax_analyze.py',519),
  ('function_body -> return_statement function_body','function_body',2,'p_function_body','syntax_analyze.py',520),
  ('function_body -> empty','function_body',1,'p_function_body','syntax_analyze.py',521),
  ('return_statement -> Return value','return_statement',2,'p_return_statement','syntax_analyze.py',528),
]
