
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functions\n                | global_dec Link_Start declare_statements statements functions\n                | global_dec declare_statements statements Link_End functions\n                | global_dec declare_statements statements functions global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | struct_dec : Struct id open_bracket struct_element1 close_bracket id_array1\n                    | Struct id struct_element1 id_array1\n                    | Struct open_bracket struct_element1 id_array1\n                    | Struct struct_element1 close_bracket id_array1\n                    | Struct id open_bracket struct_element1 id_array1\n                    | Struct id struct_element1 close_bracket id_array1\n                    | Struct open_bracket struct_element1 close_bracket id_array1\n                    | struct_element1 : data_type id_array_dec struct_element2 struct_element2 : struct_element1\n                        | data_type : Integer\n                | Decimal\n                | String\n                | Boolean data_type : id_array_dec : id id_array_dec2\n                    | id_array_dec2 : id_dec1 id_array_dec2 : open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | declare_statements : Generate const_var_dec declare_statements\n                            | const_var_dec : Fixed data_type id_array_const const_var_dec : data_type id_array_var const_var_dec : id_array_const : id id_array_const2\n                        | id_array_const2 : open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 id_array_const2 : equal value id_const1 id_array_const2 : id_const1 : comma id equal value id_const1 \n                | array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | id_array_var : id id_array_var2\n                    | id_array_var2 : var_init id_var1 id_array_var2 : open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | id_var1 : comma id var_init id_var1\n                | array_init : equal open_brace value1 close_brace array_var1 \n                | array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | value : num_value\n            | lit_str\n            | lit_bool\n            | value_opt : num_value_opt\n            | lit_str\n            | lit_bool num_value : id_array id_struct num_value : literals \n                | arithmetic_expression\n                | func_call num_value : num_value_opt : id_array_opt id_struct num_value_opt : literals_opt\n                | arithmetic_expression\n                | func_call id_array : id array\n                | id_array_opt : id array array : open_brace num_value close_brace array : open_brace close_brace array :  id_array1 : id_array id_array2\n                | id_array2 : comma id_array1\n                |literals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnega\n                |literals_opt : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                |value1 : value value2value2 : comma value1 \n            |value1_opt : value_opt value2_optvalue2_opt : comma value1_opt \n            |statements : assignment_statements statements \n                | for_statements statements\n                | while_statements statements\n                | if_statement statements\n                | switch_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                |assignment_statements : id assignment_statements2\n                            |assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassignment_exp :assign_value : num_valueassign_value : more_id valuemore_id : id_array id_struct equal more_id\n            |assignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                |for_statements : For id In id open_brace close_brace colon open_bracket inside_statements close_bracket\n                        |while_statements : While open_par condition close_par colon open_bracket inside_statements close_bracket\n                        |inside_statements : statements control_statements\n                        | control_statements statements\n                        |control_statements : Break\n                        | Continue\n                        | Avoid\n                        | condition   : relational_expression\n                    | logical_expression condition   : Not open_par condition_not close_par condition   : lit_bool condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par logical_operand : relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else\n                        | If open_par condition inside_statements condition_else\n                        | If condition close_par inside_statements condition_else\n                        | If condition colon inside_statements condition_else\n                        | If condition open_bracket inside_statements condition_else\n                        | If condition inside_statements close_bracket condition_else\n                        | If open_par condition close_par inside_statements condition_else\n                        | If open_par condition colon inside_statements condition_else\n                        | If open_par condition open_bracket inside_statements condition_else\n                        | If open_par condition inside_statements close_bracket condition_else\n                        | If condition close_par colon inside_statements condition_else\n                        | If condition close_par open_bracket inside_statements condition_else\n                        | If condition close_par inside_statements close_bracket condition_else\n                        | If condition colon open_bracket inside_statements condition_else\n                        | If condition colon inside_statements close_bracket condition_else\n                        | If condition open_bracket inside_statements close_bracket condition_else\n                        | If open_par condition close_par colon inside_statements condition_else\n                        | If open_par condition close_par open_bracket inside_statements condition_else\n                        | If open_par condition close_par inside_statements close_bracket condition_else\n                        | If open_par condition colon open_bracket inside_statements condition_else\n                        | If open_par condition colon inside_statements close_bracket condition_else\n                        | If open_par condition open_bracket inside_statements close_bracket condition_else\n                        | If condition close_par colon open_bracket inside_statements condition_else\n                        | If condition close_par colon inside_statements close_bracket condition_else\n                        | If condition close_par open_bracket inside_statements close_bracket condition_else\n                        | If condition colon open_bracket inside_statements close_bracket condition_else\n                        | If open_par condition close_par colon open_bracket inside_statements condition_else\n                        | If open_par condition close_par colon inside_statements close_bracket condition_else\n                        | If open_par condition close_par open_bracket inside_statements close_bracket condition_else\n                        | If open_par condition colon open_bracket inside_statements close_bracket condition_else\n                        | If condition close_par colon open_bracket inside_statements close_bracket condition_else condition_else  : elif_statement\n                        | else_statement condition_else  : elif_statement  : Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else else_statement  : Else colon open_bracket inside_statements close_bracket\n                        | switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param function_param  : value1_opt more_param function_param : more_param  : comma function_param\n                    | functions   : Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement functions\n                    | Sys parameters open_bracket declare_statements statements return_statement functions\n                    | Sys parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | parameters  : data_type id more_parameters parameters  : more_parameters : comma data_type id more_parameters\n                        | return_statement    : Return value statements return_statement\n                            |'
    
_lr_action_items = {'Link_Start':([0,2,3,4,6,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,76,77,78,79,80,81,82,83,84,85,86,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,120,122,153,154,155,156,157,158,159,160,161,162,168,169,170,171,172,173,175,176,178,179,182,201,203,215,231,248,249,250,251,253,254,255,256,315,321,324,326,327,389,390,439,484,486,520,521,522,524,547,548,550,559,563,570,571,],[-7,7,-7,-7,-23,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-102,-77,-93,-94,-8,-82,-31,-28,-43,-51,-55,-50,-221,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'Generate':([0,2,3,4,6,7,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,55,76,77,78,79,80,81,82,83,84,85,86,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,120,122,153,154,155,156,157,158,159,160,161,162,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,189,190,201,203,215,231,248,249,250,251,253,254,255,256,257,259,260,262,263,265,268,315,321,324,326,327,329,330,334,338,389,390,393,410,439,464,484,486,520,521,522,524,547,548,550,559,563,570,571,],[6,6,6,6,-23,6,-6,-5,-23,-23,-25,-19,-20,-21,-22,6,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,6,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,6,6,6,6,-262,-102,-77,-93,-94,-8,-82,-31,-28,-43,-51,-55,-50,6,6,6,6,6,6,-259,-221,-27,-40,-53,-57,6,6,6,6,-52,-49,6,-262,-61,-261,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'id':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,115,116,117,118,119,120,122,124,125,127,128,131,132,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,171,172,173,175,176,178,179,180,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,276,278,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,313,315,317,319,321,322,324,325,326,327,329,330,331,333,334,335,337,338,339,341,343,345,346,347,351,352,353,354,355,356,357,358,359,360,361,362,363,365,367,368,369,370,371,372,373,374,375,376,389,390,391,392,393,394,395,399,403,408,410,411,412,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,438,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,488,512,515,517,520,521,522,524,542,543,544,547,548,549,550,559,561,563,564,568,570,571,],[-7,-33,-7,-7,11,-23,-33,32,-6,-5,-23,-23,47,-19,-20,-21,-22,-33,-23,51,32,32,32,32,32,32,32,32,32,-79,67,82,87,-217,-218,88,82,82,-23,82,82,82,-18,-29,-32,107,-35,-51,115,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,82,82,82,32,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,82,82,-9,82,-83,-10,82,-11,-16,-17,-24,-26,175,-34,-41,-46,-53,82,-23,-23,-33,190,-125,82,-78,204,82,82,32,-150,-151,-153,32,32,32,-149,32,-146,-147,-148,82,82,-158,-159,-160,-161,-162,-163,82,-95,-96,-97,-98,-99,-100,-101,-65,-74,82,233,-219,82,-12,-13,-80,82,-14,-29,-37,82,-48,254,-53,-23,-33,-33,-33,32,-33,-262,-121,82,82,-130,-131,-132,-133,-134,-135,-136,-102,-77,32,32,32,-206,-93,82,-206,32,32,-206,-206,32,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,32,-33,-33,32,-33,-33,32,-33,32,-259,-23,-123,-124,-126,82,-103,349,82,32,32,-206,-206,32,-206,-174,-206,-204,-205,-175,-206,-206,32,-206,-178,-176,-206,-206,-177,-206,-152,82,-221,233,385,-27,386,-40,388,-53,-57,-33,-33,32,32,-33,32,32,-33,32,32,82,410,-127,-65,32,32,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,82,82,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,440,82,-33,32,32,32,32,32,-262,82,82,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,32,-196,-195,-206,-197,-198,32,32,82,82,32,-261,-128,32,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,82,-122,-173,-208,-31,-45,-42,-54,-139,32,-210,-30,-39,558,-55,-57,-206,-56,-207,82,-45,-44,]),'For':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,333,334,335,337,338,339,341,343,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,399,403,408,410,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,512,515,517,520,521,522,524,542,543,544,547,548,550,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,33,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,33,33,33,33,33,33,33,33,33,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,33,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,33,-150,-151,-153,33,33,33,-149,33,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,-33,-33,-33,33,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,33,33,33,-206,-93,-206,33,33,-206,-206,33,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,33,-33,-33,33,-33,-33,33,-33,33,-259,-123,-124,-126,-61,-103,33,33,-206,-206,33,-206,-174,-206,-204,-205,-175,-206,-206,33,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,33,33,-33,33,33,-33,33,33,-61,-127,-65,33,33,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,33,33,33,33,33,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,33,-196,-195,-206,-197,-198,33,33,-61,33,-261,-128,33,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-122,-173,-208,-31,-45,-42,-54,-139,33,-210,-30,-39,-55,-57,-206,-56,-207,-45,-44,]),'While':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,333,334,335,337,338,339,341,343,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,399,403,408,410,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,512,515,517,520,521,522,524,542,543,544,547,548,550,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,34,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,34,34,34,34,34,34,34,34,34,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,34,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,34,-150,-151,-153,34,34,34,-149,34,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,-33,-33,-33,34,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,34,34,34,-206,-93,-206,34,34,-206,-206,34,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,34,-33,-33,34,-33,-33,34,-33,34,-259,-123,-124,-126,-61,-103,34,34,-206,-206,34,-206,-174,-206,-204,-205,-175,-206,-206,34,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,34,34,-33,34,34,-33,34,34,-61,-127,-65,34,34,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,34,34,34,34,34,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,34,-196,-195,-206,-197,-198,34,34,-61,34,-261,-128,34,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-122,-173,-208,-31,-45,-42,-54,-139,34,-210,-30,-39,-55,-57,-206,-56,-207,-45,-44,]),'If':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,333,334,335,337,338,339,341,343,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,399,403,408,410,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,512,515,517,520,521,522,524,542,543,544,547,548,550,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,35,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,35,35,35,35,35,35,35,35,35,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,35,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,35,-150,-151,-153,35,35,35,-149,35,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,-33,-33,-33,35,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,35,35,35,-206,-93,-206,35,35,-206,-206,35,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,35,-33,-33,35,-33,-33,35,-33,35,-259,-123,-124,-126,-61,-103,35,35,-206,-206,35,-206,-174,-206,-204,-205,-175,-206,-206,35,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,35,35,-33,35,35,-33,35,35,-61,-127,-65,35,35,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,35,35,35,35,35,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,35,-196,-195,-206,-197,-198,35,35,-61,35,-261,-128,35,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-122,-173,-208,-31,-45,-42,-54,-139,35,-210,-30,-39,-55,-57,-206,-56,-207,-45,-44,]),'Switch':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,333,334,335,337,338,339,341,343,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,399,403,408,410,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,512,515,517,520,521,522,524,542,543,544,547,548,550,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,36,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,36,36,36,36,36,36,36,36,36,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,36,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,36,-150,-151,-153,36,36,36,-149,36,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,-33,-33,-33,36,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,36,36,36,-206,-93,-206,36,36,-206,-206,36,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,36,-33,-33,36,-33,-33,36,-33,36,-259,-123,-124,-126,-61,-103,36,36,-206,-206,36,-206,-174,-206,-204,-205,-175,-206,-206,36,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,36,36,-33,36,36,-33,36,36,-61,-127,-65,36,36,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,36,36,36,36,36,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,36,-196,-195,-206,-197,-198,36,36,-61,36,-261,-128,36,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-122,-173,-208,-31,-45,-42,-54,-139,36,-210,-30,-39,-55,-57,-206,-56,-207,-45,-44,]),'Sys_Call':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,125,127,128,131,132,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,278,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,313,315,317,319,321,324,326,327,329,330,331,333,334,335,337,338,339,341,343,346,347,351,352,353,354,355,356,357,358,359,360,361,362,363,365,367,368,369,370,371,372,373,374,375,376,389,390,392,393,394,395,399,403,408,410,411,412,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,438,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,488,512,515,517,520,521,522,524,542,543,544,547,548,550,559,561,563,564,568,570,571,],[-7,-33,-7,-7,-23,-33,39,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,39,39,39,39,39,39,39,39,39,-79,39,-217,-218,-75,39,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,39,39,39,39,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,39,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,39,-260,-260,-33,-125,-75,-78,39,39,39,-150,-151,-153,39,39,39,-149,39,-146,-147,-148,39,39,-158,-159,-160,-161,-162,-163,39,-95,-96,-97,-98,-99,-100,-101,-65,-74,39,39,-219,-75,-12,-13,-80,-75,-14,-29,-37,39,-48,-53,-260,-33,-33,-33,39,-33,-262,-121,39,39,-130,-131,-132,-133,-134,-135,-136,-102,-77,39,39,39,-206,-93,39,-206,39,39,-206,-206,39,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,39,-33,-33,39,-33,-33,39,-33,39,-259,-123,-124,-126,39,-103,39,39,39,-206,-206,39,-206,-174,-206,-204,-205,-175,-206,-206,39,-206,-178,-176,-206,-206,-177,-206,-152,39,-221,39,39,-27,-40,-53,-57,-33,-33,39,39,-33,39,39,-33,39,39,39,-127,-65,39,39,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,39,39,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,39,-33,39,39,39,39,39,-262,-129,39,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,39,-196,-195,-206,-197,-198,39,39,39,39,39,-261,-128,39,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,39,-122,-173,-208,-31,-45,-42,-54,-139,39,-210,-30,-39,-55,-57,-206,-56,-207,39,-45,-44,]),'Absorb':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,333,334,335,337,338,339,341,343,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,399,403,408,410,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,512,515,517,520,521,522,524,542,543,544,547,548,550,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,40,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,40,40,40,40,40,40,40,40,40,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,40,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,40,-150,-151,-153,40,40,40,-149,40,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,-33,-33,-33,40,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,40,40,40,-206,-93,-206,40,40,-206,-206,40,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,40,-33,-33,40,-33,-33,40,-33,40,-259,-123,-124,-126,-61,-103,40,40,-206,-206,40,-206,-174,-206,-204,-205,-175,-206,-206,40,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,40,40,-33,40,40,-33,40,40,-61,-127,-65,40,40,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,40,40,40,40,40,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,40,-196,-195,-206,-197,-198,40,40,-61,40,-261,-128,40,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-122,-173,-208,-31,-45,-42,-54,-139,40,-210,-30,-39,-55,-57,-206,-56,-207,-45,-44,]),'Discharge':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,333,334,335,337,338,339,341,343,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,399,403,408,410,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,439,443,464,466,469,470,471,472,473,474,475,478,479,484,486,512,515,517,520,521,522,524,542,543,544,547,548,550,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,41,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,41,41,41,41,41,41,41,41,41,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,41,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,41,-150,-151,-153,41,41,41,-149,41,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,-33,-33,-33,41,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,41,41,41,-206,-93,-206,41,41,-206,-206,41,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,41,-33,-33,41,-33,-33,41,-33,41,-259,-123,-124,-126,-61,-103,41,41,-206,-206,41,-206,-174,-206,-204,-205,-175,-206,-206,41,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,41,41,-33,41,41,-33,41,41,-61,-127,-65,41,41,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,41,41,41,41,41,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,41,-196,-195,-206,-197,-198,41,41,-61,41,-261,-128,41,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-122,-173,-208,-31,-45,-42,-54,-139,41,-210,-30,-39,-55,-57,-206,-56,-207,-45,-44,]),'Link_End':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,346,347,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,411,416,417,418,419,420,421,422,423,424,425,429,430,431,432,433,439,466,470,471,472,473,474,475,478,479,484,486,512,515,517,520,521,522,524,542,544,547,548,550,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,-118,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-118,53,-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,112,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-125,-75,-78,-118,-150,-151,-153,-118,-118,-118,-149,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-206,-93,-206,-118,-118,-206,-206,-118,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-123,-124,-126,-61,-103,-118,-118,-206,-206,-118,-206,-174,-206,-204,-205,-175,-206,-206,-118,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-127,-65,-118,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,-196,-195,-206,-197,-198,-61,-128,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-122,-173,-208,-31,-45,-42,-54,-139,-210,-30,-39,-55,-57,-206,-56,-207,-45,-44,]),'Sys':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,112,115,116,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,346,347,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,416,417,418,419,420,421,422,423,424,425,429,430,431,432,433,439,443,444,445,446,448,449,450,451,453,454,455,456,458,459,461,463,464,466,470,471,472,473,474,475,478,479,484,486,489,490,491,493,496,497,499,502,503,505,508,509,512,515,517,520,521,522,524,526,528,530,534,538,542,544,547,548,550,551,559,561,563,564,570,571,],[-7,-33,-7,-7,-23,-33,-118,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-118,55,-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,55,55,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,55,-260,-260,-125,-75,-78,-118,-150,-151,-153,-118,-118,-118,-149,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-260,-33,-33,-33,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-206,-93,-206,-118,-118,-206,-206,-118,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,-118,-259,-123,-124,-126,-61,-103,-118,-118,-206,-206,-118,-206,-174,-206,-204,-205,-175,-206,-206,-118,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,-118,-264,-118,-33,-118,-264,-118,-33,-118,-264,-118,-61,-264,-127,-65,-118,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,-118,-118,-264,55,-264,-118,-264,55,-264,-118,-264,55,-264,55,-118,55,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,-196,-195,-206,-197,-198,-61,-118,-264,-264,55,55,55,-264,55,55,55,-264,55,55,55,-264,55,-261,-128,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-264,55,55,55,55,55,55,55,55,55,55,-263,-122,-173,-208,-31,-45,-42,-54,55,55,55,55,55,-139,-210,-30,-39,-55,55,-57,-206,-56,-207,-45,-44,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,112,113,114,115,116,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,175,176,178,179,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,346,347,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,416,417,418,419,420,421,422,423,424,425,429,430,431,432,433,439,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,470,471,472,473,474,475,478,479,484,486,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,512,515,517,520,521,522,524,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,542,544,547,548,550,551,552,553,554,555,556,559,560,561,563,564,570,571,],[-7,0,-33,-7,-7,-23,-33,-118,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-118,-258,-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-258,-258,-4,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-258,-2,-3,-260,-260,-125,-75,-78,-118,-150,-151,-153,-118,-118,-118,-149,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-1,-260,-33,-33,-33,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-206,-93,-206,-118,-118,-206,-206,-118,-206,-143,-144,-157,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,-118,-259,-123,-124,-126,-61,-103,-118,-118,-206,-206,-118,-206,-174,-206,-204,-205,-175,-206,-206,-118,-206,-178,-176,-206,-206,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,-118,-264,-118,-33,-118,-264,-118,-33,-118,-264,-118,-61,-264,-127,-65,-118,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,-118,-118,-264,-258,-264,-118,-264,-258,-264,-118,-264,-258,-264,-258,-118,-258,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,-196,-195,-206,-197,-198,-61,-118,-264,-264,-258,-228,-258,-258,-264,-258,-229,-258,-258,-264,-258,-230,-258,-258,-232,-264,-231,-258,-261,-128,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,-264,-258,-258,-233,-258,-236,-234,-258,-258,-235,-258,-239,-237,-258,-258,-238,-258,-241,-240,-258,-263,-242,-122,-173,-208,-31,-45,-42,-54,-258,-243,-258,-244,-258,-245,-247,-246,-258,-248,-250,-249,-258,-251,-252,-139,-210,-30,-39,-55,-258,-253,-254,-255,-256,-257,-57,-227,-206,-56,-207,-45,-44,]),'Struct':([0,3,4,6,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,76,77,78,79,80,81,82,83,84,85,86,91,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,120,122,153,154,155,156,157,158,159,160,161,162,168,169,170,171,172,173,175,176,178,179,182,201,203,215,231,248,249,250,251,253,254,255,256,315,321,324,326,327,389,390,439,484,486,520,521,522,524,547,548,550,559,563,570,571,],[5,5,5,-23,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-102,-77,-93,-94,-8,-82,-31,-28,-43,-51,-55,-50,-221,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'open_bracket':([5,11,55,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,91,115,116,117,120,122,128,131,132,134,136,138,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,184,185,186,187,190,201,203,210,211,215,218,230,231,257,259,262,268,279,280,310,315,329,364,410,414,464,478,516,],[12,42,-260,139,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-260,-260,189,-75,-78,212,-150,-151,-153,219,222,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,232,-260,260,263,265,-262,-102,-77,281,284,-93,302,-157,-94,330,334,338,-259,351,352,-152,-221,393,427,-262,469,-261,-164,543,]),'Integer':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,102,103,115,116,175,184,250,251,269,321,520,547,],[15,15,15,15,-25,-19,-20,-21,-22,15,15,15,-29,15,-24,-26,15,15,-29,15,-31,-28,15,-27,-31,-30,]),'Decimal':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,102,103,115,116,175,184,250,251,269,321,520,547,],[16,16,16,16,-25,-19,-20,-21,-22,16,16,16,-29,16,-24,-26,16,16,-29,16,-31,-28,16,-27,-31,-30,]),'String':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,102,103,115,116,175,184,250,251,269,321,520,547,],[17,17,17,17,-25,-19,-20,-21,-22,17,17,17,-29,17,-24,-26,17,17,-29,17,-31,-28,17,-27,-31,-30,]),'Boolean':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,102,103,115,116,175,184,250,251,269,321,520,547,],[18,18,18,18,-25,-19,-20,-21,-22,18,18,18,-29,18,-24,-26,18,18,-29,18,-31,-28,18,-27,-31,-30,]),'close_bracket':([5,6,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,37,38,40,41,42,43,44,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,93,100,101,102,103,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,175,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,321,324,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,415,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,439,443,444,445,446,449,450,451,454,455,456,459,461,464,466,469,470,471,472,473,474,475,477,478,479,480,484,486,489,490,491,497,503,509,512,514,515,517,520,521,522,524,526,542,543,544,547,548,550,557,559,561,563,564,570,571,],[-23,-23,-23,-23,45,-25,-19,-20,-21,-22,-33,-23,-47,-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-23,95,98,-18,-29,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-118,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,168,-16,-17,-24,-26,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,-118,-150,-151,-153,-118,220,-118,-118,-149,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-29,-37,-61,-48,-53,-260,-33,-33,-33,-118,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,287,-93,300,-118,-118,-206,306,-118,309,-143,-144,-157,-94,-31,-28,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,-264,-118,-259,-123,-124,-126,-61,-103,-118,-118,356,358,-118,361,-174,-206,-204,-205,-175,-206,369,-118,372,-178,-176,-206,375,-177,-206,-152,-221,-27,-40,-53,-57,-33,-33,-118,-264,-118,-33,-118,-264,-118,-33,-118,-264,-118,407,-61,-264,-127,-65,-118,-118,418,420,-179,-206,-180,-206,424,-181,-206,-182,-185,-183,-206,431,-184,-206,-187,-186,-206,-188,-52,-49,-33,-118,-118,-264,448,-264,-118,-264,453,-264,-118,-264,458,-264,-118,463,-262,-129,470,471,-189,-206,-190,-206,-191,-193,-192,-206,-194,-118,-196,-195,-206,-197,-198,-118,-61,-118,-264,-264,493,496,-264,499,502,-264,505,508,-264,-261,-128,-118,-141,-206,-199,-200,-201,-202,517,-164,-203,518,-43,-57,-264,528,530,534,538,-263,-122,542,-173,-208,-31,-45,-42,-54,551,-139,-118,-210,-30,-39,-55,561,-57,-206,-56,-207,-45,-44,]),'Fixed':([6,],[20,]),'Return':([6,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,37,38,40,41,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,76,77,78,79,80,81,82,83,84,85,86,89,90,91,106,107,108,109,111,115,116,117,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,176,178,179,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,324,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,346,347,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,389,390,393,394,395,396,398,399,400,402,403,404,406,408,410,411,416,417,418,419,420,421,422,423,424,425,429,430,431,432,433,439,443,444,445,450,455,461,464,466,470,471,472,473,474,475,478,479,484,486,489,512,515,517,521,522,524,542,544,548,550,559,561,563,564,570,571,],[-23,-19,-20,-21,-22,-33,-23,-47,-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-32,-38,-35,-51,-260,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-34,-41,-46,-53,-61,-260,-260,-33,-125,-75,-78,-118,-150,-151,-153,-118,-118,-118,-149,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-37,-61,-48,-53,-260,-33,-33,-33,-118,-33,-262,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-206,-93,-206,-118,-118,-206,-206,-118,-206,-143,-144,-157,-94,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,343,-118,-259,-123,-124,-126,-61,-103,-118,-118,-206,-206,-118,-206,-174,-206,-204,-205,-175,-206,-206,-118,-206,-178,-176,-206,-206,-177,-206,-152,-221,-40,-53,-57,-33,-33,-118,343,-118,-33,-118,343,-118,-33,-118,343,-118,-61,343,-127,-65,-118,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-52,-49,-33,-118,-118,343,343,-118,343,343,-118,343,343,-118,-262,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,-196,-195,-206,-197,-198,-61,-118,343,343,343,343,343,-261,-128,-141,-206,-199,-200,-201,-202,-164,-203,-43,-57,343,-122,-173,-208,-45,-42,-54,-139,-210,-39,-55,-57,-206,-56,-207,-45,-44,]),'comma':([11,12,14,15,16,17,18,42,43,44,45,46,47,51,76,77,78,79,80,81,82,83,84,85,86,91,93,95,96,98,100,101,102,103,109,111,120,122,153,154,155,156,157,158,159,160,161,162,168,172,175,178,182,190,201,203,215,231,233,235,236,237,238,239,240,241,242,243,244,245,246,247,250,251,253,254,255,256,314,315,318,320,321,326,327,382,384,385,389,392,410,412,438,439,442,484,486,488,520,521,524,547,550,559,563,568,570,],[-23,-23,-25,-19,-20,-21,-22,-23,-75,-75,-75,-18,105,-51,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-75,172,-75,-16,-17,-24,-26,180,-61,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-75,105,-61,180,269,-102,-77,-93,-94,-79,317,319,-62,-63,-64,-103,-71,-72,-73,-89,-90,-91,-92,322,-28,325,-51,-55,-50,-76,-221,-107,-70,-27,180,391,317,-108,-79,-52,-61,269,-61,-61,-61,488,325,391,-61,322,549,-54,-30,-55,391,-56,-61,549,]),'Break':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,435,466,469,470,471,472,473,474,475,478,479,481,512,515,517,542,543,544,561,564,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,142,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-125,-75,-78,142,-150,-151,-153,142,142,142,142,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,142,142,142,-206,-93,-206,142,142,-206,-206,142,-206,-143,-144,-157,-94,-123,-124,-126,-61,-103,142,142,-206,-206,142,-206,-174,-206,-204,-205,-175,-206,-206,142,-206,-178,-176,-206,-206,-177,-206,-152,-221,-127,-65,142,142,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,142,-196,-195,-206,-197,-198,142,-118,-128,142,-141,-206,-199,-200,-201,-202,-164,-203,519,-122,-173,-208,-139,142,-210,-206,-207,]),'Continue':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,466,469,470,471,472,473,474,475,478,479,512,515,517,542,543,544,561,564,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,143,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-125,-75,-78,143,-150,-151,-153,143,143,143,143,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,143,143,143,-206,-93,-206,143,143,-206,-206,143,-206,-143,-144,-157,-94,-123,-124,-126,-61,-103,143,143,-206,-206,143,-206,-174,-206,-204,-205,-175,-206,-206,143,-206,-178,-176,-206,-206,-177,-206,-152,-221,-127,-65,143,143,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,143,-196,-195,-206,-197,-198,143,-128,143,-141,-206,-199,-200,-201,-202,-164,-203,-122,-173,-208,-139,143,-210,-206,-207,]),'Avoid':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,89,90,91,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,346,347,351,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,411,416,417,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,466,469,470,471,472,473,474,475,478,479,512,515,517,542,543,544,561,564,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,144,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-125,-75,-78,144,-150,-151,-153,144,144,144,144,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,144,144,144,-206,-93,-206,144,144,-206,-206,144,-206,-143,-144,-157,-94,-123,-124,-126,-61,-103,144,144,-206,-206,144,-206,-174,-206,-204,-205,-175,-206,-206,144,-206,-178,-176,-206,-206,-177,-206,-152,-221,-127,-65,144,144,-206,-206,-179,-206,-180,-206,-206,-181,-206,-182,-185,-183,-206,-206,-184,-206,-187,-186,-206,-188,-129,-206,-189,-206,-190,-206,-191,-193,-192,-206,-194,144,-196,-195,-206,-197,-198,144,-128,144,-141,-206,-199,-200,-201,-202,-164,-203,-122,-173,-208,-139,144,-210,-206,-207,]),'Elif':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,76,77,78,79,80,81,82,83,84,85,86,89,90,91,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,346,347,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,411,416,417,418,419,420,421,422,423,424,425,429,430,431,432,433,466,470,471,472,473,474,475,478,479,512,515,517,542,544,561,564,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-125,-75,-78,-118,-150,-151,-153,-118,-118,-118,-149,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,290,-93,290,-118,-118,290,290,-118,290,-143,-144,-157,-94,-123,-124,-126,-61,-103,-118,-118,290,290,-118,290,-174,290,-204,-205,-175,290,290,-118,290,-178,-176,290,290,-177,290,-152,-221,-127,-65,-118,290,290,-179,290,-180,290,290,-181,290,-182,-185,-183,290,290,-184,290,-187,-186,290,-188,-129,290,-189,290,-190,290,-191,-193,-192,290,-194,-196,-195,290,-197,-198,-128,-141,290,-199,-200,-201,-202,-164,-203,-122,-173,-208,-139,-210,290,-207,]),'Else':([24,25,26,27,28,29,30,31,32,37,38,40,41,56,57,58,59,60,61,62,63,64,65,76,77,78,79,80,81,82,83,84,85,86,89,90,91,119,120,122,128,131,132,134,136,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,191,192,193,194,195,196,197,198,199,200,201,203,210,211,212,213,215,217,218,219,220,221,222,223,224,225,230,231,270,271,272,273,274,280,281,282,283,284,285,286,287,288,289,299,300,301,302,303,304,305,306,307,308,309,310,315,346,347,352,353,354,355,356,357,358,359,360,361,362,367,368,369,370,371,372,373,374,375,376,411,416,417,418,419,420,421,422,423,424,425,429,430,431,432,433,466,470,471,472,473,474,475,478,479,512,515,517,542,544,561,564,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,-217,-218,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-220,-60,-125,-75,-78,-118,-150,-151,-153,-118,-118,-118,-149,-118,-146,-147,-148,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-219,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,291,-93,291,-118,-118,291,291,-118,291,-143,-144,-157,-94,-123,-124,-126,-61,-103,-118,-118,291,291,-118,291,-174,291,-204,-205,-175,291,291,-118,291,-178,-176,291,291,-177,291,-152,-221,-127,-65,-118,291,291,-179,291,-180,291,291,-181,291,-182,-185,-183,291,291,-184,291,-187,-186,291,-188,-129,291,-189,291,-190,291,-191,-193,-192,291,-194,-196,-195,291,-197,-198,-128,-141,291,-199,-200,-201,-202,-164,-203,-122,-173,-208,-139,-210,291,-207,]),'open_brace':([32,47,51,82,107,204,233,328,348,349,385,386,387,440,558,567,],[66,104,110,163,177,277,313,392,412,413,163,437,438,485,562,568,]),'period':([32,35,40,41,65,66,68,69,78,82,89,92,111,122,125,127,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,178,192,193,194,195,196,197,198,199,200,203,216,233,240,273,274,278,313,314,317,319,343,363,365,382,385,392,411,412,438,439,465,466,488,568,],[-79,-75,-75,-75,120,-75,-75,-75,120,-79,120,-75,-75,-78,-75,-75,-75,-75,-158,-159,-160,-161,-162,-163,-75,-95,-96,-97,-98,-99,-100,-101,-74,-75,-75,-75,-75,-75,-130,-131,-132,-133,-134,-135,-136,-77,-75,-79,120,-75,120,-75,-75,-74,-75,-75,-75,-75,-75,-78,-79,-75,-75,-75,-75,-75,120,-128,-75,-75,]),'equal':([32,51,65,82,107,119,120,122,162,193,201,202,203,254,255,274,275,323,347,388,411,465,511,513,541,550,566,],[-79,111,-103,-79,178,193,-75,-78,-74,-75,-102,276,-77,111,328,-103,348,387,411,439,-75,-103,411,276,-137,328,567,]),'plus_equal':([32,65,82,119,120,122,162,201,203,],[-79,-103,-79,194,-75,-78,-74,-102,-77,]),'minus_equal':([32,65,82,119,120,122,162,201,203,],[-79,-103,-79,195,-75,-78,-74,-102,-77,]),'times_equal':([32,65,82,119,120,122,162,201,203,],[-79,-103,-79,196,-75,-78,-74,-102,-77,]),'divide_equal':([32,65,82,119,120,122,162,201,203,],[-79,-103,-79,197,-75,-78,-74,-102,-77,]),'divide_divide_equal':([32,65,82,119,120,122,162,201,203,],[-79,-103,-79,198,-75,-78,-74,-102,-77,]),'modulo_equal':([32,65,82,119,120,122,162,201,203,],[-79,-103,-79,199,-75,-78,-74,-102,-77,]),'times_times_equal':([32,65,82,119,120,122,162,201,203,],[-79,-103,-79,200,-75,-78,-74,-102,-77,]),'open_par':([34,35,41,55,66,68,69,73,88,92,111,115,125,127,133,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,178,192,193,194,195,196,197,198,199,200,205,216,273,278,290,292,293,294,313,317,319,343,363,365,392,411,412,438,439,466,488,568,],[68,69,92,116,92,125,127,145,165,92,92,184,127,127,216,125,92,-158,-159,-160,-161,-162,-163,92,-95,-96,-97,-98,-99,-100,-101,92,92,92,92,92,-130,-131,-132,-133,-134,-135,-136,278,125,92,125,363,365,-169,-170,92,92,92,92,125,125,92,-129,92,92,92,-128,92,92,]),'Not':([35,68,69,125,127,216,278,363,365,],[73,73,133,205,205,205,205,73,205,]),'lit_bool':([35,41,68,69,111,125,127,145,146,147,148,149,150,151,152,165,178,193,216,273,278,317,319,343,363,365,392,411,412,438,439,466,488,568,],[74,91,74,134,91,208,208,229,91,-158,-159,-160,-161,-162,-163,239,91,-129,298,91,208,239,239,91,74,208,91,-129,91,91,91,-128,91,91,]),'lit_str':([35,41,68,69,111,125,127,145,146,147,148,149,150,151,152,165,178,193,216,273,278,312,317,319,343,363,365,392,411,412,438,439,466,488,568,],[77,77,77,77,77,77,77,77,77,-158,-159,-160,-161,-162,-163,238,77,-129,77,77,77,379,238,238,77,77,77,77,-129,77,77,77,-128,77,77,]),'greater_than':([35,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,120,122,125,127,130,134,135,145,153,154,155,156,157,158,159,160,161,162,201,203,208,215,216,229,231,278,298,315,363,365,],[-61,-61,-61,-60,147,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-75,-78,-61,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,-60,-93,-61,-60,-94,-61,-60,-221,-61,-61,]),'less_than':([35,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,120,122,125,127,130,134,135,145,153,154,155,156,157,158,159,160,161,162,201,203,208,215,216,229,231,278,298,315,363,365,],[-61,-61,-61,-60,148,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-75,-78,-61,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,-60,-93,-61,-60,-94,-61,-60,-221,-61,-61,]),'equal_equal':([35,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,120,122,125,127,130,134,135,145,153,154,155,156,157,158,159,160,161,162,201,203,208,215,216,229,231,278,298,315,363,365,],[-61,-61,-61,-60,149,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-75,-78,-61,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,-60,-93,-61,-60,-94,-61,-60,-221,-61,-61,]),'not_equal':([35,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,120,122,125,127,130,134,135,145,153,154,155,156,157,158,159,160,161,162,201,203,208,215,216,229,231,278,298,315,363,365,],[-61,-61,-61,-60,150,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-75,-78,-61,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,-60,-93,-61,-60,-94,-61,-60,-221,-61,-61,]),'great_than_equal':([35,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,120,122,125,127,130,134,135,145,153,154,155,156,157,158,159,160,161,162,201,203,208,215,216,229,231,278,298,315,363,365,],[-61,-61,-61,-60,151,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-75,-78,-61,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,-60,-93,-61,-60,-94,-61,-60,-221,-61,-61,]),'less_than_equal':([35,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,120,122,125,127,130,134,135,145,153,154,155,156,157,158,159,160,161,162,201,203,208,215,216,229,231,278,298,315,363,365,],[-61,-61,-61,-60,152,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-75,-78,-61,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,-60,-93,-61,-60,-94,-61,-60,-221,-61,-61,]),'plus':([35,41,66,68,69,76,78,79,80,81,82,83,84,85,86,92,111,120,121,122,123,125,127,130,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,178,192,193,194,195,196,197,198,199,200,201,203,215,216,231,233,242,243,244,245,246,247,270,272,273,274,278,313,314,315,317,319,343,347,363,365,382,385,392,411,412,438,439,466,488,568,],[-69,-69,-69,-69,-69,154,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-75,-84,-78,154,-69,-69,-67,154,-69,-69,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,154,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-93,-69,154,-79,-67,-68,-84,-85,-86,-87,154,154,-69,-103,-69,-69,-74,-221,-69,-69,-69,-65,-69,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,]),'minus':([35,41,66,68,69,76,78,79,80,81,82,83,84,85,86,92,111,120,121,122,123,125,127,130,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,178,192,193,194,195,196,197,198,199,200,201,203,215,216,231,233,242,243,244,245,246,247,270,272,273,274,278,313,314,315,317,319,343,347,363,365,382,385,392,411,412,438,439,466,488,568,],[-69,-69,-69,-69,-69,155,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-75,-84,-78,155,-69,-69,-67,155,-69,-69,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,155,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-93,-69,155,-79,-67,-68,-84,-85,-86,-87,155,155,-69,-103,-69,-69,-74,-221,-69,-69,-69,-65,-69,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,]),'times':([35,41,66,68,69,76,78,79,80,81,82,83,84,85,86,92,111,120,121,122,123,125,127,130,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,178,192,193,194,195,196,197,198,199,200,201,203,215,216,231,233,242,243,244,245,246,247,270,272,273,274,278,313,314,315,317,319,343,347,363,365,382,385,392,411,412,438,439,466,488,568,],[-69,-69,-69,-69,-69,156,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-75,-84,-78,156,-69,-69,-67,156,-69,-69,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,156,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-93,-69,156,-79,-67,-68,-84,-85,-86,-87,156,156,-69,-103,-69,-69,-74,-221,-69,-69,-69,-65,-69,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,]),'divide':([35,41,66,68,69,76,78,79,80,81,82,83,84,85,86,92,111,120,121,122,123,125,127,130,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,178,192,193,194,195,196,197,198,199,200,201,203,215,216,231,233,242,243,244,245,246,247,270,272,273,274,278,313,314,315,317,319,343,347,363,365,382,385,392,411,412,438,439,466,488,568,],[-69,-69,-69,-69,-69,157,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-75,-84,-78,157,-69,-69,-67,157,-69,-69,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,157,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-93,-69,157,-79,-67,-68,-84,-85,-86,-87,157,157,-69,-103,-69,-69,-74,-221,-69,-69,-69,-65,-69,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,]),'divide_divide':([35,41,66,68,69,76,78,79,80,81,82,83,84,85,86,92,111,120,121,122,123,125,127,130,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,178,192,193,194,195,196,197,198,199,200,201,203,215,216,231,233,242,243,244,245,246,247,270,272,273,274,278,313,314,315,317,319,343,347,363,365,382,385,392,411,412,438,439,466,488,568,],[-69,-69,-69,-69,-69,158,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-75,-84,-78,158,-69,-69,-67,158,-69,-69,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,158,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-93,-69,158,-79,-67,-68,-84,-85,-86,-87,158,158,-69,-103,-69,-69,-74,-221,-69,-69,-69,-65,-69,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,]),'modulo':([35,41,66,68,69,76,78,79,80,81,82,83,84,85,86,92,111,120,121,122,123,125,127,130,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,178,192,193,194,195,196,197,198,199,200,201,203,215,216,231,233,242,243,244,245,246,247,270,272,273,274,278,313,314,315,317,319,343,347,363,365,382,385,392,411,412,438,439,466,488,568,],[-69,-69,-69,-69,-69,159,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-75,-84,-78,159,-69,-69,-67,159,-69,-69,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,159,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-93,-69,159,-79,-67,-68,-84,-85,-86,-87,159,159,-69,-103,-69,-69,-74,-221,-69,-69,-69,-65,-69,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,]),'times_times':([35,41,66,68,69,76,78,79,80,81,82,83,84,85,86,92,111,120,121,122,123,125,127,130,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,178,192,193,194,195,196,197,198,199,200,201,203,215,216,231,233,242,243,244,245,246,247,270,272,273,274,278,313,314,315,317,319,343,347,363,365,382,385,392,411,412,438,439,466,488,568,],[-69,-69,-69,-69,-69,160,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-75,-84,-78,160,-69,-69,-67,160,-69,-69,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,160,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-93,-69,160,-79,-67,-68,-84,-85,-86,-87,160,160,-69,-103,-69,-69,-74,-221,-69,-69,-69,-65,-69,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,]),'lit_intposi':([35,41,66,68,69,92,104,110,111,125,127,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,177,178,192,193,194,195,196,197,198,199,200,216,273,278,312,313,317,319,343,363,365,392,411,412,413,437,438,439,466,485,488,562,568,],[83,83,121,83,83,83,174,181,83,83,83,83,83,-158,-159,-160,-161,-162,-163,83,-95,-96,-97,-98,-99,-100,-101,83,244,252,83,83,83,-130,-131,-132,-133,-134,-135,-136,83,83,83,380,83,244,244,83,83,83,83,-129,83,468,482,83,83,-128,523,83,565,83,]),'lit_intnega':([35,41,66,68,69,92,111,125,127,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,178,192,193,194,195,196,197,198,199,200,216,273,278,312,313,317,319,343,363,365,392,411,412,438,439,466,488,568,],[84,84,84,84,84,84,84,84,84,84,84,-158,-159,-160,-161,-162,-163,84,-95,-96,-97,-98,-99,-100,-101,84,245,84,84,84,-130,-131,-132,-133,-134,-135,-136,84,84,84,381,84,245,245,84,84,84,84,-129,84,84,84,-128,84,84,]),'lit_decposi':([35,41,66,68,69,92,111,125,127,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,178,192,193,194,195,196,197,198,199,200,216,273,278,313,317,319,343,363,365,392,411,412,438,439,466,488,568,],[85,85,85,85,85,85,85,85,85,85,85,-158,-159,-160,-161,-162,-163,85,-95,-96,-97,-98,-99,-100,-101,85,246,85,85,85,-130,-131,-132,-133,-134,-135,-136,85,85,85,85,246,246,85,85,85,85,-129,85,85,85,-128,85,85,]),'lit_decnega':([35,41,66,68,69,92,111,125,127,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,178,192,193,194,195,196,197,198,199,200,216,273,278,313,317,319,343,363,365,392,411,412,438,439,466,488,568,],[86,86,86,86,86,86,86,86,86,86,86,-158,-159,-160,-161,-162,-163,86,-95,-96,-97,-98,-99,-100,-101,86,247,86,86,86,-130,-131,-132,-133,-134,-135,-136,86,86,86,86,247,247,86,86,86,86,-129,86,86,86,-128,86,86,]),'close_par':([55,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,91,115,116,117,120,122,126,128,129,130,131,132,134,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,184,185,186,190,201,203,206,207,208,215,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,257,268,295,296,297,298,310,314,315,316,317,318,320,366,382,383,384,385,410,426,428,436,464,478,],[-260,136,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-260,-260,187,-75,-78,209,210,214,215,-150,-151,-153,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-224,-260,259,262,-262,-102,-77,-166,-167,-168,-93,310,-154,-155,-156,-157,-94,-79,315,-226,-109,-62,-63,-64,-103,-71,-72,-73,-89,-90,-91,-92,329,-259,366,-154,-155,-156,-152,-76,-221,-223,-224,-107,-70,-165,-78,-225,-108,-79,-262,476,478,-222,-261,-164,]),'close_brace':([66,76,77,78,79,80,81,82,83,84,85,86,91,120,121,122,123,153,154,155,156,157,158,159,160,161,162,163,174,181,201,203,215,231,252,277,313,315,392,412,438,441,442,467,468,482,483,487,488,523,525,565,568,569,],[122,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,202,-78,203,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,122,250,255,-102,-77,-93,-94,323,350,382,-221,-61,-61,-61,486,-106,512,513,520,521,-104,-61,550,-105,566,-61,570,]),'In':([67,],[124,]),'colon':([70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,91,120,122,128,131,132,134,136,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,201,203,209,210,215,230,231,291,310,315,350,377,378,379,380,381,476,478,],[138,-150,-151,-153,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,164,-60,-75,-78,211,-150,-151,-153,218,-61,-158,-159,-160,-161,-162,-163,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,279,280,-93,-157,-94,364,-152,-221,414,434,435,-212,-213,-214,516,-164,]),'And':([214,],[293,]),'Or':([214,],[294,]),'Execute':([232,519,],[312,312,]),'Default':([311,519,545,546,],[377,-216,-211,-215,]),'End_Switch':([518,],[544,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,9,10,]),'declare_statements':([0,2,3,4,7,19,117,185,186,187,189,257,259,260,262,263,265,329,330,334,338,393,],[3,8,3,3,22,48,188,258,261,264,267,331,333,335,337,339,341,394,395,399,403,443,]),'struct_dec':([0,3,4,],[4,4,4,]),'struct_element1':([5,11,12,42,46,],[13,43,44,93,101,]),'data_type':([5,6,11,12,20,42,46,55,115,116,184,269,],[14,21,14,14,49,14,14,118,118,118,118,345,]),'const_var_dec':([6,],[19,]),'statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[23,52,56,57,58,59,60,61,62,63,140,140,140,140,140,225,266,140,140,140,140,140,140,332,336,340,344,140,140,140,140,396,398,400,402,404,406,140,140,444,445,450,455,461,140,140,481,489,140,140,]),'assignment_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_statement':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'switch_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'conditional_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'io_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'func_call':([8,22,24,25,26,27,28,29,30,31,35,41,66,68,69,70,92,111,125,127,128,136,138,139,141,145,146,153,163,165,178,188,192,193,210,211,212,216,218,219,222,258,261,264,267,273,278,280,281,284,302,313,317,319,331,333,335,337,339,341,343,351,352,363,365,392,394,395,399,403,408,412,427,434,435,438,439,443,469,488,543,568,],[31,31,31,31,31,31,31,31,31,31,81,81,81,81,81,31,81,81,81,81,31,31,31,31,31,81,81,81,81,243,81,31,81,81,31,31,31,81,31,31,31,31,31,31,31,81,81,31,31,31,31,81,243,243,31,31,31,31,31,31,81,31,31,81,81,81,31,31,31,31,31,81,31,31,31,81,81,31,31,81,31,81,]),'input_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'output_statements':([8,22,24,25,26,27,28,29,30,31,70,128,136,138,139,141,188,210,211,212,218,219,222,258,261,264,267,280,281,284,302,331,333,335,337,339,341,351,352,394,395,399,403,408,427,434,435,443,469,543,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'id_array_dec':([14,],[46,]),'id_array_var':([21,],[50,]),'functions':([23,52,53,112,397,401,405,407,409,446,448,449,451,453,454,456,458,459,463,490,491,493,496,497,499,502,503,505,508,526,528,530,534,538,551,],[54,113,114,183,447,452,457,460,462,492,494,495,498,500,501,504,506,507,510,527,529,531,532,533,535,536,537,539,540,552,553,554,555,556,560,]),'assignment_statements2':([32,],[64,]),'array':([32,82,233,385,],[65,162,314,314,]),'condition':([35,68,69,363,],[70,126,128,426,]),'relational_expression':([35,68,69,125,127,145,216,278,363,365,],[71,71,131,206,206,227,296,206,71,206,]),'logical_expression':([35,68,69,125,127,145,216,278,363,365,],[72,72,132,207,207,228,297,207,72,207,]),'value':([35,41,68,69,111,125,127,145,146,178,216,273,278,343,363,365,392,412,438,439,488,568,],[75,90,75,75,182,75,75,75,230,253,75,346,75,408,75,75,442,442,442,484,442,442,]),'num_value':([35,41,66,68,69,92,111,125,127,145,146,153,163,165,178,192,193,216,273,278,313,317,319,343,363,365,392,412,438,439,488,568,],[76,76,123,76,135,167,76,135,135,76,76,231,123,167,76,270,272,76,76,76,123,167,167,76,76,76,76,76,76,76,76,76,]),'id_array':([35,40,41,43,44,45,66,68,69,92,93,95,98,111,120,125,127,145,146,153,163,165,168,172,178,192,193,216,273,278,313,317,319,343,363,365,392,411,412,438,439,488,568,],[78,89,78,96,96,96,78,78,78,78,96,96,96,78,201,78,78,78,78,78,78,78,96,96,78,78,274,78,78,78,78,78,78,78,78,78,78,465,78,78,78,78,78,]),'literals':([35,41,66,68,69,92,111,125,127,145,146,153,163,165,178,192,193,216,273,278,313,317,319,343,363,365,392,412,438,439,488,568,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'arithmetic_expression':([35,41,66,68,69,92,111,125,127,145,146,153,163,165,178,192,193,216,273,278,313,317,319,343,363,365,392,412,438,439,488,568,],[80,80,80,80,130,130,80,130,130,80,80,80,80,242,80,80,80,80,80,80,80,242,242,80,80,80,80,80,80,80,80,80,]),'id_array1':([43,44,45,93,95,98,168,172,],[94,97,99,169,170,173,248,249,]),'struct_element2':([46,],[100,]),'id_array_dec2':([47,],[102,]),'id_dec1':([47,175,],[103,251,]),'id_array_const':([49,],[106,]),'id_array_var2':([51,],[108,]),'var_init':([51,254,],[109,326,]),'parameters':([55,115,116,184,],[117,185,186,257,]),'id_struct':([65,78,89,240,274,465,],[119,161,166,320,347,511,]),'logical_operand':([69,125,127,216,278,365,],[129,129,129,295,295,428,]),'inside_statements':([70,128,136,138,139,210,211,212,218,219,222,280,281,284,302,351,352,427,434,469,543,],[137,213,217,221,223,282,283,285,301,303,307,353,354,359,370,415,416,477,480,514,557,]),'control_statements':([70,128,136,138,139,140,210,211,212,218,219,222,280,281,284,302,351,352,427,434,469,543,],[141,141,141,141,141,224,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'relational_operators':([75,],[146,]),'arithmetic_operators':([76,123,135,167,231,270,272,],[153,153,153,153,153,153,153,]),'id_array2':([96,],[171,]),'id_array_const2':([107,],[176,]),'id_var1':([109,182,326,],[179,256,389,]),'assignment_exp':([119,],[191,]),'assignment_operators':([119,],[192,]),'condition_not':([145,216,],[226,226,]),'function_param':([165,317,],[234,383,]),'value1_opt':([165,317,319,],[235,235,384,]),'value_opt':([165,317,319,],[236,236,236,]),'num_value_opt':([165,317,319,],[237,237,237,]),'id_array_opt':([165,317,319,],[240,240,240,]),'literals_opt':([165,317,319,],[241,241,241,]),'more_parameters':([190,410,],[268,464,]),'assign_value':([193,],[271,]),'more_id':([193,411,],[273,466,]),'more_array':([202,513,],[275,541,]),'condition_else':([213,217,220,221,223,282,283,285,287,300,301,303,306,307,309,353,354,356,358,359,361,369,370,372,375,416,418,420,424,431,471,561,],[286,299,304,305,308,355,357,360,362,367,368,371,373,374,376,417,419,421,422,423,425,429,430,432,433,472,473,474,475,479,515,564,]),'elif_statement':([213,217,220,221,223,282,283,285,287,300,301,303,306,307,309,353,354,356,358,359,361,369,370,372,375,416,418,420,424,431,471,561,],[288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,]),'else_statement':([213,217,220,221,223,282,283,285,287,300,301,303,306,307,309,353,354,356,358,359,361,369,370,372,375,416,418,420,424,431,471,561,],[289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,]),'logical_operators':([214,],[292,]),'execute':([232,519,],[311,546,]),'more_param':([235,382,],[316,436,]),'value2_opt':([236,],[318,]),'array_dec1':([250,520,],[321,547,]),'id_const1':([253,484,],[324,522,]),'array_init':([255,550,],[327,559,]),'return_statement':([266,332,336,340,344,396,398,400,402,404,406,444,445,450,455,461,489,],[342,397,401,405,409,446,449,451,454,456,459,490,491,497,503,509,526,]),'switch_lit':([312,],[378,]),'array_var1':([327,486,559,],[390,524,563,]),'value1':([392,412,438,488,568,],[441,467,483,525,569,]),'value2':([442,],[487,]),'execute1':([519,],[545,]),'array_const1':([521,570,],[548,571,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',55),
  ('program -> global_dec Link_Start declare_statements statements functions','program',5,'p_program','syntax_analyze.py',56),
  ('program -> global_dec declare_statements statements Link_End functions','program',5,'p_program','syntax_analyze.py',57),
  ('program -> global_dec declare_statements statements functions','program',4,'p_program','syntax_analyze.py',58),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',74),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',75),
  ('global_dec -> <empty>','global_dec',0,'p_global_dec','syntax_analyze.py',76),
  ('struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1','struct_dec',6,'p_struct_dec','syntax_analyze.py',85),
  ('struct_dec -> Struct id struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',86),
  ('struct_dec -> Struct open_bracket struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',87),
  ('struct_dec -> Struct struct_element1 close_bracket id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',88),
  ('struct_dec -> Struct id open_bracket struct_element1 id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',89),
  ('struct_dec -> Struct id struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',90),
  ('struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',91),
  ('struct_dec -> <empty>','struct_dec',0,'p_struct_dec','syntax_analyze.py',92),
  ('struct_element1 -> data_type id_array_dec struct_element2','struct_element1',3,'p_struct_element1','syntax_analyze.py',108),
  ('struct_element2 -> struct_element1','struct_element2',1,'p_struct_element2','syntax_analyze.py',115),
  ('struct_element2 -> <empty>','struct_element2',0,'p_struct_element2','syntax_analyze.py',116),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',125),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',126),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',127),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',128),
  ('data_type -> <empty>','data_type',0,'p_data_type_error','syntax_analyze.py',133),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',139),
  ('id_array_dec -> <empty>','id_array_dec',0,'p_id_array_dec','syntax_analyze.py',140),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',150),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2_more','syntax_analyze.py',155),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',164),
  ('id_dec1 -> <empty>','id_dec1',0,'p_id_dec1','syntax_analyze.py',165),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',175),
  ('array_dec1 -> <empty>','array_dec1',0,'p_array_dec1','syntax_analyze.py',176),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',199),
  ('declare_statements -> <empty>','declare_statements',0,'p_declare_statements','syntax_analyze.py',200),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',210),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec_more','syntax_analyze.py',217),
  ('const_var_dec -> <empty>','const_var_dec',0,'p_const_var_dec_error','syntax_analyze.py',223),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',228),
  ('id_array_const -> <empty>','id_array_const',0,'p_id_array_const','syntax_analyze.py',229),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',239),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2_more','syntax_analyze.py',251),
  ('id_array_const2 -> <empty>','id_array_const2',0,'p_id_array_const2_error','syntax_analyze.py',258),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',263),
  ('id_const1 -> <empty>','id_const1',0,'p_id_const1','syntax_analyze.py',264),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',276),
  ('array_const1 -> <empty>','array_const1',0,'p_array_const1','syntax_analyze.py',277),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',294),
  ('id_array_var -> <empty>','id_array_var',0,'p_id_array_var','syntax_analyze.py',295),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',305),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2_more','syntax_analyze.py',311),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',321),
  ('var_init -> <empty>','var_init',0,'p_var_init','syntax_analyze.py',322),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',332),
  ('id_var1 -> <empty>','id_var1',0,'p_id_var1','syntax_analyze.py',333),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',344),
  ('array_init -> <empty>','array_init',0,'p_array_init','syntax_analyze.py',345),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',357),
  ('array_var1 -> <empty>','array_var1',0,'p_array_var1','syntax_analyze.py',358),
  ('value -> num_value','value',1,'p_value','syntax_analyze.py',372),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',373),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',374),
  ('value -> <empty>','value',0,'p_value','syntax_analyze.py',375),
  ('value_opt -> num_value_opt','value_opt',1,'p_value_opt','syntax_analyze.py',384),
  ('value_opt -> lit_str','value_opt',1,'p_value_opt','syntax_analyze.py',385),
  ('value_opt -> lit_bool','value_opt',1,'p_value_opt','syntax_analyze.py',386),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',391),
  ('num_value -> literals','num_value',1,'p_num_value_more','syntax_analyze.py',398),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value_more','syntax_analyze.py',399),
  ('num_value -> func_call','num_value',1,'p_num_value_more','syntax_analyze.py',400),
  ('num_value -> <empty>','num_value',0,'p_num_value_error','syntax_analyze.py',405),
  ('num_value_opt -> id_array_opt id_struct','num_value_opt',2,'p_num_value_opt','syntax_analyze.py',410),
  ('num_value_opt -> literals_opt','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',417),
  ('num_value_opt -> arithmetic_expression','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',418),
  ('num_value_opt -> func_call','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',419),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',426),
  ('id_array -> <empty>','id_array',0,'p_id_array','syntax_analyze.py',427),
  ('id_array_opt -> id array','id_array_opt',2,'p_id_array_opt','syntax_analyze.py',437),
  ('array -> open_brace num_value close_brace','array',3,'p_array','syntax_analyze.py',443),
  ('array -> open_brace close_brace','array',2,'p_array_more','syntax_analyze.py',450),
  ('array -> <empty>','array',0,'p_array_none','syntax_analyze.py',456),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',460),
  ('id_array1 -> <empty>','id_array1',0,'p_id_array1','syntax_analyze.py',461),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',471),
  ('id_array2 -> <empty>','id_array2',0,'p_id_array2','syntax_analyze.py',472),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',481),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',482),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',483),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',484),
  ('literals -> <empty>','literals',0,'p_literals','syntax_analyze.py',485),
  ('literals_opt -> lit_intposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',494),
  ('literals_opt -> lit_intnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',495),
  ('literals_opt -> lit_decposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',496),
  ('literals_opt -> lit_decnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',497),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',502),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',509),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',517),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',518),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',519),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',520),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',521),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',522),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',523),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',528),
  ('id_struct -> <empty>','id_struct',0,'p_id_struct','syntax_analyze.py',529),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',539),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',545),
  ('value2 -> <empty>','value2',0,'p_value2','syntax_analyze.py',546),
  ('value1_opt -> value_opt value2_opt','value1_opt',2,'p_value1_opt','syntax_analyze.py',556),
  ('value2_opt -> comma value1_opt','value2_opt',2,'p_value2_opt','syntax_analyze.py',562),
  ('value2_opt -> <empty>','value2_opt',0,'p_value2_opt','syntax_analyze.py',563),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',572),
  ('statements -> for_statements statements','statements',2,'p_statements','syntax_analyze.py',573),
  ('statements -> while_statements statements','statements',2,'p_statements','syntax_analyze.py',574),
  ('statements -> if_statement statements','statements',2,'p_statements','syntax_analyze.py',575),
  ('statements -> switch_statements statements','statements',2,'p_statements','syntax_analyze.py',576),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',577),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',578),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',579),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyze.py',580),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',589),
  ('assignment_statements -> <empty>','assignment_statements',0,'p_assignment_statements','syntax_analyze.py',590),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',600),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',607),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',619),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',625),
  ('assignment_exp -> <empty>','assignment_exp',0,'p_assignment_exp_error','syntax_analyze.py',631),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',636),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value_more','syntax_analyze.py',641),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',647),
  ('more_id -> <empty>','more_id',0,'p_more_id','syntax_analyze.py',648),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',659),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',660),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',661),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',662),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',663),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',664),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',665),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',670),
  ('more_array -> <empty>','more_array',0,'p_more_array','syntax_analyze.py',671),
  ('for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket','for_statements',10,'p_for_statements','syntax_analyze.py',690),
  ('for_statements -> <empty>','for_statements',0,'p_for_statements','syntax_analyze.py',691),
  ('while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket','while_statements',8,'p_while_statements','syntax_analyze.py',709),
  ('while_statements -> <empty>','while_statements',0,'p_while_statements','syntax_analyze.py',710),
  ('inside_statements -> statements control_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',726),
  ('inside_statements -> control_statements statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',727),
  ('inside_statements -> <empty>','inside_statements',0,'p_inside_statements','syntax_analyze.py',728),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',737),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',738),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',739),
  ('control_statements -> <empty>','control_statements',0,'p_control_statements','syntax_analyze.py',740),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',748),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',749),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition_more','syntax_analyze.py',754),
  ('condition -> lit_bool','condition',1,'p_condition_more1','syntax_analyze.py',766),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',771),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',772),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',777),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',782),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',789),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',790),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',791),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',792),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',793),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',794),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',799),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',810),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',818),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',819),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more1','syntax_analyze.py',824),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',829),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',830),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',835),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',836),
  ('if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','if_statement',9,'p_if_statement','syntax_analyze.py',841),
  ('if_statement -> If open_par condition inside_statements condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',842),
  ('if_statement -> If condition close_par inside_statements condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',843),
  ('if_statement -> If condition colon inside_statements condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',844),
  ('if_statement -> If condition open_bracket inside_statements condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',845),
  ('if_statement -> If condition inside_statements close_bracket condition_else','if_statement',5,'p_if_statement','syntax_analyze.py',846),
  ('if_statement -> If open_par condition close_par inside_statements condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',847),
  ('if_statement -> If open_par condition colon inside_statements condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',848),
  ('if_statement -> If open_par condition open_bracket inside_statements condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',849),
  ('if_statement -> If open_par condition inside_statements close_bracket condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',850),
  ('if_statement -> If condition close_par colon inside_statements condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',851),
  ('if_statement -> If condition close_par open_bracket inside_statements condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',852),
  ('if_statement -> If condition close_par inside_statements close_bracket condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',853),
  ('if_statement -> If condition colon open_bracket inside_statements condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',854),
  ('if_statement -> If condition colon inside_statements close_bracket condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',855),
  ('if_statement -> If condition open_bracket inside_statements close_bracket condition_else','if_statement',6,'p_if_statement','syntax_analyze.py',856),
  ('if_statement -> If open_par condition close_par colon inside_statements condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',857),
  ('if_statement -> If open_par condition close_par open_bracket inside_statements condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',858),
  ('if_statement -> If open_par condition close_par inside_statements close_bracket condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',859),
  ('if_statement -> If open_par condition colon open_bracket inside_statements condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',860),
  ('if_statement -> If open_par condition colon inside_statements close_bracket condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',861),
  ('if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',862),
  ('if_statement -> If condition close_par colon open_bracket inside_statements condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',863),
  ('if_statement -> If condition close_par colon inside_statements close_bracket condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',864),
  ('if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',865),
  ('if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',866),
  ('if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else','if_statement',8,'p_if_statement','syntax_analyze.py',867),
  ('if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else','if_statement',8,'p_if_statement','syntax_analyze.py',868),
  ('if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else','if_statement',8,'p_if_statement','syntax_analyze.py',869),
  ('if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else','if_statement',8,'p_if_statement','syntax_analyze.py',870),
  ('if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else','if_statement',8,'p_if_statement','syntax_analyze.py',871),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',892),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',893),
  ('condition_else -> <empty>','condition_else',0,'p_condition_else_empty','syntax_analyze.py',898),
  ('elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else','elif_statement',9,'p_elif_statement','syntax_analyze.py',902),
  ('else_statement -> Else colon open_bracket inside_statements close_bracket','else_statement',5,'p_else_statement','syntax_analyze.py',915),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','syntax_analyze.py',916),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',929),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',943),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',953),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',954),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',955),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',960),
  ('execute1 -> <empty>','execute1',0,'p_execute1_more','syntax_analyze.py',965),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',970),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',971),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',976),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',983),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',990),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',999),
  ('function_param -> value1_opt more_param','function_param',2,'p_function_param_more','syntax_analyze.py',1007),
  ('function_param -> <empty>','function_param',0,'p_function_param_none','syntax_analyze.py',1013),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',1017),
  ('more_param -> <empty>','more_param',0,'p_more_param','syntax_analyze.py',1018),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',11,'p_functions','syntax_analyze.py',1027),
  ('functions -> Sys id parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1028),
  ('functions -> Sys open_par parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1029),
  ('functions -> Sys parameters close_par declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1030),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1031),
  ('functions -> Sys parameters declare_statements statements return_statement close_bracket functions','functions',7,'p_functions','syntax_analyze.py',1032),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1033),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1034),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1035),
  ('functions -> Sys id parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1036),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1037),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1038),
  ('functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1039),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1040),
  ('functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1041),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1042),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1043),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1044),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1045),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1046),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1047),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1048),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1049),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1050),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1051),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1052),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',10,'p_functions','syntax_analyze.py',1053),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1054),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1055),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1056),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1057),
  ('functions -> <empty>','functions',0,'p_functions','syntax_analyze.py',1058),
  ('parameters -> data_type id more_parameters','parameters',3,'p_parameters','syntax_analyze.py',1080),
  ('parameters -> <empty>','parameters',0,'p_parameters_none','syntax_analyze.py',1087),
  ('more_parameters -> comma data_type id more_parameters','more_parameters',4,'p_more_parameters','syntax_analyze.py',1091),
  ('more_parameters -> <empty>','more_parameters',0,'p_more_parameters','syntax_analyze.py',1092),
  ('return_statement -> Return value statements return_statement','return_statement',4,'p_return_statement','syntax_analyze.py',1103),
  ('return_statement -> <empty>','return_statement',0,'p_return_statement','syntax_analyze.py',1104),
]
