
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAbsorb And Avoid Boolean Break Continue Decimal Default Discharge Elif Else End_Switch Execute Fixed For Generate If In Integer Link_End Link_Start Not Or Return String Struct Switch Sys Sys_Call While close_brace close_bracket close_par colon comma comment divide divide_divide divide_divide_equal divide_equal equal equal_equal great_than_equal greater_than id less_than less_than_equal lit_bool lit_decnega lit_decposi lit_intnega lit_intposi lit_str minus minus_equal modulo modulo_equal not_equal open_brace open_bracket open_par period plus plus_equal space times times_equal times_times times_times_equalprogram : global_dec Link_Start declare_statements statements Link_End functions\n                | global_dec Link_Start declare_statements statements functions\n                | global_dec declare_statements statements Link_End functions\n                | global_dec declare_statements statements functions global_dec : struct_dec global_dec\n                | declare_statements global_dec\n                | struct_dec : Struct id open_bracket struct_element1 close_bracket id_array1\n                    | Struct id struct_element1 id_array1\n                    | Struct open_bracket struct_element1 id_array1\n                    | Struct struct_element1 close_bracket id_array1\n                    | Struct id open_bracket struct_element1 id_array1\n                    | Struct id struct_element1 close_bracket id_array1\n                    | Struct open_bracket struct_element1 close_bracket id_array1\n                    | struct_element1 : data_type id_array_dec struct_element2 struct_element2 : struct_element1\n                        | data_type : Integer\n                | Decimal\n                | String\n                | Boolean data_type : id_array_dec : id id_array_dec2\n                    | id_array_dec2 : id_dec1 id_array_dec2 : open_brace lit_intposi close_brace array_dec1 id_dec1 : comma id id_dec1\n                | array_dec1 : comma id open_brace lit_intposi close_brace array_dec1\n                | declare_statements : Generate const_var_dec declare_statements\n                            | const_var_dec : Fixed data_type id_array_const const_var_dec : data_type id_array_var const_var_dec : id_array_const : id id_array_const2\n                        | id_array_const2 : open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 id_array_const2 : equal value id_const1 id_array_const2 : id_const1 : comma id equal value id_const1 \n                | array_const1 : comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 \n                    | id_array_var : id id_array_var2\n                    | id_array_var2 : var_init id_var1 id_array_var2 : open_brace lit_intposi close_brace array_init array_var1 var_init : equal value id_var1\n                | id_var1 : comma id var_init id_var1\n                | array_init : equal open_brace value1 close_brace array_var1 \n                | array_var1 : comma id open_brace lit_intposi close_brace array_init array_var1\n                | value : num_value\n            | lit_str\n            | lit_bool\n            | value_opt : num_value_opt\n            | lit_str\n            | lit_bool num_value : id_array id_struct num_value : literals \n                | arithmetic_expression\n                | func_call num_value : num_value_opt : id_array_opt id_struct num_value_opt : literals_opt\n                | arithmetic_expression\n                | func_call id_array : id array\n                | id_array_opt : id array array : open_brace num_value close_brace array : open_brace close_brace array :  id_array1 : id_array id_array2\n                | id_array2 : comma id_array1\n                |literals : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnega\n                |literals_opt : lit_intposi\n                | lit_intnega\n                | lit_decposi\n                | lit_decnegaarithmetic_expression : open_par arithmetic_expression close_pararithmetic_expression : num_value arithmetic_operators num_valuearithmetic_operators : plus\n                            | minus\n                            | times\n                            | divide\n                            | divide_divide\n                            | modulo\n                            | times_timesid_struct : period id_array\n                |value1 : value value2value2 : comma value1 \n            |value1_opt : value_opt value2_optvalue2_opt : comma value1_opt \n            |statements : assignment_statements statements \n                | for_statements statements\n                | while_statements statements\n                | if_statement statements\n                | switch_statements statements\n                | conditional_statements statements\n                | io_statements statements\n                | func_call statements\n                |assignment_statements : id assignment_statements2\n                            |assignment_statements2 : array id_struct assignment_expassignment_statements2 : open_brace lit_intposi close_brace more_array equal open_brace value1 close_braceassignment_exp : assignment_operators num_valueassignment_exp : equal assign_valueassignment_exp :assign_value : num_valueassign_value : more_id valuemore_id : id_array id_struct equal more_id\n            |assignment_operators : plus_equal\n                            | minus_equal\n                            | times_equal\n                            | divide_equal\n                            | divide_divide_equal\n                            | modulo_equal\n                            | times_times_equalmore_array : equal id open_brace lit_intposi close_brace more_array\n                |block : open_bracket inside_statements close_bracket\n            | inside_statements close_bracket\n            | open_bracket inside_statements\n            | inside_statementsfor_statements : For id In id open_brace close_brace colon block\n                        | For id In id open_brace close_brace colon\n                        | For id In id open_brace close_brace block\n                        | For id In id open_brace colon block\n                        | For id In id close_brace colon block\n                        | For id In open_brace close_brace colon block\n                        | For id id open_brace close_brace colon block\n                        | For In id open_brace close_brace colon block\n                        | For id In id open_brace close_brace\n                        | For id In id open_brace colon\n                        | For id In id open_brace block\n                        | For id In id close_brace colon\n                        | For id In id close_brace block\n                        | For id In id colon block\n                        | For id In open_brace close_brace colon\n                        | For id In open_brace close_brace block\n                        | For id In open_brace colon block\n                        | For id In close_brace colon block\n                        | For id id open_brace close_brace colon\n                        | For id id open_brace close_brace block\n                        | For id id open_brace colon block\n                        | For id id close_brace colon block\n                        | For id open_brace close_brace colon block\n                        | For In id open_brace close_brace colon\n                        | For In id open_brace close_brace block\n                        | For In id open_brace colon block\n                        | For In id close_brace colon block\n                        | For In open_brace close_brace colon block\n                        | For id In id open_brace\n                        | For id In id close_brace\n                        | For id In id colon\n                        | For id In id block\n                        | For id In open_brace close_brace\n                        | For id In open_brace colon\n                        | For id In open_brace block\n                        | For id In close_brace colon\n                        | For id In close_brace block\n                        | For id In colon block\n                        | For id id open_brace close_brace\n                        | For id id open_brace colon\n                        | For id id open_brace block\n                        | For id id close_brace colon\n                        | For id id close_brace block\n                        | For id id colon block\n                        | For id open_brace close_brace colon\n                        | For id open_brace close_brace block\n                        | For id open_brace colon block\n                        | For id close_brace colon block\n                        | For In id open_brace close_brace\n                        | For In id open_brace colon\n                        | For In id open_brace block\n                        | For In id close_brace colon\n                        | For In id close_brace block\n                        | For In id colon block\n                        | For In open_brace close_brace colon\n                        | For In open_brace close_brace block\n                        | For In open_brace colon block\n                        | For open_brace close_brace colon block\n                        | For id In id\n                        | For id In open_brace\n                        | For id In close_brace\n                        | For id In colon\n                        | For id In block\n                        | For id id open_brace\n                        | For id id close_brace\n                        | For id id colon\n                        | For id id block\n                        | For id open_brace close_brace\n                        | For id open_brace colon\n                        | For id open_brace block\n                        | For id close_brace colon\n                        | For id close_brace block\n                        | For id colon block\n                        | For In id open_brace\n                        | For In id close_brace\n                        | For In id colon\n                        | For In id block\n                        | For In open_brace close_brace\n                        | For In open_brace colon\n                        | For In open_brace block\n                        | For In close_brace colon\n                        | For In close_brace block\n                        | For In colon block\n                        | For open_brace close_brace colon\n                        | For open_brace close_brace block\n                        | For open_brace colon block\n                        | For close_brace colon block\n                        | For id In\n                        | For id id\n                        | For id open_brace\n                        | For id close_brace\n                        | For id colon\n                        | For id block\n                        | For In id\n                        | For In open_brace\n                        | For In close_brace\n                        | For In colon\n                        | For In block\n                        | For open_brace close_brace\n                        | For open_brace colon\n                        | For open_brace block\n                        | For close_brace colon\n                        | For close_brace block\n                        | For colon block\n                        | For id\n                        | For In\n                        | For open_brace\n                        | For close_brace\n                        | For colon\n                        | For blockwhile_statements : While open_par condition close_par colon block\n                        | While open_par condition close_par block\n                        | While open_par condition colon block\n                        | While condition close_par colon block\n                        | While open_par condition block\n                        | While condition close_par block\n                        | While condition colon blockinside_statements : statements control_statements\n                        | control_statements statements\n                        |control_statements : Break\n                        | Continue\n                        | Avoid\n                        | condition   : relational_expression\n                    | logical_expression\n                    | lit_bool condition   : Not open_par condition_not close_par condition_not   : relational_expression\n                        | logical_expression condition_not   : lit_bool relational_expression   : value relational_operators value relational_operators    : greater_than\n                                | less_than\n                                | equal_equal\n                                | not_equal\n                                | great_than_equal\n                                | less_than_equal logical_expression  : open_par logical_operand close_par logical_operators open_par logical_operand close_par logical_operand : Not open_par logical_operand close_par logical_operand : relational_expression\n                        | logical_expression logical_operand : lit_bool logical_operators   : And\n                            | Or conditional_statements  : if_statement\n                                | switch_statements if_statement    : If open_par condition close_par colon block condition_else condition_else  : elif_statement\n                        | else_statement condition_else  : elif_statement  : Elif open_par condition close_par colon block condition_else else_statement  : Else colon block\n                        | switch_statements   : Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch execute : Execute switch_lit colon statements Break execute1 switch_lit  : lit_str\n                    | lit_intposi\n                    | lit_intnega execute1    : execute execute1    : io_statements   : input_statements\n                        | output_statements input_statements    : Absorb id_array id_struct output_statements   : Discharge value func_call   : Sys_Call id open_par function_param close_par function_param  : id open_brace close_brace more_param function_param  : value1_opt more_param function_param : more_param  : comma function_param\n                    | functions   : Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement functions\n                    | Sys parameters open_bracket declare_statements statements return_statement functions\n                    | Sys parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions\n                    | Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions\n                    | Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions\n                    | parameters  : data_type id more_parameters parameters  : more_parameters : comma data_type id more_parameters\n                        | return_statement    : Return value statements return_statement\n                            |'
    
_lr_action_items = {'Link_Start':([0,2,3,4,6,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,87,88,89,90,91,92,93,94,95,96,97,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,132,134,176,177,178,179,180,181,182,183,184,185,193,194,195,196,197,198,200,201,203,204,207,226,228,269,279,297,298,299,300,302,303,304,305,376,382,385,387,388,447,448,490,528,530,562,563,564,566,588,589,591,600,604,611,612,],[-7,7,-7,-7,-23,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-102,-77,-93,-94,-8,-82,-31,-28,-43,-51,-55,-50,-308,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'Generate':([0,2,3,4,6,7,9,10,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,55,87,88,89,90,91,92,93,94,95,96,97,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,132,134,176,177,178,179,180,181,182,183,184,185,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,214,215,226,228,269,279,297,298,299,300,302,303,304,305,306,308,309,311,312,314,317,376,382,385,387,388,390,391,395,399,447,448,451,468,490,515,528,530,562,563,564,566,588,589,591,600,604,611,612,],[6,6,6,6,-23,6,-6,-5,-23,-23,-25,-19,-20,-21,-22,6,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,6,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,6,6,6,6,-349,-102,-77,-93,-94,-8,-82,-31,-28,-43,-51,-55,-50,6,6,6,6,6,6,-346,-308,-27,-40,-53,-57,6,6,6,6,-52,-49,6,-349,-61,-348,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'id':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,127,128,129,130,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,193,194,195,196,197,198,200,201,203,204,205,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,270,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,369,370,371,374,376,378,380,382,383,385,386,387,388,390,391,392,394,395,396,398,399,400,402,404,406,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,447,448,449,450,451,452,453,457,461,466,468,469,470,472,473,474,475,476,477,478,480,481,482,485,486,489,490,494,515,517,520,521,522,523,528,530,532,556,559,562,563,564,566,585,588,589,590,591,598,600,602,604,605,609,611,612,],[-7,-33,-7,-7,11,-23,-33,32,-6,-5,-23,-23,47,-19,-20,-21,-22,-33,-23,51,32,32,32,32,32,32,32,32,32,-79,67,93,99,-304,-305,100,93,93,-23,93,93,93,-18,-29,-32,119,-35,-51,127,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,93,136,142,32,32,32,-252,32,-142,-266,32,-263,-264,-265,93,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,93,-103,-307,-60,93,93,-9,93,-83,-10,93,-11,-16,-17,-24,-26,200,-34,-41,-46,-53,93,-23,-23,-33,215,-125,93,-78,32,233,238,32,32,-235,32,32,32,32,-240,32,32,-243,32,-245,-246,-141,-140,-260,-261,93,32,-267,-268,-269,32,32,93,93,-275,-276,-277,-278,-279,-280,93,-95,-96,-97,-98,-99,-100,-101,-65,-74,93,93,282,-306,93,-12,-13,-80,93,-14,-29,-37,93,-48,303,-53,-23,-33,-33,-33,32,-33,-349,-121,93,93,-130,-131,-132,-133,-134,-135,-136,-102,-77,238,32,32,-209,32,32,32,32,-205,-79,32,32,-212,32,32,-214,-215,238,32,32,-219,32,32,-222,-223,-224,-225,32,-227,-228,-229,-139,32,32,-257,-93,93,32,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,32,-33,-33,32,-33,-33,32,-33,32,-346,-23,-123,-124,-126,93,-103,410,32,32,-183,32,-185,-186,238,32,32,-174,32,32,-177,32,-179,-180,-103,93,32,-188,-189,-190,32,32,-193,32,-195,-196,32,-198,-199,-200,93,32,-254,-255,-256,-270,32,93,-308,282,443,-27,444,-40,446,-53,-57,-33,-33,32,32,-33,32,32,-33,32,32,93,468,-127,-65,32,-162,-163,-164,32,32,-153,32,-155,-156,32,-158,-159,-160,-165,32,-167,-168,-169,-170,-253,93,-293,-52,-49,491,93,-33,32,32,32,32,32,-349,93,93,-149,32,-145,-146,-147,-148,-150,-290,-291,-292,32,32,93,93,32,-348,-128,-143,-281,93,32,-43,-57,93,-122,-295,-31,-45,-42,-54,-297,-30,-39,599,-55,32,-57,-293,-56,-294,93,-45,-44,]),'For':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,394,395,396,398,399,400,402,404,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,457,461,466,468,469,472,473,474,475,476,477,478,480,481,482,485,486,490,494,515,517,520,521,523,528,530,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,33,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,33,33,33,33,33,33,33,33,33,-79,33,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,33,33,33,33,33,-252,33,-142,-266,33,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,33,33,33,33,33,-235,33,33,33,33,-240,33,33,-243,33,-245,-246,-141,-140,-260,-261,33,-267,-268,-269,33,33,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,-33,-33,-33,33,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,33,33,33,-209,33,33,33,33,-205,-79,33,33,-212,33,33,-214,-215,33,33,33,-219,33,33,-222,-223,-224,-225,33,-227,-228,-229,-139,33,33,-257,-93,33,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,33,-33,-33,33,-33,-33,33,-33,33,-346,-123,-124,-126,-61,-103,33,33,-183,33,-185,-186,33,33,33,-174,33,33,-177,33,-179,-180,-103,33,-188,-189,-190,33,33,-193,33,-195,-196,33,-198,-199,-200,33,-254,-255,-256,-270,33,-308,-27,-40,-53,-57,-33,-33,33,33,-33,33,33,-33,33,33,-61,-127,-65,33,-162,-163,-164,33,33,-153,33,-155,-156,33,-158,-159,-160,-165,33,-167,-168,-169,-170,-253,-293,-52,-49,-33,33,33,33,33,33,-349,-129,-149,33,-145,-146,-147,-148,-150,-290,-291,-292,33,33,-61,33,-348,-128,-143,-281,33,-43,-57,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,33,-57,-293,-56,-294,-45,-44,]),'While':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,394,395,396,398,399,400,402,404,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,457,461,466,468,469,472,473,474,475,476,477,478,480,481,482,485,486,490,494,515,517,520,521,523,528,530,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,34,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,34,34,34,34,34,34,34,34,34,-79,34,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,34,34,34,34,34,-252,34,-142,-266,34,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,34,34,34,34,34,-235,34,34,34,34,-240,34,34,-243,34,-245,-246,-141,-140,-260,-261,34,-267,-268,-269,34,34,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,-33,-33,-33,34,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,34,34,34,-209,34,34,34,34,-205,-79,34,34,-212,34,34,-214,-215,34,34,34,-219,34,34,-222,-223,-224,-225,34,-227,-228,-229,-139,34,34,-257,-93,34,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,34,-33,-33,34,-33,-33,34,-33,34,-346,-123,-124,-126,-61,-103,34,34,-183,34,-185,-186,34,34,34,-174,34,34,-177,34,-179,-180,-103,34,-188,-189,-190,34,34,-193,34,-195,-196,34,-198,-199,-200,34,-254,-255,-256,-270,34,-308,-27,-40,-53,-57,-33,-33,34,34,-33,34,34,-33,34,34,-61,-127,-65,34,-162,-163,-164,34,34,-153,34,-155,-156,34,-158,-159,-160,-165,34,-167,-168,-169,-170,-253,-293,-52,-49,-33,34,34,34,34,34,-349,-129,-149,34,-145,-146,-147,-148,-150,-290,-291,-292,34,34,-61,34,-348,-128,-143,-281,34,-43,-57,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,34,-57,-293,-56,-294,-45,-44,]),'If':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,394,395,396,398,399,400,402,404,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,457,461,466,468,469,472,473,474,475,476,477,478,480,481,482,485,486,490,494,515,517,520,521,523,528,530,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,35,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,35,35,35,35,35,35,35,35,35,-79,35,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,35,35,35,35,35,-252,35,-142,-266,35,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,35,35,35,35,35,-235,35,35,35,35,-240,35,35,-243,35,-245,-246,-141,-140,-260,-261,35,-267,-268,-269,35,35,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,-33,-33,-33,35,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,35,35,35,-209,35,35,35,35,-205,-79,35,35,-212,35,35,-214,-215,35,35,35,-219,35,35,-222,-223,-224,-225,35,-227,-228,-229,-139,35,35,-257,-93,35,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,35,-33,-33,35,-33,-33,35,-33,35,-346,-123,-124,-126,-61,-103,35,35,-183,35,-185,-186,35,35,35,-174,35,35,-177,35,-179,-180,-103,35,-188,-189,-190,35,35,-193,35,-195,-196,35,-198,-199,-200,35,-254,-255,-256,-270,35,-308,-27,-40,-53,-57,-33,-33,35,35,-33,35,35,-33,35,35,-61,-127,-65,35,-162,-163,-164,35,35,-153,35,-155,-156,35,-158,-159,-160,-165,35,-167,-168,-169,-170,-253,-293,-52,-49,-33,35,35,35,35,35,-349,-129,-149,35,-145,-146,-147,-148,-150,-290,-291,-292,35,35,-61,35,-348,-128,-143,-281,35,-43,-57,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,35,-57,-293,-56,-294,-45,-44,]),'Switch':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,394,395,396,398,399,400,402,404,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,457,461,466,468,469,472,473,474,475,476,477,478,480,481,482,485,486,490,494,515,517,520,521,523,528,530,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,36,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,36,36,36,36,36,36,36,36,36,-79,36,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,36,36,36,36,36,-252,36,-142,-266,36,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,36,36,36,36,36,-235,36,36,36,36,-240,36,36,-243,36,-245,-246,-141,-140,-260,-261,36,-267,-268,-269,36,36,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,-33,-33,-33,36,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,36,36,36,-209,36,36,36,36,-205,-79,36,36,-212,36,36,-214,-215,36,36,36,-219,36,36,-222,-223,-224,-225,36,-227,-228,-229,-139,36,36,-257,-93,36,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,36,-33,-33,36,-33,-33,36,-33,36,-346,-123,-124,-126,-61,-103,36,36,-183,36,-185,-186,36,36,36,-174,36,36,-177,36,-179,-180,-103,36,-188,-189,-190,36,36,-193,36,-195,-196,36,-198,-199,-200,36,-254,-255,-256,-270,36,-308,-27,-40,-53,-57,-33,-33,36,36,-33,36,36,-33,36,36,-61,-127,-65,36,-162,-163,-164,36,36,-153,36,-155,-156,36,-158,-159,-160,-165,36,-167,-168,-169,-170,-253,-293,-52,-49,-33,36,36,36,36,36,-349,-129,-149,36,-145,-146,-147,-148,-150,-290,-291,-292,36,36,-61,36,-348,-128,-143,-281,36,-43,-57,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,36,-57,-293,-56,-294,-45,-44,]),'Sys_Call':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,270,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,369,370,371,374,376,378,380,382,385,387,388,390,391,392,394,395,396,398,399,400,402,404,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,447,448,450,451,452,453,457,461,466,468,469,470,472,473,474,475,476,477,478,480,481,482,485,486,489,490,494,515,517,520,521,522,523,528,530,532,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,609,611,612,],[-7,-33,-7,-7,-23,-33,39,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,39,39,39,39,39,39,39,39,39,-79,39,39,-304,-305,-75,39,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,39,39,39,39,39,39,-252,39,-142,-266,39,-263,-264,-265,39,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,39,-103,-307,-60,39,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,39,-347,-347,-33,-125,-75,-78,39,39,39,39,39,-235,39,39,39,39,-240,39,39,-243,39,-245,-246,-141,-140,-260,-261,39,39,-267,-268,-269,39,39,39,39,-275,-276,-277,-278,-279,-280,39,-95,-96,-97,-98,-99,-100,-101,-65,-74,39,39,39,-306,-75,-12,-13,-80,-75,-14,-29,-37,39,-48,-53,-347,-33,-33,-33,39,-33,-349,-121,39,39,-130,-131,-132,-133,-134,-135,-136,-102,-77,39,39,39,-209,39,39,39,39,-205,-79,39,39,-212,39,39,-214,-215,39,39,39,-219,39,39,-222,-223,-224,-225,39,-227,-228,-229,-139,39,39,-257,-93,39,39,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,39,-33,-33,39,-33,-33,39,-33,39,-346,-123,-124,-126,39,-103,39,39,-183,39,-185,-186,39,39,39,-174,39,39,-177,39,-179,-180,-103,39,39,-188,-189,-190,39,39,-193,39,-195,-196,39,-198,-199,-200,39,39,-254,-255,-256,-270,39,39,-308,39,39,-27,-40,-53,-57,-33,-33,39,39,-33,39,39,-33,39,39,39,-127,-65,39,-162,-163,-164,39,39,-153,39,-155,-156,39,-158,-159,-160,-165,39,-167,-168,-169,-170,-253,39,-293,-52,-49,39,-33,39,39,39,39,39,-349,-129,39,-149,39,-145,-146,-147,-148,-150,-290,-291,-292,39,39,39,39,39,-348,-128,-143,-281,39,39,-43,-57,39,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,39,-57,-293,-56,-294,39,-45,-44,]),'Absorb':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,394,395,396,398,399,400,402,404,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,457,461,466,468,469,472,473,474,475,476,477,478,480,481,482,485,486,490,494,515,517,520,521,523,528,530,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,40,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,40,40,40,40,40,40,40,40,40,-79,40,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,40,40,40,40,40,-252,40,-142,-266,40,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,40,40,40,40,40,-235,40,40,40,40,-240,40,40,-243,40,-245,-246,-141,-140,-260,-261,40,-267,-268,-269,40,40,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,-33,-33,-33,40,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,40,40,40,-209,40,40,40,40,-205,-79,40,40,-212,40,40,-214,-215,40,40,40,-219,40,40,-222,-223,-224,-225,40,-227,-228,-229,-139,40,40,-257,-93,40,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,40,-33,-33,40,-33,-33,40,-33,40,-346,-123,-124,-126,-61,-103,40,40,-183,40,-185,-186,40,40,40,-174,40,40,-177,40,-179,-180,-103,40,-188,-189,-190,40,40,-193,40,-195,-196,40,-198,-199,-200,40,-254,-255,-256,-270,40,-308,-27,-40,-53,-57,-33,-33,40,40,-33,40,40,-33,40,40,-61,-127,-65,40,-162,-163,-164,40,40,-153,40,-155,-156,40,-158,-159,-160,-165,40,-167,-168,-169,-170,-253,-293,-52,-49,-33,40,40,40,40,40,-349,-129,-149,40,-145,-146,-147,-148,-150,-290,-291,-292,40,40,-61,40,-348,-128,-143,-281,40,-43,-57,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,40,-57,-293,-56,-294,-45,-44,]),'Discharge':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,394,395,396,398,399,400,402,404,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,457,461,466,468,469,472,473,474,475,476,477,478,480,481,482,485,486,490,494,515,517,520,521,523,528,530,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,41,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,41,41,41,41,41,41,41,41,41,-79,41,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,41,41,41,41,41,-252,41,-142,-266,41,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,41,41,41,41,41,-235,41,41,41,41,-240,41,41,-243,41,-245,-246,-141,-140,-260,-261,41,-267,-268,-269,41,41,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,-33,-33,-33,41,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,41,41,41,-209,41,41,41,41,-205,-79,41,41,-212,41,41,-214,-215,41,41,41,-219,41,41,-222,-223,-224,-225,41,-227,-228,-229,-139,41,41,-257,-93,41,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,41,-33,-33,41,-33,-33,41,-33,41,-346,-123,-124,-126,-61,-103,41,41,-183,41,-185,-186,41,41,41,-174,41,41,-177,41,-179,-180,-103,41,-188,-189,-190,41,41,-193,41,-195,-196,41,-198,-199,-200,41,-254,-255,-256,-270,41,-308,-27,-40,-53,-57,-33,-33,41,41,-33,41,41,-33,41,41,-61,-127,-65,41,-162,-163,-164,41,41,-153,41,-155,-156,41,-158,-159,-160,-165,41,-167,-168,-169,-170,-253,-293,-52,-49,-33,41,41,41,41,41,-349,-129,-149,41,-145,-146,-147,-148,-150,-290,-291,-292,41,41,-61,41,-348,-128,-143,-281,41,-43,-57,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,41,-57,-293,-56,-294,-45,-44,]),'Link_End':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,469,472,473,474,475,476,477,478,480,481,482,490,517,520,521,523,528,530,556,559,562,563,564,566,585,588,589,591,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,-118,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-118,53,-118,-118,-118,-118,-118,-118,-118,-118,-79,-118,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,124,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-79,-118,-118,-118,-118,-252,-118,-142,-266,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-125,-75,-78,-79,-118,-118,-118,-118,-235,-79,-118,-118,-118,-240,-118,-118,-243,-118,-245,-246,-141,-140,-260,-261,-118,-267,-268,-269,-118,-118,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-209,-79,-118,-118,-118,-205,-79,-78,-118,-212,-118,-118,-214,-215,-118,-118,-118,-219,-118,-118,-222,-223,-224,-225,-118,-227,-228,-229,-139,-118,-118,-257,-93,-118,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-123,-124,-126,-61,-103,-78,-118,-183,-118,-185,-186,-118,-118,-118,-174,-118,-118,-177,-118,-179,-180,-103,-118,-188,-189,-190,-78,-118,-193,-118,-195,-196,-118,-198,-199,-200,-118,-254,-255,-256,-270,-118,-308,-27,-40,-53,-57,-127,-65,-118,-162,-163,-164,-78,-118,-153,-118,-155,-156,-118,-158,-159,-160,-165,-118,-167,-168,-169,-170,-253,-293,-52,-49,-129,-149,-118,-145,-146,-147,-148,-150,-290,-291,-292,-61,-128,-143,-281,-118,-43,-57,-122,-295,-31,-45,-42,-54,-297,-30,-39,-55,-118,-57,-293,-56,-294,-45,-44,]),'Sys':([0,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,124,127,128,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,404,405,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,472,473,474,475,476,477,478,480,481,482,490,494,495,496,497,499,500,501,502,504,505,506,507,509,510,512,514,515,517,520,521,523,528,530,533,534,535,537,540,541,543,546,547,549,552,553,556,559,562,563,564,566,568,570,572,576,580,585,588,589,591,592,598,600,602,604,605,611,612,],[-7,-33,-7,-7,-23,-33,-118,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-118,55,-118,-118,-118,-118,-118,-118,-118,-118,-79,-118,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,55,55,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-79,-118,-118,-118,-118,-252,-118,-142,-266,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,55,-347,-347,-125,-75,-78,-79,-118,-118,-118,-118,-235,-79,-118,-118,-118,-240,-118,-118,-243,-118,-245,-246,-141,-140,-260,-261,-118,-267,-268,-269,-118,-118,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-347,-33,-33,-33,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-209,-79,-118,-118,-118,-205,-79,-78,-118,-212,-118,-118,-214,-215,-118,-118,-118,-219,-118,-118,-222,-223,-224,-225,-118,-227,-228,-229,-139,-118,-118,-257,-93,-118,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,-118,-346,-123,-124,-126,-61,-103,-78,-118,-183,-118,-185,-186,-118,-118,-118,-174,-118,-118,-177,-118,-179,-180,-103,-118,-188,-189,-190,-78,-118,-193,-118,-195,-196,-118,-198,-199,-200,-118,-254,-255,-256,-270,-118,-308,-27,-40,-53,-57,-33,-33,-118,-351,-118,-33,-118,-351,-118,-33,-118,-351,-118,-61,-351,-127,-65,-118,-162,-163,-164,-78,-118,-153,-118,-155,-156,-118,-158,-159,-160,-165,-118,-167,-168,-169,-170,-253,-293,-52,-49,-33,-118,-118,-351,55,-351,-118,-351,55,-351,-118,-351,55,-351,55,-118,55,-349,-129,-149,-118,-145,-146,-147,-148,-150,-290,-291,-292,-61,-118,-351,-351,55,55,55,-351,55,55,55,-351,55,55,55,-351,55,-348,-128,-143,-281,-118,-43,-57,-351,55,55,55,55,55,55,55,55,55,55,-350,-122,-295,-31,-45,-42,-54,55,55,55,55,55,-297,-30,-39,-55,55,-118,-57,-293,-56,-294,-45,-44,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,124,125,126,127,128,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,195,196,197,198,200,201,203,204,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,404,405,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,472,473,474,475,476,477,478,480,481,482,490,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,517,520,521,523,528,530,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,556,559,562,563,564,566,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,585,588,589,591,592,593,594,595,596,597,598,600,601,602,604,605,611,612,],[-7,0,-33,-7,-7,-23,-33,-118,-6,-5,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-118,-345,-118,-118,-118,-118,-118,-118,-118,-118,-79,-118,-304,-305,-75,-61,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-345,-345,-4,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-79,-118,-118,-118,-118,-252,-118,-142,-266,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-345,-2,-3,-347,-347,-125,-75,-78,-79,-118,-118,-118,-118,-235,-79,-118,-118,-118,-240,-118,-118,-243,-118,-245,-246,-141,-140,-260,-261,-118,-267,-268,-269,-118,-118,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-1,-347,-33,-33,-33,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-209,-79,-118,-118,-118,-205,-79,-78,-118,-212,-118,-118,-214,-215,-118,-118,-118,-219,-118,-118,-222,-223,-224,-225,-118,-227,-228,-229,-139,-118,-118,-257,-93,-118,-258,-259,-274,-94,-8,-82,-31,-28,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,-118,-346,-123,-124,-126,-61,-103,-78,-118,-183,-118,-185,-186,-118,-118,-118,-174,-118,-118,-177,-118,-179,-180,-103,-118,-188,-189,-190,-78,-118,-193,-118,-195,-196,-118,-198,-199,-200,-118,-254,-255,-256,-270,-118,-308,-27,-40,-53,-57,-33,-33,-118,-351,-118,-33,-118,-351,-118,-33,-118,-351,-118,-61,-351,-127,-65,-118,-162,-163,-164,-78,-118,-153,-118,-155,-156,-118,-158,-159,-160,-165,-118,-167,-168,-169,-170,-253,-293,-52,-49,-33,-118,-118,-351,-345,-351,-118,-351,-345,-351,-118,-351,-345,-351,-345,-118,-345,-349,-129,-149,-118,-145,-146,-147,-148,-150,-290,-291,-292,-61,-118,-351,-351,-345,-315,-345,-345,-351,-345,-316,-345,-345,-351,-345,-317,-345,-345,-319,-351,-318,-345,-348,-128,-143,-281,-118,-43,-57,-351,-345,-345,-320,-345,-323,-321,-345,-345,-322,-345,-326,-324,-345,-345,-325,-345,-328,-327,-345,-350,-329,-122,-295,-31,-45,-42,-54,-345,-330,-345,-331,-345,-332,-334,-333,-345,-335,-337,-336,-345,-338,-339,-297,-30,-39,-55,-345,-340,-341,-342,-343,-344,-118,-57,-314,-293,-56,-294,-45,-44,]),'Struct':([0,3,4,6,11,12,14,15,16,17,18,19,20,21,42,43,44,45,46,47,48,49,50,51,87,88,89,90,91,92,93,94,95,96,97,103,105,106,107,108,109,110,111,112,113,114,115,118,119,120,121,123,132,134,176,177,178,179,180,181,182,183,184,185,193,194,195,196,197,198,200,201,203,204,207,226,228,269,279,297,298,299,300,302,303,304,305,376,382,385,387,388,447,448,490,528,530,562,563,564,566,588,589,591,600,604,611,612,],[5,5,5,-23,-23,-23,-25,-19,-20,-21,-22,-33,-23,-47,-23,-75,-75,-75,-18,-29,-32,-38,-35,-51,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-9,-75,-83,-10,-75,-11,-16,-17,-24,-26,-34,-41,-46,-53,-61,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-12,-13,-80,-75,-14,-29,-37,-61,-48,-53,-102,-77,-93,-94,-8,-82,-31,-28,-43,-51,-55,-50,-308,-27,-40,-53,-57,-52,-49,-61,-43,-57,-31,-45,-42,-54,-30,-39,-55,-57,-56,-45,-44,]),'open_bracket':([5,11,33,55,67,68,69,70,71,87,88,89,90,91,92,93,94,95,96,97,103,127,128,129,132,134,136,137,138,139,140,142,143,144,145,147,148,150,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,189,209,210,211,212,215,226,228,229,230,231,233,234,235,236,239,240,243,246,247,248,250,251,256,265,266,269,271,278,279,306,308,311,317,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,370,371,376,390,411,415,416,418,421,426,468,473,515,521,523,598,],[12,42,73,-347,73,73,73,73,73,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-347,-347,214,-75,-78,73,73,73,73,73,73,73,73,73,73,73,73,73,-267,-268,-269,73,73,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,281,-347,309,312,314,-349,-102,-77,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-93,73,-274,-94,391,395,399,-346,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-270,73,-308,451,73,73,73,73,73,73,-349,73,-348,-281,73,73,]),'Integer':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,200,209,299,300,318,382,562,588,],[15,15,15,15,-25,-19,-20,-21,-22,15,15,15,-29,15,-24,-26,15,15,-29,15,-31,-28,15,-27,-31,-30,]),'Decimal':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,200,209,299,300,318,382,562,588,],[16,16,16,16,-25,-19,-20,-21,-22,16,16,16,-29,16,-24,-26,16,16,-29,16,-31,-28,16,-27,-31,-30,]),'String':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,200,209,299,300,318,382,562,588,],[17,17,17,17,-25,-19,-20,-21,-22,17,17,17,-29,17,-24,-26,17,17,-29,17,-31,-28,17,-27,-31,-30,]),'Boolean':([5,6,11,12,14,15,16,17,18,20,42,46,47,55,114,115,127,128,200,209,299,300,318,382,562,588,],[18,18,18,18,-25,-19,-20,-21,-22,18,18,18,-29,18,-24,-26,18,18,-29,18,-31,-28,18,-27,-31,-30,]),'close_bracket':([5,6,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,37,38,40,41,42,43,44,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,105,112,113,114,115,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,200,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,382,385,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,468,469,472,473,474,475,476,477,478,480,481,482,485,490,494,495,496,497,500,501,502,505,506,507,510,512,515,517,520,521,523,524,528,530,533,534,535,541,547,553,556,559,562,563,564,566,568,585,588,589,591,598,600,602,604,605,611,612,],[-23,-23,-23,-23,45,-25,-19,-20,-21,-22,-33,-23,-47,-118,-118,-118,-118,-118,-118,-118,-118,-79,-118,-304,-305,-75,-61,-23,107,110,-18,-29,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-79,-118,-118,-118,-118,-252,-118,154,-266,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,193,-16,-17,-24,-26,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,-79,-118,-118,-118,-118,-235,-79,-118,-118,-118,-240,-118,-118,-243,-118,-245,-246,260,-140,-260,-261,-118,-267,-268,-269,-118,-118,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-29,-37,-61,-48,-53,-347,-33,-33,-33,-118,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-209,-79,-118,-118,-118,-205,-79,-78,-118,-212,-118,-118,-214,-215,-118,-118,-118,-219,-118,-118,-222,-223,-224,-225,-118,-227,-228,-229,-139,-118,-118,-257,-93,-118,-258,-259,-274,-94,-31,-28,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,-351,-118,-346,-123,-124,-126,-61,-103,-78,-118,-183,-118,-185,-186,-118,-118,-118,-174,-118,-118,-177,-118,-179,-180,-103,-118,-188,-189,-190,-78,-118,-193,-118,-195,-196,-118,-198,-199,-200,-118,-254,-255,-256,-270,-118,-308,-27,-40,-53,-57,-33,-33,-118,-351,-118,-33,-118,-351,-118,-33,-118,-351,-118,465,-61,-351,-127,-65,-118,-162,-163,-164,-78,-118,-153,-118,-155,-156,-118,-158,-159,-160,-165,-118,-167,-168,-169,-170,-253,-293,-52,-49,-33,-118,-118,-351,499,-351,-118,-351,504,-351,-118,-351,509,-351,-118,514,-349,-129,-149,-118,-145,-146,-147,-148,-150,-290,-291,-292,-118,-61,-118,-351,-351,537,540,-351,543,546,-351,549,552,-351,-348,-128,-143,-281,-118,560,-43,-57,-351,570,572,576,580,-350,-122,-295,-31,-45,-42,-54,592,-297,-30,-39,-55,-118,-57,-293,-56,-294,-45,-44,]),'Fixed':([6,],[20,]),'Return':([6,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,37,38,40,41,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,118,119,120,121,123,127,128,129,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,201,203,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,385,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,404,405,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,447,448,451,452,453,454,456,457,458,460,461,462,464,466,468,469,472,473,474,475,476,477,478,480,481,482,490,494,495,496,501,506,512,515,517,520,521,523,528,530,533,556,559,563,564,566,585,589,591,598,600,602,604,605,611,612,],[-23,-19,-20,-21,-22,-33,-23,-47,-118,-118,-118,-118,-118,-118,-118,-118,-79,-118,-304,-305,-75,-61,-32,-38,-35,-51,-347,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-79,-118,-118,-118,-118,-252,-118,-142,-266,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-34,-41,-46,-53,-61,-347,-347,-33,-125,-75,-78,-79,-118,-118,-118,-118,-235,-79,-118,-118,-118,-240,-118,-118,-243,-118,-245,-246,-141,-140,-260,-261,-118,-267,-268,-269,-118,-118,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-37,-61,-48,-53,-347,-33,-33,-33,-118,-33,-349,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-209,-79,-118,-118,-118,-205,-79,-78,-118,-212,-118,-118,-214,-215,-118,-118,-118,-219,-118,-118,-222,-223,-224,-225,-118,-227,-228,-229,-139,-118,-118,-257,-93,-118,-258,-259,-274,-94,-43,-51,-55,-50,-33,-118,-33,-33,-118,-33,-33,-118,-33,404,-118,-346,-123,-124,-126,-61,-103,-78,-118,-183,-118,-185,-186,-118,-118,-118,-174,-118,-118,-177,-118,-179,-180,-103,-118,-188,-189,-190,-78,-118,-193,-118,-195,-196,-118,-198,-199,-200,-118,-254,-255,-256,-270,-118,-308,-40,-53,-57,-33,-33,-118,404,-118,-33,-118,404,-118,-33,-118,404,-118,-61,404,-127,-65,-118,-162,-163,-164,-78,-118,-153,-118,-155,-156,-118,-158,-159,-160,-165,-118,-167,-168,-169,-170,-253,-293,-52,-49,-33,-118,-118,404,404,-118,404,404,-118,404,404,-118,-349,-129,-149,-118,-145,-146,-147,-148,-150,-290,-291,-292,-61,-118,404,404,404,404,404,-348,-128,-143,-281,-118,-43,-57,404,-122,-295,-45,-42,-54,-297,-39,-55,-118,-57,-293,-56,-294,-45,-44,]),'comma':([11,12,14,15,16,17,18,42,43,44,45,46,47,51,87,88,89,90,91,92,93,94,95,96,97,103,105,107,108,110,112,113,114,115,121,123,132,134,176,177,178,179,180,181,182,183,184,185,193,197,200,203,207,215,226,228,269,279,282,284,285,286,287,288,289,290,291,292,293,294,295,296,299,300,302,303,304,305,375,376,379,381,382,387,388,440,442,443,447,450,468,470,489,490,493,528,530,532,562,563,566,588,591,600,604,609,611,],[-23,-23,-25,-19,-20,-21,-22,-23,-75,-75,-75,-18,117,-51,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,-75,197,-75,-16,-17,-24,-26,205,-61,-75,-78,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-75,-75,117,-61,205,318,-102,-77,-93,-94,-79,378,380,-62,-63,-64,-103,-71,-72,-73,-89,-90,-91,-92,383,-28,386,-51,-55,-50,-76,-308,-107,-70,-27,205,449,378,-108,-79,-52,-61,318,-61,-61,-61,532,386,449,-61,383,590,-54,-30,-55,449,-56,-61,590,]),'Break':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,469,472,473,474,475,476,477,478,480,481,482,485,486,517,520,521,523,525,556,559,585,598,602,605,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,77,-304,-305,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,77,77,77,77,77,-252,77,-142,77,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-125,-75,-78,77,77,77,77,77,-235,77,77,77,77,-240,77,77,-243,77,-245,-246,-141,-140,-260,-261,77,-267,-268,-269,77,77,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,77,77,77,-209,77,77,77,77,-205,-79,77,77,-212,-118,77,-214,-215,77,77,77,-219,77,77,-222,-223,-224,-225,77,-227,-228,-229,-139,77,77,-257,-93,77,-258,-259,-274,-94,-123,-124,-126,-61,-103,77,77,-183,77,-185,-186,77,77,77,-174,77,77,-177,77,-179,-180,-103,77,-188,-189,-190,77,77,-193,77,-195,-196,77,-198,-199,-200,77,-254,-255,-256,-270,77,-308,-127,-65,77,-162,-163,-164,77,77,-153,77,-155,-156,77,-158,-159,-160,-165,77,-167,-168,-169,-170,-253,-293,-129,-149,77,-145,-146,-147,-148,-150,-290,-291,-292,77,-118,-128,-143,-281,77,561,-122,-295,-297,77,-293,-294,]),'Continue':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,469,472,473,474,475,476,477,478,480,481,482,485,517,520,521,523,556,559,585,598,602,605,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,78,-304,-305,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,78,78,78,78,78,-252,78,-142,78,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-125,-75,-78,78,78,78,78,78,-235,78,78,78,78,-240,78,78,-243,78,-245,-246,-141,-140,-260,-261,78,-267,-268,-269,78,78,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,78,78,78,-209,78,78,78,78,-205,-79,78,78,-212,-118,78,-214,-215,78,78,78,-219,78,78,-222,-223,-224,-225,78,-227,-228,-229,-139,78,78,-257,-93,78,-258,-259,-274,-94,-123,-124,-126,-61,-103,78,78,-183,78,-185,-186,78,78,78,-174,78,78,-177,78,-179,-180,-103,78,-188,-189,-190,78,78,-193,78,-195,-196,78,-198,-199,-200,78,-254,-255,-256,-270,78,-308,-127,-65,78,-162,-163,-164,78,78,-153,78,-155,-156,78,-158,-159,-160,-165,78,-167,-168,-169,-170,-253,-293,-129,-149,78,-145,-146,-147,-148,-150,-290,-291,-292,78,-128,-143,-281,78,-122,-295,-297,78,-293,-294,]),'Avoid':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,469,472,473,474,475,476,477,478,480,481,482,485,517,520,521,523,556,559,585,598,602,605,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,79,-304,-305,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,79,79,79,79,79,-252,79,-142,79,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-125,-75,-78,79,79,79,79,79,-235,79,79,79,79,-240,79,79,-243,79,-245,-246,-141,-140,-260,-261,79,-267,-268,-269,79,79,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,79,79,79,-209,79,79,79,79,-205,-79,79,79,-212,-118,79,-214,-215,79,79,79,-219,79,79,-222,-223,-224,-225,79,-227,-228,-229,-139,79,79,-257,-93,79,-258,-259,-274,-94,-123,-124,-126,-61,-103,79,79,-183,79,-185,-186,79,79,79,-174,79,79,-177,79,-179,-180,-103,79,-188,-189,-190,79,79,-193,79,-195,-196,79,-198,-199,-200,79,-254,-255,-256,-270,79,-308,-127,-65,79,-162,-163,-164,79,79,-153,79,-155,-156,79,-158,-159,-160,-165,79,-167,-168,-169,-170,-253,-293,-129,-149,79,-145,-146,-147,-148,-150,-290,-291,-292,79,-128,-143,-281,79,-122,-295,-297,79,-293,-294,]),'Elif':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,469,472,473,474,475,476,477,478,480,481,482,517,520,521,523,556,559,585,598,602,605,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,-118,-304,-305,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-79,-118,-118,-118,-118,-252,-118,-142,-266,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-125,-75,-78,-79,-118,-118,-118,-118,-235,-79,-118,-118,-118,-240,-118,-118,-243,-118,-245,-246,-141,-140,-260,-261,-118,-267,-268,-269,-118,-118,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-209,-79,-118,-118,-118,-205,-79,-78,-118,-212,-118,-118,-214,-215,-118,-118,-118,-219,-118,-118,-222,-223,-224,-225,-118,-227,-228,-229,-139,-118,-118,-257,-93,-118,-258,-259,-274,-94,-123,-124,-126,-61,-103,-78,-118,-183,-118,-185,-186,-118,-118,-118,-174,-118,-118,-177,-118,-179,-180,-103,-118,-188,-189,-190,-78,-118,-193,-118,-195,-196,-118,-198,-199,-200,-118,-254,-255,-256,-270,-118,-308,-127,-65,-118,-162,-163,-164,-78,-118,-153,-118,-155,-156,-118,-158,-159,-160,-165,-118,-167,-168,-169,-170,-253,483,-129,-149,-118,-145,-146,-147,-148,-150,-290,-291,-292,-128,-143,-281,-118,-122,-295,-297,-118,483,-294,]),'Else':([24,25,26,27,28,29,30,31,32,33,37,38,40,41,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,87,88,89,90,91,92,93,94,95,96,97,101,102,103,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,161,162,163,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,269,271,272,273,278,279,319,320,321,322,323,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,369,370,371,376,407,408,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,434,469,472,473,474,475,476,477,478,480,481,482,517,520,521,523,556,559,585,598,602,605,],[-118,-118,-118,-118,-118,-118,-118,-118,-79,-118,-304,-305,-75,-61,-110,-111,-112,-113,-114,-115,-116,-117,-119,-103,-79,-118,-118,-118,-118,-252,-118,-142,-266,-118,-263,-264,-265,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-103,-307,-60,-125,-75,-78,-79,-118,-118,-118,-118,-235,-79,-118,-118,-118,-240,-118,-118,-243,-118,-245,-246,-141,-140,-260,-261,-118,-267,-268,-269,-118,-118,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-306,-121,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-118,-118,-118,-209,-79,-118,-118,-118,-205,-79,-78,-118,-212,-118,-118,-214,-215,-118,-118,-118,-219,-118,-118,-222,-223,-224,-225,-118,-227,-228,-229,-139,-118,-118,-257,-93,-118,-258,-259,-274,-94,-123,-124,-126,-61,-103,-78,-118,-183,-118,-185,-186,-118,-118,-118,-174,-118,-118,-177,-118,-179,-180,-103,-118,-188,-189,-190,-78,-118,-193,-118,-195,-196,-118,-198,-199,-200,-118,-254,-255,-256,-270,-118,-308,-127,-65,-118,-162,-163,-164,-78,-118,-153,-118,-155,-156,-118,-158,-159,-160,-165,-118,-167,-168,-169,-170,-253,484,-129,-149,-118,-145,-146,-147,-148,-150,-290,-291,-292,-128,-143,-281,-118,-122,-295,-297,-118,484,-294,]),'open_brace':([32,33,47,51,67,68,93,119,136,137,142,233,238,282,389,409,410,443,444,445,491,599,608,],[66,69,116,122,138,143,186,202,229,234,246,332,343,374,450,470,471,186,488,489,529,603,609,]),'period':([32,34,40,41,65,66,67,80,89,93,98,101,104,123,134,136,138,142,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,190,203,217,218,219,220,221,222,223,224,225,228,229,233,238,239,246,270,282,289,322,323,326,332,342,343,348,358,374,375,378,380,404,415,432,440,443,450,469,470,489,490,516,517,522,532,609,],[-79,-75,-75,-75,132,-75,-79,-75,132,-79,-75,132,-75,-75,-78,-79,-75,-79,-75,-75,-75,-275,-276,-277,-278,-279,-280,-75,-95,-96,-97,-98,-99,-100,-101,-74,-75,-75,-75,-75,-75,-75,-130,-131,-132,-133,-134,-135,-136,-77,-75,-79,-79,-78,-75,-75,-79,132,-75,132,-78,-75,132,-75,-78,-75,-75,-74,-75,-75,-75,-78,-75,-78,-79,-75,-75,-75,-75,-75,132,-128,-75,-75,-75,]),'equal':([32,51,65,67,93,119,131,132,134,136,142,185,218,226,227,228,233,238,239,303,304,323,324,326,342,348,384,408,415,446,469,516,555,557,583,591,607,],[-79,123,-103,-79,-79,203,218,-75,-78,-79,-79,-74,-75,-102,325,-77,-79,-79,-78,123,389,-103,409,-78,-103,-78,445,469,-78,490,-75,-103,469,325,-137,389,608,]),'plus_equal':([32,65,67,93,131,132,134,136,142,185,226,228,233,238,239,326,342,348,415,],[-79,-103,-79,-79,219,-75,-78,-79,-79,-74,-102,-77,-79,-79,-78,-78,-103,-78,-78,]),'minus_equal':([32,65,67,93,131,132,134,136,142,185,226,228,233,238,239,326,342,348,415,],[-79,-103,-79,-79,220,-75,-78,-79,-79,-74,-102,-77,-79,-79,-78,-78,-103,-78,-78,]),'times_equal':([32,65,67,93,131,132,134,136,142,185,226,228,233,238,239,326,342,348,415,],[-79,-103,-79,-79,221,-75,-78,-79,-79,-74,-102,-77,-79,-79,-78,-78,-103,-78,-78,]),'divide_equal':([32,65,67,93,131,132,134,136,142,185,226,228,233,238,239,326,342,348,415,],[-79,-103,-79,-79,222,-75,-78,-79,-79,-74,-102,-77,-79,-79,-78,-78,-103,-78,-78,]),'divide_divide_equal':([32,65,67,93,131,132,134,136,142,185,226,228,233,238,239,326,342,348,415,],[-79,-103,-79,-79,223,-75,-78,-79,-79,-74,-102,-77,-79,-79,-78,-78,-103,-78,-78,]),'modulo_equal':([32,65,67,93,131,132,134,136,142,185,226,228,233,238,239,326,342,348,415,],[-79,-103,-79,-79,224,-75,-78,-79,-79,-74,-102,-77,-79,-79,-78,-78,-103,-78,-78,]),'times_times_equal':([32,65,67,93,131,132,134,136,142,185,226,228,233,238,239,326,342,348,415,],[-79,-103,-79,-79,225,-75,-78,-79,-79,-74,-102,-77,-79,-79,-78,-78,-103,-78,-78,]),'In':([33,67,],[68,137,]),'close_brace':([33,66,67,68,69,87,88,89,90,91,92,93,94,95,96,97,103,132,133,134,135,136,137,138,142,143,176,177,178,179,180,181,182,183,184,185,186,199,206,226,228,229,233,234,238,242,246,269,279,301,332,342,343,374,376,450,470,489,492,493,518,519,526,527,531,532,565,567,606,609,610,],[70,134,139,144,147,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-75,227,-78,228,230,235,239,247,250,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,134,299,304,-102,-77,326,333,336,-79,-68,348,-93,-94,384,415,-74,134,440,-308,-61,-61,-61,530,-106,556,557,562,563,-104,-61,591,-105,607,-61,611,]),'colon':([33,67,68,69,70,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,99,103,132,134,136,137,138,139,142,143,144,147,158,161,162,163,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,226,228,229,230,233,234,235,239,246,247,250,265,269,278,279,280,326,332,333,336,348,370,376,415,435,436,437,438,439,484,521,584,],[71,140,145,148,150,167,-267,-268,-269,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,189,-60,-75,-78,231,236,240,243,248,251,253,256,266,-267,-268,-269,271,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-102,-77,327,329,334,337,339,344,349,351,354,359,-93,-274,-94,371,411,416,418,421,426,-270,-308,473,485,486,-299,-300,-301,523,-281,598,]),'open_par':([34,35,41,55,66,80,85,98,100,104,123,127,138,157,164,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,203,217,218,219,220,221,222,223,224,225,229,246,261,270,322,332,343,358,362,363,364,374,378,380,404,432,450,469,470,483,489,490,517,522,532,609,],[80,98,104,128,104,157,168,187,190,104,104,209,104,157,270,187,104,-275,-276,-277,-278,-279,-280,104,-95,-96,-97,-98,-99,-100,-101,104,157,104,104,104,104,-130,-131,-132,-133,-134,-135,-136,104,104,358,187,104,104,104,187,432,-286,-287,104,104,104,104,187,104,-129,104,522,104,104,-128,187,104,104,]),'lit_bool':([34,41,80,98,123,157,168,169,170,171,172,173,174,175,187,190,203,218,270,322,358,378,380,404,432,450,469,470,489,490,517,522,532,609,],[84,103,163,84,103,264,277,103,-275,-276,-277,-278,-279,-280,264,288,103,-129,368,103,264,288,288,103,264,103,-129,103,103,103,-128,84,103,103,]),'Not':([34,80,98,157,187,270,358,432,522,],[85,164,85,261,261,261,261,261,85,]),'lit_str':([34,41,80,98,123,157,168,169,170,171,172,173,174,175,187,190,203,218,270,322,358,373,378,380,404,432,450,469,470,489,490,517,522,532,609,],[88,88,88,88,88,88,88,88,-275,-276,-277,-278,-279,-280,88,287,88,-129,88,88,88,437,287,287,88,88,88,-129,88,88,88,-128,88,88,88,]),'greater_than':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,226,228,264,269,270,277,279,358,368,376,432,522,],[-61,-61,-60,170,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-61,-75,-78,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-61,-102,-77,-60,-93,-61,-60,-94,-61,-60,-308,-61,-61,]),'less_than':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,226,228,264,269,270,277,279,358,368,376,432,522,],[-61,-61,-60,171,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-61,-75,-78,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-61,-102,-77,-60,-93,-61,-60,-94,-61,-60,-308,-61,-61,]),'equal_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,226,228,264,269,270,277,279,358,368,376,432,522,],[-61,-61,-60,172,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-61,-75,-78,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-61,-102,-77,-60,-93,-61,-60,-94,-61,-60,-308,-61,-61,]),'not_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,226,228,264,269,270,277,279,358,368,376,432,522,],[-61,-61,-60,173,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-61,-75,-78,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-61,-102,-77,-60,-93,-61,-60,-94,-61,-60,-308,-61,-61,]),'great_than_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,226,228,264,269,270,277,279,358,368,376,432,522,],[-61,-61,-60,174,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-61,-75,-78,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-61,-102,-77,-60,-93,-61,-60,-94,-61,-60,-308,-61,-61,]),'less_than_equal':([34,80,84,86,87,88,89,90,91,92,93,94,95,96,97,98,132,134,157,160,163,165,168,176,177,178,179,180,181,182,183,184,185,187,226,228,264,269,270,277,279,358,368,376,432,522,],[-61,-61,-60,175,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-61,-75,-78,-61,-67,-60,-58,-61,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-61,-102,-77,-60,-93,-61,-60,-94,-61,-60,-308,-61,-61,]),'plus':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,203,217,218,219,220,221,222,223,224,225,226,228,229,238,242,246,269,270,279,282,291,292,293,294,295,296,319,321,322,323,332,342,343,358,374,375,376,378,380,404,408,432,440,443,450,469,470,489,490,517,522,532,609,],[-69,-69,-69,-69,177,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-69,-75,-84,-78,177,-69,-69,-67,177,-69,-69,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,-69,177,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-69,-79,-68,-69,-93,-69,177,-79,-67,-68,-84,-85,-86,-87,177,177,-69,-103,-69,-74,-69,-69,-69,-74,-308,-69,-69,-69,-65,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,-69,]),'minus':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,203,217,218,219,220,221,222,223,224,225,226,228,229,238,242,246,269,270,279,282,291,292,293,294,295,296,319,321,322,323,332,342,343,358,374,375,376,378,380,404,408,432,440,443,450,469,470,489,490,517,522,532,609,],[-69,-69,-69,-69,178,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-69,-75,-84,-78,178,-69,-69,-67,178,-69,-69,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,-69,178,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-69,-79,-68,-69,-93,-69,178,-79,-67,-68,-84,-85,-86,-87,178,178,-69,-103,-69,-74,-69,-69,-69,-74,-308,-69,-69,-69,-65,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,-69,]),'times':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,203,217,218,219,220,221,222,223,224,225,226,228,229,238,242,246,269,270,279,282,291,292,293,294,295,296,319,321,322,323,332,342,343,358,374,375,376,378,380,404,408,432,440,443,450,469,470,489,490,517,522,532,609,],[-69,-69,-69,-69,179,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-69,-75,-84,-78,179,-69,-69,-67,179,-69,-69,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,-69,179,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-69,-79,-68,-69,-93,-69,179,-79,-67,-68,-84,-85,-86,-87,179,179,-69,-103,-69,-74,-69,-69,-69,-74,-308,-69,-69,-69,-65,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,-69,]),'divide':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,203,217,218,219,220,221,222,223,224,225,226,228,229,238,242,246,269,270,279,282,291,292,293,294,295,296,319,321,322,323,332,342,343,358,374,375,376,378,380,404,408,432,440,443,450,469,470,489,490,517,522,532,609,],[-69,-69,-69,-69,180,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-69,-75,-84,-78,180,-69,-69,-67,180,-69,-69,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,-69,180,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-69,-79,-68,-69,-93,-69,180,-79,-67,-68,-84,-85,-86,-87,180,180,-69,-103,-69,-74,-69,-69,-69,-74,-308,-69,-69,-69,-65,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,-69,]),'divide_divide':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,203,217,218,219,220,221,222,223,224,225,226,228,229,238,242,246,269,270,279,282,291,292,293,294,295,296,319,321,322,323,332,342,343,358,374,375,376,378,380,404,408,432,440,443,450,469,470,489,490,517,522,532,609,],[-69,-69,-69,-69,181,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-69,-75,-84,-78,181,-69,-69,-67,181,-69,-69,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,-69,181,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-69,-79,-68,-69,-93,-69,181,-79,-67,-68,-84,-85,-86,-87,181,181,-69,-103,-69,-74,-69,-69,-69,-74,-308,-69,-69,-69,-65,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,-69,]),'modulo':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,203,217,218,219,220,221,222,223,224,225,226,228,229,238,242,246,269,270,279,282,291,292,293,294,295,296,319,321,322,323,332,342,343,358,374,375,376,378,380,404,408,432,440,443,450,469,470,489,490,517,522,532,609,],[-69,-69,-69,-69,182,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-69,-75,-84,-78,182,-69,-69,-67,182,-69,-69,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,-69,182,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-69,-79,-68,-69,-93,-69,182,-79,-67,-68,-84,-85,-86,-87,182,182,-69,-103,-69,-74,-69,-69,-69,-74,-308,-69,-69,-69,-65,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,-69,]),'times_times':([34,41,66,80,87,89,90,91,92,93,94,95,96,97,98,104,123,132,133,134,135,138,157,160,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,203,217,218,219,220,221,222,223,224,225,226,228,229,238,242,246,269,270,279,282,291,292,293,294,295,296,319,321,322,323,332,342,343,358,374,375,376,378,380,404,408,432,440,443,450,469,470,489,490,517,522,532,609,],[-69,-69,-69,-69,183,-103,-66,-67,-68,-79,-84,-85,-86,-87,-69,-69,-69,-75,-84,-78,183,-69,-69,-67,183,-69,-69,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,-69,-69,-69,183,-69,-69,-69,-130,-131,-132,-133,-134,-135,-136,-102,-77,-69,-79,-68,-69,-93,-69,183,-79,-67,-68,-84,-85,-86,-87,183,183,-69,-103,-69,-74,-69,-69,-69,-74,-308,-69,-69,-69,-65,-69,-78,-79,-69,-129,-69,-69,-69,-128,-69,-69,-69,]),'lit_intposi':([34,41,66,80,98,104,116,122,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,202,203,217,218,219,220,221,222,223,224,225,229,246,270,322,332,343,358,373,374,378,380,404,432,450,469,470,471,488,489,490,517,522,529,532,603,609,],[94,94,133,94,94,94,199,206,94,133,94,94,94,-275,-276,-277,-278,-279,-280,94,-95,-96,-97,-98,-99,-100,-101,94,94,293,301,94,94,94,-130,-131,-132,-133,-134,-135,-136,133,133,94,94,133,133,94,438,94,293,293,94,94,94,-129,94,519,526,94,94,-128,94,565,94,606,94,]),'lit_intnega':([34,41,66,80,98,104,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,203,217,218,219,220,221,222,223,224,225,229,246,270,322,332,343,358,373,374,378,380,404,432,450,469,470,489,490,517,522,532,609,],[95,95,95,95,95,95,95,95,95,95,95,-275,-276,-277,-278,-279,-280,95,-95,-96,-97,-98,-99,-100,-101,95,95,294,95,95,95,-130,-131,-132,-133,-134,-135,-136,95,95,95,95,95,95,95,439,95,294,294,95,95,95,-129,95,95,95,-128,95,95,95,]),'lit_decposi':([34,41,66,80,98,104,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,203,217,218,219,220,221,222,223,224,225,229,246,270,322,332,343,358,374,378,380,404,432,450,469,470,489,490,517,522,532,609,],[96,96,96,96,96,96,96,96,96,96,96,-275,-276,-277,-278,-279,-280,96,-95,-96,-97,-98,-99,-100,-101,96,96,295,96,96,96,-130,-131,-132,-133,-134,-135,-136,96,96,96,96,96,96,96,96,295,295,96,96,96,-129,96,96,96,-128,96,96,96,]),'lit_decnega':([34,41,66,80,98,104,123,138,157,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,190,203,217,218,219,220,221,222,223,224,225,229,246,270,322,332,343,358,374,378,380,404,432,450,469,470,489,490,517,522,532,609,],[97,97,97,97,97,97,97,97,97,97,97,-275,-276,-277,-278,-279,-280,97,-95,-96,-97,-98,-99,-100,-101,97,97,296,97,97,97,-130,-131,-132,-133,-134,-135,-136,97,97,97,97,97,97,97,97,296,296,97,97,97,-129,97,97,97,-128,97,97,97,]),'close_par':([55,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,103,127,128,129,132,134,158,159,160,161,162,163,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,190,209,210,211,215,226,228,262,263,264,269,274,275,276,277,278,279,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,306,317,365,366,367,368,370,375,376,377,378,379,381,433,440,441,442,443,468,479,487,515,521,558,],[-347,166,-267,-268,-269,-58,-59,-103,-66,-67,-68,-79,-84,-85,-86,-87,-60,-347,-347,212,-75,-78,265,268,269,-267,-268,-269,-61,-275,-276,-277,-278,-279,-280,-69,-95,-96,-97,-98,-99,-100,-101,-65,-74,280,-311,-347,308,311,-349,-102,-77,-283,-284,-285,-93,370,-271,-272,-273,-274,-94,-79,376,-313,-109,-62,-63,-64,-103,-71,-72,-73,-89,-90,-91,-92,390,-346,433,-271,-272,-273,-270,-76,-308,-310,-311,-107,-70,-282,-78,-312,-108,-79,-349,521,-309,-348,-281,584,]),'And':([268,],[363,]),'Or':([268,],[364,]),'Execute':([281,561,],[373,373,]),'Default':([372,561,586,587,],[435,-303,-298,-302,]),'End_Switch':([560,],[585,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_dec':([0,3,4,],[2,9,10,]),'declare_statements':([0,2,3,4,7,19,129,210,211,212,214,306,308,309,311,312,314,390,391,395,399,451,],[3,8,3,3,22,48,213,307,310,313,316,392,394,396,398,400,402,452,453,457,461,494,]),'struct_dec':([0,3,4,],[4,4,4,]),'struct_element1':([5,11,12,42,46,],[13,43,44,105,113,]),'data_type':([5,6,11,12,20,42,46,55,127,128,209,318,],[14,21,14,14,49,14,14,130,130,130,130,406,]),'const_var_dec':([6,],[19,]),'statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[23,52,56,57,58,59,60,61,62,63,75,75,75,75,75,75,75,156,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,315,75,75,75,75,75,75,75,75,75,63,75,75,75,75,75,75,75,75,75,75,393,397,401,405,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,454,456,458,460,462,464,75,75,75,75,75,75,495,496,501,506,512,75,75,525,533,75,75,]),'assignment_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_statement':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'switch_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'conditional_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'io_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'func_call':([8,22,24,25,26,27,28,29,30,31,33,34,41,66,67,68,69,70,71,73,76,80,98,104,123,136,137,138,139,140,142,143,144,145,147,148,150,157,158,166,167,168,169,176,186,187,190,203,213,217,218,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,270,271,307,310,313,316,322,326,327,329,332,333,334,336,337,339,343,344,348,349,351,354,358,359,371,374,378,380,392,394,396,398,400,402,404,411,415,416,418,421,426,432,450,452,453,457,461,466,470,473,485,486,489,490,494,522,523,532,598,609,],[31,31,31,31,31,31,31,31,31,31,31,92,92,92,31,31,31,31,31,31,31,92,92,92,92,31,31,242,31,31,31,31,31,31,31,31,31,92,31,31,31,92,92,92,92,92,292,92,31,92,92,242,31,31,31,31,31,31,31,31,31,31,242,31,31,31,31,31,31,31,92,31,31,31,31,31,92,31,31,31,242,31,31,31,31,31,92,31,31,31,31,31,92,31,31,92,292,292,31,31,31,31,31,31,92,31,31,31,31,31,31,92,92,31,31,31,31,31,92,31,31,31,92,92,31,92,31,92,31,92,]),'input_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'output_statements':([8,22,24,25,26,27,28,29,30,31,33,67,68,69,70,71,73,76,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,213,229,230,231,233,234,235,236,239,240,242,243,246,247,248,250,251,256,265,266,271,307,310,313,316,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,392,394,396,398,400,402,411,415,416,418,421,426,452,453,457,461,466,473,485,486,494,523,598,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'id_array_dec':([14,],[46,]),'id_array_var':([21,],[50,]),'functions':([23,52,53,124,455,459,463,465,467,497,499,500,502,504,505,507,509,510,514,534,535,537,540,541,543,546,547,549,552,568,570,572,576,580,592,],[54,125,126,208,498,503,508,511,513,536,538,539,542,544,545,548,550,551,554,569,571,573,574,575,577,578,579,581,582,593,594,595,596,597,601,]),'assignment_statements2':([32,67,136,142,233,238,],[64,64,64,64,64,64,]),'array':([32,67,93,136,142,233,238,282,443,],[65,65,185,65,65,65,342,375,375,]),'block':([33,67,68,69,70,71,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,229,230,231,233,234,235,236,239,240,243,246,247,248,250,251,256,265,266,271,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,411,415,416,418,421,426,473,523,598,],[72,141,146,149,151,152,232,237,241,244,245,249,252,254,255,257,258,259,267,272,273,328,330,331,335,338,340,341,345,346,347,350,352,353,355,356,357,360,361,369,412,413,414,417,419,420,422,423,424,425,427,428,429,430,431,434,472,474,475,476,477,478,520,559,602,]),'inside_statements':([33,67,68,69,70,71,73,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,229,230,231,233,234,235,236,239,240,243,246,247,248,250,251,256,265,266,271,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,411,415,416,418,421,426,473,485,523,598,],[74,74,74,74,74,74,153,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,524,74,74,]),'control_statements':([33,67,68,69,70,71,73,75,136,137,138,139,140,142,143,144,145,147,148,150,158,166,167,229,230,231,233,234,235,236,239,240,243,246,247,248,250,251,256,265,266,271,326,327,329,332,333,334,336,337,339,344,348,349,351,354,359,371,411,415,416,418,421,426,473,485,523,598,],[76,76,76,76,76,76,76,155,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'condition':([34,80,98,522,],[81,158,188,558,]),'relational_expression':([34,80,98,157,168,187,270,358,432,522,],[82,161,82,262,275,262,366,262,262,82,]),'logical_expression':([34,80,98,157,168,187,270,358,432,522,],[83,162,83,263,276,263,367,263,263,83,]),'value':([34,41,80,98,123,157,168,169,187,203,270,322,358,404,432,450,470,489,490,522,532,609,],[86,102,86,86,207,86,86,278,86,302,86,407,86,466,86,493,493,493,528,86,493,493,]),'num_value':([34,41,66,80,98,104,123,138,157,168,169,176,186,187,190,203,217,218,229,246,270,322,332,343,358,374,378,380,404,432,450,470,489,490,522,532,609,],[87,87,135,165,87,192,87,135,165,87,87,279,135,165,192,87,319,321,135,135,87,87,135,135,87,135,192,192,87,87,87,87,87,87,87,87,87,]),'id_array':([34,40,41,43,44,45,66,80,98,104,105,107,110,123,132,138,157,168,169,176,186,187,190,193,197,203,217,218,229,246,270,322,332,343,358,374,378,380,404,432,450,469,470,489,490,522,532,609,],[89,101,89,108,108,108,89,89,89,89,108,108,108,89,226,89,89,89,89,89,89,89,89,108,108,89,89,323,89,89,89,89,89,89,89,89,89,89,89,89,89,516,89,89,89,89,89,89,]),'literals':([34,41,66,80,98,104,123,138,157,168,169,176,186,187,190,203,217,218,229,246,270,322,332,343,358,374,378,380,404,432,450,470,489,490,522,532,609,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'arithmetic_expression':([34,41,66,80,98,104,123,138,157,168,169,176,186,187,190,203,217,218,229,246,270,322,332,343,358,374,378,380,404,432,450,470,489,490,522,532,609,],[91,91,91,160,91,160,91,91,160,91,91,91,91,160,291,91,91,91,91,91,91,91,91,91,91,91,291,291,91,91,91,91,91,91,91,91,91,]),'id_array1':([43,44,45,105,107,110,193,197,],[106,109,111,194,195,198,297,298,]),'struct_element2':([46,],[112,]),'id_array_dec2':([47,],[114,]),'id_dec1':([47,200,],[115,300,]),'id_array_const':([49,],[118,]),'id_array_var2':([51,],[120,]),'var_init':([51,303,],[121,387,]),'parameters':([55,127,128,209,],[129,210,211,306,]),'id_struct':([65,89,101,289,323,342,516,],[131,184,191,381,408,131,555,]),'logical_operand':([80,157,187,270,358,432,],[159,159,159,365,365,479,]),'relational_operators':([86,],[169,]),'arithmetic_operators':([87,135,165,192,279,319,321,],[176,176,176,176,176,176,176,]),'id_array2':([108,],[196,]),'id_array_const2':([119,],[201,]),'id_var1':([121,207,387,],[204,305,447,]),'assignment_exp':([131,],[216,]),'assignment_operators':([131,],[217,]),'condition_not':([168,270,],[274,274,]),'function_param':([190,378,],[283,441,]),'value1_opt':([190,378,380,],[284,284,442,]),'value_opt':([190,378,380,],[285,285,285,]),'num_value_opt':([190,378,380,],[286,286,286,]),'id_array_opt':([190,378,380,],[289,289,289,]),'literals_opt':([190,378,380,],[290,290,290,]),'more_parameters':([215,468,],[317,515,]),'assign_value':([218,],[320,]),'more_id':([218,469,],[322,517,]),'more_array':([227,557,],[324,583,]),'logical_operators':([268,],[362,]),'execute':([281,561,],[372,587,]),'more_param':([284,440,],[377,487,]),'value2_opt':([285,],[379,]),'array_dec1':([299,562,],[382,588,]),'id_const1':([302,528,],[385,564,]),'array_init':([304,591,],[388,600,]),'return_statement':([315,393,397,401,405,454,456,458,460,462,464,495,496,501,506,512,533,],[403,455,459,463,467,497,500,502,505,507,510,534,535,541,547,553,568,]),'switch_lit':([373,],[436,]),'array_var1':([388,530,600,],[448,566,604,]),'condition_else':([434,602,],[480,605,]),'elif_statement':([434,602,],[481,481,]),'else_statement':([434,602,],[482,482,]),'value1':([450,470,489,532,609,],[492,518,527,567,610,]),'value2':([493,],[531,]),'execute1':([561,],[586,]),'array_const1':([563,611,],[589,612,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_dec Link_Start declare_statements statements Link_End functions','program',6,'p_program','syntax_analyze.py',55),
  ('program -> global_dec Link_Start declare_statements statements functions','program',5,'p_program','syntax_analyze.py',56),
  ('program -> global_dec declare_statements statements Link_End functions','program',5,'p_program','syntax_analyze.py',57),
  ('program -> global_dec declare_statements statements functions','program',4,'p_program','syntax_analyze.py',58),
  ('global_dec -> struct_dec global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',74),
  ('global_dec -> declare_statements global_dec','global_dec',2,'p_global_dec','syntax_analyze.py',75),
  ('global_dec -> <empty>','global_dec',0,'p_global_dec','syntax_analyze.py',76),
  ('struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1','struct_dec',6,'p_struct_dec','syntax_analyze.py',85),
  ('struct_dec -> Struct id struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',86),
  ('struct_dec -> Struct open_bracket struct_element1 id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',87),
  ('struct_dec -> Struct struct_element1 close_bracket id_array1','struct_dec',4,'p_struct_dec','syntax_analyze.py',88),
  ('struct_dec -> Struct id open_bracket struct_element1 id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',89),
  ('struct_dec -> Struct id struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',90),
  ('struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1','struct_dec',5,'p_struct_dec','syntax_analyze.py',91),
  ('struct_dec -> <empty>','struct_dec',0,'p_struct_dec','syntax_analyze.py',92),
  ('struct_element1 -> data_type id_array_dec struct_element2','struct_element1',3,'p_struct_element1','syntax_analyze.py',108),
  ('struct_element2 -> struct_element1','struct_element2',1,'p_struct_element2','syntax_analyze.py',115),
  ('struct_element2 -> <empty>','struct_element2',0,'p_struct_element2','syntax_analyze.py',116),
  ('data_type -> Integer','data_type',1,'p_data_type','syntax_analyze.py',125),
  ('data_type -> Decimal','data_type',1,'p_data_type','syntax_analyze.py',126),
  ('data_type -> String','data_type',1,'p_data_type','syntax_analyze.py',127),
  ('data_type -> Boolean','data_type',1,'p_data_type','syntax_analyze.py',128),
  ('data_type -> <empty>','data_type',0,'p_data_type_error','syntax_analyze.py',133),
  ('id_array_dec -> id id_array_dec2','id_array_dec',2,'p_id_array_dec','syntax_analyze.py',139),
  ('id_array_dec -> <empty>','id_array_dec',0,'p_id_array_dec','syntax_analyze.py',140),
  ('id_array_dec2 -> id_dec1','id_array_dec2',1,'p_id_array_dec2','syntax_analyze.py',150),
  ('id_array_dec2 -> open_brace lit_intposi close_brace array_dec1','id_array_dec2',4,'p_id_array_dec2_more','syntax_analyze.py',155),
  ('id_dec1 -> comma id id_dec1','id_dec1',3,'p_id_dec1','syntax_analyze.py',164),
  ('id_dec1 -> <empty>','id_dec1',0,'p_id_dec1','syntax_analyze.py',165),
  ('array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1','array_dec1',6,'p_array_dec1','syntax_analyze.py',175),
  ('array_dec1 -> <empty>','array_dec1',0,'p_array_dec1','syntax_analyze.py',176),
  ('declare_statements -> Generate const_var_dec declare_statements','declare_statements',3,'p_declare_statements','syntax_analyze.py',199),
  ('declare_statements -> <empty>','declare_statements',0,'p_declare_statements','syntax_analyze.py',200),
  ('const_var_dec -> Fixed data_type id_array_const','const_var_dec',3,'p_const_var_dec','syntax_analyze.py',210),
  ('const_var_dec -> data_type id_array_var','const_var_dec',2,'p_const_var_dec_more','syntax_analyze.py',217),
  ('const_var_dec -> <empty>','const_var_dec',0,'p_const_var_dec_error','syntax_analyze.py',223),
  ('id_array_const -> id id_array_const2','id_array_const',2,'p_id_array_const','syntax_analyze.py',228),
  ('id_array_const -> <empty>','id_array_const',0,'p_id_array_const','syntax_analyze.py',229),
  ('id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','id_array_const2',8,'p_id_array_const2','syntax_analyze.py',239),
  ('id_array_const2 -> equal value id_const1','id_array_const2',3,'p_id_array_const2_more','syntax_analyze.py',251),
  ('id_array_const2 -> <empty>','id_array_const2',0,'p_id_array_const2_error','syntax_analyze.py',258),
  ('id_const1 -> comma id equal value id_const1','id_const1',5,'p_id_const1','syntax_analyze.py',263),
  ('id_const1 -> <empty>','id_const1',0,'p_id_const1','syntax_analyze.py',264),
  ('array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1','array_const1',10,'p_array_const1','syntax_analyze.py',276),
  ('array_const1 -> <empty>','array_const1',0,'p_array_const1','syntax_analyze.py',277),
  ('id_array_var -> id id_array_var2','id_array_var',2,'p_id_array_var','syntax_analyze.py',294),
  ('id_array_var -> <empty>','id_array_var',0,'p_id_array_var','syntax_analyze.py',295),
  ('id_array_var2 -> var_init id_var1','id_array_var2',2,'p_id_array_var2','syntax_analyze.py',305),
  ('id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1','id_array_var2',5,'p_id_array_var2_more','syntax_analyze.py',311),
  ('var_init -> equal value id_var1','var_init',3,'p_var_init','syntax_analyze.py',321),
  ('var_init -> <empty>','var_init',0,'p_var_init','syntax_analyze.py',322),
  ('id_var1 -> comma id var_init id_var1','id_var1',4,'p_id_var1','syntax_analyze.py',332),
  ('id_var1 -> <empty>','id_var1',0,'p_id_var1','syntax_analyze.py',333),
  ('array_init -> equal open_brace value1 close_brace array_var1','array_init',5,'p_array_init','syntax_analyze.py',344),
  ('array_init -> <empty>','array_init',0,'p_array_init','syntax_analyze.py',345),
  ('array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1','array_var1',7,'p_array_var1','syntax_analyze.py',357),
  ('array_var1 -> <empty>','array_var1',0,'p_array_var1','syntax_analyze.py',358),
  ('value -> num_value','value',1,'p_value','syntax_analyze.py',372),
  ('value -> lit_str','value',1,'p_value','syntax_analyze.py',373),
  ('value -> lit_bool','value',1,'p_value','syntax_analyze.py',374),
  ('value -> <empty>','value',0,'p_value','syntax_analyze.py',375),
  ('value_opt -> num_value_opt','value_opt',1,'p_value_opt','syntax_analyze.py',384),
  ('value_opt -> lit_str','value_opt',1,'p_value_opt','syntax_analyze.py',385),
  ('value_opt -> lit_bool','value_opt',1,'p_value_opt','syntax_analyze.py',386),
  ('num_value -> id_array id_struct','num_value',2,'p_num_value','syntax_analyze.py',391),
  ('num_value -> literals','num_value',1,'p_num_value_more','syntax_analyze.py',398),
  ('num_value -> arithmetic_expression','num_value',1,'p_num_value_more','syntax_analyze.py',399),
  ('num_value -> func_call','num_value',1,'p_num_value_more','syntax_analyze.py',400),
  ('num_value -> <empty>','num_value',0,'p_num_value_error','syntax_analyze.py',405),
  ('num_value_opt -> id_array_opt id_struct','num_value_opt',2,'p_num_value_opt','syntax_analyze.py',410),
  ('num_value_opt -> literals_opt','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',417),
  ('num_value_opt -> arithmetic_expression','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',418),
  ('num_value_opt -> func_call','num_value_opt',1,'p_num_value_opt_more','syntax_analyze.py',419),
  ('id_array -> id array','id_array',2,'p_id_array','syntax_analyze.py',426),
  ('id_array -> <empty>','id_array',0,'p_id_array','syntax_analyze.py',427),
  ('id_array_opt -> id array','id_array_opt',2,'p_id_array_opt','syntax_analyze.py',437),
  ('array -> open_brace num_value close_brace','array',3,'p_array','syntax_analyze.py',443),
  ('array -> open_brace close_brace','array',2,'p_array_more','syntax_analyze.py',450),
  ('array -> <empty>','array',0,'p_array_none','syntax_analyze.py',456),
  ('id_array1 -> id_array id_array2','id_array1',2,'p_id_array1','syntax_analyze.py',460),
  ('id_array1 -> <empty>','id_array1',0,'p_id_array1','syntax_analyze.py',461),
  ('id_array2 -> comma id_array1','id_array2',2,'p_id_array2','syntax_analyze.py',471),
  ('id_array2 -> <empty>','id_array2',0,'p_id_array2','syntax_analyze.py',472),
  ('literals -> lit_intposi','literals',1,'p_literals','syntax_analyze.py',481),
  ('literals -> lit_intnega','literals',1,'p_literals','syntax_analyze.py',482),
  ('literals -> lit_decposi','literals',1,'p_literals','syntax_analyze.py',483),
  ('literals -> lit_decnega','literals',1,'p_literals','syntax_analyze.py',484),
  ('literals -> <empty>','literals',0,'p_literals','syntax_analyze.py',485),
  ('literals_opt -> lit_intposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',494),
  ('literals_opt -> lit_intnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',495),
  ('literals_opt -> lit_decposi','literals_opt',1,'p_literals_opt','syntax_analyze.py',496),
  ('literals_opt -> lit_decnega','literals_opt',1,'p_literals_opt','syntax_analyze.py',497),
  ('arithmetic_expression -> open_par arithmetic_expression close_par','arithmetic_expression',3,'p_arithmetic_expression_group','syntax_analyze.py',502),
  ('arithmetic_expression -> num_value arithmetic_operators num_value','arithmetic_expression',3,'p_arithmetic_expression','syntax_analyze.py',509),
  ('arithmetic_operators -> plus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',517),
  ('arithmetic_operators -> minus','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',518),
  ('arithmetic_operators -> times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',519),
  ('arithmetic_operators -> divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',520),
  ('arithmetic_operators -> divide_divide','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',521),
  ('arithmetic_operators -> modulo','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',522),
  ('arithmetic_operators -> times_times','arithmetic_operators',1,'p_arithmetic_operators','syntax_analyze.py',523),
  ('id_struct -> period id_array','id_struct',2,'p_id_struct','syntax_analyze.py',528),
  ('id_struct -> <empty>','id_struct',0,'p_id_struct','syntax_analyze.py',529),
  ('value1 -> value value2','value1',2,'p_value1','syntax_analyze.py',539),
  ('value2 -> comma value1','value2',2,'p_value2','syntax_analyze.py',545),
  ('value2 -> <empty>','value2',0,'p_value2','syntax_analyze.py',546),
  ('value1_opt -> value_opt value2_opt','value1_opt',2,'p_value1_opt','syntax_analyze.py',556),
  ('value2_opt -> comma value1_opt','value2_opt',2,'p_value2_opt','syntax_analyze.py',562),
  ('value2_opt -> <empty>','value2_opt',0,'p_value2_opt','syntax_analyze.py',563),
  ('statements -> assignment_statements statements','statements',2,'p_statements','syntax_analyze.py',572),
  ('statements -> for_statements statements','statements',2,'p_statements','syntax_analyze.py',573),
  ('statements -> while_statements statements','statements',2,'p_statements','syntax_analyze.py',574),
  ('statements -> if_statement statements','statements',2,'p_statements','syntax_analyze.py',575),
  ('statements -> switch_statements statements','statements',2,'p_statements','syntax_analyze.py',576),
  ('statements -> conditional_statements statements','statements',2,'p_statements','syntax_analyze.py',577),
  ('statements -> io_statements statements','statements',2,'p_statements','syntax_analyze.py',578),
  ('statements -> func_call statements','statements',2,'p_statements','syntax_analyze.py',579),
  ('statements -> <empty>','statements',0,'p_statements','syntax_analyze.py',580),
  ('assignment_statements -> id assignment_statements2','assignment_statements',2,'p_assignment_statements','syntax_analyze.py',589),
  ('assignment_statements -> <empty>','assignment_statements',0,'p_assignment_statements','syntax_analyze.py',590),
  ('assignment_statements2 -> array id_struct assignment_exp','assignment_statements2',3,'p_assignment_statements2','syntax_analyze.py',600),
  ('assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace','assignment_statements2',8,'p_assignment_statements2_more','syntax_analyze.py',607),
  ('assignment_exp -> assignment_operators num_value','assignment_exp',2,'p_assignment_exp','syntax_analyze.py',619),
  ('assignment_exp -> equal assign_value','assignment_exp',2,'p_assignment_exp_more','syntax_analyze.py',625),
  ('assignment_exp -> <empty>','assignment_exp',0,'p_assignment_exp_error','syntax_analyze.py',631),
  ('assign_value -> num_value','assign_value',1,'p_assign_value','syntax_analyze.py',636),
  ('assign_value -> more_id value','assign_value',2,'p_assign_value_more','syntax_analyze.py',641),
  ('more_id -> id_array id_struct equal more_id','more_id',4,'p_more_id','syntax_analyze.py',647),
  ('more_id -> <empty>','more_id',0,'p_more_id','syntax_analyze.py',648),
  ('assignment_operators -> plus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',659),
  ('assignment_operators -> minus_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',660),
  ('assignment_operators -> times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',661),
  ('assignment_operators -> divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',662),
  ('assignment_operators -> divide_divide_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',663),
  ('assignment_operators -> modulo_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',664),
  ('assignment_operators -> times_times_equal','assignment_operators',1,'p_assignment_operators','syntax_analyze.py',665),
  ('more_array -> equal id open_brace lit_intposi close_brace more_array','more_array',6,'p_more_array','syntax_analyze.py',670),
  ('more_array -> <empty>','more_array',0,'p_more_array','syntax_analyze.py',671),
  ('block -> open_bracket inside_statements close_bracket','block',3,'p_block','syntax_analyze.py',684),
  ('block -> inside_statements close_bracket','block',2,'p_block','syntax_analyze.py',685),
  ('block -> open_bracket inside_statements','block',2,'p_block','syntax_analyze.py',686),
  ('block -> inside_statements','block',1,'p_block','syntax_analyze.py',687),
  ('for_statements -> For id In id open_brace close_brace colon block','for_statements',8,'p_for_statements','syntax_analyze.py',699),
  ('for_statements -> For id In id open_brace close_brace colon','for_statements',7,'p_for_statements','syntax_analyze.py',700),
  ('for_statements -> For id In id open_brace close_brace block','for_statements',7,'p_for_statements','syntax_analyze.py',701),
  ('for_statements -> For id In id open_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',702),
  ('for_statements -> For id In id close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',703),
  ('for_statements -> For id In open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',704),
  ('for_statements -> For id id open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',705),
  ('for_statements -> For In id open_brace close_brace colon block','for_statements',7,'p_for_statements','syntax_analyze.py',706),
  ('for_statements -> For id In id open_brace close_brace','for_statements',6,'p_for_statements','syntax_analyze.py',707),
  ('for_statements -> For id In id open_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',708),
  ('for_statements -> For id In id open_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',709),
  ('for_statements -> For id In id close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',710),
  ('for_statements -> For id In id close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',711),
  ('for_statements -> For id In id colon block','for_statements',6,'p_for_statements','syntax_analyze.py',712),
  ('for_statements -> For id In open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',713),
  ('for_statements -> For id In open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',714),
  ('for_statements -> For id In open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',715),
  ('for_statements -> For id In close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',716),
  ('for_statements -> For id id open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',717),
  ('for_statements -> For id id open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',718),
  ('for_statements -> For id id open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',719),
  ('for_statements -> For id id close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',720),
  ('for_statements -> For id open_brace close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',721),
  ('for_statements -> For In id open_brace close_brace colon','for_statements',6,'p_for_statements','syntax_analyze.py',722),
  ('for_statements -> For In id open_brace close_brace block','for_statements',6,'p_for_statements','syntax_analyze.py',723),
  ('for_statements -> For In id open_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',724),
  ('for_statements -> For In id close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',725),
  ('for_statements -> For In open_brace close_brace colon block','for_statements',6,'p_for_statements','syntax_analyze.py',726),
  ('for_statements -> For id In id open_brace','for_statements',5,'p_for_statements','syntax_analyze.py',727),
  ('for_statements -> For id In id close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',728),
  ('for_statements -> For id In id colon','for_statements',5,'p_for_statements','syntax_analyze.py',729),
  ('for_statements -> For id In id block','for_statements',5,'p_for_statements','syntax_analyze.py',730),
  ('for_statements -> For id In open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',731),
  ('for_statements -> For id In open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',732),
  ('for_statements -> For id In open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',733),
  ('for_statements -> For id In close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',734),
  ('for_statements -> For id In close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',735),
  ('for_statements -> For id In colon block','for_statements',5,'p_for_statements','syntax_analyze.py',736),
  ('for_statements -> For id id open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',737),
  ('for_statements -> For id id open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',738),
  ('for_statements -> For id id open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',739),
  ('for_statements -> For id id close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',740),
  ('for_statements -> For id id close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',741),
  ('for_statements -> For id id colon block','for_statements',5,'p_for_statements','syntax_analyze.py',742),
  ('for_statements -> For id open_brace close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',743),
  ('for_statements -> For id open_brace close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',744),
  ('for_statements -> For id open_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',745),
  ('for_statements -> For id close_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',746),
  ('for_statements -> For In id open_brace close_brace','for_statements',5,'p_for_statements','syntax_analyze.py',747),
  ('for_statements -> For In id open_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',748),
  ('for_statements -> For In id open_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',749),
  ('for_statements -> For In id close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',750),
  ('for_statements -> For In id close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',751),
  ('for_statements -> For In id colon block','for_statements',5,'p_for_statements','syntax_analyze.py',752),
  ('for_statements -> For In open_brace close_brace colon','for_statements',5,'p_for_statements','syntax_analyze.py',753),
  ('for_statements -> For In open_brace close_brace block','for_statements',5,'p_for_statements','syntax_analyze.py',754),
  ('for_statements -> For In open_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',755),
  ('for_statements -> For open_brace close_brace colon block','for_statements',5,'p_for_statements','syntax_analyze.py',756),
  ('for_statements -> For id In id','for_statements',4,'p_for_statements','syntax_analyze.py',757),
  ('for_statements -> For id In open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',758),
  ('for_statements -> For id In close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',759),
  ('for_statements -> For id In colon','for_statements',4,'p_for_statements','syntax_analyze.py',760),
  ('for_statements -> For id In block','for_statements',4,'p_for_statements','syntax_analyze.py',761),
  ('for_statements -> For id id open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',762),
  ('for_statements -> For id id close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',763),
  ('for_statements -> For id id colon','for_statements',4,'p_for_statements','syntax_analyze.py',764),
  ('for_statements -> For id id block','for_statements',4,'p_for_statements','syntax_analyze.py',765),
  ('for_statements -> For id open_brace close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',766),
  ('for_statements -> For id open_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',767),
  ('for_statements -> For id open_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',768),
  ('for_statements -> For id close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',769),
  ('for_statements -> For id close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',770),
  ('for_statements -> For id colon block','for_statements',4,'p_for_statements','syntax_analyze.py',771),
  ('for_statements -> For In id open_brace','for_statements',4,'p_for_statements','syntax_analyze.py',772),
  ('for_statements -> For In id close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',773),
  ('for_statements -> For In id colon','for_statements',4,'p_for_statements','syntax_analyze.py',774),
  ('for_statements -> For In id block','for_statements',4,'p_for_statements','syntax_analyze.py',775),
  ('for_statements -> For In open_brace close_brace','for_statements',4,'p_for_statements','syntax_analyze.py',776),
  ('for_statements -> For In open_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',777),
  ('for_statements -> For In open_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',778),
  ('for_statements -> For In close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',779),
  ('for_statements -> For In close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',780),
  ('for_statements -> For In colon block','for_statements',4,'p_for_statements','syntax_analyze.py',781),
  ('for_statements -> For open_brace close_brace colon','for_statements',4,'p_for_statements','syntax_analyze.py',782),
  ('for_statements -> For open_brace close_brace block','for_statements',4,'p_for_statements','syntax_analyze.py',783),
  ('for_statements -> For open_brace colon block','for_statements',4,'p_for_statements','syntax_analyze.py',784),
  ('for_statements -> For close_brace colon block','for_statements',4,'p_for_statements','syntax_analyze.py',785),
  ('for_statements -> For id In','for_statements',3,'p_for_statements','syntax_analyze.py',786),
  ('for_statements -> For id id','for_statements',3,'p_for_statements','syntax_analyze.py',787),
  ('for_statements -> For id open_brace','for_statements',3,'p_for_statements','syntax_analyze.py',788),
  ('for_statements -> For id close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',789),
  ('for_statements -> For id colon','for_statements',3,'p_for_statements','syntax_analyze.py',790),
  ('for_statements -> For id block','for_statements',3,'p_for_statements','syntax_analyze.py',791),
  ('for_statements -> For In id','for_statements',3,'p_for_statements','syntax_analyze.py',792),
  ('for_statements -> For In open_brace','for_statements',3,'p_for_statements','syntax_analyze.py',793),
  ('for_statements -> For In close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',794),
  ('for_statements -> For In colon','for_statements',3,'p_for_statements','syntax_analyze.py',795),
  ('for_statements -> For In block','for_statements',3,'p_for_statements','syntax_analyze.py',796),
  ('for_statements -> For open_brace close_brace','for_statements',3,'p_for_statements','syntax_analyze.py',797),
  ('for_statements -> For open_brace colon','for_statements',3,'p_for_statements','syntax_analyze.py',798),
  ('for_statements -> For open_brace block','for_statements',3,'p_for_statements','syntax_analyze.py',799),
  ('for_statements -> For close_brace colon','for_statements',3,'p_for_statements','syntax_analyze.py',800),
  ('for_statements -> For close_brace block','for_statements',3,'p_for_statements','syntax_analyze.py',801),
  ('for_statements -> For colon block','for_statements',3,'p_for_statements','syntax_analyze.py',802),
  ('for_statements -> For id','for_statements',2,'p_for_statements','syntax_analyze.py',803),
  ('for_statements -> For In','for_statements',2,'p_for_statements','syntax_analyze.py',804),
  ('for_statements -> For open_brace','for_statements',2,'p_for_statements','syntax_analyze.py',805),
  ('for_statements -> For close_brace','for_statements',2,'p_for_statements','syntax_analyze.py',806),
  ('for_statements -> For colon','for_statements',2,'p_for_statements','syntax_analyze.py',807),
  ('for_statements -> For block','for_statements',2,'p_for_statements','syntax_analyze.py',808),
  ('while_statements -> While open_par condition close_par colon block','while_statements',6,'p_while_statements','syntax_analyze.py',824),
  ('while_statements -> While open_par condition close_par block','while_statements',5,'p_while_statements','syntax_analyze.py',825),
  ('while_statements -> While open_par condition colon block','while_statements',5,'p_while_statements','syntax_analyze.py',826),
  ('while_statements -> While condition close_par colon block','while_statements',5,'p_while_statements','syntax_analyze.py',827),
  ('while_statements -> While open_par condition block','while_statements',4,'p_while_statements','syntax_analyze.py',828),
  ('while_statements -> While condition close_par block','while_statements',4,'p_while_statements','syntax_analyze.py',829),
  ('while_statements -> While condition colon block','while_statements',4,'p_while_statements','syntax_analyze.py',830),
  ('inside_statements -> statements control_statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',846),
  ('inside_statements -> control_statements statements','inside_statements',2,'p_inside_statements','syntax_analyze.py',847),
  ('inside_statements -> <empty>','inside_statements',0,'p_inside_statements','syntax_analyze.py',848),
  ('control_statements -> Break','control_statements',1,'p_control_statements','syntax_analyze.py',857),
  ('control_statements -> Continue','control_statements',1,'p_control_statements','syntax_analyze.py',858),
  ('control_statements -> Avoid','control_statements',1,'p_control_statements','syntax_analyze.py',859),
  ('control_statements -> <empty>','control_statements',0,'p_control_statements','syntax_analyze.py',860),
  ('condition -> relational_expression','condition',1,'p_condition','syntax_analyze.py',868),
  ('condition -> logical_expression','condition',1,'p_condition','syntax_analyze.py',869),
  ('condition -> lit_bool','condition',1,'p_condition','syntax_analyze.py',870),
  ('condition -> Not open_par condition_not close_par','condition',4,'p_condition_more','syntax_analyze.py',875),
  ('condition_not -> relational_expression','condition_not',1,'p_condition_not','syntax_analyze.py',887),
  ('condition_not -> logical_expression','condition_not',1,'p_condition_not','syntax_analyze.py',888),
  ('condition_not -> lit_bool','condition_not',1,'p_condition_not_more','syntax_analyze.py',893),
  ('relational_expression -> value relational_operators value','relational_expression',3,'p_relational_expression','syntax_analyze.py',898),
  ('relational_operators -> greater_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',905),
  ('relational_operators -> less_than','relational_operators',1,'p_relational_operators','syntax_analyze.py',906),
  ('relational_operators -> equal_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',907),
  ('relational_operators -> not_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',908),
  ('relational_operators -> great_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',909),
  ('relational_operators -> less_than_equal','relational_operators',1,'p_relational_operators','syntax_analyze.py',910),
  ('logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par','logical_expression',7,'p_logical_expression','syntax_analyze.py',915),
  ('logical_operand -> Not open_par logical_operand close_par','logical_operand',4,'p_logical_operand','syntax_analyze.py',926),
  ('logical_operand -> relational_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',934),
  ('logical_operand -> logical_expression','logical_operand',1,'p_logical_operand_more','syntax_analyze.py',935),
  ('logical_operand -> lit_bool','logical_operand',1,'p_logical_operand_more1','syntax_analyze.py',940),
  ('logical_operators -> And','logical_operators',1,'p_logical_operators','syntax_analyze.py',945),
  ('logical_operators -> Or','logical_operators',1,'p_logical_operators','syntax_analyze.py',946),
  ('conditional_statements -> if_statement','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',951),
  ('conditional_statements -> switch_statements','conditional_statements',1,'p_conditional_statements','syntax_analyze.py',952),
  ('if_statement -> If open_par condition close_par colon block condition_else','if_statement',7,'p_if_statement','syntax_analyze.py',957),
  ('condition_else -> elif_statement','condition_else',1,'p_condition_else','syntax_analyze.py',978),
  ('condition_else -> else_statement','condition_else',1,'p_condition_else','syntax_analyze.py',979),
  ('condition_else -> <empty>','condition_else',0,'p_condition_else_empty','syntax_analyze.py',984),
  ('elif_statement -> Elif open_par condition close_par colon block condition_else','elif_statement',7,'p_elif_statement','syntax_analyze.py',988),
  ('else_statement -> Else colon block','else_statement',3,'p_else_statement','syntax_analyze.py',1001),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','syntax_analyze.py',1002),
  ('switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch','switch_statements',10,'p_switch_statements','syntax_analyze.py',1015),
  ('execute -> Execute switch_lit colon statements Break execute1','execute',6,'p_execute','syntax_analyze.py',1029),
  ('switch_lit -> lit_str','switch_lit',1,'p_switch_lit','syntax_analyze.py',1039),
  ('switch_lit -> lit_intposi','switch_lit',1,'p_switch_lit','syntax_analyze.py',1040),
  ('switch_lit -> lit_intnega','switch_lit',1,'p_switch_lit','syntax_analyze.py',1041),
  ('execute1 -> execute','execute1',1,'p_execute1','syntax_analyze.py',1046),
  ('execute1 -> <empty>','execute1',0,'p_execute1_more','syntax_analyze.py',1051),
  ('io_statements -> input_statements','io_statements',1,'p_io_statements','syntax_analyze.py',1056),
  ('io_statements -> output_statements','io_statements',1,'p_io_statements','syntax_analyze.py',1057),
  ('input_statements -> Absorb id_array id_struct','input_statements',3,'p_input_statements','syntax_analyze.py',1062),
  ('output_statements -> Discharge value','output_statements',2,'p_output_statement','syntax_analyze.py',1069),
  ('func_call -> Sys_Call id open_par function_param close_par','func_call',5,'p_func_call','syntax_analyze.py',1076),
  ('function_param -> id open_brace close_brace more_param','function_param',4,'p_function_param','syntax_analyze.py',1085),
  ('function_param -> value1_opt more_param','function_param',2,'p_function_param_more','syntax_analyze.py',1093),
  ('function_param -> <empty>','function_param',0,'p_function_param_none','syntax_analyze.py',1099),
  ('more_param -> comma function_param','more_param',2,'p_more_param','syntax_analyze.py',1103),
  ('more_param -> <empty>','more_param',0,'p_more_param','syntax_analyze.py',1104),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',11,'p_functions','syntax_analyze.py',1113),
  ('functions -> Sys id parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1114),
  ('functions -> Sys open_par parameters declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1115),
  ('functions -> Sys parameters close_par declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1116),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement functions','functions',7,'p_functions','syntax_analyze.py',1117),
  ('functions -> Sys parameters declare_statements statements return_statement close_bracket functions','functions',7,'p_functions','syntax_analyze.py',1118),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1119),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1120),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1121),
  ('functions -> Sys id parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1122),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1123),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1124),
  ('functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1125),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions','functions',8,'p_functions','syntax_analyze.py',1126),
  ('functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1127),
  ('functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',8,'p_functions','syntax_analyze.py',1128),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1129),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1130),
  ('functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1131),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1132),
  ('functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1133),
  ('functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1134),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',9,'p_functions','syntax_analyze.py',1135),
  ('functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1136),
  ('functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1137),
  ('functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',9,'p_functions','syntax_analyze.py',1138),
  ('functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions','functions',10,'p_functions','syntax_analyze.py',1139),
  ('functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1140),
  ('functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1141),
  ('functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1142),
  ('functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions','functions',10,'p_functions','syntax_analyze.py',1143),
  ('functions -> <empty>','functions',0,'p_functions','syntax_analyze.py',1144),
  ('parameters -> data_type id more_parameters','parameters',3,'p_parameters','syntax_analyze.py',1166),
  ('parameters -> <empty>','parameters',0,'p_parameters_none','syntax_analyze.py',1173),
  ('more_parameters -> comma data_type id more_parameters','more_parameters',4,'p_more_parameters','syntax_analyze.py',1177),
  ('more_parameters -> <empty>','more_parameters',0,'p_more_parameters','syntax_analyze.py',1178),
  ('return_statement -> Return value statements return_statement','return_statement',4,'p_return_statement','syntax_analyze.py',1189),
  ('return_statement -> <empty>','return_statement',0,'p_return_statement','syntax_analyze.py',1190),
]
