delimDict = {
    'Integer' : [' '],
    'Decimal' : [' '],
    'String' : [' '],
    'Boolean' : [' '],
    'Struct' : [' '],
    'Generate' : [' '],
    'Absorb' : [' '],
    'Discharge' : [' '],
    'Switch' : [' '],
    'For' : [' '],
    'In' : [' '],
    'Sys' : [' '],
    'Sys.Call' : [' '],
    'Execute' : [' '],
    'Fixed' : [' '],
    'Return' : [' '],
    'Default' : ['\:'],
    'Else' : ['colon'],
    'If' : [' ', 'open_par'],
    'Elif' : [' ', 'open_par'],
    'And' : [' ', 'open_par'],
    'Or' : [' ', 'open_par'],
    'Not' : [' ', 'open_par'],
    'While' : [' ', 'open_par'],
    'End.Switch' : ['\n'],
    'Break' : ['\n'],
    'Continue' : ['\n'],
    'Avoid' : ['\n'],
    'Link.Start' : ['\n'],
    'Link.End' : ['\n', '$'],
	'comment' : ['\s', '\S', '$'],
    'lit_decposi' : [' ', '\n', 'great_than_equal', 'less_than_equal', 'not_equal', 
                     'greater_than', 'less_than', 'equal_equal', 'colon', 'comma', 
                     'plus', 'minus', 'divide_divide', 'times_times', 'times', 'divide', 
                     'modulo', 'close_par', 'close_bracket', 'close_brace'],
    'lit_decnega' : [' ', '\n', 'great_than_equal', 'less_than_equal', 'not_equal', 
                     'greater_than', 'less_than', 'equal_equal', 'colon', 'comma', 
                     'plus', 'minus', 'divide_divide', 'times_times', 'times', 'divide', 
                     'modulo', 'close_par', 'close_bracket', 'close_brace'],
    'lit_intposi' : [' ', '\n', 'great_than_equal', 'less_than_equal', 'not_equal', 
                     'greater_than', 'less_than', 'equal_equal', 'colon', 'comma', 
                     'plus', 'minus', 'divide_divide', 'times_times', 'times', 'divide', 
                     'modulo', 'close_par', 'close_bracket', 'close_brace', 'colon'],
    'lit_intnega' : [' ', '\n', 'great_than_equal', 'less_than_equal', 'not_equal', 
                     'greater_than', 'less_than', 'equal_equal', 'colon', 'comma', 
                     'plus', 'minus', 'divide_divide', 'times_times', 'times', 'divide', 
                     'modulo', 'close_par', 'close_bracket', 'close_brace', 'colon'],
    'lit_str' : ['\s', 'comma', 'open_par', 'close_par', 'open_bracket', 'close_bracket', 'open_brace', 'close_brace', 'colon'], 
    'lit_bool' : ['\s', 'comma', 'open_par', 'close_par', 'open_bracket', 'close_bracket', 'open_brace', 'close_brace'],
    'less_than_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'great_than_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'not_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'less_than' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'greater_than' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'equal_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'minus_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'plus_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'times_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'divide_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'times_times_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'modulo_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'divide_divide_equal' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus', 'lit_str'],
    'plus' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'minus' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'times' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'divide' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'times_times' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'divide_divide' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'modulo' : [' ', '[a-z]', '[0-9]', 'open_par', 'minus'],
    'open_par' : ['\d', 'And', 'Or', 'Not', 'open_par', 'close_par'],
    'close_par' : [' ', 'open_bracket', 'plus', 'minus', 'times', 'divide', 'modulo', 'times_times', 'divide_divide', 'greater_than', 'less_than', 'equal_equal', 'not_equal', 'great_equal', 'less_equal', 'And', 'Or', 'Not', 'colon', 'close_par'],
    'open_brace' : ['id', '[A-Z]', '\d', 'lit_str', 'close_brace'],
    'close_brace' : ['\s', 'close_par', 'plus', 'minus', 'divide_divide', 'times_times', 'times', 'divide', 'modulo', 'equal', 'minus_equal', 'plus_equal', 'times_equal', 'divide_equal', 'times_times_equal', 'modulo_equal', 'divide_divide_equal', 'less_equal', 'great_equal', 'not_equal', 'greater_than', 'less_than', 'equal_equal', 'And', 'Or', 'Not'],
    'open_bracket' : ['\s', 'id', '\"', '\â€œ', '\d'],
    'close_bracket' : [' ', '\n', '$'],
    'comma' : [' ', 'id', '[A-Z]', '\d'],
    'colon' : ['\s', 'open_bracket'], 
    'period' : ['id', '\d'],
    'id' : ['\s', 'period', 'comma', 'open_par', 'close_par', 'open_bracket', 'close_bracket', 
            'plus', 'minus', 'divide_divide', 'times_times', 'times', 'divide', 'modulo', 'equal', 
            'minus_equal', 'plus_equal', 'times_equal', 'divide_equal', 'times_times_equal', 
            'modulo_equal', 'divide_divide_equal', 'great_equal', 'less_equal', 'not_equal', 
            'greater_than', 'less_than', 'equal_equal', 'colon', 'open_brace']
}