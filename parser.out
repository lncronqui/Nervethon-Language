Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    comment
    space

Grammar

Rule 0     S' -> program
Rule 1     program -> global_dec Link_Start declare_statements statements Link_End functions
Rule 2     program -> global_dec Link_Start declare_statements statements functions
Rule 3     program -> global_dec declare_statements statements Link_End functions
Rule 4     program -> global_dec declare_statements statements functions
Rule 5     global_dec -> struct_dec global_dec
Rule 6     global_dec -> declare_statements global_dec
Rule 7     global_dec -> <empty>
Rule 8     struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1
Rule 9     struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1
Rule 10    struct_dec -> <empty>
Rule 11    struct_element1 -> data_type id_array_dec
Rule 12    data_type -> Integer
Rule 13    data_type -> Decimal
Rule 14    data_type -> String
Rule 15    data_type -> Boolean
Rule 16    data_type -> <empty>
Rule 17    id_array_dec -> id id_array_dec2
Rule 18    id_array_dec -> <empty>
Rule 19    id_array_dec2 -> id_dec1
Rule 20    id_array_dec2 -> open_brace lit_intposi close_brace array_dec1
Rule 21    id_dec1 -> comma id id_dec1
Rule 22    id_dec1 -> <empty>
Rule 23    array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1
Rule 24    array_dec1 -> <empty>
Rule 25    struct_element2 -> comma struct_element1 struct_element2
Rule 26    struct_element2 -> <empty>
Rule 27    declare_statements -> Generate const_var_dec declare_statements
Rule 28    declare_statements -> <empty>
Rule 29    const_var_dec -> Fixed data_type id_array_const
Rule 30    const_var_dec -> data_type id_array_var
Rule 31    const_var_dec -> <empty>
Rule 32    id_array_const -> id id_array_const2
Rule 33    id_array_const -> <empty>
Rule 34    id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 35    id_array_const2 -> equal value id_const1
Rule 36    id_array_const2 -> <empty>
Rule 37    id_const1 -> comma id equal value id_const1
Rule 38    id_const1 -> <empty>
Rule 39    array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 40    array_const1 -> <empty>
Rule 41    id_array_var -> id id_array_var2
Rule 42    id_array_var2 -> var_init id_var1
Rule 43    id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1
Rule 44    var_init -> equal value id_var1
Rule 45    var_init -> <empty>
Rule 46    id_var1 -> comma id var_init id_var1
Rule 47    id_var1 -> <empty>
Rule 48    array_init -> equal open_brace value1 close_brace array_var1
Rule 49    array_init -> <empty>
Rule 50    array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1
Rule 51    array_var1 -> <empty>
Rule 52    value -> num_value
Rule 53    value -> lit_str
Rule 54    value -> lit_bool
Rule 55    value -> <empty>
Rule 56    num_value -> id_array id_struct
Rule 57    num_value -> literals
Rule 58    num_value -> arithmetic_expression
Rule 59    num_value -> func_call
Rule 60    num_value -> <empty>
Rule 61    id_array -> id array
Rule 62    id_array -> <empty>
Rule 63    array -> open_brace num_value close_brace
Rule 64    array -> open_brace close_brace
Rule 65    array -> <empty>
Rule 66    id_array1 -> id_array id_array2
Rule 67    id_array1 -> <empty>
Rule 68    id_array2 -> comma id_array1
Rule 69    id_array2 -> <empty>
Rule 70    literals -> lit_intposi
Rule 71    literals -> lit_intnega
Rule 72    literals -> lit_decposi
Rule 73    literals -> lit_decnega
Rule 74    literals -> <empty>
Rule 75    arithmetic_expression -> open_par arithmetic_expression close_par
Rule 76    arithmetic_expression -> num_value arithmetic_operators num_value
Rule 77    arithmetic_operators -> plus
Rule 78    arithmetic_operators -> minus
Rule 79    arithmetic_operators -> times
Rule 80    arithmetic_operators -> divide
Rule 81    arithmetic_operators -> divide_divide
Rule 82    arithmetic_operators -> modulo
Rule 83    arithmetic_operators -> times_times
Rule 84    id_struct -> period id_array
Rule 85    id_struct -> <empty>
Rule 86    value1 -> value value2
Rule 87    value2 -> comma value1
Rule 88    value2 -> <empty>
Rule 89    statements -> assignment_statements statements
Rule 90    statements -> for_statements statements
Rule 91    statements -> while_statements statements
Rule 92    statements -> if_statement statements
Rule 93    statements -> switch_statements statements
Rule 94    statements -> conditional_statements statements
Rule 95    statements -> io_statements statements
Rule 96    statements -> func_call statements
Rule 97    statements -> <empty>
Rule 98    assignment_statements -> id assignment_statements2
Rule 99    assignment_statements -> <empty>
Rule 100   assignment_statements2 -> array id_struct assignment_exp
Rule 101   assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace
Rule 102   assignment_exp -> assignment_operators num_value
Rule 103   assignment_exp -> equal assign_value
Rule 104   assignment_exp -> <empty>
Rule 105   assign_value -> num_value
Rule 106   assign_value -> more_id value
Rule 107   more_id -> id_array id_struct equal more_id
Rule 108   more_id -> <empty>
Rule 109   assignment_operators -> plus_equal
Rule 110   assignment_operators -> minus_equal
Rule 111   assignment_operators -> times_equal
Rule 112   assignment_operators -> divide_equal
Rule 113   assignment_operators -> divide_divide_equal
Rule 114   assignment_operators -> modulo_equal
Rule 115   assignment_operators -> times_times_equal
Rule 116   more_array -> equal id open_brace lit_intposi close_brace more_array
Rule 117   more_array -> <empty>
Rule 118   for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
Rule 119   for_statements -> <empty>
Rule 120   while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket
Rule 121   while_statements -> <empty>
Rule 122   inside_statements -> statements control_statements
Rule 123   inside_statements -> control_statements statements
Rule 124   inside_statements -> <empty>
Rule 125   control_statements -> Break
Rule 126   control_statements -> Continue
Rule 127   control_statements -> Avoid
Rule 128   control_statements -> <empty>
Rule 129   condition -> relational_expression
Rule 130   condition -> logical_expression
Rule 131   condition -> Not open_par condition_not close_par
Rule 132   condition -> lit_bool
Rule 133   condition_not -> relational_expression
Rule 134   condition_not -> logical_expression
Rule 135   condition_not -> lit_bool
Rule 136   relational_expression -> value relational_operators value
Rule 137   relational_operators -> greater_than
Rule 138   relational_operators -> less_than
Rule 139   relational_operators -> equal_equal
Rule 140   relational_operators -> not_equal
Rule 141   relational_operators -> great_than_equal
Rule 142   relational_operators -> less_than_equal
Rule 143   logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par
Rule 144   logical_operand -> Not open_par logical_operand close_par
Rule 145   logical_operand -> relational_expression
Rule 146   logical_operand -> logical_expression
Rule 147   logical_operand -> lit_bool
Rule 148   logical_operators -> And
Rule 149   logical_operators -> Or
Rule 150   conditional_statements -> if_statement
Rule 151   conditional_statements -> switch_statements
Rule 152   if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 153   if_statement -> <empty>
Rule 154   condition_else -> elif_statement
Rule 155   condition_else -> else_statement
Rule 156   condition_else -> <empty>
Rule 157   elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 158   else_statement -> Else colon open_bracket inside_statements close_bracket
Rule 159   switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
Rule 160   execute -> Execute switch_lit colon statements Break execute1
Rule 161   switch_lit -> lit_str
Rule 162   switch_lit -> lit_intposi
Rule 163   switch_lit -> lit_intnega
Rule 164   execute1 -> execute
Rule 165   execute1 -> <empty>
Rule 166   io_statements -> input_statements
Rule 167   io_statements -> output_statements
Rule 168   input_statements -> Absorb id_array id_struct
Rule 169   output_statements -> Discharge value
Rule 170   func_call -> Sys_Call id open_par function_param close_par
Rule 171   function_param -> id open_brace close_brace more_param
Rule 172   function_param -> <empty>
Rule 173   function_param -> value1 more_param
Rule 174   more_param -> comma function_param
Rule 175   more_param -> <empty>
Rule 176   functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 177   functions -> <empty>
Rule 178   parameters -> data_type id more_parameters
Rule 179   parameters -> <empty>
Rule 180   more_parameters -> comma data_type id more_parameters
Rule 181   more_parameters -> <empty>
Rule 182   return_statement -> Return value statements return_statement
Rule 183   return_statement -> <empty>

Terminals, with rules where they appear

Absorb               : 168
And                  : 148
Avoid                : 127
Boolean              : 15
Break                : 125 160
Continue             : 126
Decimal              : 13
Default              : 159
Discharge            : 169
Elif                 : 157
Else                 : 158
End_Switch           : 159
Execute              : 160
Fixed                : 29
For                  : 118
Generate             : 27
If                   : 152
In                   : 118
Integer              : 12
Link_End             : 1 3
Link_Start           : 1 2
Not                  : 131 144
Or                   : 149
Return               : 182
String               : 14
Struct               : 8 9
Switch               : 159
Sys                  : 176
Sys_Call             : 170
While                : 120
close_brace          : 20 23 34 34 39 39 43 48 50 63 64 101 101 116 118 171
close_bracket        : 8 9 118 120 152 157 158 159 176
close_par            : 75 120 131 143 143 144 152 157 170 176
colon                : 118 120 152 157 158 159 159 160
comma                : 21 23 25 37 39 46 50 68 87 174 180
comment              : 
divide               : 80
divide_divide        : 81
divide_divide_equal  : 113
divide_equal         : 112
equal                : 34 35 37 39 44 48 101 103 107 116
equal_equal          : 139
error                : 
great_than_equal     : 141
greater_than         : 137
id                   : 8 17 21 23 32 37 39 41 46 50 61 98 116 118 118 159 170 171 176 178 180
less_than            : 138
less_than_equal      : 142
lit_bool             : 54 132 135 147
lit_decnega          : 73
lit_decposi          : 72
lit_intnega          : 71 163
lit_intposi          : 20 23 34 39 43 50 70 101 116 162
lit_str              : 53 161
minus                : 78
minus_equal          : 110
modulo               : 82
modulo_equal         : 114
not_equal            : 140
open_brace           : 20 23 34 34 39 39 43 48 50 63 64 101 101 116 118 171
open_bracket         : 8 9 118 120 152 157 158 159 176
open_par             : 75 120 131 143 143 144 152 157 170 176
period               : 84
plus                 : 77
plus_equal           : 109
space                : 
times                : 79
times_equal          : 111
times_times          : 83
times_times_equal    : 115

Nonterminals, with rules where they appear

arithmetic_expression : 58 75
arithmetic_operators : 76
array                : 61 100
array_const1         : 34 39
array_dec1           : 20 23
array_init           : 43 50
array_var1           : 43 48 50
assign_value         : 103
assignment_exp       : 100
assignment_operators : 102
assignment_statements : 89
assignment_statements2 : 98
condition            : 120 152 157
condition_else       : 152 157
condition_not        : 131
conditional_statements : 94
const_var_dec        : 27
control_statements   : 122 123
data_type            : 11 29 30 178 180
declare_statements   : 1 2 3 4 6 27 176
elif_statement       : 154
else_statement       : 155
execute              : 159 164
execute1             : 160
for_statements       : 90
func_call            : 59 96
function_param       : 170 174
functions            : 1 2 3 4 176
global_dec           : 1 2 3 4 5 6
id_array             : 56 66 84 107 168
id_array1            : 8 9 68
id_array2            : 66
id_array_const       : 29
id_array_const2      : 32
id_array_dec         : 11
id_array_dec2        : 17
id_array_var         : 30
id_array_var2        : 41
id_const1            : 35 37
id_dec1              : 19 21
id_struct            : 56 100 107 168
id_var1              : 42 44 46
if_statement         : 92 150
input_statements     : 166
inside_statements    : 118 120 152 157 158 159
io_statements        : 95
literals             : 57
logical_expression   : 130 134 146
logical_operand      : 143 143 144
logical_operators    : 143
more_array           : 101 116
more_id              : 106 107
more_param           : 171 173
more_parameters      : 178 180
num_value            : 52 63 76 76 102 105
output_statements    : 167
parameters           : 176
program              : 0
relational_expression : 129 133 145
relational_operators : 136
return_statement     : 176 182
statements           : 1 2 3 4 89 90 91 92 93 94 95 96 122 123 160 176 182
struct_dec           : 5
struct_element1      : 8 9 25
struct_element2      : 8 9 25
switch_lit           : 160
switch_statements    : 93 151
value                : 35 37 44 86 106 136 136 169 182
value1               : 34 39 48 87 101 173
value2               : 86
var_init             : 42 46
while_statements     : 91

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . global_dec Link_Start declare_statements statements Link_End functions
    (2) program -> . global_dec Link_Start declare_statements statements functions
    (3) program -> . global_dec declare_statements statements Link_End functions
    (4) program -> . global_dec declare_statements statements functions
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1
    (9) struct_dec -> . Struct open_bracket struct_element1 struct_element2 close_bracket id_array1
    (10) struct_dec -> .
    (27) declare_statements -> . Generate const_var_dec declare_statements
    (28) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 10 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 10 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 10 (struct_dec -> .) ]
  ! id              [ reduce using rule 10 (struct_dec -> .) ]
  ! For             [ reduce using rule 10 (struct_dec -> .) ]
  ! While           [ reduce using rule 10 (struct_dec -> .) ]
  ! If              [ reduce using rule 10 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 10 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 10 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 10 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 10 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 10 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 10 (struct_dec -> .) ]
  ! $end            [ reduce using rule 10 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 28 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 28 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 28 (declare_statements -> .) ]
  ! id              [ reduce using rule 28 (declare_statements -> .) ]
  ! For             [ reduce using rule 28 (declare_statements -> .) ]
  ! While           [ reduce using rule 28 (declare_statements -> .) ]
  ! If              [ reduce using rule 28 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 28 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 28 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 28 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 28 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 28 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 28 (declare_statements -> .) ]
  ! $end            [ reduce using rule 28 (declare_statements -> .) ]

    program                        shift and go to state 1
    global_dec                     shift and go to state 2
    declare_statements             shift and go to state 3
    struct_dec                     shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> global_dec . Link_Start declare_statements statements Link_End functions
    (2) program -> global_dec . Link_Start declare_statements statements functions
    (3) program -> global_dec . declare_statements statements Link_End functions
    (4) program -> global_dec . declare_statements statements functions
    (27) declare_statements -> . Generate const_var_dec declare_statements
    (28) declare_statements -> .

    Link_Start      shift and go to state 7
    Generate        shift and go to state 6
    id              reduce using rule 28 (declare_statements -> .)
    For             reduce using rule 28 (declare_statements -> .)
    While           reduce using rule 28 (declare_statements -> .)
    If              reduce using rule 28 (declare_statements -> .)
    Switch          reduce using rule 28 (declare_statements -> .)
    Sys_Call        reduce using rule 28 (declare_statements -> .)
    Absorb          reduce using rule 28 (declare_statements -> .)
    Discharge       reduce using rule 28 (declare_statements -> .)
    Link_End        reduce using rule 28 (declare_statements -> .)
    Sys             reduce using rule 28 (declare_statements -> .)
    $end            reduce using rule 28 (declare_statements -> .)

    declare_statements             shift and go to state 8

state 3

    (6) global_dec -> declare_statements . global_dec
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1
    (9) struct_dec -> . Struct open_bracket struct_element1 struct_element2 close_bracket id_array1
    (10) struct_dec -> .
    (27) declare_statements -> . Generate const_var_dec declare_statements
    (28) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 10 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 10 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 10 (struct_dec -> .) ]
  ! id              [ reduce using rule 10 (struct_dec -> .) ]
  ! For             [ reduce using rule 10 (struct_dec -> .) ]
  ! While           [ reduce using rule 10 (struct_dec -> .) ]
  ! If              [ reduce using rule 10 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 10 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 10 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 10 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 10 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 10 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 10 (struct_dec -> .) ]
  ! $end            [ reduce using rule 10 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 28 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 28 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 28 (declare_statements -> .) ]
  ! id              [ reduce using rule 28 (declare_statements -> .) ]
  ! For             [ reduce using rule 28 (declare_statements -> .) ]
  ! While           [ reduce using rule 28 (declare_statements -> .) ]
  ! If              [ reduce using rule 28 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 28 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 28 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 28 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 28 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 28 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 28 (declare_statements -> .) ]
  ! $end            [ reduce using rule 28 (declare_statements -> .) ]

    declare_statements             shift and go to state 3
    global_dec                     shift and go to state 9
    struct_dec                     shift and go to state 4

state 4

    (5) global_dec -> struct_dec . global_dec
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1
    (9) struct_dec -> . Struct open_bracket struct_element1 struct_element2 close_bracket id_array1
    (10) struct_dec -> .
    (27) declare_statements -> . Generate const_var_dec declare_statements
    (28) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 10 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 10 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 10 (struct_dec -> .) ]
  ! id              [ reduce using rule 10 (struct_dec -> .) ]
  ! For             [ reduce using rule 10 (struct_dec -> .) ]
  ! While           [ reduce using rule 10 (struct_dec -> .) ]
  ! If              [ reduce using rule 10 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 10 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 10 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 10 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 10 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 10 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 10 (struct_dec -> .) ]
  ! $end            [ reduce using rule 10 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 28 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 28 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 28 (declare_statements -> .) ]
  ! id              [ reduce using rule 28 (declare_statements -> .) ]
  ! For             [ reduce using rule 28 (declare_statements -> .) ]
  ! While           [ reduce using rule 28 (declare_statements -> .) ]
  ! If              [ reduce using rule 28 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 28 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 28 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 28 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 28 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 28 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 28 (declare_statements -> .) ]
  ! $end            [ reduce using rule 28 (declare_statements -> .) ]

    struct_dec                     shift and go to state 4
    global_dec                     shift and go to state 10
    declare_statements             shift and go to state 3

state 5

    (8) struct_dec -> Struct . id open_bracket struct_element1 struct_element2 close_bracket id_array1
    (9) struct_dec -> Struct . open_bracket struct_element1 struct_element2 close_bracket id_array1

    id              shift and go to state 11
    open_bracket    shift and go to state 12


state 6

    (27) declare_statements -> Generate . const_var_dec declare_statements
    (29) const_var_dec -> . Fixed data_type id_array_const
    (30) const_var_dec -> . data_type id_array_var
    (31) const_var_dec -> .
    (12) data_type -> . Integer
    (13) data_type -> . Decimal
    (14) data_type -> . String
    (15) data_type -> . Boolean
    (16) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 16 (data_type -> .)
    Fixed           shift and go to state 14
    Generate        reduce using rule 31 (const_var_dec -> .)
    Struct          reduce using rule 31 (const_var_dec -> .)
    Link_Start      reduce using rule 31 (const_var_dec -> .)
    For             reduce using rule 31 (const_var_dec -> .)
    While           reduce using rule 31 (const_var_dec -> .)
    If              reduce using rule 31 (const_var_dec -> .)
    Switch          reduce using rule 31 (const_var_dec -> .)
    Sys_Call        reduce using rule 31 (const_var_dec -> .)
    Absorb          reduce using rule 31 (const_var_dec -> .)
    Discharge       reduce using rule 31 (const_var_dec -> .)
    Link_End        reduce using rule 31 (const_var_dec -> .)
    Sys             reduce using rule 31 (const_var_dec -> .)
    $end            reduce using rule 31 (const_var_dec -> .)
    Return          reduce using rule 31 (const_var_dec -> .)
    close_bracket   reduce using rule 31 (const_var_dec -> .)
    Integer         shift and go to state 16
    Decimal         shift and go to state 17
    String          shift and go to state 18
    Boolean         shift and go to state 19
    id              reduce using rule 16 (data_type -> .)

  ! id              [ reduce using rule 31 (const_var_dec -> .) ]

    const_var_dec                  shift and go to state 13
    data_type                      shift and go to state 15

state 7

    (1) program -> global_dec Link_Start . declare_statements statements Link_End functions
    (2) program -> global_dec Link_Start . declare_statements statements functions
    (27) declare_statements -> . Generate const_var_dec declare_statements
    (28) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 28 (declare_statements -> .)
    For             reduce using rule 28 (declare_statements -> .)
    While           reduce using rule 28 (declare_statements -> .)
    If              reduce using rule 28 (declare_statements -> .)
    Switch          reduce using rule 28 (declare_statements -> .)
    Sys_Call        reduce using rule 28 (declare_statements -> .)
    Absorb          reduce using rule 28 (declare_statements -> .)
    Discharge       reduce using rule 28 (declare_statements -> .)
    Link_End        reduce using rule 28 (declare_statements -> .)
    Sys             reduce using rule 28 (declare_statements -> .)
    $end            reduce using rule 28 (declare_statements -> .)

    declare_statements             shift and go to state 20

state 8

    (3) program -> global_dec declare_statements . statements Link_End functions
    (4) program -> global_dec declare_statements . statements functions
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]

    statements                     shift and go to state 21
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 9

    (6) global_dec -> declare_statements global_dec .

    Link_Start      reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Generate        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    id              reduce using rule 6 (global_dec -> declare_statements global_dec .)
    For             reduce using rule 6 (global_dec -> declare_statements global_dec .)
    While           reduce using rule 6 (global_dec -> declare_statements global_dec .)
    If              reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Switch          reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Sys_Call        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Absorb          reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Discharge       reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Link_End        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Sys             reduce using rule 6 (global_dec -> declare_statements global_dec .)
    $end            reduce using rule 6 (global_dec -> declare_statements global_dec .)


state 10

    (5) global_dec -> struct_dec global_dec .

    Link_Start      reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Generate        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    id              reduce using rule 5 (global_dec -> struct_dec global_dec .)
    For             reduce using rule 5 (global_dec -> struct_dec global_dec .)
    While           reduce using rule 5 (global_dec -> struct_dec global_dec .)
    If              reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Switch          reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Sys_Call        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Absorb          reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Discharge       reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Link_End        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Sys             reduce using rule 5 (global_dec -> struct_dec global_dec .)
    $end            reduce using rule 5 (global_dec -> struct_dec global_dec .)


state 11

    (8) struct_dec -> Struct id . open_bracket struct_element1 struct_element2 close_bracket id_array1

    open_bracket    shift and go to state 40


state 12

    (9) struct_dec -> Struct open_bracket . struct_element1 struct_element2 close_bracket id_array1
    (11) struct_element1 -> . data_type id_array_dec
    (12) data_type -> . Integer
    (13) data_type -> . Decimal
    (14) data_type -> . String
    (15) data_type -> . Boolean
    (16) data_type -> .

    Integer         shift and go to state 16
    Decimal         shift and go to state 17
    String          shift and go to state 18
    Boolean         shift and go to state 19
    id              reduce using rule 16 (data_type -> .)
    comma           reduce using rule 16 (data_type -> .)
    close_bracket   reduce using rule 16 (data_type -> .)

    struct_element1                shift and go to state 41
    data_type                      shift and go to state 42

state 13

    (27) declare_statements -> Generate const_var_dec . declare_statements
    (27) declare_statements -> . Generate const_var_dec declare_statements
    (28) declare_statements -> .

  ! shift/reduce conflict for Generate resolved as shift
    Generate        shift and go to state 6
    Struct          reduce using rule 28 (declare_statements -> .)
    Link_Start      reduce using rule 28 (declare_statements -> .)
    id              reduce using rule 28 (declare_statements -> .)
    For             reduce using rule 28 (declare_statements -> .)
    While           reduce using rule 28 (declare_statements -> .)
    If              reduce using rule 28 (declare_statements -> .)
    Switch          reduce using rule 28 (declare_statements -> .)
    Sys_Call        reduce using rule 28 (declare_statements -> .)
    Absorb          reduce using rule 28 (declare_statements -> .)
    Discharge       reduce using rule 28 (declare_statements -> .)
    Link_End        reduce using rule 28 (declare_statements -> .)
    Sys             reduce using rule 28 (declare_statements -> .)
    $end            reduce using rule 28 (declare_statements -> .)
    Return          reduce using rule 28 (declare_statements -> .)
    close_bracket   reduce using rule 28 (declare_statements -> .)

  ! Generate        [ reduce using rule 28 (declare_statements -> .) ]

    declare_statements             shift and go to state 43

state 14

    (29) const_var_dec -> Fixed . data_type id_array_const
    (12) data_type -> . Integer
    (13) data_type -> . Decimal
    (14) data_type -> . String
    (15) data_type -> . Boolean
    (16) data_type -> .

    Integer         shift and go to state 16
    Decimal         shift and go to state 17
    String          shift and go to state 18
    Boolean         shift and go to state 19
    id              reduce using rule 16 (data_type -> .)
    Generate        reduce using rule 16 (data_type -> .)
    Struct          reduce using rule 16 (data_type -> .)
    Link_Start      reduce using rule 16 (data_type -> .)
    For             reduce using rule 16 (data_type -> .)
    While           reduce using rule 16 (data_type -> .)
    If              reduce using rule 16 (data_type -> .)
    Switch          reduce using rule 16 (data_type -> .)
    Sys_Call        reduce using rule 16 (data_type -> .)
    Absorb          reduce using rule 16 (data_type -> .)
    Discharge       reduce using rule 16 (data_type -> .)
    Link_End        reduce using rule 16 (data_type -> .)
    Sys             reduce using rule 16 (data_type -> .)
    $end            reduce using rule 16 (data_type -> .)
    Return          reduce using rule 16 (data_type -> .)
    close_bracket   reduce using rule 16 (data_type -> .)

    data_type                      shift and go to state 44

state 15

    (30) const_var_dec -> data_type . id_array_var
    (41) id_array_var -> . id id_array_var2

    id              shift and go to state 46

    id_array_var                   shift and go to state 45

state 16

    (12) data_type -> Integer .

    id              reduce using rule 12 (data_type -> Integer .)
    comma           reduce using rule 12 (data_type -> Integer .)
    close_bracket   reduce using rule 12 (data_type -> Integer .)
    Generate        reduce using rule 12 (data_type -> Integer .)
    Struct          reduce using rule 12 (data_type -> Integer .)
    Link_Start      reduce using rule 12 (data_type -> Integer .)
    For             reduce using rule 12 (data_type -> Integer .)
    While           reduce using rule 12 (data_type -> Integer .)
    If              reduce using rule 12 (data_type -> Integer .)
    Switch          reduce using rule 12 (data_type -> Integer .)
    Sys_Call        reduce using rule 12 (data_type -> Integer .)
    Absorb          reduce using rule 12 (data_type -> Integer .)
    Discharge       reduce using rule 12 (data_type -> Integer .)
    Link_End        reduce using rule 12 (data_type -> Integer .)
    Sys             reduce using rule 12 (data_type -> Integer .)
    $end            reduce using rule 12 (data_type -> Integer .)
    Return          reduce using rule 12 (data_type -> Integer .)


state 17

    (13) data_type -> Decimal .

    id              reduce using rule 13 (data_type -> Decimal .)
    comma           reduce using rule 13 (data_type -> Decimal .)
    close_bracket   reduce using rule 13 (data_type -> Decimal .)
    Generate        reduce using rule 13 (data_type -> Decimal .)
    Struct          reduce using rule 13 (data_type -> Decimal .)
    Link_Start      reduce using rule 13 (data_type -> Decimal .)
    For             reduce using rule 13 (data_type -> Decimal .)
    While           reduce using rule 13 (data_type -> Decimal .)
    If              reduce using rule 13 (data_type -> Decimal .)
    Switch          reduce using rule 13 (data_type -> Decimal .)
    Sys_Call        reduce using rule 13 (data_type -> Decimal .)
    Absorb          reduce using rule 13 (data_type -> Decimal .)
    Discharge       reduce using rule 13 (data_type -> Decimal .)
    Link_End        reduce using rule 13 (data_type -> Decimal .)
    Sys             reduce using rule 13 (data_type -> Decimal .)
    $end            reduce using rule 13 (data_type -> Decimal .)
    Return          reduce using rule 13 (data_type -> Decimal .)


state 18

    (14) data_type -> String .

    id              reduce using rule 14 (data_type -> String .)
    comma           reduce using rule 14 (data_type -> String .)
    close_bracket   reduce using rule 14 (data_type -> String .)
    Generate        reduce using rule 14 (data_type -> String .)
    Struct          reduce using rule 14 (data_type -> String .)
    Link_Start      reduce using rule 14 (data_type -> String .)
    For             reduce using rule 14 (data_type -> String .)
    While           reduce using rule 14 (data_type -> String .)
    If              reduce using rule 14 (data_type -> String .)
    Switch          reduce using rule 14 (data_type -> String .)
    Sys_Call        reduce using rule 14 (data_type -> String .)
    Absorb          reduce using rule 14 (data_type -> String .)
    Discharge       reduce using rule 14 (data_type -> String .)
    Link_End        reduce using rule 14 (data_type -> String .)
    Sys             reduce using rule 14 (data_type -> String .)
    $end            reduce using rule 14 (data_type -> String .)
    Return          reduce using rule 14 (data_type -> String .)


state 19

    (15) data_type -> Boolean .

    id              reduce using rule 15 (data_type -> Boolean .)
    comma           reduce using rule 15 (data_type -> Boolean .)
    close_bracket   reduce using rule 15 (data_type -> Boolean .)
    Generate        reduce using rule 15 (data_type -> Boolean .)
    Struct          reduce using rule 15 (data_type -> Boolean .)
    Link_Start      reduce using rule 15 (data_type -> Boolean .)
    For             reduce using rule 15 (data_type -> Boolean .)
    While           reduce using rule 15 (data_type -> Boolean .)
    If              reduce using rule 15 (data_type -> Boolean .)
    Switch          reduce using rule 15 (data_type -> Boolean .)
    Sys_Call        reduce using rule 15 (data_type -> Boolean .)
    Absorb          reduce using rule 15 (data_type -> Boolean .)
    Discharge       reduce using rule 15 (data_type -> Boolean .)
    Link_End        reduce using rule 15 (data_type -> Boolean .)
    Sys             reduce using rule 15 (data_type -> Boolean .)
    $end            reduce using rule 15 (data_type -> Boolean .)
    Return          reduce using rule 15 (data_type -> Boolean .)


state 20

    (1) program -> global_dec Link_Start declare_statements . statements Link_End functions
    (2) program -> global_dec Link_Start declare_statements . statements functions
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]

    statements                     shift and go to state 47
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 21

    (3) program -> global_dec declare_statements statements . Link_End functions
    (4) program -> global_dec declare_statements statements . functions
    (176) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (177) functions -> .

    Link_End        shift and go to state 48
    Sys             shift and go to state 50
    $end            reduce using rule 177 (functions -> .)

    functions                      shift and go to state 49

state 22

    (89) statements -> assignment_statements . statements
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    assignment_statements          shift and go to state 22
    statements                     shift and go to state 51
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 23

    (90) statements -> for_statements . statements
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    for_statements                 shift and go to state 23
    statements                     shift and go to state 52
    assignment_statements          shift and go to state 22
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 24

    (91) statements -> while_statements . statements
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    while_statements               shift and go to state 24
    statements                     shift and go to state 53
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 25

    (92) statements -> if_statement . statements
    (150) conditional_statements -> if_statement .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! For             [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! While           [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! If              [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Switch          [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Sys_Call        [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Absorb          [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Discharge       [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Link_End        [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Sys             [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! $end            [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Break           [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Continue        [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Avoid           [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! close_bracket   [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! Return          [ reduce using rule 150 (conditional_statements -> if_statement .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    if_statement                   shift and go to state 25
    statements                     shift and go to state 54
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 26

    (93) statements -> switch_statements . statements
    (151) conditional_statements -> switch_statements .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! For             [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! While           [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! If              [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Switch          [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Sys_Call        [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Absorb          [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Discharge       [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Link_End        [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Sys             [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! $end            [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Break           [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Continue        [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Avoid           [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! close_bracket   [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! Return          [ reduce using rule 151 (conditional_statements -> switch_statements .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    switch_statements              shift and go to state 26
    statements                     shift and go to state 55
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 27

    (94) statements -> conditional_statements . statements
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    conditional_statements         shift and go to state 27
    statements                     shift and go to state 56
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 28

    (95) statements -> io_statements . statements
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    io_statements                  shift and go to state 28
    statements                     shift and go to state 57
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 29

    (96) statements -> func_call . statements
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 97 (statements -> .)
    Sys             reduce using rule 97 (statements -> .)
    $end            reduce using rule 97 (statements -> .)
    Break           reduce using rule 97 (statements -> .)
    Continue        reduce using rule 97 (statements -> .)
    Avoid           reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    Return          reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 99 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (for_statements -> .) ]
  ! Sys             [ reduce using rule 119 (for_statements -> .) ]
  ! $end            [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 121 (while_statements -> .) ]
  ! Sys             [ reduce using rule 121 (while_statements -> .) ]
  ! $end            [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 153 (if_statement -> .) ]
  ! Sys             [ reduce using rule 153 (if_statement -> .) ]
  ! $end            [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]

    func_call                      shift and go to state 29
    statements                     shift and go to state 58
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 30

    (98) assignment_statements -> id . assignment_statements2
    (100) assignment_statements2 -> . array id_struct assignment_exp
    (101) assignment_statements2 -> . open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace
    (63) array -> . open_brace num_value close_brace
    (64) array -> . open_brace close_brace
    (65) array -> .

    open_brace      shift and go to state 61
    period          reduce using rule 65 (array -> .)
    equal           reduce using rule 65 (array -> .)
    plus_equal      reduce using rule 65 (array -> .)
    minus_equal     reduce using rule 65 (array -> .)
    times_equal     reduce using rule 65 (array -> .)
    divide_equal    reduce using rule 65 (array -> .)
    divide_divide_equal reduce using rule 65 (array -> .)
    modulo_equal    reduce using rule 65 (array -> .)
    times_times_equal reduce using rule 65 (array -> .)
    id              reduce using rule 65 (array -> .)
    For             reduce using rule 65 (array -> .)
    While           reduce using rule 65 (array -> .)
    If              reduce using rule 65 (array -> .)
    Switch          reduce using rule 65 (array -> .)
    Sys_Call        reduce using rule 65 (array -> .)
    Absorb          reduce using rule 65 (array -> .)
    Discharge       reduce using rule 65 (array -> .)
    Link_End        reduce using rule 65 (array -> .)
    Sys             reduce using rule 65 (array -> .)
    $end            reduce using rule 65 (array -> .)
    Break           reduce using rule 65 (array -> .)
    Continue        reduce using rule 65 (array -> .)
    Avoid           reduce using rule 65 (array -> .)
    close_bracket   reduce using rule 65 (array -> .)
    Return          reduce using rule 65 (array -> .)

    assignment_statements2         shift and go to state 59
    array                          shift and go to state 60

state 31

    (118) for_statements -> For . id In id open_brace close_brace colon open_bracket inside_statements close_bracket

    id              shift and go to state 62


state 32

    (120) while_statements -> While . open_par condition close_par colon open_bracket inside_statements close_bracket

    open_par        shift and go to state 63


state 33

    (152) if_statement -> If . open_par condition close_par colon open_bracket inside_statements close_bracket condition_else

    open_par        shift and go to state 64


state 34

    (159) switch_statements -> Switch . id colon open_bracket execute Default colon inside_statements close_bracket End_Switch

    id              shift and go to state 65


state 35

    (166) io_statements -> input_statements .

    id              reduce using rule 166 (io_statements -> input_statements .)
    For             reduce using rule 166 (io_statements -> input_statements .)
    While           reduce using rule 166 (io_statements -> input_statements .)
    If              reduce using rule 166 (io_statements -> input_statements .)
    Switch          reduce using rule 166 (io_statements -> input_statements .)
    Sys_Call        reduce using rule 166 (io_statements -> input_statements .)
    Absorb          reduce using rule 166 (io_statements -> input_statements .)
    Discharge       reduce using rule 166 (io_statements -> input_statements .)
    Link_End        reduce using rule 166 (io_statements -> input_statements .)
    Sys             reduce using rule 166 (io_statements -> input_statements .)
    $end            reduce using rule 166 (io_statements -> input_statements .)
    Break           reduce using rule 166 (io_statements -> input_statements .)
    Continue        reduce using rule 166 (io_statements -> input_statements .)
    Avoid           reduce using rule 166 (io_statements -> input_statements .)
    close_bracket   reduce using rule 166 (io_statements -> input_statements .)
    Return          reduce using rule 166 (io_statements -> input_statements .)


state 36

    (167) io_statements -> output_statements .

    id              reduce using rule 167 (io_statements -> output_statements .)
    For             reduce using rule 167 (io_statements -> output_statements .)
    While           reduce using rule 167 (io_statements -> output_statements .)
    If              reduce using rule 167 (io_statements -> output_statements .)
    Switch          reduce using rule 167 (io_statements -> output_statements .)
    Sys_Call        reduce using rule 167 (io_statements -> output_statements .)
    Absorb          reduce using rule 167 (io_statements -> output_statements .)
    Discharge       reduce using rule 167 (io_statements -> output_statements .)
    Link_End        reduce using rule 167 (io_statements -> output_statements .)
    Sys             reduce using rule 167 (io_statements -> output_statements .)
    $end            reduce using rule 167 (io_statements -> output_statements .)
    Break           reduce using rule 167 (io_statements -> output_statements .)
    Continue        reduce using rule 167 (io_statements -> output_statements .)
    Avoid           reduce using rule 167 (io_statements -> output_statements .)
    close_bracket   reduce using rule 167 (io_statements -> output_statements .)
    Return          reduce using rule 167 (io_statements -> output_statements .)


state 37

    (170) func_call -> Sys_Call . id open_par function_param close_par

    id              shift and go to state 66


state 38

    (168) input_statements -> Absorb . id_array id_struct
    (61) id_array -> . id array
    (62) id_array -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    For             reduce using rule 62 (id_array -> .)
    While           reduce using rule 62 (id_array -> .)
    If              reduce using rule 62 (id_array -> .)
    Switch          reduce using rule 62 (id_array -> .)
    Sys_Call        reduce using rule 62 (id_array -> .)
    Absorb          reduce using rule 62 (id_array -> .)
    Discharge       reduce using rule 62 (id_array -> .)
    Link_End        reduce using rule 62 (id_array -> .)
    Sys             reduce using rule 62 (id_array -> .)
    $end            reduce using rule 62 (id_array -> .)
    Break           reduce using rule 62 (id_array -> .)
    Continue        reduce using rule 62 (id_array -> .)
    Avoid           reduce using rule 62 (id_array -> .)
    close_bracket   reduce using rule 62 (id_array -> .)
    Return          reduce using rule 62 (id_array -> .)

  ! id              [ reduce using rule 62 (id_array -> .) ]

    id_array                       shift and go to state 67

state 39

    (169) output_statements -> Discharge . value
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    For             reduce using rule 55 (value -> .)
    While           reduce using rule 55 (value -> .)
    If              reduce using rule 55 (value -> .)
    Switch          reduce using rule 55 (value -> .)
    Absorb          reduce using rule 55 (value -> .)
    Discharge       reduce using rule 55 (value -> .)
    Link_End        reduce using rule 55 (value -> .)
    Sys             reduce using rule 55 (value -> .)
    $end            reduce using rule 55 (value -> .)
    Break           reduce using rule 55 (value -> .)
    Continue        reduce using rule 55 (value -> .)
    Avoid           reduce using rule 55 (value -> .)
    close_bracket   reduce using rule 55 (value -> .)
    Return          reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 55 (value -> .) ]
  ! Sys_Call        [ reduce using rule 55 (value -> .) ]
  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! For             [ reduce using rule 60 (num_value -> .) ]
  ! While           [ reduce using rule 60 (num_value -> .) ]
  ! If              [ reduce using rule 60 (num_value -> .) ]
  ! Switch          [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! Absorb          [ reduce using rule 60 (num_value -> .) ]
  ! Discharge       [ reduce using rule 60 (num_value -> .) ]
  ! Link_End        [ reduce using rule 60 (num_value -> .) ]
  ! Sys             [ reduce using rule 60 (num_value -> .) ]
  ! $end            [ reduce using rule 60 (num_value -> .) ]
  ! Break           [ reduce using rule 60 (num_value -> .) ]
  ! Continue        [ reduce using rule 60 (num_value -> .) ]
  ! Avoid           [ reduce using rule 60 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 60 (num_value -> .) ]
  ! Return          [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Break           [ reduce using rule 62 (id_array -> .) ]
  ! Continue        [ reduce using rule 62 (id_array -> .) ]
  ! Avoid           [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Break           [ reduce using rule 74 (literals -> .) ]
  ! Continue        [ reduce using rule 74 (literals -> .) ]
  ! Avoid           [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]

    value                          shift and go to state 69
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 40

    (8) struct_dec -> Struct id open_bracket . struct_element1 struct_element2 close_bracket id_array1
    (11) struct_element1 -> . data_type id_array_dec
    (12) data_type -> . Integer
    (13) data_type -> . Decimal
    (14) data_type -> . String
    (15) data_type -> . Boolean
    (16) data_type -> .

    Integer         shift and go to state 16
    Decimal         shift and go to state 17
    String          shift and go to state 18
    Boolean         shift and go to state 19
    id              reduce using rule 16 (data_type -> .)
    comma           reduce using rule 16 (data_type -> .)
    close_bracket   reduce using rule 16 (data_type -> .)

    struct_element1                shift and go to state 82
    data_type                      shift and go to state 42

state 41

    (9) struct_dec -> Struct open_bracket struct_element1 . struct_element2 close_bracket id_array1
    (25) struct_element2 -> . comma struct_element1 struct_element2
    (26) struct_element2 -> .

    comma           shift and go to state 84
    close_bracket   reduce using rule 26 (struct_element2 -> .)

    struct_element2                shift and go to state 83

state 42

    (11) struct_element1 -> data_type . id_array_dec
    (17) id_array_dec -> . id id_array_dec2
    (18) id_array_dec -> .

    id              shift and go to state 86
    comma           reduce using rule 18 (id_array_dec -> .)
    close_bracket   reduce using rule 18 (id_array_dec -> .)

    id_array_dec                   shift and go to state 85

state 43

    (27) declare_statements -> Generate const_var_dec declare_statements .

    Struct          reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Generate        reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Link_Start      reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    id              reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    For             reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    While           reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    If              reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Switch          reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Sys_Call        reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Absorb          reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Discharge       reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Link_End        reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Sys             reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    $end            reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    Return          reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)
    close_bracket   reduce using rule 27 (declare_statements -> Generate const_var_dec declare_statements .)


state 44

    (29) const_var_dec -> Fixed data_type . id_array_const
    (32) id_array_const -> . id id_array_const2
    (33) id_array_const -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 88
    Generate        reduce using rule 33 (id_array_const -> .)
    Struct          reduce using rule 33 (id_array_const -> .)
    Link_Start      reduce using rule 33 (id_array_const -> .)
    For             reduce using rule 33 (id_array_const -> .)
    While           reduce using rule 33 (id_array_const -> .)
    If              reduce using rule 33 (id_array_const -> .)
    Switch          reduce using rule 33 (id_array_const -> .)
    Sys_Call        reduce using rule 33 (id_array_const -> .)
    Absorb          reduce using rule 33 (id_array_const -> .)
    Discharge       reduce using rule 33 (id_array_const -> .)
    Link_End        reduce using rule 33 (id_array_const -> .)
    Sys             reduce using rule 33 (id_array_const -> .)
    $end            reduce using rule 33 (id_array_const -> .)
    Return          reduce using rule 33 (id_array_const -> .)
    close_bracket   reduce using rule 33 (id_array_const -> .)

  ! id              [ reduce using rule 33 (id_array_const -> .) ]

    id_array_const                 shift and go to state 87

state 45

    (30) const_var_dec -> data_type id_array_var .

    Generate        reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Struct          reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Link_Start      reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    id              reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    For             reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    While           reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    If              reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Switch          reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Sys_Call        reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Absorb          reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Discharge       reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Link_End        reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Sys             reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    $end            reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    Return          reduce using rule 30 (const_var_dec -> data_type id_array_var .)
    close_bracket   reduce using rule 30 (const_var_dec -> data_type id_array_var .)


state 46

    (41) id_array_var -> id . id_array_var2
    (42) id_array_var2 -> . var_init id_var1
    (43) id_array_var2 -> . open_brace lit_intposi close_brace array_init array_var1
    (44) var_init -> . equal value id_var1
    (45) var_init -> .

    open_brace      shift and go to state 91
    equal           shift and go to state 92
    comma           reduce using rule 45 (var_init -> .)
    Generate        reduce using rule 45 (var_init -> .)
    Struct          reduce using rule 45 (var_init -> .)
    Link_Start      reduce using rule 45 (var_init -> .)
    id              reduce using rule 45 (var_init -> .)
    For             reduce using rule 45 (var_init -> .)
    While           reduce using rule 45 (var_init -> .)
    If              reduce using rule 45 (var_init -> .)
    Switch          reduce using rule 45 (var_init -> .)
    Sys_Call        reduce using rule 45 (var_init -> .)
    Absorb          reduce using rule 45 (var_init -> .)
    Discharge       reduce using rule 45 (var_init -> .)
    Link_End        reduce using rule 45 (var_init -> .)
    Sys             reduce using rule 45 (var_init -> .)
    $end            reduce using rule 45 (var_init -> .)
    Return          reduce using rule 45 (var_init -> .)
    close_bracket   reduce using rule 45 (var_init -> .)

    id_array_var2                  shift and go to state 89
    var_init                       shift and go to state 90

state 47

    (1) program -> global_dec Link_Start declare_statements statements . Link_End functions
    (2) program -> global_dec Link_Start declare_statements statements . functions
    (176) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (177) functions -> .

    Link_End        shift and go to state 93
    Sys             shift and go to state 50
    $end            reduce using rule 177 (functions -> .)

    functions                      shift and go to state 94

state 48

    (3) program -> global_dec declare_statements statements Link_End . functions
    (176) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (177) functions -> .

    Sys             shift and go to state 50
    $end            reduce using rule 177 (functions -> .)

    functions                      shift and go to state 95

state 49

    (4) program -> global_dec declare_statements statements functions .

    $end            reduce using rule 4 (program -> global_dec declare_statements statements functions .)


state 50

    (176) functions -> Sys . id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions

    id              shift and go to state 96


state 51

    (89) statements -> assignment_statements statements .

    Link_End        reduce using rule 89 (statements -> assignment_statements statements .)
    Sys             reduce using rule 89 (statements -> assignment_statements statements .)
    $end            reduce using rule 89 (statements -> assignment_statements statements .)
    Break           reduce using rule 89 (statements -> assignment_statements statements .)
    Continue        reduce using rule 89 (statements -> assignment_statements statements .)
    Avoid           reduce using rule 89 (statements -> assignment_statements statements .)
    close_bracket   reduce using rule 89 (statements -> assignment_statements statements .)
    Return          reduce using rule 89 (statements -> assignment_statements statements .)


state 52

    (90) statements -> for_statements statements .

    Link_End        reduce using rule 90 (statements -> for_statements statements .)
    Sys             reduce using rule 90 (statements -> for_statements statements .)
    $end            reduce using rule 90 (statements -> for_statements statements .)
    Break           reduce using rule 90 (statements -> for_statements statements .)
    Continue        reduce using rule 90 (statements -> for_statements statements .)
    Avoid           reduce using rule 90 (statements -> for_statements statements .)
    close_bracket   reduce using rule 90 (statements -> for_statements statements .)
    Return          reduce using rule 90 (statements -> for_statements statements .)


state 53

    (91) statements -> while_statements statements .

    Link_End        reduce using rule 91 (statements -> while_statements statements .)
    Sys             reduce using rule 91 (statements -> while_statements statements .)
    $end            reduce using rule 91 (statements -> while_statements statements .)
    Break           reduce using rule 91 (statements -> while_statements statements .)
    Continue        reduce using rule 91 (statements -> while_statements statements .)
    Avoid           reduce using rule 91 (statements -> while_statements statements .)
    close_bracket   reduce using rule 91 (statements -> while_statements statements .)
    Return          reduce using rule 91 (statements -> while_statements statements .)


state 54

    (92) statements -> if_statement statements .

    Link_End        reduce using rule 92 (statements -> if_statement statements .)
    Sys             reduce using rule 92 (statements -> if_statement statements .)
    $end            reduce using rule 92 (statements -> if_statement statements .)
    Break           reduce using rule 92 (statements -> if_statement statements .)
    Continue        reduce using rule 92 (statements -> if_statement statements .)
    Avoid           reduce using rule 92 (statements -> if_statement statements .)
    close_bracket   reduce using rule 92 (statements -> if_statement statements .)
    Return          reduce using rule 92 (statements -> if_statement statements .)


state 55

    (93) statements -> switch_statements statements .

    Link_End        reduce using rule 93 (statements -> switch_statements statements .)
    Sys             reduce using rule 93 (statements -> switch_statements statements .)
    $end            reduce using rule 93 (statements -> switch_statements statements .)
    Break           reduce using rule 93 (statements -> switch_statements statements .)
    Continue        reduce using rule 93 (statements -> switch_statements statements .)
    Avoid           reduce using rule 93 (statements -> switch_statements statements .)
    close_bracket   reduce using rule 93 (statements -> switch_statements statements .)
    Return          reduce using rule 93 (statements -> switch_statements statements .)


state 56

    (94) statements -> conditional_statements statements .

    Link_End        reduce using rule 94 (statements -> conditional_statements statements .)
    Sys             reduce using rule 94 (statements -> conditional_statements statements .)
    $end            reduce using rule 94 (statements -> conditional_statements statements .)
    Break           reduce using rule 94 (statements -> conditional_statements statements .)
    Continue        reduce using rule 94 (statements -> conditional_statements statements .)
    Avoid           reduce using rule 94 (statements -> conditional_statements statements .)
    close_bracket   reduce using rule 94 (statements -> conditional_statements statements .)
    Return          reduce using rule 94 (statements -> conditional_statements statements .)


state 57

    (95) statements -> io_statements statements .

    Link_End        reduce using rule 95 (statements -> io_statements statements .)
    Sys             reduce using rule 95 (statements -> io_statements statements .)
    $end            reduce using rule 95 (statements -> io_statements statements .)
    Break           reduce using rule 95 (statements -> io_statements statements .)
    Continue        reduce using rule 95 (statements -> io_statements statements .)
    Avoid           reduce using rule 95 (statements -> io_statements statements .)
    close_bracket   reduce using rule 95 (statements -> io_statements statements .)
    Return          reduce using rule 95 (statements -> io_statements statements .)


state 58

    (96) statements -> func_call statements .

    Link_End        reduce using rule 96 (statements -> func_call statements .)
    Sys             reduce using rule 96 (statements -> func_call statements .)
    $end            reduce using rule 96 (statements -> func_call statements .)
    Break           reduce using rule 96 (statements -> func_call statements .)
    Continue        reduce using rule 96 (statements -> func_call statements .)
    Avoid           reduce using rule 96 (statements -> func_call statements .)
    close_bracket   reduce using rule 96 (statements -> func_call statements .)
    Return          reduce using rule 96 (statements -> func_call statements .)


state 59

    (98) assignment_statements -> id assignment_statements2 .

    id              reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    For             reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    While           reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    If              reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Switch          reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Sys_Call        reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Absorb          reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Discharge       reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Link_End        reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Sys             reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    $end            reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Break           reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Continue        reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Avoid           reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    close_bracket   reduce using rule 98 (assignment_statements -> id assignment_statements2 .)
    Return          reduce using rule 98 (assignment_statements -> id assignment_statements2 .)


state 60

    (100) assignment_statements2 -> array . id_struct assignment_exp
    (84) id_struct -> . period id_array
    (85) id_struct -> .

    period          shift and go to state 98
    equal           reduce using rule 85 (id_struct -> .)
    plus_equal      reduce using rule 85 (id_struct -> .)
    minus_equal     reduce using rule 85 (id_struct -> .)
    times_equal     reduce using rule 85 (id_struct -> .)
    divide_equal    reduce using rule 85 (id_struct -> .)
    divide_divide_equal reduce using rule 85 (id_struct -> .)
    modulo_equal    reduce using rule 85 (id_struct -> .)
    times_times_equal reduce using rule 85 (id_struct -> .)
    id              reduce using rule 85 (id_struct -> .)
    For             reduce using rule 85 (id_struct -> .)
    While           reduce using rule 85 (id_struct -> .)
    If              reduce using rule 85 (id_struct -> .)
    Switch          reduce using rule 85 (id_struct -> .)
    Sys_Call        reduce using rule 85 (id_struct -> .)
    Absorb          reduce using rule 85 (id_struct -> .)
    Discharge       reduce using rule 85 (id_struct -> .)
    Link_End        reduce using rule 85 (id_struct -> .)
    Sys             reduce using rule 85 (id_struct -> .)
    $end            reduce using rule 85 (id_struct -> .)
    Break           reduce using rule 85 (id_struct -> .)
    Continue        reduce using rule 85 (id_struct -> .)
    Avoid           reduce using rule 85 (id_struct -> .)
    close_bracket   reduce using rule 85 (id_struct -> .)
    Return          reduce using rule 85 (id_struct -> .)

    id_struct                      shift and go to state 97

state 61

    (101) assignment_statements2 -> open_brace . lit_intposi close_brace more_array equal open_brace value1 close_brace
    (63) array -> open_brace . num_value close_brace
    (64) array -> open_brace . close_brace
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
    lit_intposi     shift and go to state 99
    close_brace     shift and go to state 100
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]

    num_value                      shift and go to state 101
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 62

    (118) for_statements -> For id . In id open_brace close_brace colon open_bracket inside_statements close_bracket

    In              shift and go to state 102


state 63

    (120) while_statements -> While open_par . condition close_par colon open_bracket inside_statements close_bracket
    (129) condition -> . relational_expression
    (130) condition -> . logical_expression
    (131) condition -> . Not open_par condition_not close_par
    (132) condition -> . lit_bool
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    Not             shift and go to state 107
    lit_bool        shift and go to state 108
    open_par        shift and go to state 103
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    condition                      shift and go to state 104
    relational_expression          shift and go to state 105
    logical_expression             shift and go to state 106
    value                          shift and go to state 109
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 64

    (152) if_statement -> If open_par . condition close_par colon open_bracket inside_statements close_bracket condition_else
    (129) condition -> . relational_expression
    (130) condition -> . logical_expression
    (131) condition -> . Not open_par condition_not close_par
    (132) condition -> . lit_bool
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    Not             shift and go to state 107
    lit_bool        shift and go to state 108
    open_par        shift and go to state 103
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    condition                      shift and go to state 110
    relational_expression          shift and go to state 105
    logical_expression             shift and go to state 106
    value                          shift and go to state 109
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 65

    (159) switch_statements -> Switch id . colon open_bracket execute Default colon inside_statements close_bracket End_Switch

    colon           shift and go to state 111


state 66

    (170) func_call -> Sys_Call id . open_par function_param close_par

    open_par        shift and go to state 112


state 67

    (168) input_statements -> Absorb id_array . id_struct
    (84) id_struct -> . period id_array
    (85) id_struct -> .

    period          shift and go to state 98
    id              reduce using rule 85 (id_struct -> .)
    For             reduce using rule 85 (id_struct -> .)
    While           reduce using rule 85 (id_struct -> .)
    If              reduce using rule 85 (id_struct -> .)
    Switch          reduce using rule 85 (id_struct -> .)
    Sys_Call        reduce using rule 85 (id_struct -> .)
    Absorb          reduce using rule 85 (id_struct -> .)
    Discharge       reduce using rule 85 (id_struct -> .)
    Link_End        reduce using rule 85 (id_struct -> .)
    Sys             reduce using rule 85 (id_struct -> .)
    $end            reduce using rule 85 (id_struct -> .)
    Break           reduce using rule 85 (id_struct -> .)
    Continue        reduce using rule 85 (id_struct -> .)
    Avoid           reduce using rule 85 (id_struct -> .)
    close_bracket   reduce using rule 85 (id_struct -> .)
    Return          reduce using rule 85 (id_struct -> .)

    id_struct                      shift and go to state 113

state 68

    (61) id_array -> id . array
    (63) array -> . open_brace num_value close_brace
    (64) array -> . open_brace close_brace
    (65) array -> .

    open_brace      shift and go to state 115
    period          reduce using rule 65 (array -> .)
    id              reduce using rule 65 (array -> .)
    For             reduce using rule 65 (array -> .)
    While           reduce using rule 65 (array -> .)
    If              reduce using rule 65 (array -> .)
    Switch          reduce using rule 65 (array -> .)
    Sys_Call        reduce using rule 65 (array -> .)
    Absorb          reduce using rule 65 (array -> .)
    Discharge       reduce using rule 65 (array -> .)
    Link_End        reduce using rule 65 (array -> .)
    Sys             reduce using rule 65 (array -> .)
    $end            reduce using rule 65 (array -> .)
    Break           reduce using rule 65 (array -> .)
    Continue        reduce using rule 65 (array -> .)
    Avoid           reduce using rule 65 (array -> .)
    close_bracket   reduce using rule 65 (array -> .)
    Return          reduce using rule 65 (array -> .)
    plus            reduce using rule 65 (array -> .)
    minus           reduce using rule 65 (array -> .)
    times           reduce using rule 65 (array -> .)
    divide          reduce using rule 65 (array -> .)
    divide_divide   reduce using rule 65 (array -> .)
    modulo          reduce using rule 65 (array -> .)
    times_times     reduce using rule 65 (array -> .)
    close_brace     reduce using rule 65 (array -> .)
    greater_than    reduce using rule 65 (array -> .)
    less_than       reduce using rule 65 (array -> .)
    equal_equal     reduce using rule 65 (array -> .)
    not_equal       reduce using rule 65 (array -> .)
    great_than_equal reduce using rule 65 (array -> .)
    less_than_equal reduce using rule 65 (array -> .)
    comma           reduce using rule 65 (array -> .)
    Generate        reduce using rule 65 (array -> .)
    Struct          reduce using rule 65 (array -> .)
    Link_Start      reduce using rule 65 (array -> .)
    equal           reduce using rule 65 (array -> .)
    plus_equal      reduce using rule 65 (array -> .)
    minus_equal     reduce using rule 65 (array -> .)
    times_equal     reduce using rule 65 (array -> .)
    divide_equal    reduce using rule 65 (array -> .)
    divide_divide_equal reduce using rule 65 (array -> .)
    modulo_equal    reduce using rule 65 (array -> .)
    times_times_equal reduce using rule 65 (array -> .)
    close_par       reduce using rule 65 (array -> .)

    array                          shift and go to state 114

state 69

    (169) output_statements -> Discharge value .

    id              reduce using rule 169 (output_statements -> Discharge value .)
    For             reduce using rule 169 (output_statements -> Discharge value .)
    While           reduce using rule 169 (output_statements -> Discharge value .)
    If              reduce using rule 169 (output_statements -> Discharge value .)
    Switch          reduce using rule 169 (output_statements -> Discharge value .)
    Sys_Call        reduce using rule 169 (output_statements -> Discharge value .)
    Absorb          reduce using rule 169 (output_statements -> Discharge value .)
    Discharge       reduce using rule 169 (output_statements -> Discharge value .)
    Link_End        reduce using rule 169 (output_statements -> Discharge value .)
    Sys             reduce using rule 169 (output_statements -> Discharge value .)
    $end            reduce using rule 169 (output_statements -> Discharge value .)
    Break           reduce using rule 169 (output_statements -> Discharge value .)
    Continue        reduce using rule 169 (output_statements -> Discharge value .)
    Avoid           reduce using rule 169 (output_statements -> Discharge value .)
    close_bracket   reduce using rule 169 (output_statements -> Discharge value .)
    Return          reduce using rule 169 (output_statements -> Discharge value .)


state 70

    (52) value -> num_value .
    (76) arithmetic_expression -> num_value . arithmetic_operators num_value
    (77) arithmetic_operators -> . plus
    (78) arithmetic_operators -> . minus
    (79) arithmetic_operators -> . times
    (80) arithmetic_operators -> . divide
    (81) arithmetic_operators -> . divide_divide
    (82) arithmetic_operators -> . modulo
    (83) arithmetic_operators -> . times_times

    id              reduce using rule 52 (value -> num_value .)
    For             reduce using rule 52 (value -> num_value .)
    While           reduce using rule 52 (value -> num_value .)
    If              reduce using rule 52 (value -> num_value .)
    Switch          reduce using rule 52 (value -> num_value .)
    Sys_Call        reduce using rule 52 (value -> num_value .)
    Absorb          reduce using rule 52 (value -> num_value .)
    Discharge       reduce using rule 52 (value -> num_value .)
    Link_End        reduce using rule 52 (value -> num_value .)
    Sys             reduce using rule 52 (value -> num_value .)
    $end            reduce using rule 52 (value -> num_value .)
    Break           reduce using rule 52 (value -> num_value .)
    Continue        reduce using rule 52 (value -> num_value .)
    Avoid           reduce using rule 52 (value -> num_value .)
    close_bracket   reduce using rule 52 (value -> num_value .)
    Return          reduce using rule 52 (value -> num_value .)
    greater_than    reduce using rule 52 (value -> num_value .)
    less_than       reduce using rule 52 (value -> num_value .)
    equal_equal     reduce using rule 52 (value -> num_value .)
    not_equal       reduce using rule 52 (value -> num_value .)
    great_than_equal reduce using rule 52 (value -> num_value .)
    less_than_equal reduce using rule 52 (value -> num_value .)
    comma           reduce using rule 52 (value -> num_value .)
    Generate        reduce using rule 52 (value -> num_value .)
    Struct          reduce using rule 52 (value -> num_value .)
    Link_Start      reduce using rule 52 (value -> num_value .)
    close_par       reduce using rule 52 (value -> num_value .)
    close_brace     reduce using rule 52 (value -> num_value .)
    plus            shift and go to state 117
    minus           shift and go to state 118
    times           shift and go to state 119
    divide          shift and go to state 120
    divide_divide   shift and go to state 121
    modulo          shift and go to state 122
    times_times     shift and go to state 123

    arithmetic_operators           shift and go to state 116

state 71

    (53) value -> lit_str .

    id              reduce using rule 53 (value -> lit_str .)
    For             reduce using rule 53 (value -> lit_str .)
    While           reduce using rule 53 (value -> lit_str .)
    If              reduce using rule 53 (value -> lit_str .)
    Switch          reduce using rule 53 (value -> lit_str .)
    Sys_Call        reduce using rule 53 (value -> lit_str .)
    Absorb          reduce using rule 53 (value -> lit_str .)
    Discharge       reduce using rule 53 (value -> lit_str .)
    Link_End        reduce using rule 53 (value -> lit_str .)
    Sys             reduce using rule 53 (value -> lit_str .)
    $end            reduce using rule 53 (value -> lit_str .)
    Break           reduce using rule 53 (value -> lit_str .)
    Continue        reduce using rule 53 (value -> lit_str .)
    Avoid           reduce using rule 53 (value -> lit_str .)
    close_bracket   reduce using rule 53 (value -> lit_str .)
    Return          reduce using rule 53 (value -> lit_str .)
    greater_than    reduce using rule 53 (value -> lit_str .)
    less_than       reduce using rule 53 (value -> lit_str .)
    equal_equal     reduce using rule 53 (value -> lit_str .)
    not_equal       reduce using rule 53 (value -> lit_str .)
    great_than_equal reduce using rule 53 (value -> lit_str .)
    less_than_equal reduce using rule 53 (value -> lit_str .)
    comma           reduce using rule 53 (value -> lit_str .)
    Generate        reduce using rule 53 (value -> lit_str .)
    Struct          reduce using rule 53 (value -> lit_str .)
    Link_Start      reduce using rule 53 (value -> lit_str .)
    close_par       reduce using rule 53 (value -> lit_str .)
    close_brace     reduce using rule 53 (value -> lit_str .)


state 72

    (54) value -> lit_bool .

    id              reduce using rule 54 (value -> lit_bool .)
    For             reduce using rule 54 (value -> lit_bool .)
    While           reduce using rule 54 (value -> lit_bool .)
    If              reduce using rule 54 (value -> lit_bool .)
    Switch          reduce using rule 54 (value -> lit_bool .)
    Sys_Call        reduce using rule 54 (value -> lit_bool .)
    Absorb          reduce using rule 54 (value -> lit_bool .)
    Discharge       reduce using rule 54 (value -> lit_bool .)
    Link_End        reduce using rule 54 (value -> lit_bool .)
    Sys             reduce using rule 54 (value -> lit_bool .)
    $end            reduce using rule 54 (value -> lit_bool .)
    Break           reduce using rule 54 (value -> lit_bool .)
    Continue        reduce using rule 54 (value -> lit_bool .)
    Avoid           reduce using rule 54 (value -> lit_bool .)
    close_bracket   reduce using rule 54 (value -> lit_bool .)
    Return          reduce using rule 54 (value -> lit_bool .)
    comma           reduce using rule 54 (value -> lit_bool .)
    Generate        reduce using rule 54 (value -> lit_bool .)
    Struct          reduce using rule 54 (value -> lit_bool .)
    Link_Start      reduce using rule 54 (value -> lit_bool .)
    close_par       reduce using rule 54 (value -> lit_bool .)
    close_brace     reduce using rule 54 (value -> lit_bool .)


state 73

    (56) num_value -> id_array . id_struct
    (84) id_struct -> . period id_array
    (85) id_struct -> .

    period          shift and go to state 98
    plus            reduce using rule 85 (id_struct -> .)
    minus           reduce using rule 85 (id_struct -> .)
    times           reduce using rule 85 (id_struct -> .)
    divide          reduce using rule 85 (id_struct -> .)
    divide_divide   reduce using rule 85 (id_struct -> .)
    modulo          reduce using rule 85 (id_struct -> .)
    times_times     reduce using rule 85 (id_struct -> .)
    id              reduce using rule 85 (id_struct -> .)
    For             reduce using rule 85 (id_struct -> .)
    While           reduce using rule 85 (id_struct -> .)
    If              reduce using rule 85 (id_struct -> .)
    Switch          reduce using rule 85 (id_struct -> .)
    Sys_Call        reduce using rule 85 (id_struct -> .)
    Absorb          reduce using rule 85 (id_struct -> .)
    Discharge       reduce using rule 85 (id_struct -> .)
    Link_End        reduce using rule 85 (id_struct -> .)
    Sys             reduce using rule 85 (id_struct -> .)
    $end            reduce using rule 85 (id_struct -> .)
    Break           reduce using rule 85 (id_struct -> .)
    Continue        reduce using rule 85 (id_struct -> .)
    Avoid           reduce using rule 85 (id_struct -> .)
    close_bracket   reduce using rule 85 (id_struct -> .)
    Return          reduce using rule 85 (id_struct -> .)
    close_brace     reduce using rule 85 (id_struct -> .)
    greater_than    reduce using rule 85 (id_struct -> .)
    less_than       reduce using rule 85 (id_struct -> .)
    equal_equal     reduce using rule 85 (id_struct -> .)
    not_equal       reduce using rule 85 (id_struct -> .)
    great_than_equal reduce using rule 85 (id_struct -> .)
    less_than_equal reduce using rule 85 (id_struct -> .)
    comma           reduce using rule 85 (id_struct -> .)
    Generate        reduce using rule 85 (id_struct -> .)
    Struct          reduce using rule 85 (id_struct -> .)
    Link_Start      reduce using rule 85 (id_struct -> .)
    close_par       reduce using rule 85 (id_struct -> .)

    id_struct                      shift and go to state 124

state 74

    (57) num_value -> literals .

    plus            reduce using rule 57 (num_value -> literals .)
    minus           reduce using rule 57 (num_value -> literals .)
    times           reduce using rule 57 (num_value -> literals .)
    divide          reduce using rule 57 (num_value -> literals .)
    divide_divide   reduce using rule 57 (num_value -> literals .)
    modulo          reduce using rule 57 (num_value -> literals .)
    times_times     reduce using rule 57 (num_value -> literals .)
    id              reduce using rule 57 (num_value -> literals .)
    For             reduce using rule 57 (num_value -> literals .)
    While           reduce using rule 57 (num_value -> literals .)
    If              reduce using rule 57 (num_value -> literals .)
    Switch          reduce using rule 57 (num_value -> literals .)
    Sys_Call        reduce using rule 57 (num_value -> literals .)
    Absorb          reduce using rule 57 (num_value -> literals .)
    Discharge       reduce using rule 57 (num_value -> literals .)
    Link_End        reduce using rule 57 (num_value -> literals .)
    Sys             reduce using rule 57 (num_value -> literals .)
    $end            reduce using rule 57 (num_value -> literals .)
    Break           reduce using rule 57 (num_value -> literals .)
    Continue        reduce using rule 57 (num_value -> literals .)
    Avoid           reduce using rule 57 (num_value -> literals .)
    close_bracket   reduce using rule 57 (num_value -> literals .)
    Return          reduce using rule 57 (num_value -> literals .)
    close_brace     reduce using rule 57 (num_value -> literals .)
    greater_than    reduce using rule 57 (num_value -> literals .)
    less_than       reduce using rule 57 (num_value -> literals .)
    equal_equal     reduce using rule 57 (num_value -> literals .)
    not_equal       reduce using rule 57 (num_value -> literals .)
    great_than_equal reduce using rule 57 (num_value -> literals .)
    less_than_equal reduce using rule 57 (num_value -> literals .)
    comma           reduce using rule 57 (num_value -> literals .)
    Generate        reduce using rule 57 (num_value -> literals .)
    Struct          reduce using rule 57 (num_value -> literals .)
    Link_Start      reduce using rule 57 (num_value -> literals .)
    close_par       reduce using rule 57 (num_value -> literals .)


state 75

    (58) num_value -> arithmetic_expression .

    plus            reduce using rule 58 (num_value -> arithmetic_expression .)
    minus           reduce using rule 58 (num_value -> arithmetic_expression .)
    times           reduce using rule 58 (num_value -> arithmetic_expression .)
    divide          reduce using rule 58 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 58 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 58 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 58 (num_value -> arithmetic_expression .)
    id              reduce using rule 58 (num_value -> arithmetic_expression .)
    For             reduce using rule 58 (num_value -> arithmetic_expression .)
    While           reduce using rule 58 (num_value -> arithmetic_expression .)
    If              reduce using rule 58 (num_value -> arithmetic_expression .)
    Switch          reduce using rule 58 (num_value -> arithmetic_expression .)
    Sys_Call        reduce using rule 58 (num_value -> arithmetic_expression .)
    Absorb          reduce using rule 58 (num_value -> arithmetic_expression .)
    Discharge       reduce using rule 58 (num_value -> arithmetic_expression .)
    Link_End        reduce using rule 58 (num_value -> arithmetic_expression .)
    Sys             reduce using rule 58 (num_value -> arithmetic_expression .)
    $end            reduce using rule 58 (num_value -> arithmetic_expression .)
    Break           reduce using rule 58 (num_value -> arithmetic_expression .)
    Continue        reduce using rule 58 (num_value -> arithmetic_expression .)
    Avoid           reduce using rule 58 (num_value -> arithmetic_expression .)
    close_bracket   reduce using rule 58 (num_value -> arithmetic_expression .)
    Return          reduce using rule 58 (num_value -> arithmetic_expression .)
    close_brace     reduce using rule 58 (num_value -> arithmetic_expression .)
    greater_than    reduce using rule 58 (num_value -> arithmetic_expression .)
    less_than       reduce using rule 58 (num_value -> arithmetic_expression .)
    equal_equal     reduce using rule 58 (num_value -> arithmetic_expression .)
    not_equal       reduce using rule 58 (num_value -> arithmetic_expression .)
    great_than_equal reduce using rule 58 (num_value -> arithmetic_expression .)
    less_than_equal reduce using rule 58 (num_value -> arithmetic_expression .)
    comma           reduce using rule 58 (num_value -> arithmetic_expression .)
    Generate        reduce using rule 58 (num_value -> arithmetic_expression .)
    Struct          reduce using rule 58 (num_value -> arithmetic_expression .)
    Link_Start      reduce using rule 58 (num_value -> arithmetic_expression .)
    close_par       reduce using rule 58 (num_value -> arithmetic_expression .)


state 76

    (59) num_value -> func_call .

    plus            reduce using rule 59 (num_value -> func_call .)
    minus           reduce using rule 59 (num_value -> func_call .)
    times           reduce using rule 59 (num_value -> func_call .)
    divide          reduce using rule 59 (num_value -> func_call .)
    divide_divide   reduce using rule 59 (num_value -> func_call .)
    modulo          reduce using rule 59 (num_value -> func_call .)
    times_times     reduce using rule 59 (num_value -> func_call .)
    id              reduce using rule 59 (num_value -> func_call .)
    For             reduce using rule 59 (num_value -> func_call .)
    While           reduce using rule 59 (num_value -> func_call .)
    If              reduce using rule 59 (num_value -> func_call .)
    Switch          reduce using rule 59 (num_value -> func_call .)
    Sys_Call        reduce using rule 59 (num_value -> func_call .)
    Absorb          reduce using rule 59 (num_value -> func_call .)
    Discharge       reduce using rule 59 (num_value -> func_call .)
    Link_End        reduce using rule 59 (num_value -> func_call .)
    Sys             reduce using rule 59 (num_value -> func_call .)
    $end            reduce using rule 59 (num_value -> func_call .)
    Break           reduce using rule 59 (num_value -> func_call .)
    Continue        reduce using rule 59 (num_value -> func_call .)
    Avoid           reduce using rule 59 (num_value -> func_call .)
    close_bracket   reduce using rule 59 (num_value -> func_call .)
    Return          reduce using rule 59 (num_value -> func_call .)
    close_brace     reduce using rule 59 (num_value -> func_call .)
    greater_than    reduce using rule 59 (num_value -> func_call .)
    less_than       reduce using rule 59 (num_value -> func_call .)
    equal_equal     reduce using rule 59 (num_value -> func_call .)
    not_equal       reduce using rule 59 (num_value -> func_call .)
    great_than_equal reduce using rule 59 (num_value -> func_call .)
    less_than_equal reduce using rule 59 (num_value -> func_call .)
    comma           reduce using rule 59 (num_value -> func_call .)
    Generate        reduce using rule 59 (num_value -> func_call .)
    Struct          reduce using rule 59 (num_value -> func_call .)
    Link_Start      reduce using rule 59 (num_value -> func_call .)
    close_par       reduce using rule 59 (num_value -> func_call .)


state 77

    (70) literals -> lit_intposi .

    plus            reduce using rule 70 (literals -> lit_intposi .)
    minus           reduce using rule 70 (literals -> lit_intposi .)
    times           reduce using rule 70 (literals -> lit_intposi .)
    divide          reduce using rule 70 (literals -> lit_intposi .)
    divide_divide   reduce using rule 70 (literals -> lit_intposi .)
    modulo          reduce using rule 70 (literals -> lit_intposi .)
    times_times     reduce using rule 70 (literals -> lit_intposi .)
    id              reduce using rule 70 (literals -> lit_intposi .)
    For             reduce using rule 70 (literals -> lit_intposi .)
    While           reduce using rule 70 (literals -> lit_intposi .)
    If              reduce using rule 70 (literals -> lit_intposi .)
    Switch          reduce using rule 70 (literals -> lit_intposi .)
    Sys_Call        reduce using rule 70 (literals -> lit_intposi .)
    Absorb          reduce using rule 70 (literals -> lit_intposi .)
    Discharge       reduce using rule 70 (literals -> lit_intposi .)
    Link_End        reduce using rule 70 (literals -> lit_intposi .)
    Sys             reduce using rule 70 (literals -> lit_intposi .)
    $end            reduce using rule 70 (literals -> lit_intposi .)
    Break           reduce using rule 70 (literals -> lit_intposi .)
    Continue        reduce using rule 70 (literals -> lit_intposi .)
    Avoid           reduce using rule 70 (literals -> lit_intposi .)
    close_bracket   reduce using rule 70 (literals -> lit_intposi .)
    Return          reduce using rule 70 (literals -> lit_intposi .)
    greater_than    reduce using rule 70 (literals -> lit_intposi .)
    less_than       reduce using rule 70 (literals -> lit_intposi .)
    equal_equal     reduce using rule 70 (literals -> lit_intposi .)
    not_equal       reduce using rule 70 (literals -> lit_intposi .)
    great_than_equal reduce using rule 70 (literals -> lit_intposi .)
    less_than_equal reduce using rule 70 (literals -> lit_intposi .)
    comma           reduce using rule 70 (literals -> lit_intposi .)
    Generate        reduce using rule 70 (literals -> lit_intposi .)
    Struct          reduce using rule 70 (literals -> lit_intposi .)
    Link_Start      reduce using rule 70 (literals -> lit_intposi .)
    close_par       reduce using rule 70 (literals -> lit_intposi .)
    close_brace     reduce using rule 70 (literals -> lit_intposi .)


state 78

    (71) literals -> lit_intnega .

    plus            reduce using rule 71 (literals -> lit_intnega .)
    minus           reduce using rule 71 (literals -> lit_intnega .)
    times           reduce using rule 71 (literals -> lit_intnega .)
    divide          reduce using rule 71 (literals -> lit_intnega .)
    divide_divide   reduce using rule 71 (literals -> lit_intnega .)
    modulo          reduce using rule 71 (literals -> lit_intnega .)
    times_times     reduce using rule 71 (literals -> lit_intnega .)
    id              reduce using rule 71 (literals -> lit_intnega .)
    For             reduce using rule 71 (literals -> lit_intnega .)
    While           reduce using rule 71 (literals -> lit_intnega .)
    If              reduce using rule 71 (literals -> lit_intnega .)
    Switch          reduce using rule 71 (literals -> lit_intnega .)
    Sys_Call        reduce using rule 71 (literals -> lit_intnega .)
    Absorb          reduce using rule 71 (literals -> lit_intnega .)
    Discharge       reduce using rule 71 (literals -> lit_intnega .)
    Link_End        reduce using rule 71 (literals -> lit_intnega .)
    Sys             reduce using rule 71 (literals -> lit_intnega .)
    $end            reduce using rule 71 (literals -> lit_intnega .)
    Break           reduce using rule 71 (literals -> lit_intnega .)
    Continue        reduce using rule 71 (literals -> lit_intnega .)
    Avoid           reduce using rule 71 (literals -> lit_intnega .)
    close_bracket   reduce using rule 71 (literals -> lit_intnega .)
    Return          reduce using rule 71 (literals -> lit_intnega .)
    close_brace     reduce using rule 71 (literals -> lit_intnega .)
    greater_than    reduce using rule 71 (literals -> lit_intnega .)
    less_than       reduce using rule 71 (literals -> lit_intnega .)
    equal_equal     reduce using rule 71 (literals -> lit_intnega .)
    not_equal       reduce using rule 71 (literals -> lit_intnega .)
    great_than_equal reduce using rule 71 (literals -> lit_intnega .)
    less_than_equal reduce using rule 71 (literals -> lit_intnega .)
    comma           reduce using rule 71 (literals -> lit_intnega .)
    Generate        reduce using rule 71 (literals -> lit_intnega .)
    Struct          reduce using rule 71 (literals -> lit_intnega .)
    Link_Start      reduce using rule 71 (literals -> lit_intnega .)
    close_par       reduce using rule 71 (literals -> lit_intnega .)


state 79

    (72) literals -> lit_decposi .

    plus            reduce using rule 72 (literals -> lit_decposi .)
    minus           reduce using rule 72 (literals -> lit_decposi .)
    times           reduce using rule 72 (literals -> lit_decposi .)
    divide          reduce using rule 72 (literals -> lit_decposi .)
    divide_divide   reduce using rule 72 (literals -> lit_decposi .)
    modulo          reduce using rule 72 (literals -> lit_decposi .)
    times_times     reduce using rule 72 (literals -> lit_decposi .)
    id              reduce using rule 72 (literals -> lit_decposi .)
    For             reduce using rule 72 (literals -> lit_decposi .)
    While           reduce using rule 72 (literals -> lit_decposi .)
    If              reduce using rule 72 (literals -> lit_decposi .)
    Switch          reduce using rule 72 (literals -> lit_decposi .)
    Sys_Call        reduce using rule 72 (literals -> lit_decposi .)
    Absorb          reduce using rule 72 (literals -> lit_decposi .)
    Discharge       reduce using rule 72 (literals -> lit_decposi .)
    Link_End        reduce using rule 72 (literals -> lit_decposi .)
    Sys             reduce using rule 72 (literals -> lit_decposi .)
    $end            reduce using rule 72 (literals -> lit_decposi .)
    Break           reduce using rule 72 (literals -> lit_decposi .)
    Continue        reduce using rule 72 (literals -> lit_decposi .)
    Avoid           reduce using rule 72 (literals -> lit_decposi .)
    close_bracket   reduce using rule 72 (literals -> lit_decposi .)
    Return          reduce using rule 72 (literals -> lit_decposi .)
    close_brace     reduce using rule 72 (literals -> lit_decposi .)
    greater_than    reduce using rule 72 (literals -> lit_decposi .)
    less_than       reduce using rule 72 (literals -> lit_decposi .)
    equal_equal     reduce using rule 72 (literals -> lit_decposi .)
    not_equal       reduce using rule 72 (literals -> lit_decposi .)
    great_than_equal reduce using rule 72 (literals -> lit_decposi .)
    less_than_equal reduce using rule 72 (literals -> lit_decposi .)
    comma           reduce using rule 72 (literals -> lit_decposi .)
    Generate        reduce using rule 72 (literals -> lit_decposi .)
    Struct          reduce using rule 72 (literals -> lit_decposi .)
    Link_Start      reduce using rule 72 (literals -> lit_decposi .)
    close_par       reduce using rule 72 (literals -> lit_decposi .)


state 80

    (73) literals -> lit_decnega .

    plus            reduce using rule 73 (literals -> lit_decnega .)
    minus           reduce using rule 73 (literals -> lit_decnega .)
    times           reduce using rule 73 (literals -> lit_decnega .)
    divide          reduce using rule 73 (literals -> lit_decnega .)
    divide_divide   reduce using rule 73 (literals -> lit_decnega .)
    modulo          reduce using rule 73 (literals -> lit_decnega .)
    times_times     reduce using rule 73 (literals -> lit_decnega .)
    id              reduce using rule 73 (literals -> lit_decnega .)
    For             reduce using rule 73 (literals -> lit_decnega .)
    While           reduce using rule 73 (literals -> lit_decnega .)
    If              reduce using rule 73 (literals -> lit_decnega .)
    Switch          reduce using rule 73 (literals -> lit_decnega .)
    Sys_Call        reduce using rule 73 (literals -> lit_decnega .)
    Absorb          reduce using rule 73 (literals -> lit_decnega .)
    Discharge       reduce using rule 73 (literals -> lit_decnega .)
    Link_End        reduce using rule 73 (literals -> lit_decnega .)
    Sys             reduce using rule 73 (literals -> lit_decnega .)
    $end            reduce using rule 73 (literals -> lit_decnega .)
    Break           reduce using rule 73 (literals -> lit_decnega .)
    Continue        reduce using rule 73 (literals -> lit_decnega .)
    Avoid           reduce using rule 73 (literals -> lit_decnega .)
    close_bracket   reduce using rule 73 (literals -> lit_decnega .)
    Return          reduce using rule 73 (literals -> lit_decnega .)
    close_brace     reduce using rule 73 (literals -> lit_decnega .)
    greater_than    reduce using rule 73 (literals -> lit_decnega .)
    less_than       reduce using rule 73 (literals -> lit_decnega .)
    equal_equal     reduce using rule 73 (literals -> lit_decnega .)
    not_equal       reduce using rule 73 (literals -> lit_decnega .)
    great_than_equal reduce using rule 73 (literals -> lit_decnega .)
    less_than_equal reduce using rule 73 (literals -> lit_decnega .)
    comma           reduce using rule 73 (literals -> lit_decnega .)
    Generate        reduce using rule 73 (literals -> lit_decnega .)
    Struct          reduce using rule 73 (literals -> lit_decnega .)
    Link_Start      reduce using rule 73 (literals -> lit_decnega .)
    close_par       reduce using rule 73 (literals -> lit_decnega .)


state 81

    (75) arithmetic_expression -> open_par . arithmetic_expression close_par
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
    open_par        shift and go to state 81
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]

    arithmetic_expression          shift and go to state 125
    num_value                      shift and go to state 126
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    func_call                      shift and go to state 76

state 82

    (8) struct_dec -> Struct id open_bracket struct_element1 . struct_element2 close_bracket id_array1
    (25) struct_element2 -> . comma struct_element1 struct_element2
    (26) struct_element2 -> .

    comma           shift and go to state 84
    close_bracket   reduce using rule 26 (struct_element2 -> .)

    struct_element2                shift and go to state 127

state 83

    (9) struct_dec -> Struct open_bracket struct_element1 struct_element2 . close_bracket id_array1

    close_bracket   shift and go to state 128


state 84

    (25) struct_element2 -> comma . struct_element1 struct_element2
    (11) struct_element1 -> . data_type id_array_dec
    (12) data_type -> . Integer
    (13) data_type -> . Decimal
    (14) data_type -> . String
    (15) data_type -> . Boolean
    (16) data_type -> .

    Integer         shift and go to state 16
    Decimal         shift and go to state 17
    String          shift and go to state 18
    Boolean         shift and go to state 19
    id              reduce using rule 16 (data_type -> .)
    comma           reduce using rule 16 (data_type -> .)
    close_bracket   reduce using rule 16 (data_type -> .)

    struct_element1                shift and go to state 129
    data_type                      shift and go to state 42

state 85

    (11) struct_element1 -> data_type id_array_dec .

    comma           reduce using rule 11 (struct_element1 -> data_type id_array_dec .)
    close_bracket   reduce using rule 11 (struct_element1 -> data_type id_array_dec .)


state 86

    (17) id_array_dec -> id . id_array_dec2
    (19) id_array_dec2 -> . id_dec1
    (20) id_array_dec2 -> . open_brace lit_intposi close_brace array_dec1
    (21) id_dec1 -> . comma id id_dec1
    (22) id_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    open_brace      shift and go to state 132
    comma           shift and go to state 133
    close_bracket   reduce using rule 22 (id_dec1 -> .)

  ! comma           [ reduce using rule 22 (id_dec1 -> .) ]

    id_array_dec2                  shift and go to state 130
    id_dec1                        shift and go to state 131

state 87

    (29) const_var_dec -> Fixed data_type id_array_const .

    Generate        reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Struct          reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Link_Start      reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    id              reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    For             reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    While           reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    If              reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Switch          reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Sys_Call        reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Absorb          reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Discharge       reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Link_End        reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Sys             reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    $end            reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    Return          reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)
    close_bracket   reduce using rule 29 (const_var_dec -> Fixed data_type id_array_const .)


state 88

    (32) id_array_const -> id . id_array_const2
    (34) id_array_const2 -> . open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (35) id_array_const2 -> . equal value id_const1
    (36) id_array_const2 -> .

    open_brace      shift and go to state 135
    equal           shift and go to state 136
    Generate        reduce using rule 36 (id_array_const2 -> .)
    Struct          reduce using rule 36 (id_array_const2 -> .)
    Link_Start      reduce using rule 36 (id_array_const2 -> .)
    id              reduce using rule 36 (id_array_const2 -> .)
    For             reduce using rule 36 (id_array_const2 -> .)
    While           reduce using rule 36 (id_array_const2 -> .)
    If              reduce using rule 36 (id_array_const2 -> .)
    Switch          reduce using rule 36 (id_array_const2 -> .)
    Sys_Call        reduce using rule 36 (id_array_const2 -> .)
    Absorb          reduce using rule 36 (id_array_const2 -> .)
    Discharge       reduce using rule 36 (id_array_const2 -> .)
    Link_End        reduce using rule 36 (id_array_const2 -> .)
    Sys             reduce using rule 36 (id_array_const2 -> .)
    $end            reduce using rule 36 (id_array_const2 -> .)
    Return          reduce using rule 36 (id_array_const2 -> .)
    close_bracket   reduce using rule 36 (id_array_const2 -> .)

    id_array_const2                shift and go to state 134

state 89

    (41) id_array_var -> id id_array_var2 .

    Generate        reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Struct          reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Link_Start      reduce using rule 41 (id_array_var -> id id_array_var2 .)
    id              reduce using rule 41 (id_array_var -> id id_array_var2 .)
    For             reduce using rule 41 (id_array_var -> id id_array_var2 .)
    While           reduce using rule 41 (id_array_var -> id id_array_var2 .)
    If              reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Switch          reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Sys_Call        reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Absorb          reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Discharge       reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Link_End        reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Sys             reduce using rule 41 (id_array_var -> id id_array_var2 .)
    $end            reduce using rule 41 (id_array_var -> id id_array_var2 .)
    Return          reduce using rule 41 (id_array_var -> id id_array_var2 .)
    close_bracket   reduce using rule 41 (id_array_var -> id id_array_var2 .)


state 90

    (42) id_array_var2 -> var_init . id_var1
    (46) id_var1 -> . comma id var_init id_var1
    (47) id_var1 -> .

    comma           shift and go to state 138
    Generate        reduce using rule 47 (id_var1 -> .)
    Struct          reduce using rule 47 (id_var1 -> .)
    Link_Start      reduce using rule 47 (id_var1 -> .)
    id              reduce using rule 47 (id_var1 -> .)
    For             reduce using rule 47 (id_var1 -> .)
    While           reduce using rule 47 (id_var1 -> .)
    If              reduce using rule 47 (id_var1 -> .)
    Switch          reduce using rule 47 (id_var1 -> .)
    Sys_Call        reduce using rule 47 (id_var1 -> .)
    Absorb          reduce using rule 47 (id_var1 -> .)
    Discharge       reduce using rule 47 (id_var1 -> .)
    Link_End        reduce using rule 47 (id_var1 -> .)
    Sys             reduce using rule 47 (id_var1 -> .)
    $end            reduce using rule 47 (id_var1 -> .)
    Return          reduce using rule 47 (id_var1 -> .)
    close_bracket   reduce using rule 47 (id_var1 -> .)

    id_var1                        shift and go to state 137

state 91

    (43) id_array_var2 -> open_brace . lit_intposi close_brace array_init array_var1

    lit_intposi     shift and go to state 139


state 92

    (44) var_init -> equal . value id_var1
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    Generate        reduce using rule 55 (value -> .)
    Struct          reduce using rule 55 (value -> .)
    Link_Start      reduce using rule 55 (value -> .)
    For             reduce using rule 55 (value -> .)
    While           reduce using rule 55 (value -> .)
    If              reduce using rule 55 (value -> .)
    Switch          reduce using rule 55 (value -> .)
    Absorb          reduce using rule 55 (value -> .)
    Discharge       reduce using rule 55 (value -> .)
    Link_End        reduce using rule 55 (value -> .)
    Sys             reduce using rule 55 (value -> .)
    $end            reduce using rule 55 (value -> .)
    Return          reduce using rule 55 (value -> .)
    close_bracket   reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 55 (value -> .) ]
  ! Sys_Call        [ reduce using rule 55 (value -> .) ]
  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! Generate        [ reduce using rule 60 (num_value -> .) ]
  ! Struct          [ reduce using rule 60 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 60 (num_value -> .) ]
  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! For             [ reduce using rule 60 (num_value -> .) ]
  ! While           [ reduce using rule 60 (num_value -> .) ]
  ! If              [ reduce using rule 60 (num_value -> .) ]
  ! Switch          [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! Absorb          [ reduce using rule 60 (num_value -> .) ]
  ! Discharge       [ reduce using rule 60 (num_value -> .) ]
  ! Link_End        [ reduce using rule 60 (num_value -> .) ]
  ! Sys             [ reduce using rule 60 (num_value -> .) ]
  ! $end            [ reduce using rule 60 (num_value -> .) ]
  ! Return          [ reduce using rule 60 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! Generate        [ reduce using rule 62 (id_array -> .) ]
  ! Struct          [ reduce using rule 62 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! Generate        [ reduce using rule 74 (literals -> .) ]
  ! Struct          [ reduce using rule 74 (literals -> .) ]
  ! Link_Start      [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]

    value                          shift and go to state 140
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 93

    (1) program -> global_dec Link_Start declare_statements statements Link_End . functions
    (176) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (177) functions -> .

    Sys             shift and go to state 50
    $end            reduce using rule 177 (functions -> .)

    functions                      shift and go to state 141

state 94

    (2) program -> global_dec Link_Start declare_statements statements functions .

    $end            reduce using rule 2 (program -> global_dec Link_Start declare_statements statements functions .)


state 95

    (3) program -> global_dec declare_statements statements Link_End functions .

    $end            reduce using rule 3 (program -> global_dec declare_statements statements Link_End functions .)


state 96

    (176) functions -> Sys id . open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions

    open_par        shift and go to state 142


state 97

    (100) assignment_statements2 -> array id_struct . assignment_exp
    (102) assignment_exp -> . assignment_operators num_value
    (103) assignment_exp -> . equal assign_value
    (104) assignment_exp -> .
    (109) assignment_operators -> . plus_equal
    (110) assignment_operators -> . minus_equal
    (111) assignment_operators -> . times_equal
    (112) assignment_operators -> . divide_equal
    (113) assignment_operators -> . divide_divide_equal
    (114) assignment_operators -> . modulo_equal
    (115) assignment_operators -> . times_times_equal

    equal           shift and go to state 145
    id              reduce using rule 104 (assignment_exp -> .)
    For             reduce using rule 104 (assignment_exp -> .)
    While           reduce using rule 104 (assignment_exp -> .)
    If              reduce using rule 104 (assignment_exp -> .)
    Switch          reduce using rule 104 (assignment_exp -> .)
    Sys_Call        reduce using rule 104 (assignment_exp -> .)
    Absorb          reduce using rule 104 (assignment_exp -> .)
    Discharge       reduce using rule 104 (assignment_exp -> .)
    Link_End        reduce using rule 104 (assignment_exp -> .)
    Sys             reduce using rule 104 (assignment_exp -> .)
    $end            reduce using rule 104 (assignment_exp -> .)
    Break           reduce using rule 104 (assignment_exp -> .)
    Continue        reduce using rule 104 (assignment_exp -> .)
    Avoid           reduce using rule 104 (assignment_exp -> .)
    close_bracket   reduce using rule 104 (assignment_exp -> .)
    Return          reduce using rule 104 (assignment_exp -> .)
    plus_equal      shift and go to state 146
    minus_equal     shift and go to state 147
    times_equal     shift and go to state 148
    divide_equal    shift and go to state 149
    divide_divide_equal shift and go to state 150
    modulo_equal    shift and go to state 151
    times_times_equal shift and go to state 152

    assignment_exp                 shift and go to state 143
    assignment_operators           shift and go to state 144

state 98

    (84) id_struct -> period . id_array
    (61) id_array -> . id array
    (62) id_array -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 68
    equal           reduce using rule 62 (id_array -> .)
    plus_equal      reduce using rule 62 (id_array -> .)
    minus_equal     reduce using rule 62 (id_array -> .)
    times_equal     reduce using rule 62 (id_array -> .)
    divide_equal    reduce using rule 62 (id_array -> .)
    divide_divide_equal reduce using rule 62 (id_array -> .)
    modulo_equal    reduce using rule 62 (id_array -> .)
    times_times_equal reduce using rule 62 (id_array -> .)
    For             reduce using rule 62 (id_array -> .)
    While           reduce using rule 62 (id_array -> .)
    If              reduce using rule 62 (id_array -> .)
    Switch          reduce using rule 62 (id_array -> .)
    Sys_Call        reduce using rule 62 (id_array -> .)
    Absorb          reduce using rule 62 (id_array -> .)
    Discharge       reduce using rule 62 (id_array -> .)
    Link_End        reduce using rule 62 (id_array -> .)
    Sys             reduce using rule 62 (id_array -> .)
    $end            reduce using rule 62 (id_array -> .)
    Break           reduce using rule 62 (id_array -> .)
    Continue        reduce using rule 62 (id_array -> .)
    Avoid           reduce using rule 62 (id_array -> .)
    close_bracket   reduce using rule 62 (id_array -> .)
    Return          reduce using rule 62 (id_array -> .)
    plus            reduce using rule 62 (id_array -> .)
    minus           reduce using rule 62 (id_array -> .)
    times           reduce using rule 62 (id_array -> .)
    divide          reduce using rule 62 (id_array -> .)
    divide_divide   reduce using rule 62 (id_array -> .)
    modulo          reduce using rule 62 (id_array -> .)
    times_times     reduce using rule 62 (id_array -> .)
    close_brace     reduce using rule 62 (id_array -> .)
    greater_than    reduce using rule 62 (id_array -> .)
    less_than       reduce using rule 62 (id_array -> .)
    equal_equal     reduce using rule 62 (id_array -> .)
    not_equal       reduce using rule 62 (id_array -> .)
    great_than_equal reduce using rule 62 (id_array -> .)
    less_than_equal reduce using rule 62 (id_array -> .)
    comma           reduce using rule 62 (id_array -> .)
    Generate        reduce using rule 62 (id_array -> .)
    Struct          reduce using rule 62 (id_array -> .)
    Link_Start      reduce using rule 62 (id_array -> .)
    close_par       reduce using rule 62 (id_array -> .)

  ! id              [ reduce using rule 62 (id_array -> .) ]

    id_array                       shift and go to state 153

state 99

    (101) assignment_statements2 -> open_brace lit_intposi . close_brace more_array equal open_brace value1 close_brace
    (70) literals -> lit_intposi .

  ! shift/reduce conflict for close_brace resolved as shift
    close_brace     shift and go to state 154
    plus            reduce using rule 70 (literals -> lit_intposi .)
    minus           reduce using rule 70 (literals -> lit_intposi .)
    times           reduce using rule 70 (literals -> lit_intposi .)
    divide          reduce using rule 70 (literals -> lit_intposi .)
    divide_divide   reduce using rule 70 (literals -> lit_intposi .)
    modulo          reduce using rule 70 (literals -> lit_intposi .)
    times_times     reduce using rule 70 (literals -> lit_intposi .)

  ! close_brace     [ reduce using rule 70 (literals -> lit_intposi .) ]


state 100

    (64) array -> open_brace close_brace .

    period          reduce using rule 64 (array -> open_brace close_brace .)
    equal           reduce using rule 64 (array -> open_brace close_brace .)
    plus_equal      reduce using rule 64 (array -> open_brace close_brace .)
    minus_equal     reduce using rule 64 (array -> open_brace close_brace .)
    times_equal     reduce using rule 64 (array -> open_brace close_brace .)
    divide_equal    reduce using rule 64 (array -> open_brace close_brace .)
    divide_divide_equal reduce using rule 64 (array -> open_brace close_brace .)
    modulo_equal    reduce using rule 64 (array -> open_brace close_brace .)
    times_times_equal reduce using rule 64 (array -> open_brace close_brace .)
    id              reduce using rule 64 (array -> open_brace close_brace .)
    For             reduce using rule 64 (array -> open_brace close_brace .)
    While           reduce using rule 64 (array -> open_brace close_brace .)
    If              reduce using rule 64 (array -> open_brace close_brace .)
    Switch          reduce using rule 64 (array -> open_brace close_brace .)
    Sys_Call        reduce using rule 64 (array -> open_brace close_brace .)
    Absorb          reduce using rule 64 (array -> open_brace close_brace .)
    Discharge       reduce using rule 64 (array -> open_brace close_brace .)
    Link_End        reduce using rule 64 (array -> open_brace close_brace .)
    Sys             reduce using rule 64 (array -> open_brace close_brace .)
    $end            reduce using rule 64 (array -> open_brace close_brace .)
    Break           reduce using rule 64 (array -> open_brace close_brace .)
    Continue        reduce using rule 64 (array -> open_brace close_brace .)
    Avoid           reduce using rule 64 (array -> open_brace close_brace .)
    close_bracket   reduce using rule 64 (array -> open_brace close_brace .)
    Return          reduce using rule 64 (array -> open_brace close_brace .)
    plus            reduce using rule 64 (array -> open_brace close_brace .)
    minus           reduce using rule 64 (array -> open_brace close_brace .)
    times           reduce using rule 64 (array -> open_brace close_brace .)
    divide          reduce using rule 64 (array -> open_brace close_brace .)
    divide_divide   reduce using rule 64 (array -> open_brace close_brace .)
    modulo          reduce using rule 64 (array -> open_brace close_brace .)
    times_times     reduce using rule 64 (array -> open_brace close_brace .)
    close_brace     reduce using rule 64 (array -> open_brace close_brace .)
    greater_than    reduce using rule 64 (array -> open_brace close_brace .)
    less_than       reduce using rule 64 (array -> open_brace close_brace .)
    equal_equal     reduce using rule 64 (array -> open_brace close_brace .)
    not_equal       reduce using rule 64 (array -> open_brace close_brace .)
    great_than_equal reduce using rule 64 (array -> open_brace close_brace .)
    less_than_equal reduce using rule 64 (array -> open_brace close_brace .)
    comma           reduce using rule 64 (array -> open_brace close_brace .)
    Generate        reduce using rule 64 (array -> open_brace close_brace .)
    Struct          reduce using rule 64 (array -> open_brace close_brace .)
    Link_Start      reduce using rule 64 (array -> open_brace close_brace .)
    close_par       reduce using rule 64 (array -> open_brace close_brace .)


state 101

    (63) array -> open_brace num_value . close_brace
    (76) arithmetic_expression -> num_value . arithmetic_operators num_value
    (77) arithmetic_operators -> . plus
    (78) arithmetic_operators -> . minus
    (79) arithmetic_operators -> . times
    (80) arithmetic_operators -> . divide
    (81) arithmetic_operators -> . divide_divide
    (82) arithmetic_operators -> . modulo
    (83) arithmetic_operators -> . times_times

    close_brace     shift and go to state 155
    plus            shift and go to state 117
    minus           shift and go to state 118
    times           shift and go to state 119
    divide          shift and go to state 120
    divide_divide   shift and go to state 121
    modulo          shift and go to state 122
    times_times     shift and go to state 123

    arithmetic_operators           shift and go to state 116

state 102

    (118) for_statements -> For id In . id open_brace close_brace colon open_bracket inside_statements close_bracket

    id              shift and go to state 156


state 103

    (143) logical_expression -> open_par . logical_operand close_par logical_operators open_par logical_operand close_par
    (75) arithmetic_expression -> open_par . arithmetic_expression close_par
    (144) logical_operand -> . Not open_par logical_operand close_par
    (145) logical_operand -> . relational_expression
    (146) logical_operand -> . logical_expression
    (147) logical_operand -> . lit_bool
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    Not             shift and go to state 159
    lit_bool        shift and go to state 162
    open_par        shift and go to state 157
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    logical_operand                shift and go to state 158
    arithmetic_expression          shift and go to state 125
    relational_expression          shift and go to state 160
    logical_expression             shift and go to state 161
    num_value                      shift and go to state 163
    value                          shift and go to state 109
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    func_call                      shift and go to state 76

state 104

    (120) while_statements -> While open_par condition . close_par colon open_bracket inside_statements close_bracket

    close_par       shift and go to state 164


state 105

    (129) condition -> relational_expression .

    close_par       reduce using rule 129 (condition -> relational_expression .)


state 106

    (130) condition -> logical_expression .

    close_par       reduce using rule 130 (condition -> logical_expression .)


state 107

    (131) condition -> Not . open_par condition_not close_par

    open_par        shift and go to state 165


state 108

    (132) condition -> lit_bool .
    (54) value -> lit_bool .

    close_par       reduce using rule 132 (condition -> lit_bool .)
    greater_than    reduce using rule 54 (value -> lit_bool .)
    less_than       reduce using rule 54 (value -> lit_bool .)
    equal_equal     reduce using rule 54 (value -> lit_bool .)
    not_equal       reduce using rule 54 (value -> lit_bool .)
    great_than_equal reduce using rule 54 (value -> lit_bool .)
    less_than_equal reduce using rule 54 (value -> lit_bool .)


state 109

    (136) relational_expression -> value . relational_operators value
    (137) relational_operators -> . greater_than
    (138) relational_operators -> . less_than
    (139) relational_operators -> . equal_equal
    (140) relational_operators -> . not_equal
    (141) relational_operators -> . great_than_equal
    (142) relational_operators -> . less_than_equal

    greater_than    shift and go to state 167
    less_than       shift and go to state 168
    equal_equal     shift and go to state 169
    not_equal       shift and go to state 170
    great_than_equal shift and go to state 171
    less_than_equal shift and go to state 172

    relational_operators           shift and go to state 166

state 110

    (152) if_statement -> If open_par condition . close_par colon open_bracket inside_statements close_bracket condition_else

    close_par       shift and go to state 173


state 111

    (159) switch_statements -> Switch id colon . open_bracket execute Default colon inside_statements close_bracket End_Switch

    open_bracket    shift and go to state 174


state 112

    (170) func_call -> Sys_Call id open_par . function_param close_par
    (171) function_param -> . id open_brace close_brace more_param
    (172) function_param -> .
    (173) function_param -> . value1 more_param
    (86) value1 -> . value value2
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
    id              shift and go to state 175
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    close_par       reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! close_par       [ reduce using rule 172 (function_param -> .) ]
  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! close_par       [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! close_par       [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! close_par       [ reduce using rule 74 (literals -> .) ]

    function_param                 shift and go to state 176
    value1                         shift and go to state 177
    value                          shift and go to state 178
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 113

    (168) input_statements -> Absorb id_array id_struct .

    id              reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    For             reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    While           reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    If              reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Switch          reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Sys_Call        reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Absorb          reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Discharge       reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Link_End        reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Sys             reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    $end            reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Break           reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Continue        reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Avoid           reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    close_bracket   reduce using rule 168 (input_statements -> Absorb id_array id_struct .)
    Return          reduce using rule 168 (input_statements -> Absorb id_array id_struct .)


state 114

    (61) id_array -> id array .

    period          reduce using rule 61 (id_array -> id array .)
    id              reduce using rule 61 (id_array -> id array .)
    For             reduce using rule 61 (id_array -> id array .)
    While           reduce using rule 61 (id_array -> id array .)
    If              reduce using rule 61 (id_array -> id array .)
    Switch          reduce using rule 61 (id_array -> id array .)
    Sys_Call        reduce using rule 61 (id_array -> id array .)
    Absorb          reduce using rule 61 (id_array -> id array .)
    Discharge       reduce using rule 61 (id_array -> id array .)
    Link_End        reduce using rule 61 (id_array -> id array .)
    Sys             reduce using rule 61 (id_array -> id array .)
    $end            reduce using rule 61 (id_array -> id array .)
    Break           reduce using rule 61 (id_array -> id array .)
    Continue        reduce using rule 61 (id_array -> id array .)
    Avoid           reduce using rule 61 (id_array -> id array .)
    close_bracket   reduce using rule 61 (id_array -> id array .)
    Return          reduce using rule 61 (id_array -> id array .)
    plus            reduce using rule 61 (id_array -> id array .)
    minus           reduce using rule 61 (id_array -> id array .)
    times           reduce using rule 61 (id_array -> id array .)
    divide          reduce using rule 61 (id_array -> id array .)
    divide_divide   reduce using rule 61 (id_array -> id array .)
    modulo          reduce using rule 61 (id_array -> id array .)
    times_times     reduce using rule 61 (id_array -> id array .)
    close_brace     reduce using rule 61 (id_array -> id array .)
    greater_than    reduce using rule 61 (id_array -> id array .)
    less_than       reduce using rule 61 (id_array -> id array .)
    equal_equal     reduce using rule 61 (id_array -> id array .)
    not_equal       reduce using rule 61 (id_array -> id array .)
    great_than_equal reduce using rule 61 (id_array -> id array .)
    less_than_equal reduce using rule 61 (id_array -> id array .)
    comma           reduce using rule 61 (id_array -> id array .)
    Generate        reduce using rule 61 (id_array -> id array .)
    Struct          reduce using rule 61 (id_array -> id array .)
    Link_Start      reduce using rule 61 (id_array -> id array .)
    equal           reduce using rule 61 (id_array -> id array .)
    plus_equal      reduce using rule 61 (id_array -> id array .)
    minus_equal     reduce using rule 61 (id_array -> id array .)
    times_equal     reduce using rule 61 (id_array -> id array .)
    divide_equal    reduce using rule 61 (id_array -> id array .)
    divide_divide_equal reduce using rule 61 (id_array -> id array .)
    modulo_equal    reduce using rule 61 (id_array -> id array .)
    times_times_equal reduce using rule 61 (id_array -> id array .)
    close_par       reduce using rule 61 (id_array -> id array .)


state 115

    (63) array -> open_brace . num_value close_brace
    (64) array -> open_brace . close_brace
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
    close_brace     shift and go to state 100
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]

    num_value                      shift and go to state 101
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 116

    (76) arithmetic_expression -> num_value arithmetic_operators . num_value
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    For             reduce using rule 60 (num_value -> .)
    While           reduce using rule 60 (num_value -> .)
    If              reduce using rule 60 (num_value -> .)
    Switch          reduce using rule 60 (num_value -> .)
    Absorb          reduce using rule 60 (num_value -> .)
    Discharge       reduce using rule 60 (num_value -> .)
    Link_End        reduce using rule 60 (num_value -> .)
    Sys             reduce using rule 60 (num_value -> .)
    $end            reduce using rule 60 (num_value -> .)
    Break           reduce using rule 60 (num_value -> .)
    Continue        reduce using rule 60 (num_value -> .)
    Avoid           reduce using rule 60 (num_value -> .)
    close_bracket   reduce using rule 60 (num_value -> .)
    Return          reduce using rule 60 (num_value -> .)
    close_brace     reduce using rule 60 (num_value -> .)
    greater_than    reduce using rule 60 (num_value -> .)
    less_than       reduce using rule 60 (num_value -> .)
    equal_equal     reduce using rule 60 (num_value -> .)
    not_equal       reduce using rule 60 (num_value -> .)
    great_than_equal reduce using rule 60 (num_value -> .)
    less_than_equal reduce using rule 60 (num_value -> .)
    close_par       reduce using rule 60 (num_value -> .)
    comma           reduce using rule 60 (num_value -> .)
    Generate        reduce using rule 60 (num_value -> .)
    Struct          reduce using rule 60 (num_value -> .)
    Link_Start      reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Break           [ reduce using rule 62 (id_array -> .) ]
  ! Continue        [ reduce using rule 62 (id_array -> .) ]
  ! Avoid           [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! close_par       [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! Generate        [ reduce using rule 62 (id_array -> .) ]
  ! Struct          [ reduce using rule 62 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Break           [ reduce using rule 74 (literals -> .) ]
  ! Continue        [ reduce using rule 74 (literals -> .) ]
  ! Avoid           [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]
  ! close_par       [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! Generate        [ reduce using rule 74 (literals -> .) ]
  ! Struct          [ reduce using rule 74 (literals -> .) ]
  ! Link_Start      [ reduce using rule 74 (literals -> .) ]

    num_value                      shift and go to state 179
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 117

    (77) arithmetic_operators -> plus .

    id              reduce using rule 77 (arithmetic_operators -> plus .)
    lit_intposi     reduce using rule 77 (arithmetic_operators -> plus .)
    lit_intnega     reduce using rule 77 (arithmetic_operators -> plus .)
    lit_decposi     reduce using rule 77 (arithmetic_operators -> plus .)
    lit_decnega     reduce using rule 77 (arithmetic_operators -> plus .)
    open_par        reduce using rule 77 (arithmetic_operators -> plus .)
    Sys_Call        reduce using rule 77 (arithmetic_operators -> plus .)
    plus            reduce using rule 77 (arithmetic_operators -> plus .)
    minus           reduce using rule 77 (arithmetic_operators -> plus .)
    times           reduce using rule 77 (arithmetic_operators -> plus .)
    divide          reduce using rule 77 (arithmetic_operators -> plus .)
    divide_divide   reduce using rule 77 (arithmetic_operators -> plus .)
    modulo          reduce using rule 77 (arithmetic_operators -> plus .)
    times_times     reduce using rule 77 (arithmetic_operators -> plus .)
    period          reduce using rule 77 (arithmetic_operators -> plus .)
    For             reduce using rule 77 (arithmetic_operators -> plus .)
    While           reduce using rule 77 (arithmetic_operators -> plus .)
    If              reduce using rule 77 (arithmetic_operators -> plus .)
    Switch          reduce using rule 77 (arithmetic_operators -> plus .)
    Absorb          reduce using rule 77 (arithmetic_operators -> plus .)
    Discharge       reduce using rule 77 (arithmetic_operators -> plus .)
    Link_End        reduce using rule 77 (arithmetic_operators -> plus .)
    Sys             reduce using rule 77 (arithmetic_operators -> plus .)
    $end            reduce using rule 77 (arithmetic_operators -> plus .)
    Break           reduce using rule 77 (arithmetic_operators -> plus .)
    Continue        reduce using rule 77 (arithmetic_operators -> plus .)
    Avoid           reduce using rule 77 (arithmetic_operators -> plus .)
    close_bracket   reduce using rule 77 (arithmetic_operators -> plus .)
    Return          reduce using rule 77 (arithmetic_operators -> plus .)
    greater_than    reduce using rule 77 (arithmetic_operators -> plus .)
    less_than       reduce using rule 77 (arithmetic_operators -> plus .)
    equal_equal     reduce using rule 77 (arithmetic_operators -> plus .)
    not_equal       reduce using rule 77 (arithmetic_operators -> plus .)
    great_than_equal reduce using rule 77 (arithmetic_operators -> plus .)
    less_than_equal reduce using rule 77 (arithmetic_operators -> plus .)
    comma           reduce using rule 77 (arithmetic_operators -> plus .)
    Generate        reduce using rule 77 (arithmetic_operators -> plus .)
    Struct          reduce using rule 77 (arithmetic_operators -> plus .)
    Link_Start      reduce using rule 77 (arithmetic_operators -> plus .)
    close_par       reduce using rule 77 (arithmetic_operators -> plus .)
    close_brace     reduce using rule 77 (arithmetic_operators -> plus .)


state 118

    (78) arithmetic_operators -> minus .

    id              reduce using rule 78 (arithmetic_operators -> minus .)
    lit_intposi     reduce using rule 78 (arithmetic_operators -> minus .)
    lit_intnega     reduce using rule 78 (arithmetic_operators -> minus .)
    lit_decposi     reduce using rule 78 (arithmetic_operators -> minus .)
    lit_decnega     reduce using rule 78 (arithmetic_operators -> minus .)
    open_par        reduce using rule 78 (arithmetic_operators -> minus .)
    Sys_Call        reduce using rule 78 (arithmetic_operators -> minus .)
    plus            reduce using rule 78 (arithmetic_operators -> minus .)
    minus           reduce using rule 78 (arithmetic_operators -> minus .)
    times           reduce using rule 78 (arithmetic_operators -> minus .)
    divide          reduce using rule 78 (arithmetic_operators -> minus .)
    divide_divide   reduce using rule 78 (arithmetic_operators -> minus .)
    modulo          reduce using rule 78 (arithmetic_operators -> minus .)
    times_times     reduce using rule 78 (arithmetic_operators -> minus .)
    period          reduce using rule 78 (arithmetic_operators -> minus .)
    For             reduce using rule 78 (arithmetic_operators -> minus .)
    While           reduce using rule 78 (arithmetic_operators -> minus .)
    If              reduce using rule 78 (arithmetic_operators -> minus .)
    Switch          reduce using rule 78 (arithmetic_operators -> minus .)
    Absorb          reduce using rule 78 (arithmetic_operators -> minus .)
    Discharge       reduce using rule 78 (arithmetic_operators -> minus .)
    Link_End        reduce using rule 78 (arithmetic_operators -> minus .)
    Sys             reduce using rule 78 (arithmetic_operators -> minus .)
    $end            reduce using rule 78 (arithmetic_operators -> minus .)
    Break           reduce using rule 78 (arithmetic_operators -> minus .)
    Continue        reduce using rule 78 (arithmetic_operators -> minus .)
    Avoid           reduce using rule 78 (arithmetic_operators -> minus .)
    close_bracket   reduce using rule 78 (arithmetic_operators -> minus .)
    Return          reduce using rule 78 (arithmetic_operators -> minus .)
    greater_than    reduce using rule 78 (arithmetic_operators -> minus .)
    less_than       reduce using rule 78 (arithmetic_operators -> minus .)
    equal_equal     reduce using rule 78 (arithmetic_operators -> minus .)
    not_equal       reduce using rule 78 (arithmetic_operators -> minus .)
    great_than_equal reduce using rule 78 (arithmetic_operators -> minus .)
    less_than_equal reduce using rule 78 (arithmetic_operators -> minus .)
    comma           reduce using rule 78 (arithmetic_operators -> minus .)
    Generate        reduce using rule 78 (arithmetic_operators -> minus .)
    Struct          reduce using rule 78 (arithmetic_operators -> minus .)
    Link_Start      reduce using rule 78 (arithmetic_operators -> minus .)
    close_par       reduce using rule 78 (arithmetic_operators -> minus .)
    close_brace     reduce using rule 78 (arithmetic_operators -> minus .)


state 119

    (79) arithmetic_operators -> times .

    id              reduce using rule 79 (arithmetic_operators -> times .)
    lit_intposi     reduce using rule 79 (arithmetic_operators -> times .)
    lit_intnega     reduce using rule 79 (arithmetic_operators -> times .)
    lit_decposi     reduce using rule 79 (arithmetic_operators -> times .)
    lit_decnega     reduce using rule 79 (arithmetic_operators -> times .)
    open_par        reduce using rule 79 (arithmetic_operators -> times .)
    Sys_Call        reduce using rule 79 (arithmetic_operators -> times .)
    plus            reduce using rule 79 (arithmetic_operators -> times .)
    minus           reduce using rule 79 (arithmetic_operators -> times .)
    times           reduce using rule 79 (arithmetic_operators -> times .)
    divide          reduce using rule 79 (arithmetic_operators -> times .)
    divide_divide   reduce using rule 79 (arithmetic_operators -> times .)
    modulo          reduce using rule 79 (arithmetic_operators -> times .)
    times_times     reduce using rule 79 (arithmetic_operators -> times .)
    period          reduce using rule 79 (arithmetic_operators -> times .)
    For             reduce using rule 79 (arithmetic_operators -> times .)
    While           reduce using rule 79 (arithmetic_operators -> times .)
    If              reduce using rule 79 (arithmetic_operators -> times .)
    Switch          reduce using rule 79 (arithmetic_operators -> times .)
    Absorb          reduce using rule 79 (arithmetic_operators -> times .)
    Discharge       reduce using rule 79 (arithmetic_operators -> times .)
    Link_End        reduce using rule 79 (arithmetic_operators -> times .)
    Sys             reduce using rule 79 (arithmetic_operators -> times .)
    $end            reduce using rule 79 (arithmetic_operators -> times .)
    Break           reduce using rule 79 (arithmetic_operators -> times .)
    Continue        reduce using rule 79 (arithmetic_operators -> times .)
    Avoid           reduce using rule 79 (arithmetic_operators -> times .)
    close_bracket   reduce using rule 79 (arithmetic_operators -> times .)
    Return          reduce using rule 79 (arithmetic_operators -> times .)
    greater_than    reduce using rule 79 (arithmetic_operators -> times .)
    less_than       reduce using rule 79 (arithmetic_operators -> times .)
    equal_equal     reduce using rule 79 (arithmetic_operators -> times .)
    not_equal       reduce using rule 79 (arithmetic_operators -> times .)
    great_than_equal reduce using rule 79 (arithmetic_operators -> times .)
    less_than_equal reduce using rule 79 (arithmetic_operators -> times .)
    comma           reduce using rule 79 (arithmetic_operators -> times .)
    Generate        reduce using rule 79 (arithmetic_operators -> times .)
    Struct          reduce using rule 79 (arithmetic_operators -> times .)
    Link_Start      reduce using rule 79 (arithmetic_operators -> times .)
    close_par       reduce using rule 79 (arithmetic_operators -> times .)
    close_brace     reduce using rule 79 (arithmetic_operators -> times .)


state 120

    (80) arithmetic_operators -> divide .

    id              reduce using rule 80 (arithmetic_operators -> divide .)
    lit_intposi     reduce using rule 80 (arithmetic_operators -> divide .)
    lit_intnega     reduce using rule 80 (arithmetic_operators -> divide .)
    lit_decposi     reduce using rule 80 (arithmetic_operators -> divide .)
    lit_decnega     reduce using rule 80 (arithmetic_operators -> divide .)
    open_par        reduce using rule 80 (arithmetic_operators -> divide .)
    Sys_Call        reduce using rule 80 (arithmetic_operators -> divide .)
    plus            reduce using rule 80 (arithmetic_operators -> divide .)
    minus           reduce using rule 80 (arithmetic_operators -> divide .)
    times           reduce using rule 80 (arithmetic_operators -> divide .)
    divide          reduce using rule 80 (arithmetic_operators -> divide .)
    divide_divide   reduce using rule 80 (arithmetic_operators -> divide .)
    modulo          reduce using rule 80 (arithmetic_operators -> divide .)
    times_times     reduce using rule 80 (arithmetic_operators -> divide .)
    period          reduce using rule 80 (arithmetic_operators -> divide .)
    For             reduce using rule 80 (arithmetic_operators -> divide .)
    While           reduce using rule 80 (arithmetic_operators -> divide .)
    If              reduce using rule 80 (arithmetic_operators -> divide .)
    Switch          reduce using rule 80 (arithmetic_operators -> divide .)
    Absorb          reduce using rule 80 (arithmetic_operators -> divide .)
    Discharge       reduce using rule 80 (arithmetic_operators -> divide .)
    Link_End        reduce using rule 80 (arithmetic_operators -> divide .)
    Sys             reduce using rule 80 (arithmetic_operators -> divide .)
    $end            reduce using rule 80 (arithmetic_operators -> divide .)
    Break           reduce using rule 80 (arithmetic_operators -> divide .)
    Continue        reduce using rule 80 (arithmetic_operators -> divide .)
    Avoid           reduce using rule 80 (arithmetic_operators -> divide .)
    close_bracket   reduce using rule 80 (arithmetic_operators -> divide .)
    Return          reduce using rule 80 (arithmetic_operators -> divide .)
    greater_than    reduce using rule 80 (arithmetic_operators -> divide .)
    less_than       reduce using rule 80 (arithmetic_operators -> divide .)
    equal_equal     reduce using rule 80 (arithmetic_operators -> divide .)
    not_equal       reduce using rule 80 (arithmetic_operators -> divide .)
    great_than_equal reduce using rule 80 (arithmetic_operators -> divide .)
    less_than_equal reduce using rule 80 (arithmetic_operators -> divide .)
    comma           reduce using rule 80 (arithmetic_operators -> divide .)
    Generate        reduce using rule 80 (arithmetic_operators -> divide .)
    Struct          reduce using rule 80 (arithmetic_operators -> divide .)
    Link_Start      reduce using rule 80 (arithmetic_operators -> divide .)
    close_par       reduce using rule 80 (arithmetic_operators -> divide .)
    close_brace     reduce using rule 80 (arithmetic_operators -> divide .)


state 121

    (81) arithmetic_operators -> divide_divide .

    id              reduce using rule 81 (arithmetic_operators -> divide_divide .)
    lit_intposi     reduce using rule 81 (arithmetic_operators -> divide_divide .)
    lit_intnega     reduce using rule 81 (arithmetic_operators -> divide_divide .)
    lit_decposi     reduce using rule 81 (arithmetic_operators -> divide_divide .)
    lit_decnega     reduce using rule 81 (arithmetic_operators -> divide_divide .)
    open_par        reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Sys_Call        reduce using rule 81 (arithmetic_operators -> divide_divide .)
    plus            reduce using rule 81 (arithmetic_operators -> divide_divide .)
    minus           reduce using rule 81 (arithmetic_operators -> divide_divide .)
    times           reduce using rule 81 (arithmetic_operators -> divide_divide .)
    divide          reduce using rule 81 (arithmetic_operators -> divide_divide .)
    divide_divide   reduce using rule 81 (arithmetic_operators -> divide_divide .)
    modulo          reduce using rule 81 (arithmetic_operators -> divide_divide .)
    times_times     reduce using rule 81 (arithmetic_operators -> divide_divide .)
    period          reduce using rule 81 (arithmetic_operators -> divide_divide .)
    For             reduce using rule 81 (arithmetic_operators -> divide_divide .)
    While           reduce using rule 81 (arithmetic_operators -> divide_divide .)
    If              reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Switch          reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Absorb          reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Discharge       reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Link_End        reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Sys             reduce using rule 81 (arithmetic_operators -> divide_divide .)
    $end            reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Break           reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Continue        reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Avoid           reduce using rule 81 (arithmetic_operators -> divide_divide .)
    close_bracket   reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Return          reduce using rule 81 (arithmetic_operators -> divide_divide .)
    greater_than    reduce using rule 81 (arithmetic_operators -> divide_divide .)
    less_than       reduce using rule 81 (arithmetic_operators -> divide_divide .)
    equal_equal     reduce using rule 81 (arithmetic_operators -> divide_divide .)
    not_equal       reduce using rule 81 (arithmetic_operators -> divide_divide .)
    great_than_equal reduce using rule 81 (arithmetic_operators -> divide_divide .)
    less_than_equal reduce using rule 81 (arithmetic_operators -> divide_divide .)
    comma           reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Generate        reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Struct          reduce using rule 81 (arithmetic_operators -> divide_divide .)
    Link_Start      reduce using rule 81 (arithmetic_operators -> divide_divide .)
    close_par       reduce using rule 81 (arithmetic_operators -> divide_divide .)
    close_brace     reduce using rule 81 (arithmetic_operators -> divide_divide .)


state 122

    (82) arithmetic_operators -> modulo .

    id              reduce using rule 82 (arithmetic_operators -> modulo .)
    lit_intposi     reduce using rule 82 (arithmetic_operators -> modulo .)
    lit_intnega     reduce using rule 82 (arithmetic_operators -> modulo .)
    lit_decposi     reduce using rule 82 (arithmetic_operators -> modulo .)
    lit_decnega     reduce using rule 82 (arithmetic_operators -> modulo .)
    open_par        reduce using rule 82 (arithmetic_operators -> modulo .)
    Sys_Call        reduce using rule 82 (arithmetic_operators -> modulo .)
    plus            reduce using rule 82 (arithmetic_operators -> modulo .)
    minus           reduce using rule 82 (arithmetic_operators -> modulo .)
    times           reduce using rule 82 (arithmetic_operators -> modulo .)
    divide          reduce using rule 82 (arithmetic_operators -> modulo .)
    divide_divide   reduce using rule 82 (arithmetic_operators -> modulo .)
    modulo          reduce using rule 82 (arithmetic_operators -> modulo .)
    times_times     reduce using rule 82 (arithmetic_operators -> modulo .)
    period          reduce using rule 82 (arithmetic_operators -> modulo .)
    For             reduce using rule 82 (arithmetic_operators -> modulo .)
    While           reduce using rule 82 (arithmetic_operators -> modulo .)
    If              reduce using rule 82 (arithmetic_operators -> modulo .)
    Switch          reduce using rule 82 (arithmetic_operators -> modulo .)
    Absorb          reduce using rule 82 (arithmetic_operators -> modulo .)
    Discharge       reduce using rule 82 (arithmetic_operators -> modulo .)
    Link_End        reduce using rule 82 (arithmetic_operators -> modulo .)
    Sys             reduce using rule 82 (arithmetic_operators -> modulo .)
    $end            reduce using rule 82 (arithmetic_operators -> modulo .)
    Break           reduce using rule 82 (arithmetic_operators -> modulo .)
    Continue        reduce using rule 82 (arithmetic_operators -> modulo .)
    Avoid           reduce using rule 82 (arithmetic_operators -> modulo .)
    close_bracket   reduce using rule 82 (arithmetic_operators -> modulo .)
    Return          reduce using rule 82 (arithmetic_operators -> modulo .)
    greater_than    reduce using rule 82 (arithmetic_operators -> modulo .)
    less_than       reduce using rule 82 (arithmetic_operators -> modulo .)
    equal_equal     reduce using rule 82 (arithmetic_operators -> modulo .)
    not_equal       reduce using rule 82 (arithmetic_operators -> modulo .)
    great_than_equal reduce using rule 82 (arithmetic_operators -> modulo .)
    less_than_equal reduce using rule 82 (arithmetic_operators -> modulo .)
    comma           reduce using rule 82 (arithmetic_operators -> modulo .)
    Generate        reduce using rule 82 (arithmetic_operators -> modulo .)
    Struct          reduce using rule 82 (arithmetic_operators -> modulo .)
    Link_Start      reduce using rule 82 (arithmetic_operators -> modulo .)
    close_par       reduce using rule 82 (arithmetic_operators -> modulo .)
    close_brace     reduce using rule 82 (arithmetic_operators -> modulo .)


state 123

    (83) arithmetic_operators -> times_times .

    id              reduce using rule 83 (arithmetic_operators -> times_times .)
    lit_intposi     reduce using rule 83 (arithmetic_operators -> times_times .)
    lit_intnega     reduce using rule 83 (arithmetic_operators -> times_times .)
    lit_decposi     reduce using rule 83 (arithmetic_operators -> times_times .)
    lit_decnega     reduce using rule 83 (arithmetic_operators -> times_times .)
    open_par        reduce using rule 83 (arithmetic_operators -> times_times .)
    Sys_Call        reduce using rule 83 (arithmetic_operators -> times_times .)
    plus            reduce using rule 83 (arithmetic_operators -> times_times .)
    minus           reduce using rule 83 (arithmetic_operators -> times_times .)
    times           reduce using rule 83 (arithmetic_operators -> times_times .)
    divide          reduce using rule 83 (arithmetic_operators -> times_times .)
    divide_divide   reduce using rule 83 (arithmetic_operators -> times_times .)
    modulo          reduce using rule 83 (arithmetic_operators -> times_times .)
    times_times     reduce using rule 83 (arithmetic_operators -> times_times .)
    period          reduce using rule 83 (arithmetic_operators -> times_times .)
    For             reduce using rule 83 (arithmetic_operators -> times_times .)
    While           reduce using rule 83 (arithmetic_operators -> times_times .)
    If              reduce using rule 83 (arithmetic_operators -> times_times .)
    Switch          reduce using rule 83 (arithmetic_operators -> times_times .)
    Absorb          reduce using rule 83 (arithmetic_operators -> times_times .)
    Discharge       reduce using rule 83 (arithmetic_operators -> times_times .)
    Link_End        reduce using rule 83 (arithmetic_operators -> times_times .)
    Sys             reduce using rule 83 (arithmetic_operators -> times_times .)
    $end            reduce using rule 83 (arithmetic_operators -> times_times .)
    Break           reduce using rule 83 (arithmetic_operators -> times_times .)
    Continue        reduce using rule 83 (arithmetic_operators -> times_times .)
    Avoid           reduce using rule 83 (arithmetic_operators -> times_times .)
    close_bracket   reduce using rule 83 (arithmetic_operators -> times_times .)
    Return          reduce using rule 83 (arithmetic_operators -> times_times .)
    greater_than    reduce using rule 83 (arithmetic_operators -> times_times .)
    less_than       reduce using rule 83 (arithmetic_operators -> times_times .)
    equal_equal     reduce using rule 83 (arithmetic_operators -> times_times .)
    not_equal       reduce using rule 83 (arithmetic_operators -> times_times .)
    great_than_equal reduce using rule 83 (arithmetic_operators -> times_times .)
    less_than_equal reduce using rule 83 (arithmetic_operators -> times_times .)
    comma           reduce using rule 83 (arithmetic_operators -> times_times .)
    Generate        reduce using rule 83 (arithmetic_operators -> times_times .)
    Struct          reduce using rule 83 (arithmetic_operators -> times_times .)
    Link_Start      reduce using rule 83 (arithmetic_operators -> times_times .)
    close_par       reduce using rule 83 (arithmetic_operators -> times_times .)
    close_brace     reduce using rule 83 (arithmetic_operators -> times_times .)


state 124

    (56) num_value -> id_array id_struct .

    plus            reduce using rule 56 (num_value -> id_array id_struct .)
    minus           reduce using rule 56 (num_value -> id_array id_struct .)
    times           reduce using rule 56 (num_value -> id_array id_struct .)
    divide          reduce using rule 56 (num_value -> id_array id_struct .)
    divide_divide   reduce using rule 56 (num_value -> id_array id_struct .)
    modulo          reduce using rule 56 (num_value -> id_array id_struct .)
    times_times     reduce using rule 56 (num_value -> id_array id_struct .)
    id              reduce using rule 56 (num_value -> id_array id_struct .)
    For             reduce using rule 56 (num_value -> id_array id_struct .)
    While           reduce using rule 56 (num_value -> id_array id_struct .)
    If              reduce using rule 56 (num_value -> id_array id_struct .)
    Switch          reduce using rule 56 (num_value -> id_array id_struct .)
    Sys_Call        reduce using rule 56 (num_value -> id_array id_struct .)
    Absorb          reduce using rule 56 (num_value -> id_array id_struct .)
    Discharge       reduce using rule 56 (num_value -> id_array id_struct .)
    Link_End        reduce using rule 56 (num_value -> id_array id_struct .)
    Sys             reduce using rule 56 (num_value -> id_array id_struct .)
    $end            reduce using rule 56 (num_value -> id_array id_struct .)
    Break           reduce using rule 56 (num_value -> id_array id_struct .)
    Continue        reduce using rule 56 (num_value -> id_array id_struct .)
    Avoid           reduce using rule 56 (num_value -> id_array id_struct .)
    close_bracket   reduce using rule 56 (num_value -> id_array id_struct .)
    Return          reduce using rule 56 (num_value -> id_array id_struct .)
    close_brace     reduce using rule 56 (num_value -> id_array id_struct .)
    greater_than    reduce using rule 56 (num_value -> id_array id_struct .)
    less_than       reduce using rule 56 (num_value -> id_array id_struct .)
    equal_equal     reduce using rule 56 (num_value -> id_array id_struct .)
    not_equal       reduce using rule 56 (num_value -> id_array id_struct .)
    great_than_equal reduce using rule 56 (num_value -> id_array id_struct .)
    less_than_equal reduce using rule 56 (num_value -> id_array id_struct .)
    comma           reduce using rule 56 (num_value -> id_array id_struct .)
    Generate        reduce using rule 56 (num_value -> id_array id_struct .)
    Struct          reduce using rule 56 (num_value -> id_array id_struct .)
    Link_Start      reduce using rule 56 (num_value -> id_array id_struct .)
    close_par       reduce using rule 56 (num_value -> id_array id_struct .)


state 125

    (75) arithmetic_expression -> open_par arithmetic_expression . close_par
    (58) num_value -> arithmetic_expression .

    close_par       shift and go to state 180
    plus            reduce using rule 58 (num_value -> arithmetic_expression .)
    minus           reduce using rule 58 (num_value -> arithmetic_expression .)
    times           reduce using rule 58 (num_value -> arithmetic_expression .)
    divide          reduce using rule 58 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 58 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 58 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 58 (num_value -> arithmetic_expression .)
    greater_than    reduce using rule 58 (num_value -> arithmetic_expression .)
    less_than       reduce using rule 58 (num_value -> arithmetic_expression .)
    equal_equal     reduce using rule 58 (num_value -> arithmetic_expression .)
    not_equal       reduce using rule 58 (num_value -> arithmetic_expression .)
    great_than_equal reduce using rule 58 (num_value -> arithmetic_expression .)
    less_than_equal reduce using rule 58 (num_value -> arithmetic_expression .)


state 126

    (76) arithmetic_expression -> num_value . arithmetic_operators num_value
    (77) arithmetic_operators -> . plus
    (78) arithmetic_operators -> . minus
    (79) arithmetic_operators -> . times
    (80) arithmetic_operators -> . divide
    (81) arithmetic_operators -> . divide_divide
    (82) arithmetic_operators -> . modulo
    (83) arithmetic_operators -> . times_times

    plus            shift and go to state 117
    minus           shift and go to state 118
    times           shift and go to state 119
    divide          shift and go to state 120
    divide_divide   shift and go to state 121
    modulo          shift and go to state 122
    times_times     shift and go to state 123

    arithmetic_operators           shift and go to state 116

state 127

    (8) struct_dec -> Struct id open_bracket struct_element1 struct_element2 . close_bracket id_array1

    close_bracket   shift and go to state 181


state 128

    (9) struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket . id_array1
    (66) id_array1 -> . id_array id_array2
    (67) id_array1 -> .
    (61) id_array -> . id array
    (62) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 62 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 62 (id_array -> .)
    id              shift and go to state 68
    comma           reduce using rule 62 (id_array -> .)
    Struct          reduce using rule 62 (id_array -> .)
    Generate        reduce using rule 62 (id_array -> .)
    Link_Start      reduce using rule 62 (id_array -> .)
    For             reduce using rule 62 (id_array -> .)
    While           reduce using rule 62 (id_array -> .)
    If              reduce using rule 62 (id_array -> .)
    Switch          reduce using rule 62 (id_array -> .)
    Sys_Call        reduce using rule 62 (id_array -> .)
    Absorb          reduce using rule 62 (id_array -> .)
    Discharge       reduce using rule 62 (id_array -> .)
    Link_End        reduce using rule 62 (id_array -> .)
    Sys             reduce using rule 62 (id_array -> .)
    $end            reduce using rule 62 (id_array -> .)

  ! Struct          [ reduce using rule 67 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 67 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 67 (id_array1 -> .) ]
  ! id              [ reduce using rule 67 (id_array1 -> .) ]
  ! For             [ reduce using rule 67 (id_array1 -> .) ]
  ! While           [ reduce using rule 67 (id_array1 -> .) ]
  ! If              [ reduce using rule 67 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 67 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 67 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 67 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 67 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 67 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 67 (id_array1 -> .) ]
  ! $end            [ reduce using rule 67 (id_array1 -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]

    id_array1                      shift and go to state 182
    id_array                       shift and go to state 183

state 129

    (25) struct_element2 -> comma struct_element1 . struct_element2
    (25) struct_element2 -> . comma struct_element1 struct_element2
    (26) struct_element2 -> .

    comma           shift and go to state 84
    close_bracket   reduce using rule 26 (struct_element2 -> .)

    struct_element2                shift and go to state 184

state 130

    (17) id_array_dec -> id id_array_dec2 .

    comma           reduce using rule 17 (id_array_dec -> id id_array_dec2 .)
    close_bracket   reduce using rule 17 (id_array_dec -> id id_array_dec2 .)


state 131

    (19) id_array_dec2 -> id_dec1 .

    comma           reduce using rule 19 (id_array_dec2 -> id_dec1 .)
    close_bracket   reduce using rule 19 (id_array_dec2 -> id_dec1 .)


state 132

    (20) id_array_dec2 -> open_brace . lit_intposi close_brace array_dec1

    lit_intposi     shift and go to state 185


state 133

    (21) id_dec1 -> comma . id id_dec1

    id              shift and go to state 186


state 134

    (32) id_array_const -> id id_array_const2 .

    Generate        reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Struct          reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Link_Start      reduce using rule 32 (id_array_const -> id id_array_const2 .)
    id              reduce using rule 32 (id_array_const -> id id_array_const2 .)
    For             reduce using rule 32 (id_array_const -> id id_array_const2 .)
    While           reduce using rule 32 (id_array_const -> id id_array_const2 .)
    If              reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Switch          reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Sys_Call        reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Absorb          reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Discharge       reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Link_End        reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Sys             reduce using rule 32 (id_array_const -> id id_array_const2 .)
    $end            reduce using rule 32 (id_array_const -> id id_array_const2 .)
    Return          reduce using rule 32 (id_array_const -> id id_array_const2 .)
    close_bracket   reduce using rule 32 (id_array_const -> id id_array_const2 .)


state 135

    (34) id_array_const2 -> open_brace . lit_intposi close_brace equal open_brace value1 close_brace array_const1

    lit_intposi     shift and go to state 187


state 136

    (35) id_array_const2 -> equal . value id_const1
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    Generate        reduce using rule 55 (value -> .)
    Struct          reduce using rule 55 (value -> .)
    Link_Start      reduce using rule 55 (value -> .)
    For             reduce using rule 55 (value -> .)
    While           reduce using rule 55 (value -> .)
    If              reduce using rule 55 (value -> .)
    Switch          reduce using rule 55 (value -> .)
    Absorb          reduce using rule 55 (value -> .)
    Discharge       reduce using rule 55 (value -> .)
    Link_End        reduce using rule 55 (value -> .)
    Sys             reduce using rule 55 (value -> .)
    $end            reduce using rule 55 (value -> .)
    Return          reduce using rule 55 (value -> .)
    close_bracket   reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 55 (value -> .) ]
  ! Sys_Call        [ reduce using rule 55 (value -> .) ]
  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! Generate        [ reduce using rule 60 (num_value -> .) ]
  ! Struct          [ reduce using rule 60 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 60 (num_value -> .) ]
  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! For             [ reduce using rule 60 (num_value -> .) ]
  ! While           [ reduce using rule 60 (num_value -> .) ]
  ! If              [ reduce using rule 60 (num_value -> .) ]
  ! Switch          [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! Absorb          [ reduce using rule 60 (num_value -> .) ]
  ! Discharge       [ reduce using rule 60 (num_value -> .) ]
  ! Link_End        [ reduce using rule 60 (num_value -> .) ]
  ! Sys             [ reduce using rule 60 (num_value -> .) ]
  ! $end            [ reduce using rule 60 (num_value -> .) ]
  ! Return          [ reduce using rule 60 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! Generate        [ reduce using rule 62 (id_array -> .) ]
  ! Struct          [ reduce using rule 62 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! Generate        [ reduce using rule 74 (literals -> .) ]
  ! Struct          [ reduce using rule 74 (literals -> .) ]
  ! Link_Start      [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]

    value                          shift and go to state 188
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 137

    (42) id_array_var2 -> var_init id_var1 .

    Generate        reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Struct          reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Link_Start      reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    id              reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    For             reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    While           reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    If              reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Switch          reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Sys_Call        reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Absorb          reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Discharge       reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Link_End        reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Sys             reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    $end            reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    Return          reduce using rule 42 (id_array_var2 -> var_init id_var1 .)
    close_bracket   reduce using rule 42 (id_array_var2 -> var_init id_var1 .)


state 138

    (46) id_var1 -> comma . id var_init id_var1

    id              shift and go to state 189


state 139

    (43) id_array_var2 -> open_brace lit_intposi . close_brace array_init array_var1

    close_brace     shift and go to state 190


state 140

    (44) var_init -> equal value . id_var1
    (46) id_var1 -> . comma id var_init id_var1
    (47) id_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 138
    Generate        reduce using rule 47 (id_var1 -> .)
    Struct          reduce using rule 47 (id_var1 -> .)
    Link_Start      reduce using rule 47 (id_var1 -> .)
    id              reduce using rule 47 (id_var1 -> .)
    For             reduce using rule 47 (id_var1 -> .)
    While           reduce using rule 47 (id_var1 -> .)
    If              reduce using rule 47 (id_var1 -> .)
    Switch          reduce using rule 47 (id_var1 -> .)
    Sys_Call        reduce using rule 47 (id_var1 -> .)
    Absorb          reduce using rule 47 (id_var1 -> .)
    Discharge       reduce using rule 47 (id_var1 -> .)
    Link_End        reduce using rule 47 (id_var1 -> .)
    Sys             reduce using rule 47 (id_var1 -> .)
    $end            reduce using rule 47 (id_var1 -> .)
    Return          reduce using rule 47 (id_var1 -> .)
    close_bracket   reduce using rule 47 (id_var1 -> .)

  ! comma           [ reduce using rule 47 (id_var1 -> .) ]

    id_var1                        shift and go to state 191

state 141

    (1) program -> global_dec Link_Start declare_statements statements Link_End functions .

    $end            reduce using rule 1 (program -> global_dec Link_Start declare_statements statements Link_End functions .)


state 142

    (176) functions -> Sys id open_par . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (178) parameters -> . data_type id more_parameters
    (179) parameters -> .
    (12) data_type -> . Integer
    (13) data_type -> . Decimal
    (14) data_type -> . String
    (15) data_type -> . Boolean
    (16) data_type -> .

    close_par       reduce using rule 179 (parameters -> .)
    Integer         shift and go to state 16
    Decimal         shift and go to state 17
    String          shift and go to state 18
    Boolean         shift and go to state 19
    id              reduce using rule 16 (data_type -> .)

    parameters                     shift and go to state 192
    data_type                      shift and go to state 193

state 143

    (100) assignment_statements2 -> array id_struct assignment_exp .

    id              reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    For             reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    While           reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    If              reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Switch          reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Sys_Call        reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Absorb          reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Discharge       reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Link_End        reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Sys             reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    $end            reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Break           reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Continue        reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Avoid           reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    close_bracket   reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)
    Return          reduce using rule 100 (assignment_statements2 -> array id_struct assignment_exp .)


state 144

    (102) assignment_exp -> assignment_operators . num_value
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    For             reduce using rule 60 (num_value -> .)
    While           reduce using rule 60 (num_value -> .)
    If              reduce using rule 60 (num_value -> .)
    Switch          reduce using rule 60 (num_value -> .)
    Absorb          reduce using rule 60 (num_value -> .)
    Discharge       reduce using rule 60 (num_value -> .)
    Link_End        reduce using rule 60 (num_value -> .)
    Sys             reduce using rule 60 (num_value -> .)
    $end            reduce using rule 60 (num_value -> .)
    Break           reduce using rule 60 (num_value -> .)
    Continue        reduce using rule 60 (num_value -> .)
    Avoid           reduce using rule 60 (num_value -> .)
    close_bracket   reduce using rule 60 (num_value -> .)
    Return          reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Break           [ reduce using rule 62 (id_array -> .) ]
  ! Continue        [ reduce using rule 62 (id_array -> .) ]
  ! Avoid           [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Break           [ reduce using rule 74 (literals -> .) ]
  ! Continue        [ reduce using rule 74 (literals -> .) ]
  ! Avoid           [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]

    num_value                      shift and go to state 194
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 145

    (103) assignment_exp -> equal . assign_value
    (105) assign_value -> . num_value
    (106) assign_value -> . more_id value
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (107) more_id -> . id_array id_struct equal more_id
    (108) more_id -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for For resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for period resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for lit_intposi resolved as shift
  ! shift/reduce conflict for lit_intnega resolved as shift
  ! shift/reduce conflict for lit_decposi resolved as shift
  ! shift/reduce conflict for lit_decnega resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for open_par resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    For             reduce using rule 60 (num_value -> .)
    While           reduce using rule 60 (num_value -> .)
    If              reduce using rule 60 (num_value -> .)
    Switch          reduce using rule 60 (num_value -> .)
    Absorb          reduce using rule 60 (num_value -> .)
    Discharge       reduce using rule 60 (num_value -> .)
    Link_End        reduce using rule 60 (num_value -> .)
    Sys             reduce using rule 60 (num_value -> .)
    $end            reduce using rule 60 (num_value -> .)
    Break           reduce using rule 60 (num_value -> .)
    Continue        reduce using rule 60 (num_value -> .)
    Avoid           reduce using rule 60 (num_value -> .)
    close_bracket   reduce using rule 60 (num_value -> .)
    Return          reduce using rule 60 (num_value -> .)
    lit_str         reduce using rule 108 (more_id -> .)
    lit_bool        reduce using rule 108 (more_id -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    equal           reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! id              [ reduce using rule 108 (more_id -> .) ]
  ! lit_intposi     [ reduce using rule 108 (more_id -> .) ]
  ! lit_intnega     [ reduce using rule 108 (more_id -> .) ]
  ! lit_decposi     [ reduce using rule 108 (more_id -> .) ]
  ! lit_decnega     [ reduce using rule 108 (more_id -> .) ]
  ! open_par        [ reduce using rule 108 (more_id -> .) ]
  ! Sys_Call        [ reduce using rule 108 (more_id -> .) ]
  ! plus            [ reduce using rule 108 (more_id -> .) ]
  ! minus           [ reduce using rule 108 (more_id -> .) ]
  ! times           [ reduce using rule 108 (more_id -> .) ]
  ! divide          [ reduce using rule 108 (more_id -> .) ]
  ! divide_divide   [ reduce using rule 108 (more_id -> .) ]
  ! modulo          [ reduce using rule 108 (more_id -> .) ]
  ! times_times     [ reduce using rule 108 (more_id -> .) ]
  ! period          [ reduce using rule 108 (more_id -> .) ]
  ! For             [ reduce using rule 108 (more_id -> .) ]
  ! While           [ reduce using rule 108 (more_id -> .) ]
  ! If              [ reduce using rule 108 (more_id -> .) ]
  ! Switch          [ reduce using rule 108 (more_id -> .) ]
  ! Absorb          [ reduce using rule 108 (more_id -> .) ]
  ! Discharge       [ reduce using rule 108 (more_id -> .) ]
  ! Link_End        [ reduce using rule 108 (more_id -> .) ]
  ! Sys             [ reduce using rule 108 (more_id -> .) ]
  ! $end            [ reduce using rule 108 (more_id -> .) ]
  ! Break           [ reduce using rule 108 (more_id -> .) ]
  ! Continue        [ reduce using rule 108 (more_id -> .) ]
  ! Avoid           [ reduce using rule 108 (more_id -> .) ]
  ! close_bracket   [ reduce using rule 108 (more_id -> .) ]
  ! Return          [ reduce using rule 108 (more_id -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Break           [ reduce using rule 62 (id_array -> .) ]
  ! Continue        [ reduce using rule 62 (id_array -> .) ]
  ! Avoid           [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Break           [ reduce using rule 74 (literals -> .) ]
  ! Continue        [ reduce using rule 74 (literals -> .) ]
  ! Avoid           [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]

    assign_value                   shift and go to state 195
    num_value                      shift and go to state 196
    more_id                        shift and go to state 197
    id_array                       shift and go to state 198
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 146

    (109) assignment_operators -> plus_equal .

    id              reduce using rule 109 (assignment_operators -> plus_equal .)
    lit_intposi     reduce using rule 109 (assignment_operators -> plus_equal .)
    lit_intnega     reduce using rule 109 (assignment_operators -> plus_equal .)
    lit_decposi     reduce using rule 109 (assignment_operators -> plus_equal .)
    lit_decnega     reduce using rule 109 (assignment_operators -> plus_equal .)
    open_par        reduce using rule 109 (assignment_operators -> plus_equal .)
    Sys_Call        reduce using rule 109 (assignment_operators -> plus_equal .)
    plus            reduce using rule 109 (assignment_operators -> plus_equal .)
    minus           reduce using rule 109 (assignment_operators -> plus_equal .)
    times           reduce using rule 109 (assignment_operators -> plus_equal .)
    divide          reduce using rule 109 (assignment_operators -> plus_equal .)
    divide_divide   reduce using rule 109 (assignment_operators -> plus_equal .)
    modulo          reduce using rule 109 (assignment_operators -> plus_equal .)
    times_times     reduce using rule 109 (assignment_operators -> plus_equal .)
    period          reduce using rule 109 (assignment_operators -> plus_equal .)
    For             reduce using rule 109 (assignment_operators -> plus_equal .)
    While           reduce using rule 109 (assignment_operators -> plus_equal .)
    If              reduce using rule 109 (assignment_operators -> plus_equal .)
    Switch          reduce using rule 109 (assignment_operators -> plus_equal .)
    Absorb          reduce using rule 109 (assignment_operators -> plus_equal .)
    Discharge       reduce using rule 109 (assignment_operators -> plus_equal .)
    Link_End        reduce using rule 109 (assignment_operators -> plus_equal .)
    Sys             reduce using rule 109 (assignment_operators -> plus_equal .)
    $end            reduce using rule 109 (assignment_operators -> plus_equal .)
    Break           reduce using rule 109 (assignment_operators -> plus_equal .)
    Continue        reduce using rule 109 (assignment_operators -> plus_equal .)
    Avoid           reduce using rule 109 (assignment_operators -> plus_equal .)
    close_bracket   reduce using rule 109 (assignment_operators -> plus_equal .)
    Return          reduce using rule 109 (assignment_operators -> plus_equal .)


state 147

    (110) assignment_operators -> minus_equal .

    id              reduce using rule 110 (assignment_operators -> minus_equal .)
    lit_intposi     reduce using rule 110 (assignment_operators -> minus_equal .)
    lit_intnega     reduce using rule 110 (assignment_operators -> minus_equal .)
    lit_decposi     reduce using rule 110 (assignment_operators -> minus_equal .)
    lit_decnega     reduce using rule 110 (assignment_operators -> minus_equal .)
    open_par        reduce using rule 110 (assignment_operators -> minus_equal .)
    Sys_Call        reduce using rule 110 (assignment_operators -> minus_equal .)
    plus            reduce using rule 110 (assignment_operators -> minus_equal .)
    minus           reduce using rule 110 (assignment_operators -> minus_equal .)
    times           reduce using rule 110 (assignment_operators -> minus_equal .)
    divide          reduce using rule 110 (assignment_operators -> minus_equal .)
    divide_divide   reduce using rule 110 (assignment_operators -> minus_equal .)
    modulo          reduce using rule 110 (assignment_operators -> minus_equal .)
    times_times     reduce using rule 110 (assignment_operators -> minus_equal .)
    period          reduce using rule 110 (assignment_operators -> minus_equal .)
    For             reduce using rule 110 (assignment_operators -> minus_equal .)
    While           reduce using rule 110 (assignment_operators -> minus_equal .)
    If              reduce using rule 110 (assignment_operators -> minus_equal .)
    Switch          reduce using rule 110 (assignment_operators -> minus_equal .)
    Absorb          reduce using rule 110 (assignment_operators -> minus_equal .)
    Discharge       reduce using rule 110 (assignment_operators -> minus_equal .)
    Link_End        reduce using rule 110 (assignment_operators -> minus_equal .)
    Sys             reduce using rule 110 (assignment_operators -> minus_equal .)
    $end            reduce using rule 110 (assignment_operators -> minus_equal .)
    Break           reduce using rule 110 (assignment_operators -> minus_equal .)
    Continue        reduce using rule 110 (assignment_operators -> minus_equal .)
    Avoid           reduce using rule 110 (assignment_operators -> minus_equal .)
    close_bracket   reduce using rule 110 (assignment_operators -> minus_equal .)
    Return          reduce using rule 110 (assignment_operators -> minus_equal .)


state 148

    (111) assignment_operators -> times_equal .

    id              reduce using rule 111 (assignment_operators -> times_equal .)
    lit_intposi     reduce using rule 111 (assignment_operators -> times_equal .)
    lit_intnega     reduce using rule 111 (assignment_operators -> times_equal .)
    lit_decposi     reduce using rule 111 (assignment_operators -> times_equal .)
    lit_decnega     reduce using rule 111 (assignment_operators -> times_equal .)
    open_par        reduce using rule 111 (assignment_operators -> times_equal .)
    Sys_Call        reduce using rule 111 (assignment_operators -> times_equal .)
    plus            reduce using rule 111 (assignment_operators -> times_equal .)
    minus           reduce using rule 111 (assignment_operators -> times_equal .)
    times           reduce using rule 111 (assignment_operators -> times_equal .)
    divide          reduce using rule 111 (assignment_operators -> times_equal .)
    divide_divide   reduce using rule 111 (assignment_operators -> times_equal .)
    modulo          reduce using rule 111 (assignment_operators -> times_equal .)
    times_times     reduce using rule 111 (assignment_operators -> times_equal .)
    period          reduce using rule 111 (assignment_operators -> times_equal .)
    For             reduce using rule 111 (assignment_operators -> times_equal .)
    While           reduce using rule 111 (assignment_operators -> times_equal .)
    If              reduce using rule 111 (assignment_operators -> times_equal .)
    Switch          reduce using rule 111 (assignment_operators -> times_equal .)
    Absorb          reduce using rule 111 (assignment_operators -> times_equal .)
    Discharge       reduce using rule 111 (assignment_operators -> times_equal .)
    Link_End        reduce using rule 111 (assignment_operators -> times_equal .)
    Sys             reduce using rule 111 (assignment_operators -> times_equal .)
    $end            reduce using rule 111 (assignment_operators -> times_equal .)
    Break           reduce using rule 111 (assignment_operators -> times_equal .)
    Continue        reduce using rule 111 (assignment_operators -> times_equal .)
    Avoid           reduce using rule 111 (assignment_operators -> times_equal .)
    close_bracket   reduce using rule 111 (assignment_operators -> times_equal .)
    Return          reduce using rule 111 (assignment_operators -> times_equal .)


state 149

    (112) assignment_operators -> divide_equal .

    id              reduce using rule 112 (assignment_operators -> divide_equal .)
    lit_intposi     reduce using rule 112 (assignment_operators -> divide_equal .)
    lit_intnega     reduce using rule 112 (assignment_operators -> divide_equal .)
    lit_decposi     reduce using rule 112 (assignment_operators -> divide_equal .)
    lit_decnega     reduce using rule 112 (assignment_operators -> divide_equal .)
    open_par        reduce using rule 112 (assignment_operators -> divide_equal .)
    Sys_Call        reduce using rule 112 (assignment_operators -> divide_equal .)
    plus            reduce using rule 112 (assignment_operators -> divide_equal .)
    minus           reduce using rule 112 (assignment_operators -> divide_equal .)
    times           reduce using rule 112 (assignment_operators -> divide_equal .)
    divide          reduce using rule 112 (assignment_operators -> divide_equal .)
    divide_divide   reduce using rule 112 (assignment_operators -> divide_equal .)
    modulo          reduce using rule 112 (assignment_operators -> divide_equal .)
    times_times     reduce using rule 112 (assignment_operators -> divide_equal .)
    period          reduce using rule 112 (assignment_operators -> divide_equal .)
    For             reduce using rule 112 (assignment_operators -> divide_equal .)
    While           reduce using rule 112 (assignment_operators -> divide_equal .)
    If              reduce using rule 112 (assignment_operators -> divide_equal .)
    Switch          reduce using rule 112 (assignment_operators -> divide_equal .)
    Absorb          reduce using rule 112 (assignment_operators -> divide_equal .)
    Discharge       reduce using rule 112 (assignment_operators -> divide_equal .)
    Link_End        reduce using rule 112 (assignment_operators -> divide_equal .)
    Sys             reduce using rule 112 (assignment_operators -> divide_equal .)
    $end            reduce using rule 112 (assignment_operators -> divide_equal .)
    Break           reduce using rule 112 (assignment_operators -> divide_equal .)
    Continue        reduce using rule 112 (assignment_operators -> divide_equal .)
    Avoid           reduce using rule 112 (assignment_operators -> divide_equal .)
    close_bracket   reduce using rule 112 (assignment_operators -> divide_equal .)
    Return          reduce using rule 112 (assignment_operators -> divide_equal .)


state 150

    (113) assignment_operators -> divide_divide_equal .

    id              reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    lit_intposi     reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    lit_intnega     reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    lit_decposi     reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    lit_decnega     reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    open_par        reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Sys_Call        reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    plus            reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    minus           reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    times           reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    divide          reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    divide_divide   reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    modulo          reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    times_times     reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    period          reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    For             reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    While           reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    If              reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Switch          reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Absorb          reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Discharge       reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Link_End        reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Sys             reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    $end            reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Break           reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Continue        reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Avoid           reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    close_bracket   reduce using rule 113 (assignment_operators -> divide_divide_equal .)
    Return          reduce using rule 113 (assignment_operators -> divide_divide_equal .)


state 151

    (114) assignment_operators -> modulo_equal .

    id              reduce using rule 114 (assignment_operators -> modulo_equal .)
    lit_intposi     reduce using rule 114 (assignment_operators -> modulo_equal .)
    lit_intnega     reduce using rule 114 (assignment_operators -> modulo_equal .)
    lit_decposi     reduce using rule 114 (assignment_operators -> modulo_equal .)
    lit_decnega     reduce using rule 114 (assignment_operators -> modulo_equal .)
    open_par        reduce using rule 114 (assignment_operators -> modulo_equal .)
    Sys_Call        reduce using rule 114 (assignment_operators -> modulo_equal .)
    plus            reduce using rule 114 (assignment_operators -> modulo_equal .)
    minus           reduce using rule 114 (assignment_operators -> modulo_equal .)
    times           reduce using rule 114 (assignment_operators -> modulo_equal .)
    divide          reduce using rule 114 (assignment_operators -> modulo_equal .)
    divide_divide   reduce using rule 114 (assignment_operators -> modulo_equal .)
    modulo          reduce using rule 114 (assignment_operators -> modulo_equal .)
    times_times     reduce using rule 114 (assignment_operators -> modulo_equal .)
    period          reduce using rule 114 (assignment_operators -> modulo_equal .)
    For             reduce using rule 114 (assignment_operators -> modulo_equal .)
    While           reduce using rule 114 (assignment_operators -> modulo_equal .)
    If              reduce using rule 114 (assignment_operators -> modulo_equal .)
    Switch          reduce using rule 114 (assignment_operators -> modulo_equal .)
    Absorb          reduce using rule 114 (assignment_operators -> modulo_equal .)
    Discharge       reduce using rule 114 (assignment_operators -> modulo_equal .)
    Link_End        reduce using rule 114 (assignment_operators -> modulo_equal .)
    Sys             reduce using rule 114 (assignment_operators -> modulo_equal .)
    $end            reduce using rule 114 (assignment_operators -> modulo_equal .)
    Break           reduce using rule 114 (assignment_operators -> modulo_equal .)
    Continue        reduce using rule 114 (assignment_operators -> modulo_equal .)
    Avoid           reduce using rule 114 (assignment_operators -> modulo_equal .)
    close_bracket   reduce using rule 114 (assignment_operators -> modulo_equal .)
    Return          reduce using rule 114 (assignment_operators -> modulo_equal .)


state 152

    (115) assignment_operators -> times_times_equal .

    id              reduce using rule 115 (assignment_operators -> times_times_equal .)
    lit_intposi     reduce using rule 115 (assignment_operators -> times_times_equal .)
    lit_intnega     reduce using rule 115 (assignment_operators -> times_times_equal .)
    lit_decposi     reduce using rule 115 (assignment_operators -> times_times_equal .)
    lit_decnega     reduce using rule 115 (assignment_operators -> times_times_equal .)
    open_par        reduce using rule 115 (assignment_operators -> times_times_equal .)
    Sys_Call        reduce using rule 115 (assignment_operators -> times_times_equal .)
    plus            reduce using rule 115 (assignment_operators -> times_times_equal .)
    minus           reduce using rule 115 (assignment_operators -> times_times_equal .)
    times           reduce using rule 115 (assignment_operators -> times_times_equal .)
    divide          reduce using rule 115 (assignment_operators -> times_times_equal .)
    divide_divide   reduce using rule 115 (assignment_operators -> times_times_equal .)
    modulo          reduce using rule 115 (assignment_operators -> times_times_equal .)
    times_times     reduce using rule 115 (assignment_operators -> times_times_equal .)
    period          reduce using rule 115 (assignment_operators -> times_times_equal .)
    For             reduce using rule 115 (assignment_operators -> times_times_equal .)
    While           reduce using rule 115 (assignment_operators -> times_times_equal .)
    If              reduce using rule 115 (assignment_operators -> times_times_equal .)
    Switch          reduce using rule 115 (assignment_operators -> times_times_equal .)
    Absorb          reduce using rule 115 (assignment_operators -> times_times_equal .)
    Discharge       reduce using rule 115 (assignment_operators -> times_times_equal .)
    Link_End        reduce using rule 115 (assignment_operators -> times_times_equal .)
    Sys             reduce using rule 115 (assignment_operators -> times_times_equal .)
    $end            reduce using rule 115 (assignment_operators -> times_times_equal .)
    Break           reduce using rule 115 (assignment_operators -> times_times_equal .)
    Continue        reduce using rule 115 (assignment_operators -> times_times_equal .)
    Avoid           reduce using rule 115 (assignment_operators -> times_times_equal .)
    close_bracket   reduce using rule 115 (assignment_operators -> times_times_equal .)
    Return          reduce using rule 115 (assignment_operators -> times_times_equal .)


state 153

    (84) id_struct -> period id_array .

    equal           reduce using rule 84 (id_struct -> period id_array .)
    plus_equal      reduce using rule 84 (id_struct -> period id_array .)
    minus_equal     reduce using rule 84 (id_struct -> period id_array .)
    times_equal     reduce using rule 84 (id_struct -> period id_array .)
    divide_equal    reduce using rule 84 (id_struct -> period id_array .)
    divide_divide_equal reduce using rule 84 (id_struct -> period id_array .)
    modulo_equal    reduce using rule 84 (id_struct -> period id_array .)
    times_times_equal reduce using rule 84 (id_struct -> period id_array .)
    id              reduce using rule 84 (id_struct -> period id_array .)
    For             reduce using rule 84 (id_struct -> period id_array .)
    While           reduce using rule 84 (id_struct -> period id_array .)
    If              reduce using rule 84 (id_struct -> period id_array .)
    Switch          reduce using rule 84 (id_struct -> period id_array .)
    Sys_Call        reduce using rule 84 (id_struct -> period id_array .)
    Absorb          reduce using rule 84 (id_struct -> period id_array .)
    Discharge       reduce using rule 84 (id_struct -> period id_array .)
    Link_End        reduce using rule 84 (id_struct -> period id_array .)
    Sys             reduce using rule 84 (id_struct -> period id_array .)
    $end            reduce using rule 84 (id_struct -> period id_array .)
    Break           reduce using rule 84 (id_struct -> period id_array .)
    Continue        reduce using rule 84 (id_struct -> period id_array .)
    Avoid           reduce using rule 84 (id_struct -> period id_array .)
    close_bracket   reduce using rule 84 (id_struct -> period id_array .)
    Return          reduce using rule 84 (id_struct -> period id_array .)
    plus            reduce using rule 84 (id_struct -> period id_array .)
    minus           reduce using rule 84 (id_struct -> period id_array .)
    times           reduce using rule 84 (id_struct -> period id_array .)
    divide          reduce using rule 84 (id_struct -> period id_array .)
    divide_divide   reduce using rule 84 (id_struct -> period id_array .)
    modulo          reduce using rule 84 (id_struct -> period id_array .)
    times_times     reduce using rule 84 (id_struct -> period id_array .)
    close_brace     reduce using rule 84 (id_struct -> period id_array .)
    greater_than    reduce using rule 84 (id_struct -> period id_array .)
    less_than       reduce using rule 84 (id_struct -> period id_array .)
    equal_equal     reduce using rule 84 (id_struct -> period id_array .)
    not_equal       reduce using rule 84 (id_struct -> period id_array .)
    great_than_equal reduce using rule 84 (id_struct -> period id_array .)
    less_than_equal reduce using rule 84 (id_struct -> period id_array .)
    comma           reduce using rule 84 (id_struct -> period id_array .)
    Generate        reduce using rule 84 (id_struct -> period id_array .)
    Struct          reduce using rule 84 (id_struct -> period id_array .)
    Link_Start      reduce using rule 84 (id_struct -> period id_array .)
    close_par       reduce using rule 84 (id_struct -> period id_array .)


state 154

    (101) assignment_statements2 -> open_brace lit_intposi close_brace . more_array equal open_brace value1 close_brace
    (116) more_array -> . equal id open_brace lit_intposi close_brace more_array
    (117) more_array -> .

  ! shift/reduce conflict for equal resolved as shift
    equal           shift and go to state 200

  ! equal           [ reduce using rule 117 (more_array -> .) ]

    more_array                     shift and go to state 199

state 155

    (63) array -> open_brace num_value close_brace .

    period          reduce using rule 63 (array -> open_brace num_value close_brace .)
    equal           reduce using rule 63 (array -> open_brace num_value close_brace .)
    plus_equal      reduce using rule 63 (array -> open_brace num_value close_brace .)
    minus_equal     reduce using rule 63 (array -> open_brace num_value close_brace .)
    times_equal     reduce using rule 63 (array -> open_brace num_value close_brace .)
    divide_equal    reduce using rule 63 (array -> open_brace num_value close_brace .)
    divide_divide_equal reduce using rule 63 (array -> open_brace num_value close_brace .)
    modulo_equal    reduce using rule 63 (array -> open_brace num_value close_brace .)
    times_times_equal reduce using rule 63 (array -> open_brace num_value close_brace .)
    id              reduce using rule 63 (array -> open_brace num_value close_brace .)
    For             reduce using rule 63 (array -> open_brace num_value close_brace .)
    While           reduce using rule 63 (array -> open_brace num_value close_brace .)
    If              reduce using rule 63 (array -> open_brace num_value close_brace .)
    Switch          reduce using rule 63 (array -> open_brace num_value close_brace .)
    Sys_Call        reduce using rule 63 (array -> open_brace num_value close_brace .)
    Absorb          reduce using rule 63 (array -> open_brace num_value close_brace .)
    Discharge       reduce using rule 63 (array -> open_brace num_value close_brace .)
    Link_End        reduce using rule 63 (array -> open_brace num_value close_brace .)
    Sys             reduce using rule 63 (array -> open_brace num_value close_brace .)
    $end            reduce using rule 63 (array -> open_brace num_value close_brace .)
    Break           reduce using rule 63 (array -> open_brace num_value close_brace .)
    Continue        reduce using rule 63 (array -> open_brace num_value close_brace .)
    Avoid           reduce using rule 63 (array -> open_brace num_value close_brace .)
    close_bracket   reduce using rule 63 (array -> open_brace num_value close_brace .)
    Return          reduce using rule 63 (array -> open_brace num_value close_brace .)
    plus            reduce using rule 63 (array -> open_brace num_value close_brace .)
    minus           reduce using rule 63 (array -> open_brace num_value close_brace .)
    times           reduce using rule 63 (array -> open_brace num_value close_brace .)
    divide          reduce using rule 63 (array -> open_brace num_value close_brace .)
    divide_divide   reduce using rule 63 (array -> open_brace num_value close_brace .)
    modulo          reduce using rule 63 (array -> open_brace num_value close_brace .)
    times_times     reduce using rule 63 (array -> open_brace num_value close_brace .)
    close_brace     reduce using rule 63 (array -> open_brace num_value close_brace .)
    greater_than    reduce using rule 63 (array -> open_brace num_value close_brace .)
    less_than       reduce using rule 63 (array -> open_brace num_value close_brace .)
    equal_equal     reduce using rule 63 (array -> open_brace num_value close_brace .)
    not_equal       reduce using rule 63 (array -> open_brace num_value close_brace .)
    great_than_equal reduce using rule 63 (array -> open_brace num_value close_brace .)
    less_than_equal reduce using rule 63 (array -> open_brace num_value close_brace .)
    comma           reduce using rule 63 (array -> open_brace num_value close_brace .)
    Generate        reduce using rule 63 (array -> open_brace num_value close_brace .)
    Struct          reduce using rule 63 (array -> open_brace num_value close_brace .)
    Link_Start      reduce using rule 63 (array -> open_brace num_value close_brace .)
    close_par       reduce using rule 63 (array -> open_brace num_value close_brace .)


state 156

    (118) for_statements -> For id In id . open_brace close_brace colon open_bracket inside_statements close_bracket

    open_brace      shift and go to state 201


state 157

    (75) arithmetic_expression -> open_par . arithmetic_expression close_par
    (143) logical_expression -> open_par . logical_operand close_par logical_operators open_par logical_operand close_par
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (144) logical_operand -> . Not open_par logical_operand close_par
    (145) logical_operand -> . relational_expression
    (146) logical_operand -> . logical_expression
    (147) logical_operand -> . lit_bool
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .

  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    open_par        shift and go to state 157
    Not             shift and go to state 159
    lit_bool        shift and go to state 162
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    arithmetic_expression          shift and go to state 125
    logical_operand                shift and go to state 158
    num_value                      shift and go to state 163
    relational_expression          shift and go to state 160
    logical_expression             shift and go to state 161
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    func_call                      shift and go to state 76
    value                          shift and go to state 109

state 158

    (143) logical_expression -> open_par logical_operand . close_par logical_operators open_par logical_operand close_par

    close_par       shift and go to state 202


state 159

    (144) logical_operand -> Not . open_par logical_operand close_par

    open_par        shift and go to state 203


state 160

    (145) logical_operand -> relational_expression .

    close_par       reduce using rule 145 (logical_operand -> relational_expression .)


state 161

    (146) logical_operand -> logical_expression .

    close_par       reduce using rule 146 (logical_operand -> logical_expression .)


state 162

    (147) logical_operand -> lit_bool .
    (54) value -> lit_bool .

    close_par       reduce using rule 147 (logical_operand -> lit_bool .)
    greater_than    reduce using rule 54 (value -> lit_bool .)
    less_than       reduce using rule 54 (value -> lit_bool .)
    equal_equal     reduce using rule 54 (value -> lit_bool .)
    not_equal       reduce using rule 54 (value -> lit_bool .)
    great_than_equal reduce using rule 54 (value -> lit_bool .)
    less_than_equal reduce using rule 54 (value -> lit_bool .)


state 163

    (76) arithmetic_expression -> num_value . arithmetic_operators num_value
    (52) value -> num_value .
    (77) arithmetic_operators -> . plus
    (78) arithmetic_operators -> . minus
    (79) arithmetic_operators -> . times
    (80) arithmetic_operators -> . divide
    (81) arithmetic_operators -> . divide_divide
    (82) arithmetic_operators -> . modulo
    (83) arithmetic_operators -> . times_times

    greater_than    reduce using rule 52 (value -> num_value .)
    less_than       reduce using rule 52 (value -> num_value .)
    equal_equal     reduce using rule 52 (value -> num_value .)
    not_equal       reduce using rule 52 (value -> num_value .)
    great_than_equal reduce using rule 52 (value -> num_value .)
    less_than_equal reduce using rule 52 (value -> num_value .)
    plus            shift and go to state 117
    minus           shift and go to state 118
    times           shift and go to state 119
    divide          shift and go to state 120
    divide_divide   shift and go to state 121
    modulo          shift and go to state 122
    times_times     shift and go to state 123

    arithmetic_operators           shift and go to state 116

state 164

    (120) while_statements -> While open_par condition close_par . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 204


state 165

    (131) condition -> Not open_par . condition_not close_par
    (133) condition_not -> . relational_expression
    (134) condition_not -> . logical_expression
    (135) condition_not -> . lit_bool
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    lit_bool        shift and go to state 208
    open_par        shift and go to state 103
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    condition_not                  shift and go to state 205
    relational_expression          shift and go to state 206
    logical_expression             shift and go to state 207
    value                          shift and go to state 109
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 166

    (136) relational_expression -> value relational_operators . value
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    close_par       reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! close_par       [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! close_par       [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! close_par       [ reduce using rule 74 (literals -> .) ]

    value                          shift and go to state 209
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 167

    (137) relational_operators -> greater_than .

    lit_str         reduce using rule 137 (relational_operators -> greater_than .)
    lit_bool        reduce using rule 137 (relational_operators -> greater_than .)
    id              reduce using rule 137 (relational_operators -> greater_than .)
    lit_intposi     reduce using rule 137 (relational_operators -> greater_than .)
    lit_intnega     reduce using rule 137 (relational_operators -> greater_than .)
    lit_decposi     reduce using rule 137 (relational_operators -> greater_than .)
    lit_decnega     reduce using rule 137 (relational_operators -> greater_than .)
    open_par        reduce using rule 137 (relational_operators -> greater_than .)
    Sys_Call        reduce using rule 137 (relational_operators -> greater_than .)
    plus            reduce using rule 137 (relational_operators -> greater_than .)
    minus           reduce using rule 137 (relational_operators -> greater_than .)
    times           reduce using rule 137 (relational_operators -> greater_than .)
    divide          reduce using rule 137 (relational_operators -> greater_than .)
    divide_divide   reduce using rule 137 (relational_operators -> greater_than .)
    modulo          reduce using rule 137 (relational_operators -> greater_than .)
    times_times     reduce using rule 137 (relational_operators -> greater_than .)
    period          reduce using rule 137 (relational_operators -> greater_than .)
    close_par       reduce using rule 137 (relational_operators -> greater_than .)


state 168

    (138) relational_operators -> less_than .

    lit_str         reduce using rule 138 (relational_operators -> less_than .)
    lit_bool        reduce using rule 138 (relational_operators -> less_than .)
    id              reduce using rule 138 (relational_operators -> less_than .)
    lit_intposi     reduce using rule 138 (relational_operators -> less_than .)
    lit_intnega     reduce using rule 138 (relational_operators -> less_than .)
    lit_decposi     reduce using rule 138 (relational_operators -> less_than .)
    lit_decnega     reduce using rule 138 (relational_operators -> less_than .)
    open_par        reduce using rule 138 (relational_operators -> less_than .)
    Sys_Call        reduce using rule 138 (relational_operators -> less_than .)
    plus            reduce using rule 138 (relational_operators -> less_than .)
    minus           reduce using rule 138 (relational_operators -> less_than .)
    times           reduce using rule 138 (relational_operators -> less_than .)
    divide          reduce using rule 138 (relational_operators -> less_than .)
    divide_divide   reduce using rule 138 (relational_operators -> less_than .)
    modulo          reduce using rule 138 (relational_operators -> less_than .)
    times_times     reduce using rule 138 (relational_operators -> less_than .)
    period          reduce using rule 138 (relational_operators -> less_than .)
    close_par       reduce using rule 138 (relational_operators -> less_than .)


state 169

    (139) relational_operators -> equal_equal .

    lit_str         reduce using rule 139 (relational_operators -> equal_equal .)
    lit_bool        reduce using rule 139 (relational_operators -> equal_equal .)
    id              reduce using rule 139 (relational_operators -> equal_equal .)
    lit_intposi     reduce using rule 139 (relational_operators -> equal_equal .)
    lit_intnega     reduce using rule 139 (relational_operators -> equal_equal .)
    lit_decposi     reduce using rule 139 (relational_operators -> equal_equal .)
    lit_decnega     reduce using rule 139 (relational_operators -> equal_equal .)
    open_par        reduce using rule 139 (relational_operators -> equal_equal .)
    Sys_Call        reduce using rule 139 (relational_operators -> equal_equal .)
    plus            reduce using rule 139 (relational_operators -> equal_equal .)
    minus           reduce using rule 139 (relational_operators -> equal_equal .)
    times           reduce using rule 139 (relational_operators -> equal_equal .)
    divide          reduce using rule 139 (relational_operators -> equal_equal .)
    divide_divide   reduce using rule 139 (relational_operators -> equal_equal .)
    modulo          reduce using rule 139 (relational_operators -> equal_equal .)
    times_times     reduce using rule 139 (relational_operators -> equal_equal .)
    period          reduce using rule 139 (relational_operators -> equal_equal .)
    close_par       reduce using rule 139 (relational_operators -> equal_equal .)


state 170

    (140) relational_operators -> not_equal .

    lit_str         reduce using rule 140 (relational_operators -> not_equal .)
    lit_bool        reduce using rule 140 (relational_operators -> not_equal .)
    id              reduce using rule 140 (relational_operators -> not_equal .)
    lit_intposi     reduce using rule 140 (relational_operators -> not_equal .)
    lit_intnega     reduce using rule 140 (relational_operators -> not_equal .)
    lit_decposi     reduce using rule 140 (relational_operators -> not_equal .)
    lit_decnega     reduce using rule 140 (relational_operators -> not_equal .)
    open_par        reduce using rule 140 (relational_operators -> not_equal .)
    Sys_Call        reduce using rule 140 (relational_operators -> not_equal .)
    plus            reduce using rule 140 (relational_operators -> not_equal .)
    minus           reduce using rule 140 (relational_operators -> not_equal .)
    times           reduce using rule 140 (relational_operators -> not_equal .)
    divide          reduce using rule 140 (relational_operators -> not_equal .)
    divide_divide   reduce using rule 140 (relational_operators -> not_equal .)
    modulo          reduce using rule 140 (relational_operators -> not_equal .)
    times_times     reduce using rule 140 (relational_operators -> not_equal .)
    period          reduce using rule 140 (relational_operators -> not_equal .)
    close_par       reduce using rule 140 (relational_operators -> not_equal .)


state 171

    (141) relational_operators -> great_than_equal .

    lit_str         reduce using rule 141 (relational_operators -> great_than_equal .)
    lit_bool        reduce using rule 141 (relational_operators -> great_than_equal .)
    id              reduce using rule 141 (relational_operators -> great_than_equal .)
    lit_intposi     reduce using rule 141 (relational_operators -> great_than_equal .)
    lit_intnega     reduce using rule 141 (relational_operators -> great_than_equal .)
    lit_decposi     reduce using rule 141 (relational_operators -> great_than_equal .)
    lit_decnega     reduce using rule 141 (relational_operators -> great_than_equal .)
    open_par        reduce using rule 141 (relational_operators -> great_than_equal .)
    Sys_Call        reduce using rule 141 (relational_operators -> great_than_equal .)
    plus            reduce using rule 141 (relational_operators -> great_than_equal .)
    minus           reduce using rule 141 (relational_operators -> great_than_equal .)
    times           reduce using rule 141 (relational_operators -> great_than_equal .)
    divide          reduce using rule 141 (relational_operators -> great_than_equal .)
    divide_divide   reduce using rule 141 (relational_operators -> great_than_equal .)
    modulo          reduce using rule 141 (relational_operators -> great_than_equal .)
    times_times     reduce using rule 141 (relational_operators -> great_than_equal .)
    period          reduce using rule 141 (relational_operators -> great_than_equal .)
    close_par       reduce using rule 141 (relational_operators -> great_than_equal .)


state 172

    (142) relational_operators -> less_than_equal .

    lit_str         reduce using rule 142 (relational_operators -> less_than_equal .)
    lit_bool        reduce using rule 142 (relational_operators -> less_than_equal .)
    id              reduce using rule 142 (relational_operators -> less_than_equal .)
    lit_intposi     reduce using rule 142 (relational_operators -> less_than_equal .)
    lit_intnega     reduce using rule 142 (relational_operators -> less_than_equal .)
    lit_decposi     reduce using rule 142 (relational_operators -> less_than_equal .)
    lit_decnega     reduce using rule 142 (relational_operators -> less_than_equal .)
    open_par        reduce using rule 142 (relational_operators -> less_than_equal .)
    Sys_Call        reduce using rule 142 (relational_operators -> less_than_equal .)
    plus            reduce using rule 142 (relational_operators -> less_than_equal .)
    minus           reduce using rule 142 (relational_operators -> less_than_equal .)
    times           reduce using rule 142 (relational_operators -> less_than_equal .)
    divide          reduce using rule 142 (relational_operators -> less_than_equal .)
    divide_divide   reduce using rule 142 (relational_operators -> less_than_equal .)
    modulo          reduce using rule 142 (relational_operators -> less_than_equal .)
    times_times     reduce using rule 142 (relational_operators -> less_than_equal .)
    period          reduce using rule 142 (relational_operators -> less_than_equal .)
    close_par       reduce using rule 142 (relational_operators -> less_than_equal .)


state 173

    (152) if_statement -> If open_par condition close_par . colon open_bracket inside_statements close_bracket condition_else

    colon           shift and go to state 210


state 174

    (159) switch_statements -> Switch id colon open_bracket . execute Default colon inside_statements close_bracket End_Switch
    (160) execute -> . Execute switch_lit colon statements Break execute1

    Execute         shift and go to state 212

    execute                        shift and go to state 211

state 175

    (171) function_param -> id . open_brace close_brace more_param
    (61) id_array -> id . array
    (63) array -> . open_brace num_value close_brace
    (64) array -> . open_brace close_brace
    (65) array -> .

    open_brace      shift and go to state 213
    period          reduce using rule 65 (array -> .)
    plus            reduce using rule 65 (array -> .)
    minus           reduce using rule 65 (array -> .)
    times           reduce using rule 65 (array -> .)
    divide          reduce using rule 65 (array -> .)
    divide_divide   reduce using rule 65 (array -> .)
    modulo          reduce using rule 65 (array -> .)
    times_times     reduce using rule 65 (array -> .)
    comma           reduce using rule 65 (array -> .)
    close_par       reduce using rule 65 (array -> .)

    array                          shift and go to state 114

state 176

    (170) func_call -> Sys_Call id open_par function_param . close_par

    close_par       shift and go to state 214


state 177

    (173) function_param -> value1 . more_param
    (174) more_param -> . comma function_param
    (175) more_param -> .

    comma           shift and go to state 216
    close_par       reduce using rule 175 (more_param -> .)

    more_param                     shift and go to state 215

state 178

    (86) value1 -> value . value2
    (87) value2 -> . comma value1
    (88) value2 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 218
    close_par       reduce using rule 88 (value2 -> .)
    close_brace     reduce using rule 88 (value2 -> .)

  ! comma           [ reduce using rule 88 (value2 -> .) ]

    value2                         shift and go to state 217

state 179

    (76) arithmetic_expression -> num_value arithmetic_operators num_value .
    (76) arithmetic_expression -> num_value . arithmetic_operators num_value
    (77) arithmetic_operators -> . plus
    (78) arithmetic_operators -> . minus
    (79) arithmetic_operators -> . times
    (80) arithmetic_operators -> . divide
    (81) arithmetic_operators -> . divide_divide
    (82) arithmetic_operators -> . modulo
    (83) arithmetic_operators -> . times_times

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for times resolved as shift
  ! shift/reduce conflict for divide resolved as shift
  ! shift/reduce conflict for divide_divide resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for times_times resolved as shift
    id              reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    For             reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    While           reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    If              reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Switch          reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Sys_Call        reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Absorb          reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Discharge       reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Link_End        reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Sys             reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    $end            reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Break           reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Continue        reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Avoid           reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_bracket   reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Return          reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_brace     reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    greater_than    reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    less_than       reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    equal_equal     reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    not_equal       reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    great_than_equal reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    less_than_equal reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_par       reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    comma           reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Generate        reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Struct          reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Link_Start      reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    plus            shift and go to state 117
    minus           shift and go to state 118
    times           shift and go to state 119
    divide          shift and go to state 120
    divide_divide   shift and go to state 121
    modulo          shift and go to state 122
    times_times     shift and go to state 123

  ! plus            [ reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! minus           [ reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! times           [ reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! divide          [ reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! divide_divide   [ reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! modulo          [ reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! times_times     [ reduce using rule 76 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]

    arithmetic_operators           shift and go to state 116

state 180

    (75) arithmetic_expression -> open_par arithmetic_expression close_par .

    plus            reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    minus           reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    times           reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    divide          reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    divide_divide   reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    modulo          reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    times_times     reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    id              reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    For             reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    While           reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    If              reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Switch          reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Sys_Call        reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Absorb          reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Discharge       reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Link_End        reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Sys             reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    $end            reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Break           reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Continue        reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Avoid           reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_bracket   reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Return          reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_brace     reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    greater_than    reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    less_than       reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    equal_equal     reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    not_equal       reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    great_than_equal reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    less_than_equal reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_par       reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    comma           reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Generate        reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Struct          reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Link_Start      reduce using rule 75 (arithmetic_expression -> open_par arithmetic_expression close_par .)


state 181

    (8) struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket . id_array1
    (66) id_array1 -> . id_array id_array2
    (67) id_array1 -> .
    (61) id_array -> . id array
    (62) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 62 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 62 (id_array -> .)
    id              shift and go to state 68
    comma           reduce using rule 62 (id_array -> .)
    Struct          reduce using rule 62 (id_array -> .)
    Generate        reduce using rule 62 (id_array -> .)
    Link_Start      reduce using rule 62 (id_array -> .)
    For             reduce using rule 62 (id_array -> .)
    While           reduce using rule 62 (id_array -> .)
    If              reduce using rule 62 (id_array -> .)
    Switch          reduce using rule 62 (id_array -> .)
    Sys_Call        reduce using rule 62 (id_array -> .)
    Absorb          reduce using rule 62 (id_array -> .)
    Discharge       reduce using rule 62 (id_array -> .)
    Link_End        reduce using rule 62 (id_array -> .)
    Sys             reduce using rule 62 (id_array -> .)
    $end            reduce using rule 62 (id_array -> .)

  ! Struct          [ reduce using rule 67 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 67 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 67 (id_array1 -> .) ]
  ! id              [ reduce using rule 67 (id_array1 -> .) ]
  ! For             [ reduce using rule 67 (id_array1 -> .) ]
  ! While           [ reduce using rule 67 (id_array1 -> .) ]
  ! If              [ reduce using rule 67 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 67 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 67 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 67 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 67 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 67 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 67 (id_array1 -> .) ]
  ! $end            [ reduce using rule 67 (id_array1 -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]

    id_array1                      shift and go to state 219
    id_array                       shift and go to state 183

state 182

    (9) struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .

    Struct          reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Generate        reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Link_Start      reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    id              reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    For             reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    While           reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    If              reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Switch          reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Sys_Call        reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Absorb          reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Discharge       reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Link_End        reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Sys             reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    $end            reduce using rule 9 (struct_dec -> Struct open_bracket struct_element1 struct_element2 close_bracket id_array1 .)


state 183

    (66) id_array1 -> id_array . id_array2
    (68) id_array2 -> . comma id_array1
    (69) id_array2 -> .

    comma           shift and go to state 221
    Struct          reduce using rule 69 (id_array2 -> .)
    Generate        reduce using rule 69 (id_array2 -> .)
    Link_Start      reduce using rule 69 (id_array2 -> .)
    id              reduce using rule 69 (id_array2 -> .)
    For             reduce using rule 69 (id_array2 -> .)
    While           reduce using rule 69 (id_array2 -> .)
    If              reduce using rule 69 (id_array2 -> .)
    Switch          reduce using rule 69 (id_array2 -> .)
    Sys_Call        reduce using rule 69 (id_array2 -> .)
    Absorb          reduce using rule 69 (id_array2 -> .)
    Discharge       reduce using rule 69 (id_array2 -> .)
    Link_End        reduce using rule 69 (id_array2 -> .)
    Sys             reduce using rule 69 (id_array2 -> .)
    $end            reduce using rule 69 (id_array2 -> .)

    id_array2                      shift and go to state 220

state 184

    (25) struct_element2 -> comma struct_element1 struct_element2 .

    close_bracket   reduce using rule 25 (struct_element2 -> comma struct_element1 struct_element2 .)


state 185

    (20) id_array_dec2 -> open_brace lit_intposi . close_brace array_dec1

    close_brace     shift and go to state 222


state 186

    (21) id_dec1 -> comma id . id_dec1
    (21) id_dec1 -> . comma id id_dec1
    (22) id_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 133
    close_bracket   reduce using rule 22 (id_dec1 -> .)

  ! comma           [ reduce using rule 22 (id_dec1 -> .) ]

    id_dec1                        shift and go to state 223

state 187

    (34) id_array_const2 -> open_brace lit_intposi . close_brace equal open_brace value1 close_brace array_const1

    close_brace     shift and go to state 224


state 188

    (35) id_array_const2 -> equal value . id_const1
    (37) id_const1 -> . comma id equal value id_const1
    (38) id_const1 -> .

    comma           shift and go to state 226
    Generate        reduce using rule 38 (id_const1 -> .)
    Struct          reduce using rule 38 (id_const1 -> .)
    Link_Start      reduce using rule 38 (id_const1 -> .)
    id              reduce using rule 38 (id_const1 -> .)
    For             reduce using rule 38 (id_const1 -> .)
    While           reduce using rule 38 (id_const1 -> .)
    If              reduce using rule 38 (id_const1 -> .)
    Switch          reduce using rule 38 (id_const1 -> .)
    Sys_Call        reduce using rule 38 (id_const1 -> .)
    Absorb          reduce using rule 38 (id_const1 -> .)
    Discharge       reduce using rule 38 (id_const1 -> .)
    Link_End        reduce using rule 38 (id_const1 -> .)
    Sys             reduce using rule 38 (id_const1 -> .)
    $end            reduce using rule 38 (id_const1 -> .)
    Return          reduce using rule 38 (id_const1 -> .)
    close_bracket   reduce using rule 38 (id_const1 -> .)

    id_const1                      shift and go to state 225

state 189

    (46) id_var1 -> comma id . var_init id_var1
    (44) var_init -> . equal value id_var1
    (45) var_init -> .

    equal           shift and go to state 92
    comma           reduce using rule 45 (var_init -> .)
    Generate        reduce using rule 45 (var_init -> .)
    Struct          reduce using rule 45 (var_init -> .)
    Link_Start      reduce using rule 45 (var_init -> .)
    id              reduce using rule 45 (var_init -> .)
    For             reduce using rule 45 (var_init -> .)
    While           reduce using rule 45 (var_init -> .)
    If              reduce using rule 45 (var_init -> .)
    Switch          reduce using rule 45 (var_init -> .)
    Sys_Call        reduce using rule 45 (var_init -> .)
    Absorb          reduce using rule 45 (var_init -> .)
    Discharge       reduce using rule 45 (var_init -> .)
    Link_End        reduce using rule 45 (var_init -> .)
    Sys             reduce using rule 45 (var_init -> .)
    $end            reduce using rule 45 (var_init -> .)
    Return          reduce using rule 45 (var_init -> .)
    close_bracket   reduce using rule 45 (var_init -> .)

    var_init                       shift and go to state 227

state 190

    (43) id_array_var2 -> open_brace lit_intposi close_brace . array_init array_var1
    (48) array_init -> . equal open_brace value1 close_brace array_var1
    (49) array_init -> .

    equal           shift and go to state 229
    comma           reduce using rule 49 (array_init -> .)
    Generate        reduce using rule 49 (array_init -> .)
    Struct          reduce using rule 49 (array_init -> .)
    Link_Start      reduce using rule 49 (array_init -> .)
    id              reduce using rule 49 (array_init -> .)
    For             reduce using rule 49 (array_init -> .)
    While           reduce using rule 49 (array_init -> .)
    If              reduce using rule 49 (array_init -> .)
    Switch          reduce using rule 49 (array_init -> .)
    Sys_Call        reduce using rule 49 (array_init -> .)
    Absorb          reduce using rule 49 (array_init -> .)
    Discharge       reduce using rule 49 (array_init -> .)
    Link_End        reduce using rule 49 (array_init -> .)
    Sys             reduce using rule 49 (array_init -> .)
    $end            reduce using rule 49 (array_init -> .)
    Return          reduce using rule 49 (array_init -> .)
    close_bracket   reduce using rule 49 (array_init -> .)

    array_init                     shift and go to state 228

state 191

    (44) var_init -> equal value id_var1 .

    comma           reduce using rule 44 (var_init -> equal value id_var1 .)
    Generate        reduce using rule 44 (var_init -> equal value id_var1 .)
    Struct          reduce using rule 44 (var_init -> equal value id_var1 .)
    Link_Start      reduce using rule 44 (var_init -> equal value id_var1 .)
    id              reduce using rule 44 (var_init -> equal value id_var1 .)
    For             reduce using rule 44 (var_init -> equal value id_var1 .)
    While           reduce using rule 44 (var_init -> equal value id_var1 .)
    If              reduce using rule 44 (var_init -> equal value id_var1 .)
    Switch          reduce using rule 44 (var_init -> equal value id_var1 .)
    Sys_Call        reduce using rule 44 (var_init -> equal value id_var1 .)
    Absorb          reduce using rule 44 (var_init -> equal value id_var1 .)
    Discharge       reduce using rule 44 (var_init -> equal value id_var1 .)
    Link_End        reduce using rule 44 (var_init -> equal value id_var1 .)
    Sys             reduce using rule 44 (var_init -> equal value id_var1 .)
    $end            reduce using rule 44 (var_init -> equal value id_var1 .)
    Return          reduce using rule 44 (var_init -> equal value id_var1 .)
    close_bracket   reduce using rule 44 (var_init -> equal value id_var1 .)


state 192

    (176) functions -> Sys id open_par parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions

    close_par       shift and go to state 230


state 193

    (178) parameters -> data_type . id more_parameters

    id              shift and go to state 231


state 194

    (102) assignment_exp -> assignment_operators num_value .
    (76) arithmetic_expression -> num_value . arithmetic_operators num_value
    (77) arithmetic_operators -> . plus
    (78) arithmetic_operators -> . minus
    (79) arithmetic_operators -> . times
    (80) arithmetic_operators -> . divide
    (81) arithmetic_operators -> . divide_divide
    (82) arithmetic_operators -> . modulo
    (83) arithmetic_operators -> . times_times

    id              reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    For             reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    While           reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    If              reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Switch          reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Sys_Call        reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Absorb          reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Discharge       reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Link_End        reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Sys             reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    $end            reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Break           reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Continue        reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Avoid           reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    close_bracket   reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    Return          reduce using rule 102 (assignment_exp -> assignment_operators num_value .)
    plus            shift and go to state 117
    minus           shift and go to state 118
    times           shift and go to state 119
    divide          shift and go to state 120
    divide_divide   shift and go to state 121
    modulo          shift and go to state 122
    times_times     shift and go to state 123

    arithmetic_operators           shift and go to state 116

state 195

    (103) assignment_exp -> equal assign_value .

    id              reduce using rule 103 (assignment_exp -> equal assign_value .)
    For             reduce using rule 103 (assignment_exp -> equal assign_value .)
    While           reduce using rule 103 (assignment_exp -> equal assign_value .)
    If              reduce using rule 103 (assignment_exp -> equal assign_value .)
    Switch          reduce using rule 103 (assignment_exp -> equal assign_value .)
    Sys_Call        reduce using rule 103 (assignment_exp -> equal assign_value .)
    Absorb          reduce using rule 103 (assignment_exp -> equal assign_value .)
    Discharge       reduce using rule 103 (assignment_exp -> equal assign_value .)
    Link_End        reduce using rule 103 (assignment_exp -> equal assign_value .)
    Sys             reduce using rule 103 (assignment_exp -> equal assign_value .)
    $end            reduce using rule 103 (assignment_exp -> equal assign_value .)
    Break           reduce using rule 103 (assignment_exp -> equal assign_value .)
    Continue        reduce using rule 103 (assignment_exp -> equal assign_value .)
    Avoid           reduce using rule 103 (assignment_exp -> equal assign_value .)
    close_bracket   reduce using rule 103 (assignment_exp -> equal assign_value .)
    Return          reduce using rule 103 (assignment_exp -> equal assign_value .)


state 196

    (105) assign_value -> num_value .
    (76) arithmetic_expression -> num_value . arithmetic_operators num_value
    (77) arithmetic_operators -> . plus
    (78) arithmetic_operators -> . minus
    (79) arithmetic_operators -> . times
    (80) arithmetic_operators -> . divide
    (81) arithmetic_operators -> . divide_divide
    (82) arithmetic_operators -> . modulo
    (83) arithmetic_operators -> . times_times

    id              reduce using rule 105 (assign_value -> num_value .)
    For             reduce using rule 105 (assign_value -> num_value .)
    While           reduce using rule 105 (assign_value -> num_value .)
    If              reduce using rule 105 (assign_value -> num_value .)
    Switch          reduce using rule 105 (assign_value -> num_value .)
    Sys_Call        reduce using rule 105 (assign_value -> num_value .)
    Absorb          reduce using rule 105 (assign_value -> num_value .)
    Discharge       reduce using rule 105 (assign_value -> num_value .)
    Link_End        reduce using rule 105 (assign_value -> num_value .)
    Sys             reduce using rule 105 (assign_value -> num_value .)
    $end            reduce using rule 105 (assign_value -> num_value .)
    Break           reduce using rule 105 (assign_value -> num_value .)
    Continue        reduce using rule 105 (assign_value -> num_value .)
    Avoid           reduce using rule 105 (assign_value -> num_value .)
    close_bracket   reduce using rule 105 (assign_value -> num_value .)
    Return          reduce using rule 105 (assign_value -> num_value .)
    plus            shift and go to state 117
    minus           shift and go to state 118
    times           shift and go to state 119
    divide          shift and go to state 120
    divide_divide   shift and go to state 121
    modulo          shift and go to state 122
    times_times     shift and go to state 123

    arithmetic_operators           shift and go to state 116

state 197

    (106) assign_value -> more_id . value
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    For             reduce using rule 55 (value -> .)
    While           reduce using rule 55 (value -> .)
    If              reduce using rule 55 (value -> .)
    Switch          reduce using rule 55 (value -> .)
    Absorb          reduce using rule 55 (value -> .)
    Discharge       reduce using rule 55 (value -> .)
    Link_End        reduce using rule 55 (value -> .)
    Sys             reduce using rule 55 (value -> .)
    $end            reduce using rule 55 (value -> .)
    Break           reduce using rule 55 (value -> .)
    Continue        reduce using rule 55 (value -> .)
    Avoid           reduce using rule 55 (value -> .)
    close_bracket   reduce using rule 55 (value -> .)
    Return          reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 55 (value -> .) ]
  ! Sys_Call        [ reduce using rule 55 (value -> .) ]
  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! For             [ reduce using rule 60 (num_value -> .) ]
  ! While           [ reduce using rule 60 (num_value -> .) ]
  ! If              [ reduce using rule 60 (num_value -> .) ]
  ! Switch          [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! Absorb          [ reduce using rule 60 (num_value -> .) ]
  ! Discharge       [ reduce using rule 60 (num_value -> .) ]
  ! Link_End        [ reduce using rule 60 (num_value -> .) ]
  ! Sys             [ reduce using rule 60 (num_value -> .) ]
  ! $end            [ reduce using rule 60 (num_value -> .) ]
  ! Break           [ reduce using rule 60 (num_value -> .) ]
  ! Continue        [ reduce using rule 60 (num_value -> .) ]
  ! Avoid           [ reduce using rule 60 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 60 (num_value -> .) ]
  ! Return          [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Break           [ reduce using rule 62 (id_array -> .) ]
  ! Continue        [ reduce using rule 62 (id_array -> .) ]
  ! Avoid           [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Break           [ reduce using rule 74 (literals -> .) ]
  ! Continue        [ reduce using rule 74 (literals -> .) ]
  ! Avoid           [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]

    value                          shift and go to state 232
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 198

    (56) num_value -> id_array . id_struct
    (107) more_id -> id_array . id_struct equal more_id
    (84) id_struct -> . period id_array
    (85) id_struct -> .

    period          shift and go to state 98
    equal           reduce using rule 85 (id_struct -> .)
    plus            reduce using rule 85 (id_struct -> .)
    minus           reduce using rule 85 (id_struct -> .)
    times           reduce using rule 85 (id_struct -> .)
    divide          reduce using rule 85 (id_struct -> .)
    divide_divide   reduce using rule 85 (id_struct -> .)
    modulo          reduce using rule 85 (id_struct -> .)
    times_times     reduce using rule 85 (id_struct -> .)
    id              reduce using rule 85 (id_struct -> .)
    For             reduce using rule 85 (id_struct -> .)
    While           reduce using rule 85 (id_struct -> .)
    If              reduce using rule 85 (id_struct -> .)
    Switch          reduce using rule 85 (id_struct -> .)
    Sys_Call        reduce using rule 85 (id_struct -> .)
    Absorb          reduce using rule 85 (id_struct -> .)
    Discharge       reduce using rule 85 (id_struct -> .)
    Link_End        reduce using rule 85 (id_struct -> .)
    Sys             reduce using rule 85 (id_struct -> .)
    $end            reduce using rule 85 (id_struct -> .)
    Break           reduce using rule 85 (id_struct -> .)
    Continue        reduce using rule 85 (id_struct -> .)
    Avoid           reduce using rule 85 (id_struct -> .)
    close_bracket   reduce using rule 85 (id_struct -> .)
    Return          reduce using rule 85 (id_struct -> .)

    id_struct                      shift and go to state 233

state 199

    (101) assignment_statements2 -> open_brace lit_intposi close_brace more_array . equal open_brace value1 close_brace

    equal           shift and go to state 234


state 200

    (116) more_array -> equal . id open_brace lit_intposi close_brace more_array

    id              shift and go to state 235


state 201

    (118) for_statements -> For id In id open_brace . close_brace colon open_bracket inside_statements close_bracket

    close_brace     shift and go to state 236


state 202

    (143) logical_expression -> open_par logical_operand close_par . logical_operators open_par logical_operand close_par
    (148) logical_operators -> . And
    (149) logical_operators -> . Or

    And             shift and go to state 238
    Or              shift and go to state 239

    logical_operators              shift and go to state 237

state 203

    (144) logical_operand -> Not open_par . logical_operand close_par
    (144) logical_operand -> . Not open_par logical_operand close_par
    (145) logical_operand -> . relational_expression
    (146) logical_operand -> . logical_expression
    (147) logical_operand -> . lit_bool
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    Not             shift and go to state 159
    lit_bool        shift and go to state 162
    open_par        shift and go to state 103
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    logical_operand                shift and go to state 240
    relational_expression          shift and go to state 160
    logical_expression             shift and go to state 161
    value                          shift and go to state 109
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 204

    (120) while_statements -> While open_par condition close_par colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 241


state 205

    (131) condition -> Not open_par condition_not . close_par

    close_par       shift and go to state 242


state 206

    (133) condition_not -> relational_expression .

    close_par       reduce using rule 133 (condition_not -> relational_expression .)


state 207

    (134) condition_not -> logical_expression .

    close_par       reduce using rule 134 (condition_not -> logical_expression .)


state 208

    (135) condition_not -> lit_bool .
    (54) value -> lit_bool .

    close_par       reduce using rule 135 (condition_not -> lit_bool .)
    greater_than    reduce using rule 54 (value -> lit_bool .)
    less_than       reduce using rule 54 (value -> lit_bool .)
    equal_equal     reduce using rule 54 (value -> lit_bool .)
    not_equal       reduce using rule 54 (value -> lit_bool .)
    great_than_equal reduce using rule 54 (value -> lit_bool .)
    less_than_equal reduce using rule 54 (value -> lit_bool .)


state 209

    (136) relational_expression -> value relational_operators value .

    close_par       reduce using rule 136 (relational_expression -> value relational_operators value .)


state 210

    (152) if_statement -> If open_par condition close_par colon . open_bracket inside_statements close_bracket condition_else

    open_bracket    shift and go to state 243


state 211

    (159) switch_statements -> Switch id colon open_bracket execute . Default colon inside_statements close_bracket End_Switch

    Default         shift and go to state 244


state 212

    (160) execute -> Execute . switch_lit colon statements Break execute1
    (161) switch_lit -> . lit_str
    (162) switch_lit -> . lit_intposi
    (163) switch_lit -> . lit_intnega

    lit_str         shift and go to state 246
    lit_intposi     shift and go to state 247
    lit_intnega     shift and go to state 248

    switch_lit                     shift and go to state 245

state 213

    (171) function_param -> id open_brace . close_brace more_param
    (63) array -> open_brace . num_value close_brace
    (64) array -> open_brace . close_brace
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
    close_brace     shift and go to state 249
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]

    num_value                      shift and go to state 101
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 214

    (170) func_call -> Sys_Call id open_par function_param close_par .

    id              reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    For             reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    While           reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    If              reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Switch          reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Sys_Call        reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Absorb          reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Discharge       reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Link_End        reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Sys             reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    $end            reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Break           reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Continue        reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Avoid           reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    close_bracket   reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Return          reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    plus            reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    minus           reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    times           reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    divide          reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    divide_divide   reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    modulo          reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    times_times     reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    close_brace     reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    greater_than    reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    less_than       reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    equal_equal     reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    not_equal       reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    great_than_equal reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    less_than_equal reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    comma           reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Generate        reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Struct          reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    Link_Start      reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)
    close_par       reduce using rule 170 (func_call -> Sys_Call id open_par function_param close_par .)


state 215

    (173) function_param -> value1 more_param .

    close_par       reduce using rule 173 (function_param -> value1 more_param .)


state 216

    (174) more_param -> comma . function_param
    (171) function_param -> . id open_brace close_brace more_param
    (172) function_param -> .
    (173) function_param -> . value1 more_param
    (86) value1 -> . value value2
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
    id              shift and go to state 175
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    close_par       reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! close_par       [ reduce using rule 172 (function_param -> .) ]
  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! close_par       [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! close_par       [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! close_par       [ reduce using rule 74 (literals -> .) ]

    function_param                 shift and go to state 250
    value1                         shift and go to state 177
    value                          shift and go to state 178
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 217

    (86) value1 -> value value2 .

    comma           reduce using rule 86 (value1 -> value value2 .)
    close_par       reduce using rule 86 (value1 -> value value2 .)
    close_brace     reduce using rule 86 (value1 -> value value2 .)


state 218

    (87) value2 -> comma . value1
    (86) value1 -> . value value2
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    close_par       reduce using rule 55 (value -> .)
    close_brace     reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! close_par       [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! close_par       [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! close_par       [ reduce using rule 74 (literals -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]

    value1                         shift and go to state 251
    value                          shift and go to state 178
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 219

    (8) struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .

    Struct          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Generate        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Link_Start      reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    id              reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    For             reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    While           reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    If              reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Switch          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Sys_Call        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Absorb          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Discharge       reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Link_End        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    Sys             reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)
    $end            reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1 .)


state 220

    (66) id_array1 -> id_array id_array2 .

    Struct          reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Generate        reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Link_Start      reduce using rule 66 (id_array1 -> id_array id_array2 .)
    id              reduce using rule 66 (id_array1 -> id_array id_array2 .)
    For             reduce using rule 66 (id_array1 -> id_array id_array2 .)
    While           reduce using rule 66 (id_array1 -> id_array id_array2 .)
    If              reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Switch          reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Sys_Call        reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Absorb          reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Discharge       reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Link_End        reduce using rule 66 (id_array1 -> id_array id_array2 .)
    Sys             reduce using rule 66 (id_array1 -> id_array id_array2 .)
    $end            reduce using rule 66 (id_array1 -> id_array id_array2 .)


state 221

    (68) id_array2 -> comma . id_array1
    (66) id_array1 -> . id_array id_array2
    (67) id_array1 -> .
    (61) id_array -> . id array
    (62) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 62 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 62 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 62 (id_array -> .)
    id              shift and go to state 68
    comma           reduce using rule 62 (id_array -> .)
    Struct          reduce using rule 62 (id_array -> .)
    Generate        reduce using rule 62 (id_array -> .)
    Link_Start      reduce using rule 62 (id_array -> .)
    For             reduce using rule 62 (id_array -> .)
    While           reduce using rule 62 (id_array -> .)
    If              reduce using rule 62 (id_array -> .)
    Switch          reduce using rule 62 (id_array -> .)
    Sys_Call        reduce using rule 62 (id_array -> .)
    Absorb          reduce using rule 62 (id_array -> .)
    Discharge       reduce using rule 62 (id_array -> .)
    Link_End        reduce using rule 62 (id_array -> .)
    Sys             reduce using rule 62 (id_array -> .)
    $end            reduce using rule 62 (id_array -> .)

  ! Struct          [ reduce using rule 67 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 67 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 67 (id_array1 -> .) ]
  ! id              [ reduce using rule 67 (id_array1 -> .) ]
  ! For             [ reduce using rule 67 (id_array1 -> .) ]
  ! While           [ reduce using rule 67 (id_array1 -> .) ]
  ! If              [ reduce using rule 67 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 67 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 67 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 67 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 67 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 67 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 67 (id_array1 -> .) ]
  ! $end            [ reduce using rule 67 (id_array1 -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]

    id_array1                      shift and go to state 252
    id_array                       shift and go to state 183

state 222

    (20) id_array_dec2 -> open_brace lit_intposi close_brace . array_dec1
    (23) array_dec1 -> . comma id open_brace lit_intposi close_brace array_dec1
    (24) array_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 254
    close_bracket   reduce using rule 24 (array_dec1 -> .)

  ! comma           [ reduce using rule 24 (array_dec1 -> .) ]

    array_dec1                     shift and go to state 253

state 223

    (21) id_dec1 -> comma id id_dec1 .

    comma           reduce using rule 21 (id_dec1 -> comma id id_dec1 .)
    close_bracket   reduce using rule 21 (id_dec1 -> comma id id_dec1 .)


state 224

    (34) id_array_const2 -> open_brace lit_intposi close_brace . equal open_brace value1 close_brace array_const1

    equal           shift and go to state 255


state 225

    (35) id_array_const2 -> equal value id_const1 .

    Generate        reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Struct          reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Link_Start      reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    id              reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    For             reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    While           reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    If              reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Switch          reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Sys_Call        reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Absorb          reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Discharge       reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Link_End        reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Sys             reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    $end            reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    Return          reduce using rule 35 (id_array_const2 -> equal value id_const1 .)
    close_bracket   reduce using rule 35 (id_array_const2 -> equal value id_const1 .)


state 226

    (37) id_const1 -> comma . id equal value id_const1

    id              shift and go to state 256


state 227

    (46) id_var1 -> comma id var_init . id_var1
    (46) id_var1 -> . comma id var_init id_var1
    (47) id_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 138
    Generate        reduce using rule 47 (id_var1 -> .)
    Struct          reduce using rule 47 (id_var1 -> .)
    Link_Start      reduce using rule 47 (id_var1 -> .)
    id              reduce using rule 47 (id_var1 -> .)
    For             reduce using rule 47 (id_var1 -> .)
    While           reduce using rule 47 (id_var1 -> .)
    If              reduce using rule 47 (id_var1 -> .)
    Switch          reduce using rule 47 (id_var1 -> .)
    Sys_Call        reduce using rule 47 (id_var1 -> .)
    Absorb          reduce using rule 47 (id_var1 -> .)
    Discharge       reduce using rule 47 (id_var1 -> .)
    Link_End        reduce using rule 47 (id_var1 -> .)
    Sys             reduce using rule 47 (id_var1 -> .)
    $end            reduce using rule 47 (id_var1 -> .)
    Return          reduce using rule 47 (id_var1 -> .)
    close_bracket   reduce using rule 47 (id_var1 -> .)

  ! comma           [ reduce using rule 47 (id_var1 -> .) ]

    id_var1                        shift and go to state 257

state 228

    (43) id_array_var2 -> open_brace lit_intposi close_brace array_init . array_var1
    (50) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (51) array_var1 -> .

    comma           shift and go to state 259
    Generate        reduce using rule 51 (array_var1 -> .)
    Struct          reduce using rule 51 (array_var1 -> .)
    Link_Start      reduce using rule 51 (array_var1 -> .)
    id              reduce using rule 51 (array_var1 -> .)
    For             reduce using rule 51 (array_var1 -> .)
    While           reduce using rule 51 (array_var1 -> .)
    If              reduce using rule 51 (array_var1 -> .)
    Switch          reduce using rule 51 (array_var1 -> .)
    Sys_Call        reduce using rule 51 (array_var1 -> .)
    Absorb          reduce using rule 51 (array_var1 -> .)
    Discharge       reduce using rule 51 (array_var1 -> .)
    Link_End        reduce using rule 51 (array_var1 -> .)
    Sys             reduce using rule 51 (array_var1 -> .)
    $end            reduce using rule 51 (array_var1 -> .)
    Return          reduce using rule 51 (array_var1 -> .)
    close_bracket   reduce using rule 51 (array_var1 -> .)

    array_var1                     shift and go to state 258

state 229

    (48) array_init -> equal . open_brace value1 close_brace array_var1

    open_brace      shift and go to state 260


state 230

    (176) functions -> Sys id open_par parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions

    open_bracket    shift and go to state 261


state 231

    (178) parameters -> data_type id . more_parameters
    (180) more_parameters -> . comma data_type id more_parameters
    (181) more_parameters -> .

    comma           shift and go to state 263
    close_par       reduce using rule 181 (more_parameters -> .)

    more_parameters                shift and go to state 262

state 232

    (106) assign_value -> more_id value .

    id              reduce using rule 106 (assign_value -> more_id value .)
    For             reduce using rule 106 (assign_value -> more_id value .)
    While           reduce using rule 106 (assign_value -> more_id value .)
    If              reduce using rule 106 (assign_value -> more_id value .)
    Switch          reduce using rule 106 (assign_value -> more_id value .)
    Sys_Call        reduce using rule 106 (assign_value -> more_id value .)
    Absorb          reduce using rule 106 (assign_value -> more_id value .)
    Discharge       reduce using rule 106 (assign_value -> more_id value .)
    Link_End        reduce using rule 106 (assign_value -> more_id value .)
    Sys             reduce using rule 106 (assign_value -> more_id value .)
    $end            reduce using rule 106 (assign_value -> more_id value .)
    Break           reduce using rule 106 (assign_value -> more_id value .)
    Continue        reduce using rule 106 (assign_value -> more_id value .)
    Avoid           reduce using rule 106 (assign_value -> more_id value .)
    close_bracket   reduce using rule 106 (assign_value -> more_id value .)
    Return          reduce using rule 106 (assign_value -> more_id value .)


state 233

    (56) num_value -> id_array id_struct .
    (107) more_id -> id_array id_struct . equal more_id

    plus            reduce using rule 56 (num_value -> id_array id_struct .)
    minus           reduce using rule 56 (num_value -> id_array id_struct .)
    times           reduce using rule 56 (num_value -> id_array id_struct .)
    divide          reduce using rule 56 (num_value -> id_array id_struct .)
    divide_divide   reduce using rule 56 (num_value -> id_array id_struct .)
    modulo          reduce using rule 56 (num_value -> id_array id_struct .)
    times_times     reduce using rule 56 (num_value -> id_array id_struct .)
    id              reduce using rule 56 (num_value -> id_array id_struct .)
    For             reduce using rule 56 (num_value -> id_array id_struct .)
    While           reduce using rule 56 (num_value -> id_array id_struct .)
    If              reduce using rule 56 (num_value -> id_array id_struct .)
    Switch          reduce using rule 56 (num_value -> id_array id_struct .)
    Sys_Call        reduce using rule 56 (num_value -> id_array id_struct .)
    Absorb          reduce using rule 56 (num_value -> id_array id_struct .)
    Discharge       reduce using rule 56 (num_value -> id_array id_struct .)
    Link_End        reduce using rule 56 (num_value -> id_array id_struct .)
    Sys             reduce using rule 56 (num_value -> id_array id_struct .)
    $end            reduce using rule 56 (num_value -> id_array id_struct .)
    Break           reduce using rule 56 (num_value -> id_array id_struct .)
    Continue        reduce using rule 56 (num_value -> id_array id_struct .)
    Avoid           reduce using rule 56 (num_value -> id_array id_struct .)
    close_bracket   reduce using rule 56 (num_value -> id_array id_struct .)
    Return          reduce using rule 56 (num_value -> id_array id_struct .)
    equal           shift and go to state 264


state 234

    (101) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal . open_brace value1 close_brace

    open_brace      shift and go to state 265


state 235

    (116) more_array -> equal id . open_brace lit_intposi close_brace more_array

    open_brace      shift and go to state 266


state 236

    (118) for_statements -> For id In id open_brace close_brace . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 267


state 237

    (143) logical_expression -> open_par logical_operand close_par logical_operators . open_par logical_operand close_par

    open_par        shift and go to state 268


state 238

    (148) logical_operators -> And .

    open_par        reduce using rule 148 (logical_operators -> And .)


state 239

    (149) logical_operators -> Or .

    open_par        reduce using rule 149 (logical_operators -> Or .)


state 240

    (144) logical_operand -> Not open_par logical_operand . close_par

    close_par       shift and go to state 269


state 241

    (120) while_statements -> While open_par condition close_par colon open_bracket . inside_statements close_bracket
    (122) inside_statements -> . statements control_statements
    (123) inside_statements -> . control_statements statements
    (124) inside_statements -> .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (125) control_statements -> . Break
    (126) control_statements -> . Continue
    (127) control_statements -> . Avoid
    (128) control_statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 97 (statements -> .)
    Break           shift and go to state 273
    Continue        shift and go to state 274
    Avoid           shift and go to state 275
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! close_bracket   [ reduce using rule 124 (inside_statements -> .) ]
  ! Break           [ reduce using rule 97 (statements -> .) ]
  ! Continue        [ reduce using rule 97 (statements -> .) ]
  ! Avoid           [ reduce using rule 97 (statements -> .) ]
  ! id              [ reduce using rule 128 (control_statements -> .) ]
  ! For             [ reduce using rule 128 (control_statements -> .) ]
  ! While           [ reduce using rule 128 (control_statements -> .) ]
  ! If              [ reduce using rule 128 (control_statements -> .) ]
  ! Switch          [ reduce using rule 128 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 128 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 128 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 128 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 128 (control_statements -> .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    inside_statements              shift and go to state 270
    statements                     shift and go to state 271
    control_statements             shift and go to state 272
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 242

    (131) condition -> Not open_par condition_not close_par .

    close_par       reduce using rule 131 (condition -> Not open_par condition_not close_par .)


state 243

    (152) if_statement -> If open_par condition close_par colon open_bracket . inside_statements close_bracket condition_else
    (122) inside_statements -> . statements control_statements
    (123) inside_statements -> . control_statements statements
    (124) inside_statements -> .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (125) control_statements -> . Break
    (126) control_statements -> . Continue
    (127) control_statements -> . Avoid
    (128) control_statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 97 (statements -> .)
    Break           shift and go to state 273
    Continue        shift and go to state 274
    Avoid           shift and go to state 275
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! close_bracket   [ reduce using rule 124 (inside_statements -> .) ]
  ! Break           [ reduce using rule 97 (statements -> .) ]
  ! Continue        [ reduce using rule 97 (statements -> .) ]
  ! Avoid           [ reduce using rule 97 (statements -> .) ]
  ! id              [ reduce using rule 128 (control_statements -> .) ]
  ! For             [ reduce using rule 128 (control_statements -> .) ]
  ! While           [ reduce using rule 128 (control_statements -> .) ]
  ! If              [ reduce using rule 128 (control_statements -> .) ]
  ! Switch          [ reduce using rule 128 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 128 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 128 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 128 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 128 (control_statements -> .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    inside_statements              shift and go to state 276
    statements                     shift and go to state 271
    control_statements             shift and go to state 272
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 244

    (159) switch_statements -> Switch id colon open_bracket execute Default . colon inside_statements close_bracket End_Switch

    colon           shift and go to state 277


state 245

    (160) execute -> Execute switch_lit . colon statements Break execute1

    colon           shift and go to state 278


state 246

    (161) switch_lit -> lit_str .

    colon           reduce using rule 161 (switch_lit -> lit_str .)


state 247

    (162) switch_lit -> lit_intposi .

    colon           reduce using rule 162 (switch_lit -> lit_intposi .)


state 248

    (163) switch_lit -> lit_intnega .

    colon           reduce using rule 163 (switch_lit -> lit_intnega .)


state 249

    (171) function_param -> id open_brace close_brace . more_param
    (64) array -> open_brace close_brace .
    (174) more_param -> . comma function_param
    (175) more_param -> .

  ! shift/reduce conflict for comma resolved as shift
  ! reduce/reduce conflict for close_par resolved using rule 64 (array -> open_brace close_brace .)
    period          reduce using rule 64 (array -> open_brace close_brace .)
    plus            reduce using rule 64 (array -> open_brace close_brace .)
    minus           reduce using rule 64 (array -> open_brace close_brace .)
    times           reduce using rule 64 (array -> open_brace close_brace .)
    divide          reduce using rule 64 (array -> open_brace close_brace .)
    divide_divide   reduce using rule 64 (array -> open_brace close_brace .)
    modulo          reduce using rule 64 (array -> open_brace close_brace .)
    times_times     reduce using rule 64 (array -> open_brace close_brace .)
    close_par       reduce using rule 64 (array -> open_brace close_brace .)
    comma           shift and go to state 216

  ! comma           [ reduce using rule 64 (array -> open_brace close_brace .) ]
  ! close_par       [ reduce using rule 175 (more_param -> .) ]

    more_param                     shift and go to state 279

state 250

    (174) more_param -> comma function_param .

    close_par       reduce using rule 174 (more_param -> comma function_param .)


state 251

    (87) value2 -> comma value1 .

    comma           reduce using rule 87 (value2 -> comma value1 .)
    close_par       reduce using rule 87 (value2 -> comma value1 .)
    close_brace     reduce using rule 87 (value2 -> comma value1 .)


state 252

    (68) id_array2 -> comma id_array1 .

    Struct          reduce using rule 68 (id_array2 -> comma id_array1 .)
    Generate        reduce using rule 68 (id_array2 -> comma id_array1 .)
    Link_Start      reduce using rule 68 (id_array2 -> comma id_array1 .)
    id              reduce using rule 68 (id_array2 -> comma id_array1 .)
    For             reduce using rule 68 (id_array2 -> comma id_array1 .)
    While           reduce using rule 68 (id_array2 -> comma id_array1 .)
    If              reduce using rule 68 (id_array2 -> comma id_array1 .)
    Switch          reduce using rule 68 (id_array2 -> comma id_array1 .)
    Sys_Call        reduce using rule 68 (id_array2 -> comma id_array1 .)
    Absorb          reduce using rule 68 (id_array2 -> comma id_array1 .)
    Discharge       reduce using rule 68 (id_array2 -> comma id_array1 .)
    Link_End        reduce using rule 68 (id_array2 -> comma id_array1 .)
    Sys             reduce using rule 68 (id_array2 -> comma id_array1 .)
    $end            reduce using rule 68 (id_array2 -> comma id_array1 .)


state 253

    (20) id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .

    comma           reduce using rule 20 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    close_bracket   reduce using rule 20 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)


state 254

    (23) array_dec1 -> comma . id open_brace lit_intposi close_brace array_dec1

    id              shift and go to state 280


state 255

    (34) id_array_const2 -> open_brace lit_intposi close_brace equal . open_brace value1 close_brace array_const1

    open_brace      shift and go to state 281


state 256

    (37) id_const1 -> comma id . equal value id_const1

    equal           shift and go to state 282


state 257

    (46) id_var1 -> comma id var_init id_var1 .

    Generate        reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Struct          reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Link_Start      reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    id              reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    For             reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    While           reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    If              reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Switch          reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Sys_Call        reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Absorb          reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Discharge       reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Link_End        reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Sys             reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    $end            reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    Return          reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    close_bracket   reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)
    comma           reduce using rule 46 (id_var1 -> comma id var_init id_var1 .)


state 258

    (43) id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .

    Generate        reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Struct          reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Link_Start      reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    id              reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    For             reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    While           reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    If              reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Switch          reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Sys_Call        reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Absorb          reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Discharge       reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Link_End        reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Sys             reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    $end            reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Return          reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    close_bracket   reduce using rule 43 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)


state 259

    (50) array_var1 -> comma . id open_brace lit_intposi close_brace array_init array_var1

    id              shift and go to state 283


state 260

    (48) array_init -> equal open_brace . value1 close_brace array_var1
    (86) value1 -> . value value2
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    close_brace     reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]

    value1                         shift and go to state 284
    value                          shift and go to state 178
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 261

    (176) functions -> Sys id open_par parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (27) declare_statements -> . Generate const_var_dec declare_statements
    (28) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 28 (declare_statements -> .)
    For             reduce using rule 28 (declare_statements -> .)
    While           reduce using rule 28 (declare_statements -> .)
    If              reduce using rule 28 (declare_statements -> .)
    Switch          reduce using rule 28 (declare_statements -> .)
    Sys_Call        reduce using rule 28 (declare_statements -> .)
    Absorb          reduce using rule 28 (declare_statements -> .)
    Discharge       reduce using rule 28 (declare_statements -> .)
    Return          reduce using rule 28 (declare_statements -> .)
    close_bracket   reduce using rule 28 (declare_statements -> .)

    declare_statements             shift and go to state 285

state 262

    (178) parameters -> data_type id more_parameters .

    close_par       reduce using rule 178 (parameters -> data_type id more_parameters .)


state 263

    (180) more_parameters -> comma . data_type id more_parameters
    (12) data_type -> . Integer
    (13) data_type -> . Decimal
    (14) data_type -> . String
    (15) data_type -> . Boolean
    (16) data_type -> .

    Integer         shift and go to state 16
    Decimal         shift and go to state 17
    String          shift and go to state 18
    Boolean         shift and go to state 19
    id              reduce using rule 16 (data_type -> .)

    data_type                      shift and go to state 286

state 264

    (107) more_id -> id_array id_struct equal . more_id
    (107) more_id -> . id_array id_struct equal more_id
    (108) more_id -> .
    (61) id_array -> . id array
    (62) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for period resolved using rule 62 (id_array -> .)
    lit_str         reduce using rule 108 (more_id -> .)
    lit_bool        reduce using rule 108 (more_id -> .)
    lit_intposi     reduce using rule 108 (more_id -> .)
    lit_intnega     reduce using rule 108 (more_id -> .)
    lit_decposi     reduce using rule 108 (more_id -> .)
    lit_decnega     reduce using rule 108 (more_id -> .)
    open_par        reduce using rule 108 (more_id -> .)
    Sys_Call        reduce using rule 108 (more_id -> .)
    plus            reduce using rule 108 (more_id -> .)
    minus           reduce using rule 108 (more_id -> .)
    times           reduce using rule 108 (more_id -> .)
    divide          reduce using rule 108 (more_id -> .)
    divide_divide   reduce using rule 108 (more_id -> .)
    modulo          reduce using rule 108 (more_id -> .)
    times_times     reduce using rule 108 (more_id -> .)
    For             reduce using rule 108 (more_id -> .)
    While           reduce using rule 108 (more_id -> .)
    If              reduce using rule 108 (more_id -> .)
    Switch          reduce using rule 108 (more_id -> .)
    Absorb          reduce using rule 108 (more_id -> .)
    Discharge       reduce using rule 108 (more_id -> .)
    Link_End        reduce using rule 108 (more_id -> .)
    Sys             reduce using rule 108 (more_id -> .)
    $end            reduce using rule 108 (more_id -> .)
    Break           reduce using rule 108 (more_id -> .)
    Continue        reduce using rule 108 (more_id -> .)
    Avoid           reduce using rule 108 (more_id -> .)
    close_bracket   reduce using rule 108 (more_id -> .)
    Return          reduce using rule 108 (more_id -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    equal           reduce using rule 62 (id_array -> .)

  ! id              [ reduce using rule 108 (more_id -> .) ]
  ! period          [ reduce using rule 108 (more_id -> .) ]

    id_array                       shift and go to state 287
    more_id                        shift and go to state 288

state 265

    (101) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace . value1 close_brace
    (86) value1 -> . value value2
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    close_brace     reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]

    value1                         shift and go to state 289
    value                          shift and go to state 178
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 266

    (116) more_array -> equal id open_brace . lit_intposi close_brace more_array

    lit_intposi     shift and go to state 290


state 267

    (118) for_statements -> For id In id open_brace close_brace colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 291


state 268

    (143) logical_expression -> open_par logical_operand close_par logical_operators open_par . logical_operand close_par
    (144) logical_operand -> . Not open_par logical_operand close_par
    (145) logical_operand -> . relational_expression
    (146) logical_operand -> . logical_expression
    (147) logical_operand -> . lit_bool
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    Not             shift and go to state 159
    lit_bool        shift and go to state 162
    open_par        shift and go to state 103
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    logical_operand                shift and go to state 292
    relational_expression          shift and go to state 160
    logical_expression             shift and go to state 161
    value                          shift and go to state 109
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 269

    (144) logical_operand -> Not open_par logical_operand close_par .

    close_par       reduce using rule 144 (logical_operand -> Not open_par logical_operand close_par .)


state 270

    (120) while_statements -> While open_par condition close_par colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 293


state 271

    (122) inside_statements -> statements . control_statements
    (125) control_statements -> . Break
    (126) control_statements -> . Continue
    (127) control_statements -> . Avoid
    (128) control_statements -> .

    Break           shift and go to state 273
    Continue        shift and go to state 274
    Avoid           shift and go to state 275
    close_bracket   reduce using rule 128 (control_statements -> .)

    control_statements             shift and go to state 294

state 272

    (123) inside_statements -> control_statements . statements
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    statements                     shift and go to state 295
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 273

    (125) control_statements -> Break .

    id              reduce using rule 125 (control_statements -> Break .)
    For             reduce using rule 125 (control_statements -> Break .)
    While           reduce using rule 125 (control_statements -> Break .)
    If              reduce using rule 125 (control_statements -> Break .)
    Switch          reduce using rule 125 (control_statements -> Break .)
    Sys_Call        reduce using rule 125 (control_statements -> Break .)
    Absorb          reduce using rule 125 (control_statements -> Break .)
    Discharge       reduce using rule 125 (control_statements -> Break .)
    close_bracket   reduce using rule 125 (control_statements -> Break .)


state 274

    (126) control_statements -> Continue .

    id              reduce using rule 126 (control_statements -> Continue .)
    For             reduce using rule 126 (control_statements -> Continue .)
    While           reduce using rule 126 (control_statements -> Continue .)
    If              reduce using rule 126 (control_statements -> Continue .)
    Switch          reduce using rule 126 (control_statements -> Continue .)
    Sys_Call        reduce using rule 126 (control_statements -> Continue .)
    Absorb          reduce using rule 126 (control_statements -> Continue .)
    Discharge       reduce using rule 126 (control_statements -> Continue .)
    close_bracket   reduce using rule 126 (control_statements -> Continue .)


state 275

    (127) control_statements -> Avoid .

    id              reduce using rule 127 (control_statements -> Avoid .)
    For             reduce using rule 127 (control_statements -> Avoid .)
    While           reduce using rule 127 (control_statements -> Avoid .)
    If              reduce using rule 127 (control_statements -> Avoid .)
    Switch          reduce using rule 127 (control_statements -> Avoid .)
    Sys_Call        reduce using rule 127 (control_statements -> Avoid .)
    Absorb          reduce using rule 127 (control_statements -> Avoid .)
    Discharge       reduce using rule 127 (control_statements -> Avoid .)
    close_bracket   reduce using rule 127 (control_statements -> Avoid .)


state 276

    (152) if_statement -> If open_par condition close_par colon open_bracket inside_statements . close_bracket condition_else

    close_bracket   shift and go to state 296


state 277

    (159) switch_statements -> Switch id colon open_bracket execute Default colon . inside_statements close_bracket End_Switch
    (122) inside_statements -> . statements control_statements
    (123) inside_statements -> . control_statements statements
    (124) inside_statements -> .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (125) control_statements -> . Break
    (126) control_statements -> . Continue
    (127) control_statements -> . Avoid
    (128) control_statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 97 (statements -> .)
    Break           shift and go to state 273
    Continue        shift and go to state 274
    Avoid           shift and go to state 275
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! close_bracket   [ reduce using rule 124 (inside_statements -> .) ]
  ! Break           [ reduce using rule 97 (statements -> .) ]
  ! Continue        [ reduce using rule 97 (statements -> .) ]
  ! Avoid           [ reduce using rule 97 (statements -> .) ]
  ! id              [ reduce using rule 128 (control_statements -> .) ]
  ! For             [ reduce using rule 128 (control_statements -> .) ]
  ! While           [ reduce using rule 128 (control_statements -> .) ]
  ! If              [ reduce using rule 128 (control_statements -> .) ]
  ! Switch          [ reduce using rule 128 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 128 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 128 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 128 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 128 (control_statements -> .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    inside_statements              shift and go to state 297
    statements                     shift and go to state 271
    control_statements             shift and go to state 272
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 278

    (160) execute -> Execute switch_lit colon . statements Break execute1
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Break           reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]

    statements                     shift and go to state 298
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 279

    (171) function_param -> id open_brace close_brace more_param .

    close_par       reduce using rule 171 (function_param -> id open_brace close_brace more_param .)


state 280

    (23) array_dec1 -> comma id . open_brace lit_intposi close_brace array_dec1

    open_brace      shift and go to state 299


state 281

    (34) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace . value1 close_brace array_const1
    (86) value1 -> . value value2
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    close_brace     reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]

    value1                         shift and go to state 300
    value                          shift and go to state 178
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 282

    (37) id_const1 -> comma id equal . value id_const1
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    Generate        reduce using rule 55 (value -> .)
    Struct          reduce using rule 55 (value -> .)
    Link_Start      reduce using rule 55 (value -> .)
    For             reduce using rule 55 (value -> .)
    While           reduce using rule 55 (value -> .)
    If              reduce using rule 55 (value -> .)
    Switch          reduce using rule 55 (value -> .)
    Absorb          reduce using rule 55 (value -> .)
    Discharge       reduce using rule 55 (value -> .)
    Link_End        reduce using rule 55 (value -> .)
    Sys             reduce using rule 55 (value -> .)
    $end            reduce using rule 55 (value -> .)
    Return          reduce using rule 55 (value -> .)
    close_bracket   reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 55 (value -> .) ]
  ! Sys_Call        [ reduce using rule 55 (value -> .) ]
  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! Generate        [ reduce using rule 60 (num_value -> .) ]
  ! Struct          [ reduce using rule 60 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 60 (num_value -> .) ]
  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! For             [ reduce using rule 60 (num_value -> .) ]
  ! While           [ reduce using rule 60 (num_value -> .) ]
  ! If              [ reduce using rule 60 (num_value -> .) ]
  ! Switch          [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! Absorb          [ reduce using rule 60 (num_value -> .) ]
  ! Discharge       [ reduce using rule 60 (num_value -> .) ]
  ! Link_End        [ reduce using rule 60 (num_value -> .) ]
  ! Sys             [ reduce using rule 60 (num_value -> .) ]
  ! $end            [ reduce using rule 60 (num_value -> .) ]
  ! Return          [ reduce using rule 60 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! Generate        [ reduce using rule 62 (id_array -> .) ]
  ! Struct          [ reduce using rule 62 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Link_End        [ reduce using rule 62 (id_array -> .) ]
  ! Sys             [ reduce using rule 62 (id_array -> .) ]
  ! $end            [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! Generate        [ reduce using rule 74 (literals -> .) ]
  ! Struct          [ reduce using rule 74 (literals -> .) ]
  ! Link_Start      [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Link_End        [ reduce using rule 74 (literals -> .) ]
  ! Sys             [ reduce using rule 74 (literals -> .) ]
  ! $end            [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]

    value                          shift and go to state 301
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 283

    (50) array_var1 -> comma id . open_brace lit_intposi close_brace array_init array_var1

    open_brace      shift and go to state 302


state 284

    (48) array_init -> equal open_brace value1 . close_brace array_var1

    close_brace     shift and go to state 303


state 285

    (176) functions -> Sys id open_par parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    statements                     shift and go to state 304
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 286

    (180) more_parameters -> comma data_type . id more_parameters

    id              shift and go to state 305


state 287

    (107) more_id -> id_array . id_struct equal more_id
    (84) id_struct -> . period id_array
    (85) id_struct -> .

    period          shift and go to state 98
    equal           reduce using rule 85 (id_struct -> .)

    id_struct                      shift and go to state 306

state 288

    (107) more_id -> id_array id_struct equal more_id .

    lit_str         reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    lit_bool        reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    id              reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    lit_intposi     reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    lit_intnega     reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    lit_decposi     reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    lit_decnega     reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    open_par        reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Sys_Call        reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    plus            reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    minus           reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    times           reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    divide          reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    divide_divide   reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    modulo          reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    times_times     reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    period          reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    For             reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    While           reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    If              reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Switch          reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Absorb          reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Discharge       reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Link_End        reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Sys             reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    $end            reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Break           reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Continue        reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Avoid           reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    close_bracket   reduce using rule 107 (more_id -> id_array id_struct equal more_id .)
    Return          reduce using rule 107 (more_id -> id_array id_struct equal more_id .)


state 289

    (101) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 . close_brace

    close_brace     shift and go to state 307


state 290

    (116) more_array -> equal id open_brace lit_intposi . close_brace more_array

    close_brace     shift and go to state 308


state 291

    (118) for_statements -> For id In id open_brace close_brace colon open_bracket . inside_statements close_bracket
    (122) inside_statements -> . statements control_statements
    (123) inside_statements -> . control_statements statements
    (124) inside_statements -> .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (125) control_statements -> . Break
    (126) control_statements -> . Continue
    (127) control_statements -> . Avoid
    (128) control_statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 97 (statements -> .)
    Break           shift and go to state 273
    Continue        shift and go to state 274
    Avoid           shift and go to state 275
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! close_bracket   [ reduce using rule 124 (inside_statements -> .) ]
  ! Break           [ reduce using rule 97 (statements -> .) ]
  ! Continue        [ reduce using rule 97 (statements -> .) ]
  ! Avoid           [ reduce using rule 97 (statements -> .) ]
  ! id              [ reduce using rule 128 (control_statements -> .) ]
  ! For             [ reduce using rule 128 (control_statements -> .) ]
  ! While           [ reduce using rule 128 (control_statements -> .) ]
  ! If              [ reduce using rule 128 (control_statements -> .) ]
  ! Switch          [ reduce using rule 128 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 128 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 128 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 128 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 128 (control_statements -> .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    inside_statements              shift and go to state 309
    statements                     shift and go to state 271
    control_statements             shift and go to state 272
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 292

    (143) logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand . close_par

    close_par       shift and go to state 310


state 293

    (120) while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .

    id              reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 120 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)


state 294

    (122) inside_statements -> statements control_statements .

    close_bracket   reduce using rule 122 (inside_statements -> statements control_statements .)


state 295

    (123) inside_statements -> control_statements statements .

    close_bracket   reduce using rule 123 (inside_statements -> control_statements statements .)


state 296

    (152) if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket . condition_else
    (154) condition_else -> . elif_statement
    (155) condition_else -> . else_statement
    (156) condition_else -> .
    (157) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (158) else_statement -> . Else colon open_bracket inside_statements close_bracket

    id              reduce using rule 156 (condition_else -> .)
    For             reduce using rule 156 (condition_else -> .)
    While           reduce using rule 156 (condition_else -> .)
    If              reduce using rule 156 (condition_else -> .)
    Switch          reduce using rule 156 (condition_else -> .)
    Sys_Call        reduce using rule 156 (condition_else -> .)
    Absorb          reduce using rule 156 (condition_else -> .)
    Discharge       reduce using rule 156 (condition_else -> .)
    Link_End        reduce using rule 156 (condition_else -> .)
    Sys             reduce using rule 156 (condition_else -> .)
    $end            reduce using rule 156 (condition_else -> .)
    Break           reduce using rule 156 (condition_else -> .)
    Continue        reduce using rule 156 (condition_else -> .)
    Avoid           reduce using rule 156 (condition_else -> .)
    close_bracket   reduce using rule 156 (condition_else -> .)
    Return          reduce using rule 156 (condition_else -> .)
    Elif            shift and go to state 314
    Else            shift and go to state 315

    condition_else                 shift and go to state 311
    elif_statement                 shift and go to state 312
    else_statement                 shift and go to state 313

state 297

    (159) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements . close_bracket End_Switch

    close_bracket   shift and go to state 316


state 298

    (160) execute -> Execute switch_lit colon statements . Break execute1

    Break           shift and go to state 317


state 299

    (23) array_dec1 -> comma id open_brace . lit_intposi close_brace array_dec1

    lit_intposi     shift and go to state 318


state 300

    (34) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 . close_brace array_const1

    close_brace     shift and go to state 319


state 301

    (37) id_const1 -> comma id equal value . id_const1
    (37) id_const1 -> . comma id equal value id_const1
    (38) id_const1 -> .

    comma           shift and go to state 226
    Generate        reduce using rule 38 (id_const1 -> .)
    Struct          reduce using rule 38 (id_const1 -> .)
    Link_Start      reduce using rule 38 (id_const1 -> .)
    id              reduce using rule 38 (id_const1 -> .)
    For             reduce using rule 38 (id_const1 -> .)
    While           reduce using rule 38 (id_const1 -> .)
    If              reduce using rule 38 (id_const1 -> .)
    Switch          reduce using rule 38 (id_const1 -> .)
    Sys_Call        reduce using rule 38 (id_const1 -> .)
    Absorb          reduce using rule 38 (id_const1 -> .)
    Discharge       reduce using rule 38 (id_const1 -> .)
    Link_End        reduce using rule 38 (id_const1 -> .)
    Sys             reduce using rule 38 (id_const1 -> .)
    $end            reduce using rule 38 (id_const1 -> .)
    Return          reduce using rule 38 (id_const1 -> .)
    close_bracket   reduce using rule 38 (id_const1 -> .)

    id_const1                      shift and go to state 320

state 302

    (50) array_var1 -> comma id open_brace . lit_intposi close_brace array_init array_var1

    lit_intposi     shift and go to state 321


state 303

    (48) array_init -> equal open_brace value1 close_brace . array_var1
    (50) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (51) array_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 259
    Generate        reduce using rule 51 (array_var1 -> .)
    Struct          reduce using rule 51 (array_var1 -> .)
    Link_Start      reduce using rule 51 (array_var1 -> .)
    id              reduce using rule 51 (array_var1 -> .)
    For             reduce using rule 51 (array_var1 -> .)
    While           reduce using rule 51 (array_var1 -> .)
    If              reduce using rule 51 (array_var1 -> .)
    Switch          reduce using rule 51 (array_var1 -> .)
    Sys_Call        reduce using rule 51 (array_var1 -> .)
    Absorb          reduce using rule 51 (array_var1 -> .)
    Discharge       reduce using rule 51 (array_var1 -> .)
    Link_End        reduce using rule 51 (array_var1 -> .)
    Sys             reduce using rule 51 (array_var1 -> .)
    $end            reduce using rule 51 (array_var1 -> .)
    Return          reduce using rule 51 (array_var1 -> .)
    close_bracket   reduce using rule 51 (array_var1 -> .)

  ! comma           [ reduce using rule 51 (array_var1 -> .) ]

    array_var1                     shift and go to state 322

state 304

    (176) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (182) return_statement -> . Return value statements return_statement
    (183) return_statement -> .

    Return          shift and go to state 324
    close_bracket   reduce using rule 183 (return_statement -> .)

    return_statement               shift and go to state 323

state 305

    (180) more_parameters -> comma data_type id . more_parameters
    (180) more_parameters -> . comma data_type id more_parameters
    (181) more_parameters -> .

    comma           shift and go to state 263
    close_par       reduce using rule 181 (more_parameters -> .)

    more_parameters                shift and go to state 325

state 306

    (107) more_id -> id_array id_struct . equal more_id

    equal           shift and go to state 264


state 307

    (101) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .

    id              reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    For             reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    While           reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    If              reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Switch          reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Sys_Call        reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Absorb          reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Discharge       reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Link_End        reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Sys             reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    $end            reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Break           reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Continue        reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Avoid           reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    close_bracket   reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Return          reduce using rule 101 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)


state 308

    (116) more_array -> equal id open_brace lit_intposi close_brace . more_array
    (116) more_array -> . equal id open_brace lit_intposi close_brace more_array
    (117) more_array -> .

  ! shift/reduce conflict for equal resolved as shift
    equal           shift and go to state 200

  ! equal           [ reduce using rule 117 (more_array -> .) ]

    more_array                     shift and go to state 326

state 309

    (118) for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 327


state 310

    (143) logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .

    close_par       reduce using rule 143 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)


state 311

    (152) if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 152 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)


state 312

    (154) condition_else -> elif_statement .

    id              reduce using rule 154 (condition_else -> elif_statement .)
    For             reduce using rule 154 (condition_else -> elif_statement .)
    While           reduce using rule 154 (condition_else -> elif_statement .)
    If              reduce using rule 154 (condition_else -> elif_statement .)
    Switch          reduce using rule 154 (condition_else -> elif_statement .)
    Sys_Call        reduce using rule 154 (condition_else -> elif_statement .)
    Absorb          reduce using rule 154 (condition_else -> elif_statement .)
    Discharge       reduce using rule 154 (condition_else -> elif_statement .)
    Link_End        reduce using rule 154 (condition_else -> elif_statement .)
    Sys             reduce using rule 154 (condition_else -> elif_statement .)
    $end            reduce using rule 154 (condition_else -> elif_statement .)
    Break           reduce using rule 154 (condition_else -> elif_statement .)
    Continue        reduce using rule 154 (condition_else -> elif_statement .)
    Avoid           reduce using rule 154 (condition_else -> elif_statement .)
    close_bracket   reduce using rule 154 (condition_else -> elif_statement .)
    Return          reduce using rule 154 (condition_else -> elif_statement .)


state 313

    (155) condition_else -> else_statement .

    id              reduce using rule 155 (condition_else -> else_statement .)
    For             reduce using rule 155 (condition_else -> else_statement .)
    While           reduce using rule 155 (condition_else -> else_statement .)
    If              reduce using rule 155 (condition_else -> else_statement .)
    Switch          reduce using rule 155 (condition_else -> else_statement .)
    Sys_Call        reduce using rule 155 (condition_else -> else_statement .)
    Absorb          reduce using rule 155 (condition_else -> else_statement .)
    Discharge       reduce using rule 155 (condition_else -> else_statement .)
    Link_End        reduce using rule 155 (condition_else -> else_statement .)
    Sys             reduce using rule 155 (condition_else -> else_statement .)
    $end            reduce using rule 155 (condition_else -> else_statement .)
    Break           reduce using rule 155 (condition_else -> else_statement .)
    Continue        reduce using rule 155 (condition_else -> else_statement .)
    Avoid           reduce using rule 155 (condition_else -> else_statement .)
    close_bracket   reduce using rule 155 (condition_else -> else_statement .)
    Return          reduce using rule 155 (condition_else -> else_statement .)


state 314

    (157) elif_statement -> Elif . open_par condition close_par colon open_bracket inside_statements close_bracket condition_else

    open_par        shift and go to state 328


state 315

    (158) else_statement -> Else . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 329


state 316

    (159) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket . End_Switch

    End_Switch      shift and go to state 330


state 317

    (160) execute -> Execute switch_lit colon statements Break . execute1
    (164) execute1 -> . execute
    (165) execute1 -> .
    (160) execute -> . Execute switch_lit colon statements Break execute1

    Default         reduce using rule 165 (execute1 -> .)
    Execute         shift and go to state 212

    execute1                       shift and go to state 331
    execute                        shift and go to state 332

state 318

    (23) array_dec1 -> comma id open_brace lit_intposi . close_brace array_dec1

    close_brace     shift and go to state 333


state 319

    (34) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace . array_const1
    (39) array_const1 -> . comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (40) array_const1 -> .

    comma           shift and go to state 335
    Generate        reduce using rule 40 (array_const1 -> .)
    Struct          reduce using rule 40 (array_const1 -> .)
    Link_Start      reduce using rule 40 (array_const1 -> .)
    id              reduce using rule 40 (array_const1 -> .)
    For             reduce using rule 40 (array_const1 -> .)
    While           reduce using rule 40 (array_const1 -> .)
    If              reduce using rule 40 (array_const1 -> .)
    Switch          reduce using rule 40 (array_const1 -> .)
    Sys_Call        reduce using rule 40 (array_const1 -> .)
    Absorb          reduce using rule 40 (array_const1 -> .)
    Discharge       reduce using rule 40 (array_const1 -> .)
    Link_End        reduce using rule 40 (array_const1 -> .)
    Sys             reduce using rule 40 (array_const1 -> .)
    $end            reduce using rule 40 (array_const1 -> .)
    Return          reduce using rule 40 (array_const1 -> .)
    close_bracket   reduce using rule 40 (array_const1 -> .)

    array_const1                   shift and go to state 334

state 320

    (37) id_const1 -> comma id equal value id_const1 .

    Generate        reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Struct          reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Link_Start      reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    id              reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    For             reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    While           reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    If              reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Switch          reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Sys_Call        reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Absorb          reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Discharge       reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Link_End        reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Sys             reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    $end            reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    Return          reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)
    close_bracket   reduce using rule 37 (id_const1 -> comma id equal value id_const1 .)


state 321

    (50) array_var1 -> comma id open_brace lit_intposi . close_brace array_init array_var1

    close_brace     shift and go to state 336


state 322

    (48) array_init -> equal open_brace value1 close_brace array_var1 .

    comma           reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Generate        reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Struct          reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Link_Start      reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    id              reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    For             reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    While           reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    If              reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Switch          reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Sys_Call        reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Absorb          reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Discharge       reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Link_End        reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Sys             reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    $end            reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Return          reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)
    close_bracket   reduce using rule 48 (array_init -> equal open_brace value1 close_brace array_var1 .)


state 323

    (176) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions

    close_bracket   shift and go to state 337


state 324

    (182) return_statement -> Return . value statements return_statement
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 55 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    For             reduce using rule 55 (value -> .)
    While           reduce using rule 55 (value -> .)
    If              reduce using rule 55 (value -> .)
    Switch          reduce using rule 55 (value -> .)
    Absorb          reduce using rule 55 (value -> .)
    Discharge       reduce using rule 55 (value -> .)
    Return          reduce using rule 55 (value -> .)
    close_bracket   reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! id              [ reduce using rule 55 (value -> .) ]
  ! Sys_Call        [ reduce using rule 55 (value -> .) ]
  ! id              [ reduce using rule 60 (num_value -> .) ]
  ! For             [ reduce using rule 60 (num_value -> .) ]
  ! While           [ reduce using rule 60 (num_value -> .) ]
  ! If              [ reduce using rule 60 (num_value -> .) ]
  ! Switch          [ reduce using rule 60 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (num_value -> .) ]
  ! Absorb          [ reduce using rule 60 (num_value -> .) ]
  ! Discharge       [ reduce using rule 60 (num_value -> .) ]
  ! Return          [ reduce using rule 60 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! id              [ reduce using rule 62 (id_array -> .) ]
  ! For             [ reduce using rule 62 (id_array -> .) ]
  ! While           [ reduce using rule 62 (id_array -> .) ]
  ! If              [ reduce using rule 62 (id_array -> .) ]
  ! Switch          [ reduce using rule 62 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 62 (id_array -> .) ]
  ! Absorb          [ reduce using rule 62 (id_array -> .) ]
  ! Discharge       [ reduce using rule 62 (id_array -> .) ]
  ! Return          [ reduce using rule 62 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! id              [ reduce using rule 74 (literals -> .) ]
  ! For             [ reduce using rule 74 (literals -> .) ]
  ! While           [ reduce using rule 74 (literals -> .) ]
  ! If              [ reduce using rule 74 (literals -> .) ]
  ! Switch          [ reduce using rule 74 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 74 (literals -> .) ]
  ! Absorb          [ reduce using rule 74 (literals -> .) ]
  ! Discharge       [ reduce using rule 74 (literals -> .) ]
  ! Return          [ reduce using rule 74 (literals -> .) ]
  ! close_bracket   [ reduce using rule 74 (literals -> .) ]

    value                          shift and go to state 338
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 325

    (180) more_parameters -> comma data_type id more_parameters .

    close_par       reduce using rule 180 (more_parameters -> comma data_type id more_parameters .)


state 326

    (116) more_array -> equal id open_brace lit_intposi close_brace more_array .

    equal           reduce using rule 116 (more_array -> equal id open_brace lit_intposi close_brace more_array .)


state 327

    (118) for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .

    id              reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 118 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)


state 328

    (157) elif_statement -> Elif open_par . condition close_par colon open_bracket inside_statements close_bracket condition_else
    (129) condition -> . relational_expression
    (130) condition -> . logical_expression
    (131) condition -> . Not open_par condition_not close_par
    (132) condition -> . lit_bool
    (136) relational_expression -> . value relational_operators value
    (143) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 55 (value -> .)
    Not             shift and go to state 107
    lit_bool        shift and go to state 108
    open_par        shift and go to state 103
    lit_str         shift and go to state 71
    greater_than    reduce using rule 55 (value -> .)
    less_than       reduce using rule 55 (value -> .)
    equal_equal     reduce using rule 55 (value -> .)
    not_equal       reduce using rule 55 (value -> .)
    great_than_equal reduce using rule 55 (value -> .)
    less_than_equal reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    Sys_Call        shift and go to state 37

  ! greater_than    [ reduce using rule 60 (num_value -> .) ]
  ! less_than       [ reduce using rule 60 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 60 (num_value -> .) ]
  ! not_equal       [ reduce using rule 60 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! greater_than    [ reduce using rule 62 (id_array -> .) ]
  ! less_than       [ reduce using rule 62 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 62 (id_array -> .) ]
  ! not_equal       [ reduce using rule 62 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! greater_than    [ reduce using rule 74 (literals -> .) ]
  ! less_than       [ reduce using rule 74 (literals -> .) ]
  ! equal_equal     [ reduce using rule 74 (literals -> .) ]
  ! not_equal       [ reduce using rule 74 (literals -> .) ]
  ! great_than_equal [ reduce using rule 74 (literals -> .) ]
  ! less_than_equal [ reduce using rule 74 (literals -> .) ]

    condition                      shift and go to state 339
    relational_expression          shift and go to state 105
    logical_expression             shift and go to state 106
    value                          shift and go to state 109
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 329

    (158) else_statement -> Else colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 340


state 330

    (159) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .

    id              reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    For             reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    While           reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    If              reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Switch          reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Sys_Call        reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Absorb          reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Discharge       reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Link_End        reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Sys             reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    $end            reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Break           reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Continue        reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Avoid           reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    close_bracket   reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Return          reduce using rule 159 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)


state 331

    (160) execute -> Execute switch_lit colon statements Break execute1 .

    Default         reduce using rule 160 (execute -> Execute switch_lit colon statements Break execute1 .)


state 332

    (164) execute1 -> execute .

    Default         reduce using rule 164 (execute1 -> execute .)


state 333

    (23) array_dec1 -> comma id open_brace lit_intposi close_brace . array_dec1
    (23) array_dec1 -> . comma id open_brace lit_intposi close_brace array_dec1
    (24) array_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 254
    close_bracket   reduce using rule 24 (array_dec1 -> .)

  ! comma           [ reduce using rule 24 (array_dec1 -> .) ]

    array_dec1                     shift and go to state 341

state 334

    (34) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .

    Generate        reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Struct          reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_Start      reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    id              reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    For             reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    While           reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    If              reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Switch          reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys_Call        reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Absorb          reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Discharge       reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_End        reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys             reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    $end            reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Return          reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    close_bracket   reduce using rule 34 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)


state 335

    (39) array_const1 -> comma . id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1

    id              shift and go to state 342


state 336

    (50) array_var1 -> comma id open_brace lit_intposi close_brace . array_init array_var1
    (48) array_init -> . equal open_brace value1 close_brace array_var1
    (49) array_init -> .

    equal           shift and go to state 229
    comma           reduce using rule 49 (array_init -> .)
    Generate        reduce using rule 49 (array_init -> .)
    Struct          reduce using rule 49 (array_init -> .)
    Link_Start      reduce using rule 49 (array_init -> .)
    id              reduce using rule 49 (array_init -> .)
    For             reduce using rule 49 (array_init -> .)
    While           reduce using rule 49 (array_init -> .)
    If              reduce using rule 49 (array_init -> .)
    Switch          reduce using rule 49 (array_init -> .)
    Sys_Call        reduce using rule 49 (array_init -> .)
    Absorb          reduce using rule 49 (array_init -> .)
    Discharge       reduce using rule 49 (array_init -> .)
    Link_End        reduce using rule 49 (array_init -> .)
    Sys             reduce using rule 49 (array_init -> .)
    $end            reduce using rule 49 (array_init -> .)
    Return          reduce using rule 49 (array_init -> .)
    close_bracket   reduce using rule 49 (array_init -> .)

    array_init                     shift and go to state 343

state 337

    (176) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (176) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (177) functions -> .

    Sys             shift and go to state 50
    $end            reduce using rule 177 (functions -> .)

    functions                      shift and go to state 344

state 338

    (182) return_statement -> Return value . statements return_statement
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 97 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 97 (statements -> .)
    close_bracket   reduce using rule 97 (statements -> .)
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Return          [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Return          [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Return          [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    statements                     shift and go to state 345
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 339

    (157) elif_statement -> Elif open_par condition . close_par colon open_bracket inside_statements close_bracket condition_else

    close_par       shift and go to state 346


state 340

    (158) else_statement -> Else colon open_bracket . inside_statements close_bracket
    (122) inside_statements -> . statements control_statements
    (123) inside_statements -> . control_statements statements
    (124) inside_statements -> .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (125) control_statements -> . Break
    (126) control_statements -> . Continue
    (127) control_statements -> . Avoid
    (128) control_statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 97 (statements -> .)
    Break           shift and go to state 273
    Continue        shift and go to state 274
    Avoid           shift and go to state 275
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! close_bracket   [ reduce using rule 124 (inside_statements -> .) ]
  ! Break           [ reduce using rule 97 (statements -> .) ]
  ! Continue        [ reduce using rule 97 (statements -> .) ]
  ! Avoid           [ reduce using rule 97 (statements -> .) ]
  ! id              [ reduce using rule 128 (control_statements -> .) ]
  ! For             [ reduce using rule 128 (control_statements -> .) ]
  ! While           [ reduce using rule 128 (control_statements -> .) ]
  ! If              [ reduce using rule 128 (control_statements -> .) ]
  ! Switch          [ reduce using rule 128 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 128 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 128 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 128 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 128 (control_statements -> .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    inside_statements              shift and go to state 347
    statements                     shift and go to state 271
    control_statements             shift and go to state 272
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 341

    (23) array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .

    comma           reduce using rule 23 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    close_bracket   reduce using rule 23 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)


state 342

    (39) array_const1 -> comma id . open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1

    open_brace      shift and go to state 348


state 343

    (50) array_var1 -> comma id open_brace lit_intposi close_brace array_init . array_var1
    (50) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (51) array_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 259
    Generate        reduce using rule 51 (array_var1 -> .)
    Struct          reduce using rule 51 (array_var1 -> .)
    Link_Start      reduce using rule 51 (array_var1 -> .)
    id              reduce using rule 51 (array_var1 -> .)
    For             reduce using rule 51 (array_var1 -> .)
    While           reduce using rule 51 (array_var1 -> .)
    If              reduce using rule 51 (array_var1 -> .)
    Switch          reduce using rule 51 (array_var1 -> .)
    Sys_Call        reduce using rule 51 (array_var1 -> .)
    Absorb          reduce using rule 51 (array_var1 -> .)
    Discharge       reduce using rule 51 (array_var1 -> .)
    Link_End        reduce using rule 51 (array_var1 -> .)
    Sys             reduce using rule 51 (array_var1 -> .)
    $end            reduce using rule 51 (array_var1 -> .)
    Return          reduce using rule 51 (array_var1 -> .)
    close_bracket   reduce using rule 51 (array_var1 -> .)

  ! comma           [ reduce using rule 51 (array_var1 -> .) ]

    array_var1                     shift and go to state 349

state 344

    (176) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 176 (functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 345

    (182) return_statement -> Return value statements . return_statement
    (182) return_statement -> . Return value statements return_statement
    (183) return_statement -> .

    Return          shift and go to state 324
    close_bracket   reduce using rule 183 (return_statement -> .)

    return_statement               shift and go to state 350

state 346

    (157) elif_statement -> Elif open_par condition close_par . colon open_bracket inside_statements close_bracket condition_else

    colon           shift and go to state 351


state 347

    (158) else_statement -> Else colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 352


state 348

    (39) array_const1 -> comma id open_brace . lit_intposi close_brace equal open_brace value1 close_brace array_const1

    lit_intposi     shift and go to state 353


state 349

    (50) array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .

    Generate        reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Struct          reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Link_Start      reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    id              reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    For             reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    While           reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    If              reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Switch          reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Sys_Call        reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Absorb          reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Discharge       reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Link_End        reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Sys             reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    $end            reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Return          reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    close_bracket   reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    comma           reduce using rule 50 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)


state 350

    (182) return_statement -> Return value statements return_statement .

    close_bracket   reduce using rule 182 (return_statement -> Return value statements return_statement .)


state 351

    (157) elif_statement -> Elif open_par condition close_par colon . open_bracket inside_statements close_bracket condition_else

    open_bracket    shift and go to state 354


state 352

    (158) else_statement -> Else colon open_bracket inside_statements close_bracket .

    id              reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 158 (else_statement -> Else colon open_bracket inside_statements close_bracket .)


state 353

    (39) array_const1 -> comma id open_brace lit_intposi . close_brace equal open_brace value1 close_brace array_const1

    close_brace     shift and go to state 355


state 354

    (157) elif_statement -> Elif open_par condition close_par colon open_bracket . inside_statements close_bracket condition_else
    (122) inside_statements -> . statements control_statements
    (123) inside_statements -> . control_statements statements
    (124) inside_statements -> .
    (89) statements -> . assignment_statements statements
    (90) statements -> . for_statements statements
    (91) statements -> . while_statements statements
    (92) statements -> . if_statement statements
    (93) statements -> . switch_statements statements
    (94) statements -> . conditional_statements statements
    (95) statements -> . io_statements statements
    (96) statements -> . func_call statements
    (97) statements -> .
    (125) control_statements -> . Break
    (126) control_statements -> . Continue
    (127) control_statements -> . Avoid
    (128) control_statements -> .
    (98) assignment_statements -> . id assignment_statements2
    (99) assignment_statements -> .
    (118) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (119) for_statements -> .
    (120) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (121) while_statements -> .
    (152) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (153) if_statement -> .
    (159) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (150) conditional_statements -> . if_statement
    (151) conditional_statements -> . switch_statements
    (166) io_statements -> . input_statements
    (167) io_statements -> . output_statements
    (170) func_call -> . Sys_Call id open_par function_param close_par
    (168) input_statements -> . Absorb id_array id_struct
    (169) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 99 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 99 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 97 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 97 (statements -> .)
    Break           shift and go to state 273
    Continue        shift and go to state 274
    Avoid           shift and go to state 275
    id              shift and go to state 30
    For             shift and go to state 31
    While           shift and go to state 32
    If              shift and go to state 33
    Switch          shift and go to state 34
    Sys_Call        shift and go to state 37
    Absorb          shift and go to state 38
    Discharge       shift and go to state 39

  ! close_bracket   [ reduce using rule 124 (inside_statements -> .) ]
  ! Break           [ reduce using rule 97 (statements -> .) ]
  ! Continue        [ reduce using rule 97 (statements -> .) ]
  ! Avoid           [ reduce using rule 97 (statements -> .) ]
  ! id              [ reduce using rule 128 (control_statements -> .) ]
  ! For             [ reduce using rule 128 (control_statements -> .) ]
  ! While           [ reduce using rule 128 (control_statements -> .) ]
  ! If              [ reduce using rule 128 (control_statements -> .) ]
  ! Switch          [ reduce using rule 128 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 128 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 128 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 128 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 128 (control_statements -> .) ]
  ! id              [ reduce using rule 99 (assignment_statements -> .) ]
  ! For             [ reduce using rule 99 (assignment_statements -> .) ]
  ! While           [ reduce using rule 99 (assignment_statements -> .) ]
  ! If              [ reduce using rule 99 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 99 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 99 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 99 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 99 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 99 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 99 (assignment_statements -> .) ]
  ! id              [ reduce using rule 119 (for_statements -> .) ]
  ! For             [ reduce using rule 119 (for_statements -> .) ]
  ! While           [ reduce using rule 119 (for_statements -> .) ]
  ! If              [ reduce using rule 119 (for_statements -> .) ]
  ! Switch          [ reduce using rule 119 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (for_statements -> .) ]
  ! Break           [ reduce using rule 119 (for_statements -> .) ]
  ! Continue        [ reduce using rule 119 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (for_statements -> .) ]
  ! id              [ reduce using rule 121 (while_statements -> .) ]
  ! For             [ reduce using rule 121 (while_statements -> .) ]
  ! While           [ reduce using rule 121 (while_statements -> .) ]
  ! If              [ reduce using rule 121 (while_statements -> .) ]
  ! Switch          [ reduce using rule 121 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 121 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 121 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 121 (while_statements -> .) ]
  ! Break           [ reduce using rule 121 (while_statements -> .) ]
  ! Continue        [ reduce using rule 121 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 121 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 121 (while_statements -> .) ]
  ! id              [ reduce using rule 153 (if_statement -> .) ]
  ! For             [ reduce using rule 153 (if_statement -> .) ]
  ! While           [ reduce using rule 153 (if_statement -> .) ]
  ! If              [ reduce using rule 153 (if_statement -> .) ]
  ! Switch          [ reduce using rule 153 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 153 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 153 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 153 (if_statement -> .) ]
  ! Break           [ reduce using rule 153 (if_statement -> .) ]
  ! Continue        [ reduce using rule 153 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 153 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 153 (if_statement -> .) ]

    inside_statements              shift and go to state 356
    statements                     shift and go to state 271
    control_statements             shift and go to state 272
    assignment_statements          shift and go to state 22
    for_statements                 shift and go to state 23
    while_statements               shift and go to state 24
    if_statement                   shift and go to state 25
    switch_statements              shift and go to state 26
    conditional_statements         shift and go to state 27
    io_statements                  shift and go to state 28
    func_call                      shift and go to state 29
    input_statements               shift and go to state 35
    output_statements              shift and go to state 36

state 355

    (39) array_const1 -> comma id open_brace lit_intposi close_brace . equal open_brace value1 close_brace array_const1

    equal           shift and go to state 357


state 356

    (157) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements . close_bracket condition_else

    close_bracket   shift and go to state 358


state 357

    (39) array_const1 -> comma id open_brace lit_intposi close_brace equal . open_brace value1 close_brace array_const1

    open_brace      shift and go to state 359


state 358

    (157) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket . condition_else
    (154) condition_else -> . elif_statement
    (155) condition_else -> . else_statement
    (156) condition_else -> .
    (157) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (158) else_statement -> . Else colon open_bracket inside_statements close_bracket

    id              reduce using rule 156 (condition_else -> .)
    For             reduce using rule 156 (condition_else -> .)
    While           reduce using rule 156 (condition_else -> .)
    If              reduce using rule 156 (condition_else -> .)
    Switch          reduce using rule 156 (condition_else -> .)
    Sys_Call        reduce using rule 156 (condition_else -> .)
    Absorb          reduce using rule 156 (condition_else -> .)
    Discharge       reduce using rule 156 (condition_else -> .)
    Link_End        reduce using rule 156 (condition_else -> .)
    Sys             reduce using rule 156 (condition_else -> .)
    $end            reduce using rule 156 (condition_else -> .)
    Break           reduce using rule 156 (condition_else -> .)
    Continue        reduce using rule 156 (condition_else -> .)
    Avoid           reduce using rule 156 (condition_else -> .)
    close_bracket   reduce using rule 156 (condition_else -> .)
    Return          reduce using rule 156 (condition_else -> .)
    Elif            shift and go to state 314
    Else            shift and go to state 315

    condition_else                 shift and go to state 360
    elif_statement                 shift and go to state 312
    else_statement                 shift and go to state 313

state 359

    (39) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace . value1 close_brace array_const1
    (86) value1 -> . value value2
    (52) value -> . num_value
    (53) value -> . lit_str
    (54) value -> . lit_bool
    (55) value -> .
    (56) num_value -> . id_array id_struct
    (57) num_value -> . literals
    (58) num_value -> . arithmetic_expression
    (59) num_value -> . func_call
    (60) num_value -> .
    (61) id_array -> . id array
    (62) id_array -> .
    (70) literals -> . lit_intposi
    (71) literals -> . lit_intnega
    (72) literals -> . lit_decposi
    (73) literals -> . lit_decnega
    (74) literals -> .
    (75) arithmetic_expression -> . open_par arithmetic_expression close_par
    (76) arithmetic_expression -> . num_value arithmetic_operators num_value
    (170) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 60 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 55 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 55 (value -> .)
    lit_str         shift and go to state 71
    lit_bool        shift and go to state 72
    comma           reduce using rule 55 (value -> .)
    close_brace     reduce using rule 55 (value -> .)
    plus            reduce using rule 60 (num_value -> .)
    minus           reduce using rule 60 (num_value -> .)
    times           reduce using rule 60 (num_value -> .)
    divide          reduce using rule 60 (num_value -> .)
    divide_divide   reduce using rule 60 (num_value -> .)
    modulo          reduce using rule 60 (num_value -> .)
    times_times     reduce using rule 60 (num_value -> .)
    id              shift and go to state 68
    period          reduce using rule 62 (id_array -> .)
    lit_intposi     shift and go to state 77
    lit_intnega     shift and go to state 78
    lit_decposi     shift and go to state 79
    lit_decnega     shift and go to state 80
    open_par        shift and go to state 81
    Sys_Call        shift and go to state 37

  ! comma           [ reduce using rule 60 (num_value -> .) ]
  ! close_brace     [ reduce using rule 60 (num_value -> .) ]
  ! plus            [ reduce using rule 62 (id_array -> .) ]
  ! minus           [ reduce using rule 62 (id_array -> .) ]
  ! times           [ reduce using rule 62 (id_array -> .) ]
  ! divide          [ reduce using rule 62 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 62 (id_array -> .) ]
  ! modulo          [ reduce using rule 62 (id_array -> .) ]
  ! times_times     [ reduce using rule 62 (id_array -> .) ]
  ! comma           [ reduce using rule 62 (id_array -> .) ]
  ! close_brace     [ reduce using rule 62 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (literals -> .) ]
  ! minus           [ reduce using rule 74 (literals -> .) ]
  ! times           [ reduce using rule 74 (literals -> .) ]
  ! divide          [ reduce using rule 74 (literals -> .) ]
  ! divide_divide   [ reduce using rule 74 (literals -> .) ]
  ! modulo          [ reduce using rule 74 (literals -> .) ]
  ! times_times     [ reduce using rule 74 (literals -> .) ]
  ! comma           [ reduce using rule 74 (literals -> .) ]
  ! close_brace     [ reduce using rule 74 (literals -> .) ]

    value1                         shift and go to state 361
    value                          shift and go to state 178
    num_value                      shift and go to state 70
    id_array                       shift and go to state 73
    literals                       shift and go to state 74
    arithmetic_expression          shift and go to state 75
    func_call                      shift and go to state 76

state 360

    (157) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 157 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)


state 361

    (39) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 . close_brace array_const1

    close_brace     shift and go to state 362


state 362

    (39) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace . array_const1
    (39) array_const1 -> . comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (40) array_const1 -> .

    comma           shift and go to state 335
    Generate        reduce using rule 40 (array_const1 -> .)
    Struct          reduce using rule 40 (array_const1 -> .)
    Link_Start      reduce using rule 40 (array_const1 -> .)
    id              reduce using rule 40 (array_const1 -> .)
    For             reduce using rule 40 (array_const1 -> .)
    While           reduce using rule 40 (array_const1 -> .)
    If              reduce using rule 40 (array_const1 -> .)
    Switch          reduce using rule 40 (array_const1 -> .)
    Sys_Call        reduce using rule 40 (array_const1 -> .)
    Absorb          reduce using rule 40 (array_const1 -> .)
    Discharge       reduce using rule 40 (array_const1 -> .)
    Link_End        reduce using rule 40 (array_const1 -> .)
    Sys             reduce using rule 40 (array_const1 -> .)
    $end            reduce using rule 40 (array_const1 -> .)
    Return          reduce using rule 40 (array_const1 -> .)
    close_bracket   reduce using rule 40 (array_const1 -> .)

    array_const1                   shift and go to state 363

state 363

    (39) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .

    Generate        reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Struct          reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_Start      reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    id              reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    For             reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    While           reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    If              reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Switch          reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys_Call        reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Absorb          reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Discharge       reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_End        reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys             reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    $end            reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Return          reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    close_bracket   reduce using rule 39 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Struct in state 0 resolved as shift
WARNING: shift/reduce conflict for Generate in state 0 resolved as shift
WARNING: shift/reduce conflict for Struct in state 0 resolved as shift
WARNING: shift/reduce conflict for Generate in state 0 resolved as shift
WARNING: shift/reduce conflict for Struct in state 3 resolved as shift
WARNING: shift/reduce conflict for Generate in state 3 resolved as shift
WARNING: shift/reduce conflict for Struct in state 3 resolved as shift
WARNING: shift/reduce conflict for Generate in state 3 resolved as shift
WARNING: shift/reduce conflict for Struct in state 4 resolved as shift
WARNING: shift/reduce conflict for Generate in state 4 resolved as shift
WARNING: shift/reduce conflict for Struct in state 4 resolved as shift
WARNING: shift/reduce conflict for Generate in state 4 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for If in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for If in state 8 resolved as shift
WARNING: shift/reduce conflict for Switch in state 8 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 8 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 8 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 8 resolved as shift
WARNING: shift/reduce conflict for Generate in state 13 resolved as shift
WARNING: shift/reduce conflict for id in state 20 resolved as shift
WARNING: shift/reduce conflict for For in state 20 resolved as shift
WARNING: shift/reduce conflict for id in state 20 resolved as shift
WARNING: shift/reduce conflict for For in state 20 resolved as shift
WARNING: shift/reduce conflict for While in state 20 resolved as shift
WARNING: shift/reduce conflict for id in state 20 resolved as shift
WARNING: shift/reduce conflict for For in state 20 resolved as shift
WARNING: shift/reduce conflict for While in state 20 resolved as shift
WARNING: shift/reduce conflict for If in state 20 resolved as shift
WARNING: shift/reduce conflict for id in state 20 resolved as shift
WARNING: shift/reduce conflict for For in state 20 resolved as shift
WARNING: shift/reduce conflict for While in state 20 resolved as shift
WARNING: shift/reduce conflict for If in state 20 resolved as shift
WARNING: shift/reduce conflict for Switch in state 20 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 20 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 20 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 20 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for If in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for If in state 22 resolved as shift
WARNING: shift/reduce conflict for Switch in state 22 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 22 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 22 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 23 resolved as shift
WARNING: shift/reduce conflict for For in state 23 resolved as shift
WARNING: shift/reduce conflict for id in state 23 resolved as shift
WARNING: shift/reduce conflict for For in state 23 resolved as shift
WARNING: shift/reduce conflict for While in state 23 resolved as shift
WARNING: shift/reduce conflict for id in state 23 resolved as shift
WARNING: shift/reduce conflict for For in state 23 resolved as shift
WARNING: shift/reduce conflict for While in state 23 resolved as shift
WARNING: shift/reduce conflict for If in state 23 resolved as shift
WARNING: shift/reduce conflict for id in state 23 resolved as shift
WARNING: shift/reduce conflict for For in state 23 resolved as shift
WARNING: shift/reduce conflict for While in state 23 resolved as shift
WARNING: shift/reduce conflict for If in state 23 resolved as shift
WARNING: shift/reduce conflict for Switch in state 23 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 23 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 23 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 23 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for If in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for If in state 24 resolved as shift
WARNING: shift/reduce conflict for Switch in state 24 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 24 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 24 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for If in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for If in state 25 resolved as shift
WARNING: shift/reduce conflict for Switch in state 25 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 25 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 25 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for If in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for If in state 26 resolved as shift
WARNING: shift/reduce conflict for Switch in state 26 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 26 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 26 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for If in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for If in state 27 resolved as shift
WARNING: shift/reduce conflict for Switch in state 27 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 27 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 27 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for If in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for If in state 28 resolved as shift
WARNING: shift/reduce conflict for Switch in state 28 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 28 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 28 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for If in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for If in state 29 resolved as shift
WARNING: shift/reduce conflict for Switch in state 29 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 29 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 29 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 38 resolved as shift
WARNING: shift/reduce conflict for id in state 39 resolved as shift
WARNING: shift/reduce conflict for id in state 39 resolved as shift
WARNING: shift/reduce conflict for id in state 39 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 39 resolved as shift
WARNING: shift/reduce conflict for id in state 44 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 61 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 61 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 61 resolved as shift
WARNING: shift/reduce conflict for comma in state 86 resolved as shift
WARNING: shift/reduce conflict for id in state 92 resolved as shift
WARNING: shift/reduce conflict for id in state 92 resolved as shift
WARNING: shift/reduce conflict for id in state 92 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 92 resolved as shift
WARNING: shift/reduce conflict for id in state 98 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 99 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 115 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 115 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 115 resolved as shift
WARNING: shift/reduce conflict for id in state 116 resolved as shift
WARNING: shift/reduce conflict for id in state 116 resolved as shift
WARNING: shift/reduce conflict for id in state 116 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 116 resolved as shift
WARNING: shift/reduce conflict for id in state 128 resolved as shift
WARNING: shift/reduce conflict for id in state 128 resolved as shift
WARNING: shift/reduce conflict for id in state 136 resolved as shift
WARNING: shift/reduce conflict for id in state 136 resolved as shift
WARNING: shift/reduce conflict for id in state 136 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 136 resolved as shift
WARNING: shift/reduce conflict for comma in state 140 resolved as shift
WARNING: shift/reduce conflict for id in state 144 resolved as shift
WARNING: shift/reduce conflict for id in state 144 resolved as shift
WARNING: shift/reduce conflict for id in state 144 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 144 resolved as shift
WARNING: shift/reduce conflict for id in state 145 resolved as shift
WARNING: shift/reduce conflict for id in state 145 resolved as shift
WARNING: shift/reduce conflict for lit_intposi in state 145 resolved as shift
WARNING: shift/reduce conflict for lit_intnega in state 145 resolved as shift
WARNING: shift/reduce conflict for lit_decposi in state 145 resolved as shift
WARNING: shift/reduce conflict for lit_decnega in state 145 resolved as shift
WARNING: shift/reduce conflict for id in state 145 resolved as shift
WARNING: shift/reduce conflict for open_par in state 145 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 145 resolved as shift
WARNING: shift/reduce conflict for equal in state 154 resolved as shift
WARNING: shift/reduce conflict for comma in state 178 resolved as shift
WARNING: shift/reduce conflict for plus in state 179 resolved as shift
WARNING: shift/reduce conflict for minus in state 179 resolved as shift
WARNING: shift/reduce conflict for times in state 179 resolved as shift
WARNING: shift/reduce conflict for divide in state 179 resolved as shift
WARNING: shift/reduce conflict for divide_divide in state 179 resolved as shift
WARNING: shift/reduce conflict for modulo in state 179 resolved as shift
WARNING: shift/reduce conflict for times_times in state 179 resolved as shift
WARNING: shift/reduce conflict for id in state 181 resolved as shift
WARNING: shift/reduce conflict for id in state 181 resolved as shift
WARNING: shift/reduce conflict for comma in state 186 resolved as shift
WARNING: shift/reduce conflict for id in state 197 resolved as shift
WARNING: shift/reduce conflict for id in state 197 resolved as shift
WARNING: shift/reduce conflict for id in state 197 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 197 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 213 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 213 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 213 resolved as shift
WARNING: shift/reduce conflict for id in state 221 resolved as shift
WARNING: shift/reduce conflict for id in state 221 resolved as shift
WARNING: shift/reduce conflict for comma in state 222 resolved as shift
WARNING: shift/reduce conflict for comma in state 227 resolved as shift
WARNING: shift/reduce conflict for Break in state 241 resolved as shift
WARNING: shift/reduce conflict for Continue in state 241 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 241 resolved as shift
WARNING: shift/reduce conflict for id in state 241 resolved as shift
WARNING: shift/reduce conflict for id in state 241 resolved as shift
WARNING: shift/reduce conflict for Break in state 241 resolved as shift
WARNING: shift/reduce conflict for Continue in state 241 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 241 resolved as shift
WARNING: shift/reduce conflict for For in state 241 resolved as shift
WARNING: shift/reduce conflict for id in state 241 resolved as shift
WARNING: shift/reduce conflict for For in state 241 resolved as shift
WARNING: shift/reduce conflict for Break in state 241 resolved as shift
WARNING: shift/reduce conflict for Continue in state 241 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 241 resolved as shift
WARNING: shift/reduce conflict for While in state 241 resolved as shift
WARNING: shift/reduce conflict for id in state 241 resolved as shift
WARNING: shift/reduce conflict for For in state 241 resolved as shift
WARNING: shift/reduce conflict for While in state 241 resolved as shift
WARNING: shift/reduce conflict for Break in state 241 resolved as shift
WARNING: shift/reduce conflict for Continue in state 241 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 241 resolved as shift
WARNING: shift/reduce conflict for If in state 241 resolved as shift
WARNING: shift/reduce conflict for id in state 241 resolved as shift
WARNING: shift/reduce conflict for For in state 241 resolved as shift
WARNING: shift/reduce conflict for While in state 241 resolved as shift
WARNING: shift/reduce conflict for If in state 241 resolved as shift
WARNING: shift/reduce conflict for Break in state 241 resolved as shift
WARNING: shift/reduce conflict for Continue in state 241 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 241 resolved as shift
WARNING: shift/reduce conflict for Switch in state 241 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 241 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 241 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 241 resolved as shift
WARNING: shift/reduce conflict for Break in state 243 resolved as shift
WARNING: shift/reduce conflict for Continue in state 243 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 243 resolved as shift
WARNING: shift/reduce conflict for id in state 243 resolved as shift
WARNING: shift/reduce conflict for id in state 243 resolved as shift
WARNING: shift/reduce conflict for Break in state 243 resolved as shift
WARNING: shift/reduce conflict for Continue in state 243 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 243 resolved as shift
WARNING: shift/reduce conflict for For in state 243 resolved as shift
WARNING: shift/reduce conflict for id in state 243 resolved as shift
WARNING: shift/reduce conflict for For in state 243 resolved as shift
WARNING: shift/reduce conflict for Break in state 243 resolved as shift
WARNING: shift/reduce conflict for Continue in state 243 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 243 resolved as shift
WARNING: shift/reduce conflict for While in state 243 resolved as shift
WARNING: shift/reduce conflict for id in state 243 resolved as shift
WARNING: shift/reduce conflict for For in state 243 resolved as shift
WARNING: shift/reduce conflict for While in state 243 resolved as shift
WARNING: shift/reduce conflict for Break in state 243 resolved as shift
WARNING: shift/reduce conflict for Continue in state 243 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 243 resolved as shift
WARNING: shift/reduce conflict for If in state 243 resolved as shift
WARNING: shift/reduce conflict for id in state 243 resolved as shift
WARNING: shift/reduce conflict for For in state 243 resolved as shift
WARNING: shift/reduce conflict for While in state 243 resolved as shift
WARNING: shift/reduce conflict for If in state 243 resolved as shift
WARNING: shift/reduce conflict for Break in state 243 resolved as shift
WARNING: shift/reduce conflict for Continue in state 243 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 243 resolved as shift
WARNING: shift/reduce conflict for Switch in state 243 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 243 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 243 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 243 resolved as shift
WARNING: shift/reduce conflict for comma in state 249 resolved as shift
WARNING: shift/reduce conflict for id in state 264 resolved as shift
WARNING: shift/reduce conflict for id in state 272 resolved as shift
WARNING: shift/reduce conflict for For in state 272 resolved as shift
WARNING: shift/reduce conflict for id in state 272 resolved as shift
WARNING: shift/reduce conflict for For in state 272 resolved as shift
WARNING: shift/reduce conflict for While in state 272 resolved as shift
WARNING: shift/reduce conflict for id in state 272 resolved as shift
WARNING: shift/reduce conflict for For in state 272 resolved as shift
WARNING: shift/reduce conflict for While in state 272 resolved as shift
WARNING: shift/reduce conflict for If in state 272 resolved as shift
WARNING: shift/reduce conflict for id in state 272 resolved as shift
WARNING: shift/reduce conflict for For in state 272 resolved as shift
WARNING: shift/reduce conflict for While in state 272 resolved as shift
WARNING: shift/reduce conflict for If in state 272 resolved as shift
WARNING: shift/reduce conflict for Switch in state 272 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 272 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 272 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 272 resolved as shift
WARNING: shift/reduce conflict for Break in state 277 resolved as shift
WARNING: shift/reduce conflict for Continue in state 277 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 277 resolved as shift
WARNING: shift/reduce conflict for id in state 277 resolved as shift
WARNING: shift/reduce conflict for id in state 277 resolved as shift
WARNING: shift/reduce conflict for Break in state 277 resolved as shift
WARNING: shift/reduce conflict for Continue in state 277 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 277 resolved as shift
WARNING: shift/reduce conflict for For in state 277 resolved as shift
WARNING: shift/reduce conflict for id in state 277 resolved as shift
WARNING: shift/reduce conflict for For in state 277 resolved as shift
WARNING: shift/reduce conflict for Break in state 277 resolved as shift
WARNING: shift/reduce conflict for Continue in state 277 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 277 resolved as shift
WARNING: shift/reduce conflict for While in state 277 resolved as shift
WARNING: shift/reduce conflict for id in state 277 resolved as shift
WARNING: shift/reduce conflict for For in state 277 resolved as shift
WARNING: shift/reduce conflict for While in state 277 resolved as shift
WARNING: shift/reduce conflict for Break in state 277 resolved as shift
WARNING: shift/reduce conflict for Continue in state 277 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 277 resolved as shift
WARNING: shift/reduce conflict for If in state 277 resolved as shift
WARNING: shift/reduce conflict for id in state 277 resolved as shift
WARNING: shift/reduce conflict for For in state 277 resolved as shift
WARNING: shift/reduce conflict for While in state 277 resolved as shift
WARNING: shift/reduce conflict for If in state 277 resolved as shift
WARNING: shift/reduce conflict for Break in state 277 resolved as shift
WARNING: shift/reduce conflict for Continue in state 277 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 277 resolved as shift
WARNING: shift/reduce conflict for Switch in state 277 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 277 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 277 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 277 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for While in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for While in state 278 resolved as shift
WARNING: shift/reduce conflict for If in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for While in state 278 resolved as shift
WARNING: shift/reduce conflict for If in state 278 resolved as shift
WARNING: shift/reduce conflict for Switch in state 278 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 278 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 278 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 282 resolved as shift
WARNING: shift/reduce conflict for id in state 282 resolved as shift
WARNING: shift/reduce conflict for id in state 282 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 282 resolved as shift
WARNING: shift/reduce conflict for id in state 285 resolved as shift
WARNING: shift/reduce conflict for For in state 285 resolved as shift
WARNING: shift/reduce conflict for id in state 285 resolved as shift
WARNING: shift/reduce conflict for For in state 285 resolved as shift
WARNING: shift/reduce conflict for While in state 285 resolved as shift
WARNING: shift/reduce conflict for id in state 285 resolved as shift
WARNING: shift/reduce conflict for For in state 285 resolved as shift
WARNING: shift/reduce conflict for While in state 285 resolved as shift
WARNING: shift/reduce conflict for If in state 285 resolved as shift
WARNING: shift/reduce conflict for id in state 285 resolved as shift
WARNING: shift/reduce conflict for For in state 285 resolved as shift
WARNING: shift/reduce conflict for While in state 285 resolved as shift
WARNING: shift/reduce conflict for If in state 285 resolved as shift
WARNING: shift/reduce conflict for Switch in state 285 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 285 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 285 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 285 resolved as shift
WARNING: shift/reduce conflict for Break in state 291 resolved as shift
WARNING: shift/reduce conflict for Continue in state 291 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 291 resolved as shift
WARNING: shift/reduce conflict for id in state 291 resolved as shift
WARNING: shift/reduce conflict for id in state 291 resolved as shift
WARNING: shift/reduce conflict for Break in state 291 resolved as shift
WARNING: shift/reduce conflict for Continue in state 291 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 291 resolved as shift
WARNING: shift/reduce conflict for For in state 291 resolved as shift
WARNING: shift/reduce conflict for id in state 291 resolved as shift
WARNING: shift/reduce conflict for For in state 291 resolved as shift
WARNING: shift/reduce conflict for Break in state 291 resolved as shift
WARNING: shift/reduce conflict for Continue in state 291 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 291 resolved as shift
WARNING: shift/reduce conflict for While in state 291 resolved as shift
WARNING: shift/reduce conflict for id in state 291 resolved as shift
WARNING: shift/reduce conflict for For in state 291 resolved as shift
WARNING: shift/reduce conflict for While in state 291 resolved as shift
WARNING: shift/reduce conflict for Break in state 291 resolved as shift
WARNING: shift/reduce conflict for Continue in state 291 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 291 resolved as shift
WARNING: shift/reduce conflict for If in state 291 resolved as shift
WARNING: shift/reduce conflict for id in state 291 resolved as shift
WARNING: shift/reduce conflict for For in state 291 resolved as shift
WARNING: shift/reduce conflict for While in state 291 resolved as shift
WARNING: shift/reduce conflict for If in state 291 resolved as shift
WARNING: shift/reduce conflict for Break in state 291 resolved as shift
WARNING: shift/reduce conflict for Continue in state 291 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 291 resolved as shift
WARNING: shift/reduce conflict for Switch in state 291 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 291 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 291 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 291 resolved as shift
WARNING: shift/reduce conflict for comma in state 303 resolved as shift
WARNING: shift/reduce conflict for equal in state 308 resolved as shift
WARNING: shift/reduce conflict for id in state 324 resolved as shift
WARNING: shift/reduce conflict for id in state 324 resolved as shift
WARNING: shift/reduce conflict for id in state 324 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 324 resolved as shift
WARNING: shift/reduce conflict for comma in state 333 resolved as shift
WARNING: shift/reduce conflict for id in state 338 resolved as shift
WARNING: shift/reduce conflict for For in state 338 resolved as shift
WARNING: shift/reduce conflict for id in state 338 resolved as shift
WARNING: shift/reduce conflict for For in state 338 resolved as shift
WARNING: shift/reduce conflict for While in state 338 resolved as shift
WARNING: shift/reduce conflict for id in state 338 resolved as shift
WARNING: shift/reduce conflict for For in state 338 resolved as shift
WARNING: shift/reduce conflict for While in state 338 resolved as shift
WARNING: shift/reduce conflict for If in state 338 resolved as shift
WARNING: shift/reduce conflict for id in state 338 resolved as shift
WARNING: shift/reduce conflict for For in state 338 resolved as shift
WARNING: shift/reduce conflict for While in state 338 resolved as shift
WARNING: shift/reduce conflict for If in state 338 resolved as shift
WARNING: shift/reduce conflict for Switch in state 338 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 338 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 338 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 338 resolved as shift
WARNING: shift/reduce conflict for Break in state 340 resolved as shift
WARNING: shift/reduce conflict for Continue in state 340 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 340 resolved as shift
WARNING: shift/reduce conflict for id in state 340 resolved as shift
WARNING: shift/reduce conflict for id in state 340 resolved as shift
WARNING: shift/reduce conflict for Break in state 340 resolved as shift
WARNING: shift/reduce conflict for Continue in state 340 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 340 resolved as shift
WARNING: shift/reduce conflict for For in state 340 resolved as shift
WARNING: shift/reduce conflict for id in state 340 resolved as shift
WARNING: shift/reduce conflict for For in state 340 resolved as shift
WARNING: shift/reduce conflict for Break in state 340 resolved as shift
WARNING: shift/reduce conflict for Continue in state 340 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 340 resolved as shift
WARNING: shift/reduce conflict for While in state 340 resolved as shift
WARNING: shift/reduce conflict for id in state 340 resolved as shift
WARNING: shift/reduce conflict for For in state 340 resolved as shift
WARNING: shift/reduce conflict for While in state 340 resolved as shift
WARNING: shift/reduce conflict for Break in state 340 resolved as shift
WARNING: shift/reduce conflict for Continue in state 340 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 340 resolved as shift
WARNING: shift/reduce conflict for If in state 340 resolved as shift
WARNING: shift/reduce conflict for id in state 340 resolved as shift
WARNING: shift/reduce conflict for For in state 340 resolved as shift
WARNING: shift/reduce conflict for While in state 340 resolved as shift
WARNING: shift/reduce conflict for If in state 340 resolved as shift
WARNING: shift/reduce conflict for Break in state 340 resolved as shift
WARNING: shift/reduce conflict for Continue in state 340 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 340 resolved as shift
WARNING: shift/reduce conflict for Switch in state 340 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 340 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 340 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 340 resolved as shift
WARNING: shift/reduce conflict for comma in state 343 resolved as shift
WARNING: shift/reduce conflict for Break in state 354 resolved as shift
WARNING: shift/reduce conflict for Continue in state 354 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 354 resolved as shift
WARNING: shift/reduce conflict for id in state 354 resolved as shift
WARNING: shift/reduce conflict for id in state 354 resolved as shift
WARNING: shift/reduce conflict for Break in state 354 resolved as shift
WARNING: shift/reduce conflict for Continue in state 354 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 354 resolved as shift
WARNING: shift/reduce conflict for For in state 354 resolved as shift
WARNING: shift/reduce conflict for id in state 354 resolved as shift
WARNING: shift/reduce conflict for For in state 354 resolved as shift
WARNING: shift/reduce conflict for Break in state 354 resolved as shift
WARNING: shift/reduce conflict for Continue in state 354 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 354 resolved as shift
WARNING: shift/reduce conflict for While in state 354 resolved as shift
WARNING: shift/reduce conflict for id in state 354 resolved as shift
WARNING: shift/reduce conflict for For in state 354 resolved as shift
WARNING: shift/reduce conflict for While in state 354 resolved as shift
WARNING: shift/reduce conflict for Break in state 354 resolved as shift
WARNING: shift/reduce conflict for Continue in state 354 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 354 resolved as shift
WARNING: shift/reduce conflict for If in state 354 resolved as shift
WARNING: shift/reduce conflict for id in state 354 resolved as shift
WARNING: shift/reduce conflict for For in state 354 resolved as shift
WARNING: shift/reduce conflict for While in state 354 resolved as shift
WARNING: shift/reduce conflict for If in state 354 resolved as shift
WARNING: shift/reduce conflict for Break in state 354 resolved as shift
WARNING: shift/reduce conflict for Continue in state 354 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 354 resolved as shift
WARNING: shift/reduce conflict for Switch in state 354 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 354 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 354 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 354 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 0 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 3 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 4 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 6 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (const_var_dec -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 20 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 20
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 23 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (conditional_statements -> if_statement) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (conditional_statements -> if_statement) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (conditional_statements -> switch_statements) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (conditional_statements -> switch_statements) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 39 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 39 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 39 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 39 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 39 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 61 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 61 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 63 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 63 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 63 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 63 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 63 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 64 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 64 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 64 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 64 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 64 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 81 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 81
WARNING: reduce/reduce conflict in state 81 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 81
WARNING: reduce/reduce conflict in state 92 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 103 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 103 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 103 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 103 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 103 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 112 resolved using rule (value -> <empty>)
WARNING: rejected rule (function_param -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 115 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 115
WARNING: reduce/reduce conflict in state 115 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 115
WARNING: reduce/reduce conflict in state 116 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 116
WARNING: reduce/reduce conflict in state 116 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 116
WARNING: reduce/reduce conflict in state 128 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 136 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 144 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 144
WARNING: reduce/reduce conflict in state 144 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 144
WARNING: reduce/reduce conflict in state 145 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 157 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 157
WARNING: reduce/reduce conflict in state 157 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 157
WARNING: reduce/reduce conflict in state 157 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 157
WARNING: reduce/reduce conflict in state 165 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 166 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 166
WARNING: reduce/reduce conflict in state 166 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 166
WARNING: reduce/reduce conflict in state 181 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 181
WARNING: reduce/reduce conflict in state 197 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 197
WARNING: reduce/reduce conflict in state 203 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 203
WARNING: reduce/reduce conflict in state 203 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 203
WARNING: reduce/reduce conflict in state 203 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 203
WARNING: reduce/reduce conflict in state 203 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 203
WARNING: reduce/reduce conflict in state 203 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 203
WARNING: reduce/reduce conflict in state 213 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 213
WARNING: reduce/reduce conflict in state 213 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 213
WARNING: reduce/reduce conflict in state 216 resolved using rule (value -> <empty>)
WARNING: rejected rule (function_param -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 218 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 221 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 221
WARNING: reduce/reduce conflict in state 241 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 243 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 243 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 249 resolved using rule (array -> open_brace close_brace)
WARNING: rejected rule (more_param -> <empty>) in state 249
WARNING: reduce/reduce conflict in state 260 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 260 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 260 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 260 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 260 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 264 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 265 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 265
WARNING: reduce/reduce conflict in state 265 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 265
WARNING: reduce/reduce conflict in state 265 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 265
WARNING: reduce/reduce conflict in state 265 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 265
WARNING: reduce/reduce conflict in state 265 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 265
WARNING: reduce/reduce conflict in state 268 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 268
WARNING: reduce/reduce conflict in state 268 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 268
WARNING: reduce/reduce conflict in state 268 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 268
WARNING: reduce/reduce conflict in state 268 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 268
WARNING: reduce/reduce conflict in state 268 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 268
WARNING: reduce/reduce conflict in state 272 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 272
WARNING: reduce/reduce conflict in state 272 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 272
WARNING: reduce/reduce conflict in state 272 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 272
WARNING: reduce/reduce conflict in state 272 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 272
WARNING: reduce/reduce conflict in state 272 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 272
WARNING: reduce/reduce conflict in state 272 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 272
WARNING: reduce/reduce conflict in state 272 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 272
WARNING: reduce/reduce conflict in state 277 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 277 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 281 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 282 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 285 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 285 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 285 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 285 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 285 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 285 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 285 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 291 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 291
WARNING: reduce/reduce conflict in state 324 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 324
WARNING: reduce/reduce conflict in state 324 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 324
WARNING: reduce/reduce conflict in state 324 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 324
WARNING: reduce/reduce conflict in state 324 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 324
WARNING: reduce/reduce conflict in state 324 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 324
WARNING: reduce/reduce conflict in state 328 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 328
WARNING: reduce/reduce conflict in state 328 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 328
WARNING: reduce/reduce conflict in state 328 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 328
WARNING: reduce/reduce conflict in state 328 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 328
WARNING: reduce/reduce conflict in state 328 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 328
WARNING: reduce/reduce conflict in state 338 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 338
WARNING: reduce/reduce conflict in state 338 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 338
WARNING: reduce/reduce conflict in state 338 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 338
WARNING: reduce/reduce conflict in state 338 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 338
WARNING: reduce/reduce conflict in state 338 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 338
WARNING: reduce/reduce conflict in state 338 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 338
WARNING: reduce/reduce conflict in state 338 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 338
WARNING: reduce/reduce conflict in state 340 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 340 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 340
WARNING: reduce/reduce conflict in state 354 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 354 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 359 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 359
WARNING: reduce/reduce conflict in state 359 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 359
WARNING: reduce/reduce conflict in state 359 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 359
WARNING: reduce/reduce conflict in state 359 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 359
WARNING: reduce/reduce conflict in state 359 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 359
WARNING: Rule (struct_dec -> <empty>) is never reduced
WARNING: Rule (assignment_statements -> <empty>) is never reduced
WARNING: Rule (for_statements -> <empty>) is never reduced
WARNING: Rule (while_statements -> <empty>) is never reduced
WARNING: Rule (if_statement -> <empty>) is never reduced
WARNING: Rule (conditional_statements -> if_statement) is never reduced
WARNING: Rule (conditional_statements -> switch_statements) is never reduced
WARNING: Rule (literals -> <empty>) is never reduced
WARNING: Rule (function_param -> <empty>) is never reduced
WARNING: Rule (id_array1 -> <empty>) is never reduced
WARNING: Rule (inside_statements -> <empty>) is never reduced
