Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    comment
    space

Grammar

Rule 0     S' -> program
Rule 1     program -> global_dec Link_Start declare_statements statements Link_End functions
Rule 2     program -> global_dec Link_Start declare_statements statements functions
Rule 3     program -> global_dec declare_statements statements Link_End functions
Rule 4     program -> global_dec declare_statements statements functions
Rule 5     global_dec -> struct_dec global_dec
Rule 6     global_dec -> declare_statements global_dec
Rule 7     global_dec -> <empty>
Rule 8     struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1
Rule 9     struct_dec -> Struct id struct_element1 id_array1
Rule 10    struct_dec -> Struct open_bracket struct_element1 id_array1
Rule 11    struct_dec -> Struct struct_element1 close_bracket id_array1
Rule 12    struct_dec -> Struct id open_bracket struct_element1 id_array1
Rule 13    struct_dec -> Struct id struct_element1 close_bracket id_array1
Rule 14    struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1
Rule 15    struct_dec -> <empty>
Rule 16    struct_element1 -> data_type id_array_dec struct_element2
Rule 17    struct_element2 -> struct_element1
Rule 18    struct_element2 -> <empty>
Rule 19    data_type -> Integer
Rule 20    data_type -> Decimal
Rule 21    data_type -> String
Rule 22    data_type -> Boolean
Rule 23    data_type -> <empty>
Rule 24    id_array_dec -> id id_array_dec2
Rule 25    id_array_dec -> <empty>
Rule 26    id_array_dec2 -> id_dec1
Rule 27    id_array_dec2 -> open_brace lit_intposi close_brace array_dec1
Rule 28    id_dec1 -> comma id id_dec1
Rule 29    id_dec1 -> <empty>
Rule 30    array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1
Rule 31    array_dec1 -> <empty>
Rule 32    declare_statements -> Generate const_var_dec declare_statements
Rule 33    declare_statements -> <empty>
Rule 34    const_var_dec -> Fixed data_type id_array_const
Rule 35    const_var_dec -> data_type id_array_var
Rule 36    const_var_dec -> <empty>
Rule 37    id_array_const -> id id_array_const2
Rule 38    id_array_const -> <empty>
Rule 39    id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 40    id_array_const2 -> equal value id_const1
Rule 41    id_array_const2 -> <empty>
Rule 42    id_const1 -> comma id equal value id_const1
Rule 43    id_const1 -> <empty>
Rule 44    array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 45    array_const1 -> <empty>
Rule 46    id_array_var -> id id_array_var2
Rule 47    id_array_var2 -> var_init id_var1
Rule 48    id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1
Rule 49    var_init -> equal value id_var1
Rule 50    var_init -> <empty>
Rule 51    id_var1 -> comma id var_init id_var1
Rule 52    id_var1 -> <empty>
Rule 53    array_init -> equal open_brace value1 close_brace array_var1
Rule 54    array_init -> <empty>
Rule 55    array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1
Rule 56    array_var1 -> <empty>
Rule 57    value -> num_value
Rule 58    value -> lit_str
Rule 59    value -> lit_bool
Rule 60    value -> <empty>
Rule 61    value_opt -> num_value_opt
Rule 62    value_opt -> lit_str
Rule 63    value_opt -> lit_bool
Rule 64    num_value -> id_array id_struct
Rule 65    num_value -> literals
Rule 66    num_value -> arithmetic_expression
Rule 67    num_value -> func_call
Rule 68    num_value -> <empty>
Rule 69    num_value_opt -> id_array_opt id_struct
Rule 70    num_value_opt -> literals_opt
Rule 71    num_value_opt -> arithmetic_expression
Rule 72    num_value_opt -> func_call
Rule 73    id_array -> id array
Rule 74    id_array -> <empty>
Rule 75    id_array_opt -> id array
Rule 76    array -> open_brace num_value close_brace
Rule 77    array -> open_brace close_brace
Rule 78    array -> <empty>
Rule 79    id_array1 -> id_array id_array2
Rule 80    id_array1 -> <empty>
Rule 81    id_array2 -> comma id_array1
Rule 82    id_array2 -> <empty>
Rule 83    literals -> lit_intposi
Rule 84    literals -> lit_intnega
Rule 85    literals -> lit_decposi
Rule 86    literals -> lit_decnega
Rule 87    literals -> <empty>
Rule 88    literals_opt -> lit_intposi
Rule 89    literals_opt -> lit_intnega
Rule 90    literals_opt -> lit_decposi
Rule 91    literals_opt -> lit_decnega
Rule 92    arithmetic_expression -> open_par arithmetic_expression close_par
Rule 93    arithmetic_expression -> num_value arithmetic_operators num_value
Rule 94    arithmetic_operators -> plus
Rule 95    arithmetic_operators -> minus
Rule 96    arithmetic_operators -> times
Rule 97    arithmetic_operators -> divide
Rule 98    arithmetic_operators -> divide_divide
Rule 99    arithmetic_operators -> modulo
Rule 100   arithmetic_operators -> times_times
Rule 101   id_struct -> period id_array
Rule 102   id_struct -> <empty>
Rule 103   value1 -> value value2
Rule 104   value2 -> comma value1
Rule 105   value2 -> <empty>
Rule 106   value1_opt -> value_opt value2_opt
Rule 107   value2_opt -> comma value1_opt
Rule 108   value2_opt -> <empty>
Rule 109   statements -> assignment_statements statements
Rule 110   statements -> for_statements statements
Rule 111   statements -> while_statements statements
Rule 112   statements -> if_statement statements
Rule 113   statements -> switch_statements statements
Rule 114   statements -> conditional_statements statements
Rule 115   statements -> io_statements statements
Rule 116   statements -> func_call statements
Rule 117   statements -> <empty>
Rule 118   assignment_statements -> id assignment_statements2
Rule 119   assignment_statements -> <empty>
Rule 120   assignment_statements2 -> array id_struct assignment_exp
Rule 121   assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace
Rule 122   assignment_exp -> assignment_operators num_value
Rule 123   assignment_exp -> equal assign_value
Rule 124   assignment_exp -> <empty>
Rule 125   assign_value -> num_value
Rule 126   assign_value -> more_id value
Rule 127   more_id -> id_array id_struct equal more_id
Rule 128   more_id -> <empty>
Rule 129   assignment_operators -> plus_equal
Rule 130   assignment_operators -> minus_equal
Rule 131   assignment_operators -> times_equal
Rule 132   assignment_operators -> divide_equal
Rule 133   assignment_operators -> divide_divide_equal
Rule 134   assignment_operators -> modulo_equal
Rule 135   assignment_operators -> times_times_equal
Rule 136   more_array -> equal id open_brace lit_intposi close_brace more_array
Rule 137   more_array -> <empty>
Rule 138   for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
Rule 139   for_statements -> <empty>
Rule 140   while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket
Rule 141   while_statements -> <empty>
Rule 142   inside_statements -> statements control_statements
Rule 143   inside_statements -> control_statements statements
Rule 144   inside_statements -> <empty>
Rule 145   control_statements -> Break
Rule 146   control_statements -> Continue
Rule 147   control_statements -> Avoid
Rule 148   control_statements -> <empty>
Rule 149   condition -> relational_expression
Rule 150   condition -> logical_expression
Rule 151   condition -> Not open_par condition_not close_par
Rule 152   condition -> lit_bool
Rule 153   condition_not -> relational_expression
Rule 154   condition_not -> logical_expression
Rule 155   condition_not -> lit_bool
Rule 156   relational_expression -> value relational_operators value
Rule 157   relational_operators -> greater_than
Rule 158   relational_operators -> less_than
Rule 159   relational_operators -> equal_equal
Rule 160   relational_operators -> not_equal
Rule 161   relational_operators -> great_than_equal
Rule 162   relational_operators -> less_than_equal
Rule 163   logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par
Rule 164   logical_operand -> Not open_par logical_operand close_par
Rule 165   logical_operand -> relational_expression
Rule 166   logical_operand -> logical_expression
Rule 167   logical_operand -> lit_bool
Rule 168   logical_operators -> And
Rule 169   logical_operators -> Or
Rule 170   conditional_statements -> if_statement
Rule 171   conditional_statements -> switch_statements
Rule 172   if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 173   if_statement -> <empty>
Rule 174   condition_else -> elif_statement
Rule 175   condition_else -> else_statement
Rule 176   condition_else -> <empty>
Rule 177   elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 178   else_statement -> Else colon open_bracket inside_statements close_bracket
Rule 179   else_statement -> <empty>
Rule 180   switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
Rule 181   execute -> Execute switch_lit colon statements Break execute1
Rule 182   switch_lit -> lit_str
Rule 183   switch_lit -> lit_intposi
Rule 184   switch_lit -> lit_intnega
Rule 185   execute1 -> execute
Rule 186   execute1 -> <empty>
Rule 187   io_statements -> input_statements
Rule 188   io_statements -> output_statements
Rule 189   input_statements -> Absorb id_array id_struct
Rule 190   output_statements -> Discharge value
Rule 191   func_call -> Sys_Call id open_par function_param close_par
Rule 192   function_param -> id open_brace close_brace more_param
Rule 193   function_param -> value1_opt more_param
Rule 194   function_param -> <empty>
Rule 195   more_param -> comma function_param
Rule 196   more_param -> <empty>
Rule 197   functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 198   functions -> Sys id parameters declare_statements statements return_statement functions
Rule 199   functions -> Sys open_par parameters declare_statements statements return_statement functions
Rule 200   functions -> Sys parameters close_par declare_statements statements return_statement functions
Rule 201   functions -> Sys parameters open_bracket declare_statements statements return_statement functions
Rule 202   functions -> Sys parameters declare_statements statements return_statement close_bracket functions
Rule 203   functions -> Sys id open_par parameters declare_statements statements return_statement functions
Rule 204   functions -> Sys id parameters close_par declare_statements statements return_statement functions
Rule 205   functions -> Sys id parameters open_bracket declare_statements statements return_statement functions
Rule 206   functions -> Sys id parameters declare_statements statements return_statement close_bracket functions
Rule 207   functions -> Sys open_par parameters close_par declare_statements statements return_statement functions
Rule 208   functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions
Rule 209   functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions
Rule 210   functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions
Rule 211   functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions
Rule 212   functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 213   functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions
Rule 214   functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions
Rule 215   functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions
Rule 216   functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions
Rule 217   functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions
Rule 218   functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 219   functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
Rule 220   functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
Rule 221   functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 222   functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 223   functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
Rule 224   functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
Rule 225   functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 226   functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 227   functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 228   functions -> <empty>
Rule 229   parameters -> data_type id more_parameters
Rule 230   parameters -> <empty>
Rule 231   more_parameters -> comma data_type id more_parameters
Rule 232   more_parameters -> <empty>
Rule 233   return_statement -> Return value statements return_statement
Rule 234   return_statement -> <empty>

Terminals, with rules where they appear

Absorb               : 189
And                  : 168
Avoid                : 147
Boolean              : 22
Break                : 145 181
Continue             : 146
Decimal              : 20
Default              : 180
Discharge            : 190
Elif                 : 177
Else                 : 178
End_Switch           : 180
Execute              : 181
Fixed                : 34
For                  : 138
Generate             : 32
If                   : 172
In                   : 138
Integer              : 19
Link_End             : 1 3
Link_Start           : 1 2
Not                  : 151 164
Or                   : 169
Return               : 233
String               : 21
Struct               : 8 9 10 11 12 13 14
Switch               : 180
Sys                  : 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
Sys_Call             : 191
While                : 140
close_brace          : 27 30 39 39 44 44 48 53 55 76 77 121 121 136 138 192
close_bracket        : 8 11 13 14 138 140 172 177 178 180 197 202 206 209 211 212 215 217 218 220 221 222 224 225 226 227
close_par            : 92 140 151 163 163 164 172 177 191 197 200 204 207 210 211 213 216 217 219 220 222 223 224 226 227
colon                : 138 140 172 177 178 180 180 181
comma                : 28 30 42 44 51 55 81 104 107 195 231
comment              : 
divide               : 97
divide_divide        : 98
divide_divide_equal  : 133
divide_equal         : 132
equal                : 39 40 42 44 49 53 121 123 127 136
equal_equal          : 159
error                : 
great_than_equal     : 161
greater_than         : 157
id                   : 8 9 12 13 24 28 30 37 42 44 46 51 55 73 75 118 136 138 138 180 191 192 197 198 203 204 205 206 213 214 215 216 217 218 223 224 225 226 229 231
less_than            : 158
less_than_equal      : 162
lit_bool             : 59 63 152 155 167
lit_decnega          : 86 91
lit_decposi          : 85 90
lit_intnega          : 84 89 184
lit_intposi          : 27 30 39 44 48 55 83 88 121 136 183
lit_str              : 58 62 182
minus                : 95
minus_equal          : 130
modulo               : 99
modulo_equal         : 134
not_equal            : 160
open_brace           : 27 30 39 39 44 44 48 53 55 76 77 121 121 136 138 192
open_bracket         : 8 10 12 14 138 140 172 177 178 180 197 201 205 208 210 212 214 216 218 219 221 222 223 225 226 227
open_par             : 92 140 151 163 163 164 172 177 191 197 199 203 207 208 209 213 214 215 219 220 221 223 224 225 227
period               : 101
plus                 : 94
plus_equal           : 129
space                : 
times                : 96
times_equal          : 131
times_times          : 100
times_times_equal    : 135

Nonterminals, with rules where they appear

arithmetic_expression : 66 71 92
arithmetic_operators : 93
array                : 73 75 120
array_const1         : 39 44
array_dec1           : 27 30
array_init           : 48 55
array_var1           : 48 53 55
assign_value         : 123
assignment_exp       : 120
assignment_operators : 122
assignment_statements : 109
assignment_statements2 : 118
condition            : 140 172 177
condition_else       : 172 177
condition_not        : 151
conditional_statements : 114
const_var_dec        : 32
control_statements   : 142 143
data_type            : 16 34 35 229 231
declare_statements   : 1 2 3 4 6 32 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
elif_statement       : 174
else_statement       : 175
execute              : 180 185
execute1             : 181
for_statements       : 110
func_call            : 67 72 116
function_param       : 191 195
functions            : 1 2 3 4 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
global_dec           : 1 2 3 4 5 6
id_array             : 64 79 101 127 189
id_array1            : 8 9 10 11 12 13 14 81
id_array2            : 79
id_array_const       : 34
id_array_const2      : 37
id_array_dec         : 16
id_array_dec2        : 24
id_array_opt         : 69
id_array_var         : 35
id_array_var2        : 46
id_const1            : 40 42
id_dec1              : 26 28
id_struct            : 64 69 120 127 189
id_var1              : 47 49 51
if_statement         : 112 170
input_statements     : 187
inside_statements    : 138 140 172 177 178 180
io_statements        : 115
literals             : 65
literals_opt         : 70
logical_expression   : 150 154 166
logical_operand      : 163 163 164
logical_operators    : 163
more_array           : 121 136
more_id              : 126 127
more_param           : 192 193
more_parameters      : 229 231
num_value            : 57 76 93 93 122 125
num_value_opt        : 61
output_statements    : 188
parameters           : 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
program              : 0
relational_expression : 149 153 165
relational_operators : 156
return_statement     : 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 233
statements           : 1 2 3 4 109 110 111 112 113 114 115 116 142 143 181 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 233
struct_dec           : 5
struct_element1      : 8 9 10 11 12 13 14 17
struct_element2      : 16
switch_lit           : 181
switch_statements    : 113 171
value                : 40 42 49 103 126 156 156 190 233
value1               : 39 44 53 104 121
value1_opt           : 107 193
value2               : 103
value2_opt           : 106
value_opt            : 106
var_init             : 47 51
while_statements     : 111

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . global_dec Link_Start declare_statements statements Link_End functions
    (2) program -> . global_dec Link_Start declare_statements statements functions
    (3) program -> . global_dec declare_statements statements Link_End functions
    (4) program -> . global_dec declare_statements statements functions
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> . Struct id struct_element1 id_array1
    (10) struct_dec -> . Struct open_bracket struct_element1 id_array1
    (11) struct_dec -> . Struct struct_element1 close_bracket id_array1
    (12) struct_dec -> . Struct id open_bracket struct_element1 id_array1
    (13) struct_dec -> . Struct id struct_element1 close_bracket id_array1
    (14) struct_dec -> . Struct open_bracket struct_element1 close_bracket id_array1
    (15) struct_dec -> .
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 15 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 15 (struct_dec -> .) ]
  ! id              [ reduce using rule 15 (struct_dec -> .) ]
  ! For             [ reduce using rule 15 (struct_dec -> .) ]
  ! While           [ reduce using rule 15 (struct_dec -> .) ]
  ! If              [ reduce using rule 15 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 15 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 15 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 15 (struct_dec -> .) ]
  ! $end            [ reduce using rule 15 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 33 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 33 (declare_statements -> .) ]
  ! id              [ reduce using rule 33 (declare_statements -> .) ]
  ! For             [ reduce using rule 33 (declare_statements -> .) ]
  ! While           [ reduce using rule 33 (declare_statements -> .) ]
  ! If              [ reduce using rule 33 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 33 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 33 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 33 (declare_statements -> .) ]
  ! $end            [ reduce using rule 33 (declare_statements -> .) ]

    program                        shift and go to state 1
    global_dec                     shift and go to state 2
    declare_statements             shift and go to state 3
    struct_dec                     shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> global_dec . Link_Start declare_statements statements Link_End functions
    (2) program -> global_dec . Link_Start declare_statements statements functions
    (3) program -> global_dec . declare_statements statements Link_End functions
    (4) program -> global_dec . declare_statements statements functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Link_Start      shift and go to state 7
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Link_End        reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 8

state 3

    (6) global_dec -> declare_statements . global_dec
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> . Struct id struct_element1 id_array1
    (10) struct_dec -> . Struct open_bracket struct_element1 id_array1
    (11) struct_dec -> . Struct struct_element1 close_bracket id_array1
    (12) struct_dec -> . Struct id open_bracket struct_element1 id_array1
    (13) struct_dec -> . Struct id struct_element1 close_bracket id_array1
    (14) struct_dec -> . Struct open_bracket struct_element1 close_bracket id_array1
    (15) struct_dec -> .
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 15 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 15 (struct_dec -> .) ]
  ! id              [ reduce using rule 15 (struct_dec -> .) ]
  ! For             [ reduce using rule 15 (struct_dec -> .) ]
  ! While           [ reduce using rule 15 (struct_dec -> .) ]
  ! If              [ reduce using rule 15 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 15 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 15 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 15 (struct_dec -> .) ]
  ! $end            [ reduce using rule 15 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 33 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 33 (declare_statements -> .) ]
  ! id              [ reduce using rule 33 (declare_statements -> .) ]
  ! For             [ reduce using rule 33 (declare_statements -> .) ]
  ! While           [ reduce using rule 33 (declare_statements -> .) ]
  ! If              [ reduce using rule 33 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 33 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 33 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 33 (declare_statements -> .) ]
  ! $end            [ reduce using rule 33 (declare_statements -> .) ]

    declare_statements             shift and go to state 3
    global_dec                     shift and go to state 9
    struct_dec                     shift and go to state 4

state 4

    (5) global_dec -> struct_dec . global_dec
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> . Struct id struct_element1 id_array1
    (10) struct_dec -> . Struct open_bracket struct_element1 id_array1
    (11) struct_dec -> . Struct struct_element1 close_bracket id_array1
    (12) struct_dec -> . Struct id open_bracket struct_element1 id_array1
    (13) struct_dec -> . Struct id struct_element1 close_bracket id_array1
    (14) struct_dec -> . Struct open_bracket struct_element1 close_bracket id_array1
    (15) struct_dec -> .
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 15 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 15 (struct_dec -> .) ]
  ! id              [ reduce using rule 15 (struct_dec -> .) ]
  ! For             [ reduce using rule 15 (struct_dec -> .) ]
  ! While           [ reduce using rule 15 (struct_dec -> .) ]
  ! If              [ reduce using rule 15 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 15 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 15 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 15 (struct_dec -> .) ]
  ! $end            [ reduce using rule 15 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 33 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 33 (declare_statements -> .) ]
  ! id              [ reduce using rule 33 (declare_statements -> .) ]
  ! For             [ reduce using rule 33 (declare_statements -> .) ]
  ! While           [ reduce using rule 33 (declare_statements -> .) ]
  ! If              [ reduce using rule 33 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 33 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 33 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 33 (declare_statements -> .) ]
  ! $end            [ reduce using rule 33 (declare_statements -> .) ]

    struct_dec                     shift and go to state 4
    global_dec                     shift and go to state 10
    declare_statements             shift and go to state 3

state 5

    (8) struct_dec -> Struct . id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> Struct . id struct_element1 id_array1
    (10) struct_dec -> Struct . open_bracket struct_element1 id_array1
    (11) struct_dec -> Struct . struct_element1 close_bracket id_array1
    (12) struct_dec -> Struct . id open_bracket struct_element1 id_array1
    (13) struct_dec -> Struct . id struct_element1 close_bracket id_array1
    (14) struct_dec -> Struct . open_bracket struct_element1 close_bracket id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    id              shift and go to state 11
    open_bracket    shift and go to state 12
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    close_bracket   reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 23 (data_type -> .) ]
  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 13
    data_type                      shift and go to state 14

state 6

    (32) declare_statements -> Generate . const_var_dec declare_statements
    (34) const_var_dec -> . Fixed data_type id_array_const
    (35) const_var_dec -> . data_type id_array_var
    (36) const_var_dec -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
    Fixed           shift and go to state 20
    Generate        reduce using rule 36 (const_var_dec -> .)
    Struct          reduce using rule 36 (const_var_dec -> .)
    Link_Start      reduce using rule 36 (const_var_dec -> .)
    For             reduce using rule 36 (const_var_dec -> .)
    While           reduce using rule 36 (const_var_dec -> .)
    If              reduce using rule 36 (const_var_dec -> .)
    Switch          reduce using rule 36 (const_var_dec -> .)
    Sys_Call        reduce using rule 36 (const_var_dec -> .)
    Absorb          reduce using rule 36 (const_var_dec -> .)
    Discharge       reduce using rule 36 (const_var_dec -> .)
    Link_End        reduce using rule 36 (const_var_dec -> .)
    Sys             reduce using rule 36 (const_var_dec -> .)
    $end            reduce using rule 36 (const_var_dec -> .)
    Return          reduce using rule 36 (const_var_dec -> .)
    close_bracket   reduce using rule 36 (const_var_dec -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 36 (const_var_dec -> .) ]

    const_var_dec                  shift and go to state 19
    data_type                      shift and go to state 21

state 7

    (1) program -> global_dec Link_Start . declare_statements statements Link_End functions
    (2) program -> global_dec Link_Start . declare_statements statements functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Link_End        reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 22

state 8

    (3) program -> global_dec declare_statements . statements Link_End functions
    (4) program -> global_dec declare_statements . statements functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 23
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 9

    (6) global_dec -> declare_statements global_dec .

    Link_Start      reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Generate        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    id              reduce using rule 6 (global_dec -> declare_statements global_dec .)
    For             reduce using rule 6 (global_dec -> declare_statements global_dec .)
    While           reduce using rule 6 (global_dec -> declare_statements global_dec .)
    If              reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Switch          reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Sys_Call        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Absorb          reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Discharge       reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Link_End        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Sys             reduce using rule 6 (global_dec -> declare_statements global_dec .)
    $end            reduce using rule 6 (global_dec -> declare_statements global_dec .)


state 10

    (5) global_dec -> struct_dec global_dec .

    Link_Start      reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Generate        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    id              reduce using rule 5 (global_dec -> struct_dec global_dec .)
    For             reduce using rule 5 (global_dec -> struct_dec global_dec .)
    While           reduce using rule 5 (global_dec -> struct_dec global_dec .)
    If              reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Switch          reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Sys_Call        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Absorb          reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Discharge       reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Link_End        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Sys             reduce using rule 5 (global_dec -> struct_dec global_dec .)
    $end            reduce using rule 5 (global_dec -> struct_dec global_dec .)


state 11

    (8) struct_dec -> Struct id . open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> Struct id . struct_element1 id_array1
    (12) struct_dec -> Struct id . open_bracket struct_element1 id_array1
    (13) struct_dec -> Struct id . struct_element1 close_bracket id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    open_bracket    shift and go to state 42
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)
    comma           reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 43
    data_type                      shift and go to state 14

state 12

    (10) struct_dec -> Struct open_bracket . struct_element1 id_array1
    (14) struct_dec -> Struct open_bracket . struct_element1 close_bracket id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)
    comma           reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 44
    data_type                      shift and go to state 14

state 13

    (11) struct_dec -> Struct struct_element1 . close_bracket id_array1

    close_bracket   shift and go to state 45


state 14

    (16) struct_element1 -> data_type . id_array_dec struct_element2
    (24) id_array_dec -> . id id_array_dec2
    (25) id_array_dec -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 47
    Integer         reduce using rule 25 (id_array_dec -> .)
    Decimal         reduce using rule 25 (id_array_dec -> .)
    String          reduce using rule 25 (id_array_dec -> .)
    Boolean         reduce using rule 25 (id_array_dec -> .)
    close_bracket   reduce using rule 25 (id_array_dec -> .)
    comma           reduce using rule 25 (id_array_dec -> .)
    Struct          reduce using rule 25 (id_array_dec -> .)
    Generate        reduce using rule 25 (id_array_dec -> .)
    Link_Start      reduce using rule 25 (id_array_dec -> .)
    For             reduce using rule 25 (id_array_dec -> .)
    While           reduce using rule 25 (id_array_dec -> .)
    If              reduce using rule 25 (id_array_dec -> .)
    Switch          reduce using rule 25 (id_array_dec -> .)
    Sys_Call        reduce using rule 25 (id_array_dec -> .)
    Absorb          reduce using rule 25 (id_array_dec -> .)
    Discharge       reduce using rule 25 (id_array_dec -> .)
    Link_End        reduce using rule 25 (id_array_dec -> .)
    Sys             reduce using rule 25 (id_array_dec -> .)
    $end            reduce using rule 25 (id_array_dec -> .)

  ! id              [ reduce using rule 25 (id_array_dec -> .) ]

    id_array_dec                   shift and go to state 46

state 15

    (19) data_type -> Integer .

    id              reduce using rule 19 (data_type -> Integer .)
    Integer         reduce using rule 19 (data_type -> Integer .)
    Decimal         reduce using rule 19 (data_type -> Integer .)
    String          reduce using rule 19 (data_type -> Integer .)
    Boolean         reduce using rule 19 (data_type -> Integer .)
    close_bracket   reduce using rule 19 (data_type -> Integer .)
    comma           reduce using rule 19 (data_type -> Integer .)
    Struct          reduce using rule 19 (data_type -> Integer .)
    Generate        reduce using rule 19 (data_type -> Integer .)
    Link_Start      reduce using rule 19 (data_type -> Integer .)
    For             reduce using rule 19 (data_type -> Integer .)
    While           reduce using rule 19 (data_type -> Integer .)
    If              reduce using rule 19 (data_type -> Integer .)
    Switch          reduce using rule 19 (data_type -> Integer .)
    Sys_Call        reduce using rule 19 (data_type -> Integer .)
    Absorb          reduce using rule 19 (data_type -> Integer .)
    Discharge       reduce using rule 19 (data_type -> Integer .)
    Link_End        reduce using rule 19 (data_type -> Integer .)
    Sys             reduce using rule 19 (data_type -> Integer .)
    $end            reduce using rule 19 (data_type -> Integer .)
    Return          reduce using rule 19 (data_type -> Integer .)


state 16

    (20) data_type -> Decimal .

    id              reduce using rule 20 (data_type -> Decimal .)
    Integer         reduce using rule 20 (data_type -> Decimal .)
    Decimal         reduce using rule 20 (data_type -> Decimal .)
    String          reduce using rule 20 (data_type -> Decimal .)
    Boolean         reduce using rule 20 (data_type -> Decimal .)
    close_bracket   reduce using rule 20 (data_type -> Decimal .)
    comma           reduce using rule 20 (data_type -> Decimal .)
    Struct          reduce using rule 20 (data_type -> Decimal .)
    Generate        reduce using rule 20 (data_type -> Decimal .)
    Link_Start      reduce using rule 20 (data_type -> Decimal .)
    For             reduce using rule 20 (data_type -> Decimal .)
    While           reduce using rule 20 (data_type -> Decimal .)
    If              reduce using rule 20 (data_type -> Decimal .)
    Switch          reduce using rule 20 (data_type -> Decimal .)
    Sys_Call        reduce using rule 20 (data_type -> Decimal .)
    Absorb          reduce using rule 20 (data_type -> Decimal .)
    Discharge       reduce using rule 20 (data_type -> Decimal .)
    Link_End        reduce using rule 20 (data_type -> Decimal .)
    Sys             reduce using rule 20 (data_type -> Decimal .)
    $end            reduce using rule 20 (data_type -> Decimal .)
    Return          reduce using rule 20 (data_type -> Decimal .)


state 17

    (21) data_type -> String .

    id              reduce using rule 21 (data_type -> String .)
    Integer         reduce using rule 21 (data_type -> String .)
    Decimal         reduce using rule 21 (data_type -> String .)
    String          reduce using rule 21 (data_type -> String .)
    Boolean         reduce using rule 21 (data_type -> String .)
    close_bracket   reduce using rule 21 (data_type -> String .)
    comma           reduce using rule 21 (data_type -> String .)
    Struct          reduce using rule 21 (data_type -> String .)
    Generate        reduce using rule 21 (data_type -> String .)
    Link_Start      reduce using rule 21 (data_type -> String .)
    For             reduce using rule 21 (data_type -> String .)
    While           reduce using rule 21 (data_type -> String .)
    If              reduce using rule 21 (data_type -> String .)
    Switch          reduce using rule 21 (data_type -> String .)
    Sys_Call        reduce using rule 21 (data_type -> String .)
    Absorb          reduce using rule 21 (data_type -> String .)
    Discharge       reduce using rule 21 (data_type -> String .)
    Link_End        reduce using rule 21 (data_type -> String .)
    Sys             reduce using rule 21 (data_type -> String .)
    $end            reduce using rule 21 (data_type -> String .)
    Return          reduce using rule 21 (data_type -> String .)


state 18

    (22) data_type -> Boolean .

    id              reduce using rule 22 (data_type -> Boolean .)
    Integer         reduce using rule 22 (data_type -> Boolean .)
    Decimal         reduce using rule 22 (data_type -> Boolean .)
    String          reduce using rule 22 (data_type -> Boolean .)
    Boolean         reduce using rule 22 (data_type -> Boolean .)
    close_bracket   reduce using rule 22 (data_type -> Boolean .)
    comma           reduce using rule 22 (data_type -> Boolean .)
    Struct          reduce using rule 22 (data_type -> Boolean .)
    Generate        reduce using rule 22 (data_type -> Boolean .)
    Link_Start      reduce using rule 22 (data_type -> Boolean .)
    For             reduce using rule 22 (data_type -> Boolean .)
    While           reduce using rule 22 (data_type -> Boolean .)
    If              reduce using rule 22 (data_type -> Boolean .)
    Switch          reduce using rule 22 (data_type -> Boolean .)
    Sys_Call        reduce using rule 22 (data_type -> Boolean .)
    Absorb          reduce using rule 22 (data_type -> Boolean .)
    Discharge       reduce using rule 22 (data_type -> Boolean .)
    Link_End        reduce using rule 22 (data_type -> Boolean .)
    Sys             reduce using rule 22 (data_type -> Boolean .)
    $end            reduce using rule 22 (data_type -> Boolean .)
    Return          reduce using rule 22 (data_type -> Boolean .)


state 19

    (32) declare_statements -> Generate const_var_dec . declare_statements
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Generate resolved as shift
    Generate        shift and go to state 6
    Struct          reduce using rule 33 (declare_statements -> .)
    Link_Start      reduce using rule 33 (declare_statements -> .)
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Link_End        reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)

  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]

    declare_statements             shift and go to state 48

state 20

    (34) const_var_dec -> Fixed . data_type id_array_const
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)
    Return          reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)

    data_type                      shift and go to state 49

state 21

    (35) const_var_dec -> data_type . id_array_var
    (46) id_array_var -> . id id_array_var2

    id              shift and go to state 51

    id_array_var                   shift and go to state 50

state 22

    (1) program -> global_dec Link_Start declare_statements . statements Link_End functions
    (2) program -> global_dec Link_Start declare_statements . statements functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 52
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 23

    (3) program -> global_dec declare_statements statements . Link_End functions
    (4) program -> global_dec declare_statements statements . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Link_End        shift and go to state 53
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 54

state 24

    (109) statements -> assignment_statements . statements
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    assignment_statements          shift and go to state 24
    statements                     shift and go to state 56
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 25

    (110) statements -> for_statements . statements
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    for_statements                 shift and go to state 25
    statements                     shift and go to state 57
    assignment_statements          shift and go to state 24
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 26

    (111) statements -> while_statements . statements
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    while_statements               shift and go to state 26
    statements                     shift and go to state 58
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 27

    (112) statements -> if_statement . statements
    (170) conditional_statements -> if_statement .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! For             [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! While           [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! If              [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Switch          [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Sys_Call        [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Absorb          [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Discharge       [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Link_End        [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Sys             [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! $end            [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Return          [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! close_bracket   [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Break           [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Continue        [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! Avoid           [ reduce using rule 170 (conditional_statements -> if_statement .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    if_statement                   shift and go to state 27
    statements                     shift and go to state 59
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 28

    (113) statements -> switch_statements . statements
    (171) conditional_statements -> switch_statements .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! For             [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! While           [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! If              [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Switch          [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Sys_Call        [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Absorb          [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Discharge       [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Link_End        [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Sys             [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! $end            [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Return          [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! close_bracket   [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Break           [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Continue        [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! Avoid           [ reduce using rule 171 (conditional_statements -> switch_statements .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    switch_statements              shift and go to state 28
    statements                     shift and go to state 60
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 29

    (114) statements -> conditional_statements . statements
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    conditional_statements         shift and go to state 29
    statements                     shift and go to state 61
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 30

    (115) statements -> io_statements . statements
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    io_statements                  shift and go to state 30
    statements                     shift and go to state 62
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 31

    (116) statements -> func_call . statements
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Break           reduce using rule 117 (statements -> .)
    Continue        reduce using rule 117 (statements -> .)
    Avoid           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Link_End        [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]

    func_call                      shift and go to state 31
    statements                     shift and go to state 63
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 32

    (118) assignment_statements -> id . assignment_statements2
    (120) assignment_statements2 -> . array id_struct assignment_exp
    (121) assignment_statements2 -> . open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace
    (76) array -> . open_brace num_value close_brace
    (77) array -> . open_brace close_brace
    (78) array -> .

    open_brace      shift and go to state 66
    period          reduce using rule 78 (array -> .)
    equal           reduce using rule 78 (array -> .)
    plus_equal      reduce using rule 78 (array -> .)
    minus_equal     reduce using rule 78 (array -> .)
    times_equal     reduce using rule 78 (array -> .)
    divide_equal    reduce using rule 78 (array -> .)
    divide_divide_equal reduce using rule 78 (array -> .)
    modulo_equal    reduce using rule 78 (array -> .)
    times_times_equal reduce using rule 78 (array -> .)
    id              reduce using rule 78 (array -> .)
    For             reduce using rule 78 (array -> .)
    While           reduce using rule 78 (array -> .)
    If              reduce using rule 78 (array -> .)
    Switch          reduce using rule 78 (array -> .)
    Sys_Call        reduce using rule 78 (array -> .)
    Absorb          reduce using rule 78 (array -> .)
    Discharge       reduce using rule 78 (array -> .)
    Link_End        reduce using rule 78 (array -> .)
    Sys             reduce using rule 78 (array -> .)
    $end            reduce using rule 78 (array -> .)
    Return          reduce using rule 78 (array -> .)
    close_bracket   reduce using rule 78 (array -> .)
    Break           reduce using rule 78 (array -> .)
    Continue        reduce using rule 78 (array -> .)
    Avoid           reduce using rule 78 (array -> .)

    assignment_statements2         shift and go to state 64
    array                          shift and go to state 65

state 33

    (138) for_statements -> For . id In id open_brace close_brace colon open_bracket inside_statements close_bracket

    id              shift and go to state 67


state 34

    (140) while_statements -> While . open_par condition close_par colon open_bracket inside_statements close_bracket

    open_par        shift and go to state 68


state 35

    (172) if_statement -> If . open_par condition close_par colon open_bracket inside_statements close_bracket condition_else

    open_par        shift and go to state 69


state 36

    (180) switch_statements -> Switch . id colon open_bracket execute Default colon inside_statements close_bracket End_Switch

    id              shift and go to state 70


state 37

    (187) io_statements -> input_statements .

    id              reduce using rule 187 (io_statements -> input_statements .)
    For             reduce using rule 187 (io_statements -> input_statements .)
    While           reduce using rule 187 (io_statements -> input_statements .)
    If              reduce using rule 187 (io_statements -> input_statements .)
    Switch          reduce using rule 187 (io_statements -> input_statements .)
    Sys_Call        reduce using rule 187 (io_statements -> input_statements .)
    Absorb          reduce using rule 187 (io_statements -> input_statements .)
    Discharge       reduce using rule 187 (io_statements -> input_statements .)
    Link_End        reduce using rule 187 (io_statements -> input_statements .)
    Sys             reduce using rule 187 (io_statements -> input_statements .)
    $end            reduce using rule 187 (io_statements -> input_statements .)
    Return          reduce using rule 187 (io_statements -> input_statements .)
    close_bracket   reduce using rule 187 (io_statements -> input_statements .)
    Break           reduce using rule 187 (io_statements -> input_statements .)
    Continue        reduce using rule 187 (io_statements -> input_statements .)
    Avoid           reduce using rule 187 (io_statements -> input_statements .)


state 38

    (188) io_statements -> output_statements .

    id              reduce using rule 188 (io_statements -> output_statements .)
    For             reduce using rule 188 (io_statements -> output_statements .)
    While           reduce using rule 188 (io_statements -> output_statements .)
    If              reduce using rule 188 (io_statements -> output_statements .)
    Switch          reduce using rule 188 (io_statements -> output_statements .)
    Sys_Call        reduce using rule 188 (io_statements -> output_statements .)
    Absorb          reduce using rule 188 (io_statements -> output_statements .)
    Discharge       reduce using rule 188 (io_statements -> output_statements .)
    Link_End        reduce using rule 188 (io_statements -> output_statements .)
    Sys             reduce using rule 188 (io_statements -> output_statements .)
    $end            reduce using rule 188 (io_statements -> output_statements .)
    Return          reduce using rule 188 (io_statements -> output_statements .)
    close_bracket   reduce using rule 188 (io_statements -> output_statements .)
    Break           reduce using rule 188 (io_statements -> output_statements .)
    Continue        reduce using rule 188 (io_statements -> output_statements .)
    Avoid           reduce using rule 188 (io_statements -> output_statements .)


state 39

    (191) func_call -> Sys_Call . id open_par function_param close_par

    id              shift and go to state 71


state 40

    (189) input_statements -> Absorb . id_array id_struct
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)
    Return          reduce using rule 74 (id_array -> .)
    close_bracket   reduce using rule 74 (id_array -> .)
    Break           reduce using rule 74 (id_array -> .)
    Continue        reduce using rule 74 (id_array -> .)
    Avoid           reduce using rule 74 (id_array -> .)

  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array                       shift and go to state 72

state 41

    (190) output_statements -> Discharge . value
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    For             reduce using rule 60 (value -> .)
    While           reduce using rule 60 (value -> .)
    If              reduce using rule 60 (value -> .)
    Switch          reduce using rule 60 (value -> .)
    Absorb          reduce using rule 60 (value -> .)
    Discharge       reduce using rule 60 (value -> .)
    Link_End        reduce using rule 60 (value -> .)
    Sys             reduce using rule 60 (value -> .)
    $end            reduce using rule 60 (value -> .)
    Return          reduce using rule 60 (value -> .)
    close_bracket   reduce using rule 60 (value -> .)
    Break           reduce using rule 60 (value -> .)
    Continue        reduce using rule 60 (value -> .)
    Avoid           reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 60 (value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (value -> .) ]
  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! For             [ reduce using rule 68 (num_value -> .) ]
  ! While           [ reduce using rule 68 (num_value -> .) ]
  ! If              [ reduce using rule 68 (num_value -> .) ]
  ! Switch          [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! Absorb          [ reduce using rule 68 (num_value -> .) ]
  ! Discharge       [ reduce using rule 68 (num_value -> .) ]
  ! Link_End        [ reduce using rule 68 (num_value -> .) ]
  ! Sys             [ reduce using rule 68 (num_value -> .) ]
  ! $end            [ reduce using rule 68 (num_value -> .) ]
  ! Return          [ reduce using rule 68 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 68 (num_value -> .) ]
  ! Break           [ reduce using rule 68 (num_value -> .) ]
  ! Continue        [ reduce using rule 68 (num_value -> .) ]
  ! Avoid           [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! Break           [ reduce using rule 74 (id_array -> .) ]
  ! Continue        [ reduce using rule 74 (id_array -> .) ]
  ! Avoid           [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]
  ! Break           [ reduce using rule 87 (literals -> .) ]
  ! Continue        [ reduce using rule 87 (literals -> .) ]
  ! Avoid           [ reduce using rule 87 (literals -> .) ]

    value                          shift and go to state 74
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 42

    (8) struct_dec -> Struct id open_bracket . struct_element1 close_bracket id_array1
    (12) struct_dec -> Struct id open_bracket . struct_element1 id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)
    comma           reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 87
    data_type                      shift and go to state 14

state 43

    (9) struct_dec -> Struct id struct_element1 . id_array1
    (13) struct_dec -> Struct id struct_element1 . close_bracket id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    close_bracket   shift and go to state 89
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 88
    id_array                       shift and go to state 90

state 44

    (10) struct_dec -> Struct open_bracket struct_element1 . id_array1
    (14) struct_dec -> Struct open_bracket struct_element1 . close_bracket id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    close_bracket   shift and go to state 92
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 91
    id_array                       shift and go to state 90

state 45

    (11) struct_dec -> Struct struct_element1 close_bracket . id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 93
    id_array                       shift and go to state 90

state 46

    (16) struct_element1 -> data_type id_array_dec . struct_element2
    (17) struct_element2 -> . struct_element1
    (18) struct_element2 -> .
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
  ! reduce/reduce conflict for id resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for comma resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Struct resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Generate resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for For resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for While resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for If resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Switch resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Sys resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for $end resolved using rule 18 (struct_element2 -> .)
    close_bracket   reduce using rule 18 (struct_element2 -> .)
    id              reduce using rule 18 (struct_element2 -> .)
    comma           reduce using rule 18 (struct_element2 -> .)
    Struct          reduce using rule 18 (struct_element2 -> .)
    Generate        reduce using rule 18 (struct_element2 -> .)
    Link_Start      reduce using rule 18 (struct_element2 -> .)
    For             reduce using rule 18 (struct_element2 -> .)
    While           reduce using rule 18 (struct_element2 -> .)
    If              reduce using rule 18 (struct_element2 -> .)
    Switch          reduce using rule 18 (struct_element2 -> .)
    Sys_Call        reduce using rule 18 (struct_element2 -> .)
    Absorb          reduce using rule 18 (struct_element2 -> .)
    Discharge       reduce using rule 18 (struct_element2 -> .)
    Link_End        reduce using rule 18 (struct_element2 -> .)
    Sys             reduce using rule 18 (struct_element2 -> .)
    $end            reduce using rule 18 (struct_element2 -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]
  ! id              [ reduce using rule 23 (data_type -> .) ]
  ! close_bracket   [ reduce using rule 23 (data_type -> .) ]
  ! comma           [ reduce using rule 23 (data_type -> .) ]
  ! Struct          [ reduce using rule 23 (data_type -> .) ]
  ! Generate        [ reduce using rule 23 (data_type -> .) ]
  ! Link_Start      [ reduce using rule 23 (data_type -> .) ]
  ! For             [ reduce using rule 23 (data_type -> .) ]
  ! While           [ reduce using rule 23 (data_type -> .) ]
  ! If              [ reduce using rule 23 (data_type -> .) ]
  ! Switch          [ reduce using rule 23 (data_type -> .) ]
  ! Sys_Call        [ reduce using rule 23 (data_type -> .) ]
  ! Absorb          [ reduce using rule 23 (data_type -> .) ]
  ! Discharge       [ reduce using rule 23 (data_type -> .) ]
  ! Link_End        [ reduce using rule 23 (data_type -> .) ]
  ! Sys             [ reduce using rule 23 (data_type -> .) ]
  ! $end            [ reduce using rule 23 (data_type -> .) ]

    data_type                      shift and go to state 14
    struct_element2                shift and go to state 94
    struct_element1                shift and go to state 95

state 47

    (24) id_array_dec -> id . id_array_dec2
    (26) id_array_dec2 -> . id_dec1
    (27) id_array_dec2 -> . open_brace lit_intposi close_brace array_dec1
    (28) id_dec1 -> . comma id id_dec1
    (29) id_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    open_brace      shift and go to state 98
    comma           shift and go to state 99
    Integer         reduce using rule 29 (id_dec1 -> .)
    Decimal         reduce using rule 29 (id_dec1 -> .)
    String          reduce using rule 29 (id_dec1 -> .)
    Boolean         reduce using rule 29 (id_dec1 -> .)
    id              reduce using rule 29 (id_dec1 -> .)
    close_bracket   reduce using rule 29 (id_dec1 -> .)
    Struct          reduce using rule 29 (id_dec1 -> .)
    Generate        reduce using rule 29 (id_dec1 -> .)
    Link_Start      reduce using rule 29 (id_dec1 -> .)
    For             reduce using rule 29 (id_dec1 -> .)
    While           reduce using rule 29 (id_dec1 -> .)
    If              reduce using rule 29 (id_dec1 -> .)
    Switch          reduce using rule 29 (id_dec1 -> .)
    Sys_Call        reduce using rule 29 (id_dec1 -> .)
    Absorb          reduce using rule 29 (id_dec1 -> .)
    Discharge       reduce using rule 29 (id_dec1 -> .)
    Link_End        reduce using rule 29 (id_dec1 -> .)
    Sys             reduce using rule 29 (id_dec1 -> .)
    $end            reduce using rule 29 (id_dec1 -> .)

  ! comma           [ reduce using rule 29 (id_dec1 -> .) ]

    id_array_dec2                  shift and go to state 96
    id_dec1                        shift and go to state 97

state 48

    (32) declare_statements -> Generate const_var_dec declare_statements .

    Struct          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Generate        reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Link_Start      reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    id              reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    For             reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    While           reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    If              reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Switch          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Sys_Call        reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Absorb          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Discharge       reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Link_End        reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Sys             reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    $end            reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Return          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    close_bracket   reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)


state 49

    (34) const_var_dec -> Fixed data_type . id_array_const
    (37) id_array_const -> . id id_array_const2
    (38) id_array_const -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 101
    Generate        reduce using rule 38 (id_array_const -> .)
    Struct          reduce using rule 38 (id_array_const -> .)
    Link_Start      reduce using rule 38 (id_array_const -> .)
    For             reduce using rule 38 (id_array_const -> .)
    While           reduce using rule 38 (id_array_const -> .)
    If              reduce using rule 38 (id_array_const -> .)
    Switch          reduce using rule 38 (id_array_const -> .)
    Sys_Call        reduce using rule 38 (id_array_const -> .)
    Absorb          reduce using rule 38 (id_array_const -> .)
    Discharge       reduce using rule 38 (id_array_const -> .)
    Link_End        reduce using rule 38 (id_array_const -> .)
    Sys             reduce using rule 38 (id_array_const -> .)
    $end            reduce using rule 38 (id_array_const -> .)
    Return          reduce using rule 38 (id_array_const -> .)
    close_bracket   reduce using rule 38 (id_array_const -> .)

  ! id              [ reduce using rule 38 (id_array_const -> .) ]

    id_array_const                 shift and go to state 100

state 50

    (35) const_var_dec -> data_type id_array_var .

    Generate        reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Struct          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Link_Start      reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    id              reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    For             reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    While           reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    If              reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Switch          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Sys_Call        reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Absorb          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Discharge       reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Link_End        reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Sys             reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    $end            reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Return          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    close_bracket   reduce using rule 35 (const_var_dec -> data_type id_array_var .)


state 51

    (46) id_array_var -> id . id_array_var2
    (47) id_array_var2 -> . var_init id_var1
    (48) id_array_var2 -> . open_brace lit_intposi close_brace array_init array_var1
    (49) var_init -> . equal value id_var1
    (50) var_init -> .

    open_brace      shift and go to state 104
    equal           shift and go to state 105
    comma           reduce using rule 50 (var_init -> .)
    Generate        reduce using rule 50 (var_init -> .)
    Struct          reduce using rule 50 (var_init -> .)
    Link_Start      reduce using rule 50 (var_init -> .)
    id              reduce using rule 50 (var_init -> .)
    For             reduce using rule 50 (var_init -> .)
    While           reduce using rule 50 (var_init -> .)
    If              reduce using rule 50 (var_init -> .)
    Switch          reduce using rule 50 (var_init -> .)
    Sys_Call        reduce using rule 50 (var_init -> .)
    Absorb          reduce using rule 50 (var_init -> .)
    Discharge       reduce using rule 50 (var_init -> .)
    Link_End        reduce using rule 50 (var_init -> .)
    Sys             reduce using rule 50 (var_init -> .)
    $end            reduce using rule 50 (var_init -> .)
    Return          reduce using rule 50 (var_init -> .)
    close_bracket   reduce using rule 50 (var_init -> .)

    id_array_var2                  shift and go to state 102
    var_init                       shift and go to state 103

state 52

    (1) program -> global_dec Link_Start declare_statements statements . Link_End functions
    (2) program -> global_dec Link_Start declare_statements statements . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Link_End        shift and go to state 106
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 107

state 53

    (3) program -> global_dec declare_statements statements Link_End . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 108

state 54

    (4) program -> global_dec declare_statements statements functions .

    $end            reduce using rule 4 (program -> global_dec declare_statements statements functions .)


state 55

    (197) functions -> Sys . id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> Sys . id parameters declare_statements statements return_statement functions
    (199) functions -> Sys . open_par parameters declare_statements statements return_statement functions
    (200) functions -> Sys . parameters close_par declare_statements statements return_statement functions
    (201) functions -> Sys . parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> Sys . parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> Sys . id open_par parameters declare_statements statements return_statement functions
    (204) functions -> Sys . id parameters close_par declare_statements statements return_statement functions
    (205) functions -> Sys . id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> Sys . id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> Sys . open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> Sys . open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> Sys . open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> Sys . parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> Sys . parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> Sys . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> Sys . id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> Sys . id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> Sys . id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> Sys . id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> Sys . id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> Sys . id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> Sys . open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> Sys . open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> Sys . open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> Sys . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> Sys . id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> Sys . id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> Sys . id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> Sys . id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> Sys . open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (229) parameters -> . data_type id more_parameters
    (230) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 109
    open_par        shift and go to state 110
    close_par       reduce using rule 230 (parameters -> .)
    open_bracket    reduce using rule 230 (parameters -> .)
    Generate        reduce using rule 230 (parameters -> .)
    For             reduce using rule 230 (parameters -> .)
    While           reduce using rule 230 (parameters -> .)
    If              reduce using rule 230 (parameters -> .)
    Switch          reduce using rule 230 (parameters -> .)
    Sys_Call        reduce using rule 230 (parameters -> .)
    Absorb          reduce using rule 230 (parameters -> .)
    Discharge       reduce using rule 230 (parameters -> .)
    Return          reduce using rule 230 (parameters -> .)
    close_bracket   reduce using rule 230 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18

  ! id              [ reduce using rule 230 (parameters -> .) ]
  ! id              [ reduce using rule 23 (data_type -> .) ]

    parameters                     shift and go to state 111
    data_type                      shift and go to state 112

state 56

    (109) statements -> assignment_statements statements .

    Link_End        reduce using rule 109 (statements -> assignment_statements statements .)
    Sys             reduce using rule 109 (statements -> assignment_statements statements .)
    $end            reduce using rule 109 (statements -> assignment_statements statements .)
    Return          reduce using rule 109 (statements -> assignment_statements statements .)
    close_bracket   reduce using rule 109 (statements -> assignment_statements statements .)
    Break           reduce using rule 109 (statements -> assignment_statements statements .)
    Continue        reduce using rule 109 (statements -> assignment_statements statements .)
    Avoid           reduce using rule 109 (statements -> assignment_statements statements .)


state 57

    (110) statements -> for_statements statements .

    Link_End        reduce using rule 110 (statements -> for_statements statements .)
    Sys             reduce using rule 110 (statements -> for_statements statements .)
    $end            reduce using rule 110 (statements -> for_statements statements .)
    Return          reduce using rule 110 (statements -> for_statements statements .)
    close_bracket   reduce using rule 110 (statements -> for_statements statements .)
    Break           reduce using rule 110 (statements -> for_statements statements .)
    Continue        reduce using rule 110 (statements -> for_statements statements .)
    Avoid           reduce using rule 110 (statements -> for_statements statements .)


state 58

    (111) statements -> while_statements statements .

    Link_End        reduce using rule 111 (statements -> while_statements statements .)
    Sys             reduce using rule 111 (statements -> while_statements statements .)
    $end            reduce using rule 111 (statements -> while_statements statements .)
    Return          reduce using rule 111 (statements -> while_statements statements .)
    close_bracket   reduce using rule 111 (statements -> while_statements statements .)
    Break           reduce using rule 111 (statements -> while_statements statements .)
    Continue        reduce using rule 111 (statements -> while_statements statements .)
    Avoid           reduce using rule 111 (statements -> while_statements statements .)


state 59

    (112) statements -> if_statement statements .

    Link_End        reduce using rule 112 (statements -> if_statement statements .)
    Sys             reduce using rule 112 (statements -> if_statement statements .)
    $end            reduce using rule 112 (statements -> if_statement statements .)
    Return          reduce using rule 112 (statements -> if_statement statements .)
    close_bracket   reduce using rule 112 (statements -> if_statement statements .)
    Break           reduce using rule 112 (statements -> if_statement statements .)
    Continue        reduce using rule 112 (statements -> if_statement statements .)
    Avoid           reduce using rule 112 (statements -> if_statement statements .)


state 60

    (113) statements -> switch_statements statements .

    Link_End        reduce using rule 113 (statements -> switch_statements statements .)
    Sys             reduce using rule 113 (statements -> switch_statements statements .)
    $end            reduce using rule 113 (statements -> switch_statements statements .)
    Return          reduce using rule 113 (statements -> switch_statements statements .)
    close_bracket   reduce using rule 113 (statements -> switch_statements statements .)
    Break           reduce using rule 113 (statements -> switch_statements statements .)
    Continue        reduce using rule 113 (statements -> switch_statements statements .)
    Avoid           reduce using rule 113 (statements -> switch_statements statements .)


state 61

    (114) statements -> conditional_statements statements .

    Link_End        reduce using rule 114 (statements -> conditional_statements statements .)
    Sys             reduce using rule 114 (statements -> conditional_statements statements .)
    $end            reduce using rule 114 (statements -> conditional_statements statements .)
    Return          reduce using rule 114 (statements -> conditional_statements statements .)
    close_bracket   reduce using rule 114 (statements -> conditional_statements statements .)
    Break           reduce using rule 114 (statements -> conditional_statements statements .)
    Continue        reduce using rule 114 (statements -> conditional_statements statements .)
    Avoid           reduce using rule 114 (statements -> conditional_statements statements .)


state 62

    (115) statements -> io_statements statements .

    Link_End        reduce using rule 115 (statements -> io_statements statements .)
    Sys             reduce using rule 115 (statements -> io_statements statements .)
    $end            reduce using rule 115 (statements -> io_statements statements .)
    Return          reduce using rule 115 (statements -> io_statements statements .)
    close_bracket   reduce using rule 115 (statements -> io_statements statements .)
    Break           reduce using rule 115 (statements -> io_statements statements .)
    Continue        reduce using rule 115 (statements -> io_statements statements .)
    Avoid           reduce using rule 115 (statements -> io_statements statements .)


state 63

    (116) statements -> func_call statements .

    Link_End        reduce using rule 116 (statements -> func_call statements .)
    Sys             reduce using rule 116 (statements -> func_call statements .)
    $end            reduce using rule 116 (statements -> func_call statements .)
    Return          reduce using rule 116 (statements -> func_call statements .)
    close_bracket   reduce using rule 116 (statements -> func_call statements .)
    Break           reduce using rule 116 (statements -> func_call statements .)
    Continue        reduce using rule 116 (statements -> func_call statements .)
    Avoid           reduce using rule 116 (statements -> func_call statements .)


state 64

    (118) assignment_statements -> id assignment_statements2 .

    id              reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    For             reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    While           reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    If              reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Switch          reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Sys_Call        reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Absorb          reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Discharge       reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Link_End        reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Sys             reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    $end            reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Return          reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    close_bracket   reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Break           reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Continue        reduce using rule 118 (assignment_statements -> id assignment_statements2 .)
    Avoid           reduce using rule 118 (assignment_statements -> id assignment_statements2 .)


state 65

    (120) assignment_statements2 -> array . id_struct assignment_exp
    (101) id_struct -> . period id_array
    (102) id_struct -> .

    period          shift and go to state 114
    equal           reduce using rule 102 (id_struct -> .)
    plus_equal      reduce using rule 102 (id_struct -> .)
    minus_equal     reduce using rule 102 (id_struct -> .)
    times_equal     reduce using rule 102 (id_struct -> .)
    divide_equal    reduce using rule 102 (id_struct -> .)
    divide_divide_equal reduce using rule 102 (id_struct -> .)
    modulo_equal    reduce using rule 102 (id_struct -> .)
    times_times_equal reduce using rule 102 (id_struct -> .)
    id              reduce using rule 102 (id_struct -> .)
    For             reduce using rule 102 (id_struct -> .)
    While           reduce using rule 102 (id_struct -> .)
    If              reduce using rule 102 (id_struct -> .)
    Switch          reduce using rule 102 (id_struct -> .)
    Sys_Call        reduce using rule 102 (id_struct -> .)
    Absorb          reduce using rule 102 (id_struct -> .)
    Discharge       reduce using rule 102 (id_struct -> .)
    Link_End        reduce using rule 102 (id_struct -> .)
    Sys             reduce using rule 102 (id_struct -> .)
    $end            reduce using rule 102 (id_struct -> .)
    Return          reduce using rule 102 (id_struct -> .)
    close_bracket   reduce using rule 102 (id_struct -> .)
    Break           reduce using rule 102 (id_struct -> .)
    Continue        reduce using rule 102 (id_struct -> .)
    Avoid           reduce using rule 102 (id_struct -> .)

    id_struct                      shift and go to state 113

state 66

    (121) assignment_statements2 -> open_brace . lit_intposi close_brace more_array equal open_brace value1 close_brace
    (76) array -> open_brace . num_value close_brace
    (77) array -> open_brace . close_brace
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
    lit_intposi     shift and go to state 115
    close_brace     shift and go to state 116
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]

    num_value                      shift and go to state 117
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 67

    (138) for_statements -> For id . In id open_brace close_brace colon open_bracket inside_statements close_bracket

    In              shift and go to state 118


state 68

    (140) while_statements -> While open_par . condition close_par colon open_bracket inside_statements close_bracket
    (149) condition -> . relational_expression
    (150) condition -> . logical_expression
    (151) condition -> . Not open_par condition_not close_par
    (152) condition -> . lit_bool
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    Not             shift and go to state 123
    lit_bool        shift and go to state 124
    open_par        shift and go to state 119
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    condition                      shift and go to state 120
    relational_expression          shift and go to state 121
    logical_expression             shift and go to state 122
    value                          shift and go to state 125
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 69

    (172) if_statement -> If open_par . condition close_par colon open_bracket inside_statements close_bracket condition_else
    (149) condition -> . relational_expression
    (150) condition -> . logical_expression
    (151) condition -> . Not open_par condition_not close_par
    (152) condition -> . lit_bool
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    Not             shift and go to state 123
    lit_bool        shift and go to state 124
    open_par        shift and go to state 119
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    condition                      shift and go to state 126
    relational_expression          shift and go to state 121
    logical_expression             shift and go to state 122
    value                          shift and go to state 125
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 70

    (180) switch_statements -> Switch id . colon open_bracket execute Default colon inside_statements close_bracket End_Switch

    colon           shift and go to state 127


state 71

    (191) func_call -> Sys_Call id . open_par function_param close_par

    open_par        shift and go to state 128


state 72

    (189) input_statements -> Absorb id_array . id_struct
    (101) id_struct -> . period id_array
    (102) id_struct -> .

    period          shift and go to state 114
    id              reduce using rule 102 (id_struct -> .)
    For             reduce using rule 102 (id_struct -> .)
    While           reduce using rule 102 (id_struct -> .)
    If              reduce using rule 102 (id_struct -> .)
    Switch          reduce using rule 102 (id_struct -> .)
    Sys_Call        reduce using rule 102 (id_struct -> .)
    Absorb          reduce using rule 102 (id_struct -> .)
    Discharge       reduce using rule 102 (id_struct -> .)
    Link_End        reduce using rule 102 (id_struct -> .)
    Sys             reduce using rule 102 (id_struct -> .)
    $end            reduce using rule 102 (id_struct -> .)
    Return          reduce using rule 102 (id_struct -> .)
    close_bracket   reduce using rule 102 (id_struct -> .)
    Break           reduce using rule 102 (id_struct -> .)
    Continue        reduce using rule 102 (id_struct -> .)
    Avoid           reduce using rule 102 (id_struct -> .)

    id_struct                      shift and go to state 129

state 73

    (73) id_array -> id . array
    (76) array -> . open_brace num_value close_brace
    (77) array -> . open_brace close_brace
    (78) array -> .

    open_brace      shift and go to state 131
    period          reduce using rule 78 (array -> .)
    id              reduce using rule 78 (array -> .)
    For             reduce using rule 78 (array -> .)
    While           reduce using rule 78 (array -> .)
    If              reduce using rule 78 (array -> .)
    Switch          reduce using rule 78 (array -> .)
    Sys_Call        reduce using rule 78 (array -> .)
    Absorb          reduce using rule 78 (array -> .)
    Discharge       reduce using rule 78 (array -> .)
    Link_End        reduce using rule 78 (array -> .)
    Sys             reduce using rule 78 (array -> .)
    $end            reduce using rule 78 (array -> .)
    Return          reduce using rule 78 (array -> .)
    close_bracket   reduce using rule 78 (array -> .)
    Break           reduce using rule 78 (array -> .)
    Continue        reduce using rule 78 (array -> .)
    Avoid           reduce using rule 78 (array -> .)
    plus            reduce using rule 78 (array -> .)
    minus           reduce using rule 78 (array -> .)
    times           reduce using rule 78 (array -> .)
    divide          reduce using rule 78 (array -> .)
    divide_divide   reduce using rule 78 (array -> .)
    modulo          reduce using rule 78 (array -> .)
    times_times     reduce using rule 78 (array -> .)
    comma           reduce using rule 78 (array -> .)
    Struct          reduce using rule 78 (array -> .)
    Generate        reduce using rule 78 (array -> .)
    Link_Start      reduce using rule 78 (array -> .)
    close_brace     reduce using rule 78 (array -> .)
    greater_than    reduce using rule 78 (array -> .)
    less_than       reduce using rule 78 (array -> .)
    equal_equal     reduce using rule 78 (array -> .)
    not_equal       reduce using rule 78 (array -> .)
    great_than_equal reduce using rule 78 (array -> .)
    less_than_equal reduce using rule 78 (array -> .)
    equal           reduce using rule 78 (array -> .)
    plus_equal      reduce using rule 78 (array -> .)
    minus_equal     reduce using rule 78 (array -> .)
    times_equal     reduce using rule 78 (array -> .)
    divide_equal    reduce using rule 78 (array -> .)
    divide_divide_equal reduce using rule 78 (array -> .)
    modulo_equal    reduce using rule 78 (array -> .)
    times_times_equal reduce using rule 78 (array -> .)
    close_par       reduce using rule 78 (array -> .)

    array                          shift and go to state 130

state 74

    (190) output_statements -> Discharge value .

    id              reduce using rule 190 (output_statements -> Discharge value .)
    For             reduce using rule 190 (output_statements -> Discharge value .)
    While           reduce using rule 190 (output_statements -> Discharge value .)
    If              reduce using rule 190 (output_statements -> Discharge value .)
    Switch          reduce using rule 190 (output_statements -> Discharge value .)
    Sys_Call        reduce using rule 190 (output_statements -> Discharge value .)
    Absorb          reduce using rule 190 (output_statements -> Discharge value .)
    Discharge       reduce using rule 190 (output_statements -> Discharge value .)
    Link_End        reduce using rule 190 (output_statements -> Discharge value .)
    Sys             reduce using rule 190 (output_statements -> Discharge value .)
    $end            reduce using rule 190 (output_statements -> Discharge value .)
    Return          reduce using rule 190 (output_statements -> Discharge value .)
    close_bracket   reduce using rule 190 (output_statements -> Discharge value .)
    Break           reduce using rule 190 (output_statements -> Discharge value .)
    Continue        reduce using rule 190 (output_statements -> Discharge value .)
    Avoid           reduce using rule 190 (output_statements -> Discharge value .)


state 75

    (57) value -> num_value .
    (93) arithmetic_expression -> num_value . arithmetic_operators num_value
    (94) arithmetic_operators -> . plus
    (95) arithmetic_operators -> . minus
    (96) arithmetic_operators -> . times
    (97) arithmetic_operators -> . divide
    (98) arithmetic_operators -> . divide_divide
    (99) arithmetic_operators -> . modulo
    (100) arithmetic_operators -> . times_times

    id              reduce using rule 57 (value -> num_value .)
    For             reduce using rule 57 (value -> num_value .)
    While           reduce using rule 57 (value -> num_value .)
    If              reduce using rule 57 (value -> num_value .)
    Switch          reduce using rule 57 (value -> num_value .)
    Sys_Call        reduce using rule 57 (value -> num_value .)
    Absorb          reduce using rule 57 (value -> num_value .)
    Discharge       reduce using rule 57 (value -> num_value .)
    Link_End        reduce using rule 57 (value -> num_value .)
    Sys             reduce using rule 57 (value -> num_value .)
    $end            reduce using rule 57 (value -> num_value .)
    Return          reduce using rule 57 (value -> num_value .)
    close_bracket   reduce using rule 57 (value -> num_value .)
    Break           reduce using rule 57 (value -> num_value .)
    Continue        reduce using rule 57 (value -> num_value .)
    Avoid           reduce using rule 57 (value -> num_value .)
    greater_than    reduce using rule 57 (value -> num_value .)
    less_than       reduce using rule 57 (value -> num_value .)
    equal_equal     reduce using rule 57 (value -> num_value .)
    not_equal       reduce using rule 57 (value -> num_value .)
    great_than_equal reduce using rule 57 (value -> num_value .)
    less_than_equal reduce using rule 57 (value -> num_value .)
    comma           reduce using rule 57 (value -> num_value .)
    Generate        reduce using rule 57 (value -> num_value .)
    Struct          reduce using rule 57 (value -> num_value .)
    Link_Start      reduce using rule 57 (value -> num_value .)
    close_par       reduce using rule 57 (value -> num_value .)
    close_brace     reduce using rule 57 (value -> num_value .)
    plus            shift and go to state 133
    minus           shift and go to state 134
    times           shift and go to state 135
    divide          shift and go to state 136
    divide_divide   shift and go to state 137
    modulo          shift and go to state 138
    times_times     shift and go to state 139

    arithmetic_operators           shift and go to state 132

state 76

    (58) value -> lit_str .

    id              reduce using rule 58 (value -> lit_str .)
    For             reduce using rule 58 (value -> lit_str .)
    While           reduce using rule 58 (value -> lit_str .)
    If              reduce using rule 58 (value -> lit_str .)
    Switch          reduce using rule 58 (value -> lit_str .)
    Sys_Call        reduce using rule 58 (value -> lit_str .)
    Absorb          reduce using rule 58 (value -> lit_str .)
    Discharge       reduce using rule 58 (value -> lit_str .)
    Link_End        reduce using rule 58 (value -> lit_str .)
    Sys             reduce using rule 58 (value -> lit_str .)
    $end            reduce using rule 58 (value -> lit_str .)
    Return          reduce using rule 58 (value -> lit_str .)
    close_bracket   reduce using rule 58 (value -> lit_str .)
    Break           reduce using rule 58 (value -> lit_str .)
    Continue        reduce using rule 58 (value -> lit_str .)
    Avoid           reduce using rule 58 (value -> lit_str .)
    greater_than    reduce using rule 58 (value -> lit_str .)
    less_than       reduce using rule 58 (value -> lit_str .)
    equal_equal     reduce using rule 58 (value -> lit_str .)
    not_equal       reduce using rule 58 (value -> lit_str .)
    great_than_equal reduce using rule 58 (value -> lit_str .)
    less_than_equal reduce using rule 58 (value -> lit_str .)
    comma           reduce using rule 58 (value -> lit_str .)
    Generate        reduce using rule 58 (value -> lit_str .)
    Struct          reduce using rule 58 (value -> lit_str .)
    Link_Start      reduce using rule 58 (value -> lit_str .)
    close_par       reduce using rule 58 (value -> lit_str .)
    close_brace     reduce using rule 58 (value -> lit_str .)


state 77

    (59) value -> lit_bool .

    id              reduce using rule 59 (value -> lit_bool .)
    For             reduce using rule 59 (value -> lit_bool .)
    While           reduce using rule 59 (value -> lit_bool .)
    If              reduce using rule 59 (value -> lit_bool .)
    Switch          reduce using rule 59 (value -> lit_bool .)
    Sys_Call        reduce using rule 59 (value -> lit_bool .)
    Absorb          reduce using rule 59 (value -> lit_bool .)
    Discharge       reduce using rule 59 (value -> lit_bool .)
    Link_End        reduce using rule 59 (value -> lit_bool .)
    Sys             reduce using rule 59 (value -> lit_bool .)
    $end            reduce using rule 59 (value -> lit_bool .)
    Return          reduce using rule 59 (value -> lit_bool .)
    close_bracket   reduce using rule 59 (value -> lit_bool .)
    Break           reduce using rule 59 (value -> lit_bool .)
    Continue        reduce using rule 59 (value -> lit_bool .)
    Avoid           reduce using rule 59 (value -> lit_bool .)
    comma           reduce using rule 59 (value -> lit_bool .)
    Generate        reduce using rule 59 (value -> lit_bool .)
    Struct          reduce using rule 59 (value -> lit_bool .)
    Link_Start      reduce using rule 59 (value -> lit_bool .)
    close_par       reduce using rule 59 (value -> lit_bool .)
    close_brace     reduce using rule 59 (value -> lit_bool .)


state 78

    (64) num_value -> id_array . id_struct
    (101) id_struct -> . period id_array
    (102) id_struct -> .

    period          shift and go to state 114
    plus            reduce using rule 102 (id_struct -> .)
    minus           reduce using rule 102 (id_struct -> .)
    times           reduce using rule 102 (id_struct -> .)
    divide          reduce using rule 102 (id_struct -> .)
    divide_divide   reduce using rule 102 (id_struct -> .)
    modulo          reduce using rule 102 (id_struct -> .)
    times_times     reduce using rule 102 (id_struct -> .)
    id              reduce using rule 102 (id_struct -> .)
    For             reduce using rule 102 (id_struct -> .)
    While           reduce using rule 102 (id_struct -> .)
    If              reduce using rule 102 (id_struct -> .)
    Switch          reduce using rule 102 (id_struct -> .)
    Sys_Call        reduce using rule 102 (id_struct -> .)
    Absorb          reduce using rule 102 (id_struct -> .)
    Discharge       reduce using rule 102 (id_struct -> .)
    Link_End        reduce using rule 102 (id_struct -> .)
    Sys             reduce using rule 102 (id_struct -> .)
    $end            reduce using rule 102 (id_struct -> .)
    Return          reduce using rule 102 (id_struct -> .)
    close_bracket   reduce using rule 102 (id_struct -> .)
    Break           reduce using rule 102 (id_struct -> .)
    Continue        reduce using rule 102 (id_struct -> .)
    Avoid           reduce using rule 102 (id_struct -> .)
    close_brace     reduce using rule 102 (id_struct -> .)
    greater_than    reduce using rule 102 (id_struct -> .)
    less_than       reduce using rule 102 (id_struct -> .)
    equal_equal     reduce using rule 102 (id_struct -> .)
    not_equal       reduce using rule 102 (id_struct -> .)
    great_than_equal reduce using rule 102 (id_struct -> .)
    less_than_equal reduce using rule 102 (id_struct -> .)
    comma           reduce using rule 102 (id_struct -> .)
    Generate        reduce using rule 102 (id_struct -> .)
    Struct          reduce using rule 102 (id_struct -> .)
    Link_Start      reduce using rule 102 (id_struct -> .)
    close_par       reduce using rule 102 (id_struct -> .)

    id_struct                      shift and go to state 140

state 79

    (65) num_value -> literals .

    plus            reduce using rule 65 (num_value -> literals .)
    minus           reduce using rule 65 (num_value -> literals .)
    times           reduce using rule 65 (num_value -> literals .)
    divide          reduce using rule 65 (num_value -> literals .)
    divide_divide   reduce using rule 65 (num_value -> literals .)
    modulo          reduce using rule 65 (num_value -> literals .)
    times_times     reduce using rule 65 (num_value -> literals .)
    id              reduce using rule 65 (num_value -> literals .)
    For             reduce using rule 65 (num_value -> literals .)
    While           reduce using rule 65 (num_value -> literals .)
    If              reduce using rule 65 (num_value -> literals .)
    Switch          reduce using rule 65 (num_value -> literals .)
    Sys_Call        reduce using rule 65 (num_value -> literals .)
    Absorb          reduce using rule 65 (num_value -> literals .)
    Discharge       reduce using rule 65 (num_value -> literals .)
    Link_End        reduce using rule 65 (num_value -> literals .)
    Sys             reduce using rule 65 (num_value -> literals .)
    $end            reduce using rule 65 (num_value -> literals .)
    Return          reduce using rule 65 (num_value -> literals .)
    close_bracket   reduce using rule 65 (num_value -> literals .)
    Break           reduce using rule 65 (num_value -> literals .)
    Continue        reduce using rule 65 (num_value -> literals .)
    Avoid           reduce using rule 65 (num_value -> literals .)
    close_brace     reduce using rule 65 (num_value -> literals .)
    greater_than    reduce using rule 65 (num_value -> literals .)
    less_than       reduce using rule 65 (num_value -> literals .)
    equal_equal     reduce using rule 65 (num_value -> literals .)
    not_equal       reduce using rule 65 (num_value -> literals .)
    great_than_equal reduce using rule 65 (num_value -> literals .)
    less_than_equal reduce using rule 65 (num_value -> literals .)
    comma           reduce using rule 65 (num_value -> literals .)
    Generate        reduce using rule 65 (num_value -> literals .)
    Struct          reduce using rule 65 (num_value -> literals .)
    Link_Start      reduce using rule 65 (num_value -> literals .)
    close_par       reduce using rule 65 (num_value -> literals .)


state 80

    (66) num_value -> arithmetic_expression .

    plus            reduce using rule 66 (num_value -> arithmetic_expression .)
    minus           reduce using rule 66 (num_value -> arithmetic_expression .)
    times           reduce using rule 66 (num_value -> arithmetic_expression .)
    divide          reduce using rule 66 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 66 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 66 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 66 (num_value -> arithmetic_expression .)
    id              reduce using rule 66 (num_value -> arithmetic_expression .)
    For             reduce using rule 66 (num_value -> arithmetic_expression .)
    While           reduce using rule 66 (num_value -> arithmetic_expression .)
    If              reduce using rule 66 (num_value -> arithmetic_expression .)
    Switch          reduce using rule 66 (num_value -> arithmetic_expression .)
    Sys_Call        reduce using rule 66 (num_value -> arithmetic_expression .)
    Absorb          reduce using rule 66 (num_value -> arithmetic_expression .)
    Discharge       reduce using rule 66 (num_value -> arithmetic_expression .)
    Link_End        reduce using rule 66 (num_value -> arithmetic_expression .)
    Sys             reduce using rule 66 (num_value -> arithmetic_expression .)
    $end            reduce using rule 66 (num_value -> arithmetic_expression .)
    Return          reduce using rule 66 (num_value -> arithmetic_expression .)
    close_bracket   reduce using rule 66 (num_value -> arithmetic_expression .)
    Break           reduce using rule 66 (num_value -> arithmetic_expression .)
    Continue        reduce using rule 66 (num_value -> arithmetic_expression .)
    Avoid           reduce using rule 66 (num_value -> arithmetic_expression .)
    close_brace     reduce using rule 66 (num_value -> arithmetic_expression .)
    greater_than    reduce using rule 66 (num_value -> arithmetic_expression .)
    less_than       reduce using rule 66 (num_value -> arithmetic_expression .)
    equal_equal     reduce using rule 66 (num_value -> arithmetic_expression .)
    not_equal       reduce using rule 66 (num_value -> arithmetic_expression .)
    great_than_equal reduce using rule 66 (num_value -> arithmetic_expression .)
    less_than_equal reduce using rule 66 (num_value -> arithmetic_expression .)
    comma           reduce using rule 66 (num_value -> arithmetic_expression .)
    Generate        reduce using rule 66 (num_value -> arithmetic_expression .)
    Struct          reduce using rule 66 (num_value -> arithmetic_expression .)
    Link_Start      reduce using rule 66 (num_value -> arithmetic_expression .)
    close_par       reduce using rule 66 (num_value -> arithmetic_expression .)


state 81

    (67) num_value -> func_call .

    plus            reduce using rule 67 (num_value -> func_call .)
    minus           reduce using rule 67 (num_value -> func_call .)
    times           reduce using rule 67 (num_value -> func_call .)
    divide          reduce using rule 67 (num_value -> func_call .)
    divide_divide   reduce using rule 67 (num_value -> func_call .)
    modulo          reduce using rule 67 (num_value -> func_call .)
    times_times     reduce using rule 67 (num_value -> func_call .)
    id              reduce using rule 67 (num_value -> func_call .)
    For             reduce using rule 67 (num_value -> func_call .)
    While           reduce using rule 67 (num_value -> func_call .)
    If              reduce using rule 67 (num_value -> func_call .)
    Switch          reduce using rule 67 (num_value -> func_call .)
    Sys_Call        reduce using rule 67 (num_value -> func_call .)
    Absorb          reduce using rule 67 (num_value -> func_call .)
    Discharge       reduce using rule 67 (num_value -> func_call .)
    Link_End        reduce using rule 67 (num_value -> func_call .)
    Sys             reduce using rule 67 (num_value -> func_call .)
    $end            reduce using rule 67 (num_value -> func_call .)
    Return          reduce using rule 67 (num_value -> func_call .)
    close_bracket   reduce using rule 67 (num_value -> func_call .)
    Break           reduce using rule 67 (num_value -> func_call .)
    Continue        reduce using rule 67 (num_value -> func_call .)
    Avoid           reduce using rule 67 (num_value -> func_call .)
    close_brace     reduce using rule 67 (num_value -> func_call .)
    greater_than    reduce using rule 67 (num_value -> func_call .)
    less_than       reduce using rule 67 (num_value -> func_call .)
    equal_equal     reduce using rule 67 (num_value -> func_call .)
    not_equal       reduce using rule 67 (num_value -> func_call .)
    great_than_equal reduce using rule 67 (num_value -> func_call .)
    less_than_equal reduce using rule 67 (num_value -> func_call .)
    comma           reduce using rule 67 (num_value -> func_call .)
    Generate        reduce using rule 67 (num_value -> func_call .)
    Struct          reduce using rule 67 (num_value -> func_call .)
    Link_Start      reduce using rule 67 (num_value -> func_call .)
    close_par       reduce using rule 67 (num_value -> func_call .)


state 82

    (83) literals -> lit_intposi .

    plus            reduce using rule 83 (literals -> lit_intposi .)
    minus           reduce using rule 83 (literals -> lit_intposi .)
    times           reduce using rule 83 (literals -> lit_intposi .)
    divide          reduce using rule 83 (literals -> lit_intposi .)
    divide_divide   reduce using rule 83 (literals -> lit_intposi .)
    modulo          reduce using rule 83 (literals -> lit_intposi .)
    times_times     reduce using rule 83 (literals -> lit_intposi .)
    id              reduce using rule 83 (literals -> lit_intposi .)
    For             reduce using rule 83 (literals -> lit_intposi .)
    While           reduce using rule 83 (literals -> lit_intposi .)
    If              reduce using rule 83 (literals -> lit_intposi .)
    Switch          reduce using rule 83 (literals -> lit_intposi .)
    Sys_Call        reduce using rule 83 (literals -> lit_intposi .)
    Absorb          reduce using rule 83 (literals -> lit_intposi .)
    Discharge       reduce using rule 83 (literals -> lit_intposi .)
    Link_End        reduce using rule 83 (literals -> lit_intposi .)
    Sys             reduce using rule 83 (literals -> lit_intposi .)
    $end            reduce using rule 83 (literals -> lit_intposi .)
    Return          reduce using rule 83 (literals -> lit_intposi .)
    close_bracket   reduce using rule 83 (literals -> lit_intposi .)
    Break           reduce using rule 83 (literals -> lit_intposi .)
    Continue        reduce using rule 83 (literals -> lit_intposi .)
    Avoid           reduce using rule 83 (literals -> lit_intposi .)
    greater_than    reduce using rule 83 (literals -> lit_intposi .)
    less_than       reduce using rule 83 (literals -> lit_intposi .)
    equal_equal     reduce using rule 83 (literals -> lit_intposi .)
    not_equal       reduce using rule 83 (literals -> lit_intposi .)
    great_than_equal reduce using rule 83 (literals -> lit_intposi .)
    less_than_equal reduce using rule 83 (literals -> lit_intposi .)
    comma           reduce using rule 83 (literals -> lit_intposi .)
    Generate        reduce using rule 83 (literals -> lit_intposi .)
    Struct          reduce using rule 83 (literals -> lit_intposi .)
    Link_Start      reduce using rule 83 (literals -> lit_intposi .)
    close_brace     reduce using rule 83 (literals -> lit_intposi .)
    close_par       reduce using rule 83 (literals -> lit_intposi .)


state 83

    (84) literals -> lit_intnega .

    plus            reduce using rule 84 (literals -> lit_intnega .)
    minus           reduce using rule 84 (literals -> lit_intnega .)
    times           reduce using rule 84 (literals -> lit_intnega .)
    divide          reduce using rule 84 (literals -> lit_intnega .)
    divide_divide   reduce using rule 84 (literals -> lit_intnega .)
    modulo          reduce using rule 84 (literals -> lit_intnega .)
    times_times     reduce using rule 84 (literals -> lit_intnega .)
    id              reduce using rule 84 (literals -> lit_intnega .)
    For             reduce using rule 84 (literals -> lit_intnega .)
    While           reduce using rule 84 (literals -> lit_intnega .)
    If              reduce using rule 84 (literals -> lit_intnega .)
    Switch          reduce using rule 84 (literals -> lit_intnega .)
    Sys_Call        reduce using rule 84 (literals -> lit_intnega .)
    Absorb          reduce using rule 84 (literals -> lit_intnega .)
    Discharge       reduce using rule 84 (literals -> lit_intnega .)
    Link_End        reduce using rule 84 (literals -> lit_intnega .)
    Sys             reduce using rule 84 (literals -> lit_intnega .)
    $end            reduce using rule 84 (literals -> lit_intnega .)
    Return          reduce using rule 84 (literals -> lit_intnega .)
    close_bracket   reduce using rule 84 (literals -> lit_intnega .)
    Break           reduce using rule 84 (literals -> lit_intnega .)
    Continue        reduce using rule 84 (literals -> lit_intnega .)
    Avoid           reduce using rule 84 (literals -> lit_intnega .)
    close_brace     reduce using rule 84 (literals -> lit_intnega .)
    greater_than    reduce using rule 84 (literals -> lit_intnega .)
    less_than       reduce using rule 84 (literals -> lit_intnega .)
    equal_equal     reduce using rule 84 (literals -> lit_intnega .)
    not_equal       reduce using rule 84 (literals -> lit_intnega .)
    great_than_equal reduce using rule 84 (literals -> lit_intnega .)
    less_than_equal reduce using rule 84 (literals -> lit_intnega .)
    comma           reduce using rule 84 (literals -> lit_intnega .)
    Generate        reduce using rule 84 (literals -> lit_intnega .)
    Struct          reduce using rule 84 (literals -> lit_intnega .)
    Link_Start      reduce using rule 84 (literals -> lit_intnega .)
    close_par       reduce using rule 84 (literals -> lit_intnega .)


state 84

    (85) literals -> lit_decposi .

    plus            reduce using rule 85 (literals -> lit_decposi .)
    minus           reduce using rule 85 (literals -> lit_decposi .)
    times           reduce using rule 85 (literals -> lit_decposi .)
    divide          reduce using rule 85 (literals -> lit_decposi .)
    divide_divide   reduce using rule 85 (literals -> lit_decposi .)
    modulo          reduce using rule 85 (literals -> lit_decposi .)
    times_times     reduce using rule 85 (literals -> lit_decposi .)
    id              reduce using rule 85 (literals -> lit_decposi .)
    For             reduce using rule 85 (literals -> lit_decposi .)
    While           reduce using rule 85 (literals -> lit_decposi .)
    If              reduce using rule 85 (literals -> lit_decposi .)
    Switch          reduce using rule 85 (literals -> lit_decposi .)
    Sys_Call        reduce using rule 85 (literals -> lit_decposi .)
    Absorb          reduce using rule 85 (literals -> lit_decposi .)
    Discharge       reduce using rule 85 (literals -> lit_decposi .)
    Link_End        reduce using rule 85 (literals -> lit_decposi .)
    Sys             reduce using rule 85 (literals -> lit_decposi .)
    $end            reduce using rule 85 (literals -> lit_decposi .)
    Return          reduce using rule 85 (literals -> lit_decposi .)
    close_bracket   reduce using rule 85 (literals -> lit_decposi .)
    Break           reduce using rule 85 (literals -> lit_decposi .)
    Continue        reduce using rule 85 (literals -> lit_decposi .)
    Avoid           reduce using rule 85 (literals -> lit_decposi .)
    close_brace     reduce using rule 85 (literals -> lit_decposi .)
    greater_than    reduce using rule 85 (literals -> lit_decposi .)
    less_than       reduce using rule 85 (literals -> lit_decposi .)
    equal_equal     reduce using rule 85 (literals -> lit_decposi .)
    not_equal       reduce using rule 85 (literals -> lit_decposi .)
    great_than_equal reduce using rule 85 (literals -> lit_decposi .)
    less_than_equal reduce using rule 85 (literals -> lit_decposi .)
    comma           reduce using rule 85 (literals -> lit_decposi .)
    Generate        reduce using rule 85 (literals -> lit_decposi .)
    Struct          reduce using rule 85 (literals -> lit_decposi .)
    Link_Start      reduce using rule 85 (literals -> lit_decposi .)
    close_par       reduce using rule 85 (literals -> lit_decposi .)


state 85

    (86) literals -> lit_decnega .

    plus            reduce using rule 86 (literals -> lit_decnega .)
    minus           reduce using rule 86 (literals -> lit_decnega .)
    times           reduce using rule 86 (literals -> lit_decnega .)
    divide          reduce using rule 86 (literals -> lit_decnega .)
    divide_divide   reduce using rule 86 (literals -> lit_decnega .)
    modulo          reduce using rule 86 (literals -> lit_decnega .)
    times_times     reduce using rule 86 (literals -> lit_decnega .)
    id              reduce using rule 86 (literals -> lit_decnega .)
    For             reduce using rule 86 (literals -> lit_decnega .)
    While           reduce using rule 86 (literals -> lit_decnega .)
    If              reduce using rule 86 (literals -> lit_decnega .)
    Switch          reduce using rule 86 (literals -> lit_decnega .)
    Sys_Call        reduce using rule 86 (literals -> lit_decnega .)
    Absorb          reduce using rule 86 (literals -> lit_decnega .)
    Discharge       reduce using rule 86 (literals -> lit_decnega .)
    Link_End        reduce using rule 86 (literals -> lit_decnega .)
    Sys             reduce using rule 86 (literals -> lit_decnega .)
    $end            reduce using rule 86 (literals -> lit_decnega .)
    Return          reduce using rule 86 (literals -> lit_decnega .)
    close_bracket   reduce using rule 86 (literals -> lit_decnega .)
    Break           reduce using rule 86 (literals -> lit_decnega .)
    Continue        reduce using rule 86 (literals -> lit_decnega .)
    Avoid           reduce using rule 86 (literals -> lit_decnega .)
    close_brace     reduce using rule 86 (literals -> lit_decnega .)
    greater_than    reduce using rule 86 (literals -> lit_decnega .)
    less_than       reduce using rule 86 (literals -> lit_decnega .)
    equal_equal     reduce using rule 86 (literals -> lit_decnega .)
    not_equal       reduce using rule 86 (literals -> lit_decnega .)
    great_than_equal reduce using rule 86 (literals -> lit_decnega .)
    less_than_equal reduce using rule 86 (literals -> lit_decnega .)
    comma           reduce using rule 86 (literals -> lit_decnega .)
    Generate        reduce using rule 86 (literals -> lit_decnega .)
    Struct          reduce using rule 86 (literals -> lit_decnega .)
    Link_Start      reduce using rule 86 (literals -> lit_decnega .)
    close_par       reduce using rule 86 (literals -> lit_decnega .)


state 86

    (92) arithmetic_expression -> open_par . arithmetic_expression close_par
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
    open_par        shift and go to state 86
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]

    arithmetic_expression          shift and go to state 141
    num_value                      shift and go to state 142
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    func_call                      shift and go to state 81

state 87

    (8) struct_dec -> Struct id open_bracket struct_element1 . close_bracket id_array1
    (12) struct_dec -> Struct id open_bracket struct_element1 . id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    close_bracket   shift and go to state 143
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 144
    id_array                       shift and go to state 90

state 88

    (9) struct_dec -> Struct id struct_element1 id_array1 .

    Struct          reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Generate        reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Link_Start      reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    id              reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    For             reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    While           reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    If              reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Switch          reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Sys_Call        reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Absorb          reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Discharge       reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Link_End        reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Sys             reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    $end            reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)


state 89

    (13) struct_dec -> Struct id struct_element1 close_bracket . id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 145
    id_array                       shift and go to state 90

state 90

    (79) id_array1 -> id_array . id_array2
    (81) id_array2 -> . comma id_array1
    (82) id_array2 -> .

    comma           shift and go to state 147
    Struct          reduce using rule 82 (id_array2 -> .)
    Generate        reduce using rule 82 (id_array2 -> .)
    Link_Start      reduce using rule 82 (id_array2 -> .)
    id              reduce using rule 82 (id_array2 -> .)
    For             reduce using rule 82 (id_array2 -> .)
    While           reduce using rule 82 (id_array2 -> .)
    If              reduce using rule 82 (id_array2 -> .)
    Switch          reduce using rule 82 (id_array2 -> .)
    Sys_Call        reduce using rule 82 (id_array2 -> .)
    Absorb          reduce using rule 82 (id_array2 -> .)
    Discharge       reduce using rule 82 (id_array2 -> .)
    Link_End        reduce using rule 82 (id_array2 -> .)
    Sys             reduce using rule 82 (id_array2 -> .)
    $end            reduce using rule 82 (id_array2 -> .)

    id_array2                      shift and go to state 146

state 91

    (10) struct_dec -> Struct open_bracket struct_element1 id_array1 .

    Struct          reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Generate        reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Link_Start      reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    id              reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    For             reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    While           reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    If              reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Switch          reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Sys_Call        reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Absorb          reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Discharge       reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Link_End        reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Sys             reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    $end            reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)


state 92

    (14) struct_dec -> Struct open_bracket struct_element1 close_bracket . id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 148
    id_array                       shift and go to state 90

state 93

    (11) struct_dec -> Struct struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    id              reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    For             reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    While           reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    If              reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)


state 94

    (16) struct_element1 -> data_type id_array_dec struct_element2 .

    close_bracket   reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    id              reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    comma           reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Struct          reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Generate        reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Link_Start      reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    For             reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    While           reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    If              reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Switch          reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Sys_Call        reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Absorb          reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Discharge       reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Link_End        reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Sys             reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    $end            reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)


state 95

    (17) struct_element2 -> struct_element1 .

    close_bracket   reduce using rule 17 (struct_element2 -> struct_element1 .)
    id              reduce using rule 17 (struct_element2 -> struct_element1 .)
    comma           reduce using rule 17 (struct_element2 -> struct_element1 .)
    Struct          reduce using rule 17 (struct_element2 -> struct_element1 .)
    Generate        reduce using rule 17 (struct_element2 -> struct_element1 .)
    Link_Start      reduce using rule 17 (struct_element2 -> struct_element1 .)
    For             reduce using rule 17 (struct_element2 -> struct_element1 .)
    While           reduce using rule 17 (struct_element2 -> struct_element1 .)
    If              reduce using rule 17 (struct_element2 -> struct_element1 .)
    Switch          reduce using rule 17 (struct_element2 -> struct_element1 .)
    Sys_Call        reduce using rule 17 (struct_element2 -> struct_element1 .)
    Absorb          reduce using rule 17 (struct_element2 -> struct_element1 .)
    Discharge       reduce using rule 17 (struct_element2 -> struct_element1 .)
    Link_End        reduce using rule 17 (struct_element2 -> struct_element1 .)
    Sys             reduce using rule 17 (struct_element2 -> struct_element1 .)
    $end            reduce using rule 17 (struct_element2 -> struct_element1 .)


state 96

    (24) id_array_dec -> id id_array_dec2 .

    Integer         reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Decimal         reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    String          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Boolean         reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    id              reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    close_bracket   reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    comma           reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Struct          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Generate        reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Link_Start      reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    For             reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    While           reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    If              reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Switch          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Sys_Call        reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Absorb          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Discharge       reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Link_End        reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Sys             reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    $end            reduce using rule 24 (id_array_dec -> id id_array_dec2 .)


state 97

    (26) id_array_dec2 -> id_dec1 .

    Integer         reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Decimal         reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    String          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Boolean         reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    id              reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    close_bracket   reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    comma           reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Struct          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Generate        reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Link_Start      reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    For             reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    While           reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    If              reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Switch          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Sys_Call        reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Absorb          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Discharge       reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Link_End        reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Sys             reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    $end            reduce using rule 26 (id_array_dec2 -> id_dec1 .)


state 98

    (27) id_array_dec2 -> open_brace . lit_intposi close_brace array_dec1

    lit_intposi     shift and go to state 149


state 99

    (28) id_dec1 -> comma . id id_dec1

    id              shift and go to state 150


state 100

    (34) const_var_dec -> Fixed data_type id_array_const .

    Generate        reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Struct          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Link_Start      reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    id              reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    For             reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    While           reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    If              reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Switch          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Sys_Call        reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Absorb          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Discharge       reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Link_End        reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Sys             reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    $end            reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Return          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    close_bracket   reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)


state 101

    (37) id_array_const -> id . id_array_const2
    (39) id_array_const2 -> . open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (40) id_array_const2 -> . equal value id_const1
    (41) id_array_const2 -> .

    open_brace      shift and go to state 152
    equal           shift and go to state 153
    Generate        reduce using rule 41 (id_array_const2 -> .)
    Struct          reduce using rule 41 (id_array_const2 -> .)
    Link_Start      reduce using rule 41 (id_array_const2 -> .)
    id              reduce using rule 41 (id_array_const2 -> .)
    For             reduce using rule 41 (id_array_const2 -> .)
    While           reduce using rule 41 (id_array_const2 -> .)
    If              reduce using rule 41 (id_array_const2 -> .)
    Switch          reduce using rule 41 (id_array_const2 -> .)
    Sys_Call        reduce using rule 41 (id_array_const2 -> .)
    Absorb          reduce using rule 41 (id_array_const2 -> .)
    Discharge       reduce using rule 41 (id_array_const2 -> .)
    Link_End        reduce using rule 41 (id_array_const2 -> .)
    Sys             reduce using rule 41 (id_array_const2 -> .)
    $end            reduce using rule 41 (id_array_const2 -> .)
    Return          reduce using rule 41 (id_array_const2 -> .)
    close_bracket   reduce using rule 41 (id_array_const2 -> .)

    id_array_const2                shift and go to state 151

state 102

    (46) id_array_var -> id id_array_var2 .

    Generate        reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Struct          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Link_Start      reduce using rule 46 (id_array_var -> id id_array_var2 .)
    id              reduce using rule 46 (id_array_var -> id id_array_var2 .)
    For             reduce using rule 46 (id_array_var -> id id_array_var2 .)
    While           reduce using rule 46 (id_array_var -> id id_array_var2 .)
    If              reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Switch          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Sys_Call        reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Absorb          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Discharge       reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Link_End        reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Sys             reduce using rule 46 (id_array_var -> id id_array_var2 .)
    $end            reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Return          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    close_bracket   reduce using rule 46 (id_array_var -> id id_array_var2 .)


state 103

    (47) id_array_var2 -> var_init . id_var1
    (51) id_var1 -> . comma id var_init id_var1
    (52) id_var1 -> .

    comma           shift and go to state 155
    Generate        reduce using rule 52 (id_var1 -> .)
    Struct          reduce using rule 52 (id_var1 -> .)
    Link_Start      reduce using rule 52 (id_var1 -> .)
    id              reduce using rule 52 (id_var1 -> .)
    For             reduce using rule 52 (id_var1 -> .)
    While           reduce using rule 52 (id_var1 -> .)
    If              reduce using rule 52 (id_var1 -> .)
    Switch          reduce using rule 52 (id_var1 -> .)
    Sys_Call        reduce using rule 52 (id_var1 -> .)
    Absorb          reduce using rule 52 (id_var1 -> .)
    Discharge       reduce using rule 52 (id_var1 -> .)
    Link_End        reduce using rule 52 (id_var1 -> .)
    Sys             reduce using rule 52 (id_var1 -> .)
    $end            reduce using rule 52 (id_var1 -> .)
    Return          reduce using rule 52 (id_var1 -> .)
    close_bracket   reduce using rule 52 (id_var1 -> .)

    id_var1                        shift and go to state 154

state 104

    (48) id_array_var2 -> open_brace . lit_intposi close_brace array_init array_var1

    lit_intposi     shift and go to state 156


state 105

    (49) var_init -> equal . value id_var1
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    Generate        reduce using rule 60 (value -> .)
    Struct          reduce using rule 60 (value -> .)
    Link_Start      reduce using rule 60 (value -> .)
    For             reduce using rule 60 (value -> .)
    While           reduce using rule 60 (value -> .)
    If              reduce using rule 60 (value -> .)
    Switch          reduce using rule 60 (value -> .)
    Absorb          reduce using rule 60 (value -> .)
    Discharge       reduce using rule 60 (value -> .)
    Link_End        reduce using rule 60 (value -> .)
    Sys             reduce using rule 60 (value -> .)
    $end            reduce using rule 60 (value -> .)
    Return          reduce using rule 60 (value -> .)
    close_bracket   reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 60 (value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (value -> .) ]
  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! Generate        [ reduce using rule 68 (num_value -> .) ]
  ! Struct          [ reduce using rule 68 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 68 (num_value -> .) ]
  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! For             [ reduce using rule 68 (num_value -> .) ]
  ! While           [ reduce using rule 68 (num_value -> .) ]
  ! If              [ reduce using rule 68 (num_value -> .) ]
  ! Switch          [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! Absorb          [ reduce using rule 68 (num_value -> .) ]
  ! Discharge       [ reduce using rule 68 (num_value -> .) ]
  ! Link_End        [ reduce using rule 68 (num_value -> .) ]
  ! Sys             [ reduce using rule 68 (num_value -> .) ]
  ! $end            [ reduce using rule 68 (num_value -> .) ]
  ! Return          [ reduce using rule 68 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! Generate        [ reduce using rule 74 (id_array -> .) ]
  ! Struct          [ reduce using rule 74 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! Generate        [ reduce using rule 87 (literals -> .) ]
  ! Struct          [ reduce using rule 87 (literals -> .) ]
  ! Link_Start      [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]

    value                          shift and go to state 157
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 106

    (1) program -> global_dec Link_Start declare_statements statements Link_End . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 158

state 107

    (2) program -> global_dec Link_Start declare_statements statements functions .

    $end            reduce using rule 2 (program -> global_dec Link_Start declare_statements statements functions .)


state 108

    (3) program -> global_dec declare_statements statements Link_End functions .

    $end            reduce using rule 3 (program -> global_dec declare_statements statements Link_End functions .)


state 109

    (197) functions -> Sys id . open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> Sys id . parameters declare_statements statements return_statement functions
    (203) functions -> Sys id . open_par parameters declare_statements statements return_statement functions
    (204) functions -> Sys id . parameters close_par declare_statements statements return_statement functions
    (205) functions -> Sys id . parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> Sys id . parameters declare_statements statements return_statement close_bracket functions
    (213) functions -> Sys id . open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> Sys id . open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> Sys id . open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> Sys id . parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> Sys id . parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> Sys id . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> Sys id . open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> Sys id . open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> Sys id . open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> Sys id . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (229) parameters -> . data_type id more_parameters
    (230) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
    open_par        shift and go to state 159
    close_par       reduce using rule 230 (parameters -> .)
    open_bracket    reduce using rule 230 (parameters -> .)
    Generate        reduce using rule 230 (parameters -> .)
    For             reduce using rule 230 (parameters -> .)
    While           reduce using rule 230 (parameters -> .)
    If              reduce using rule 230 (parameters -> .)
    Switch          reduce using rule 230 (parameters -> .)
    Sys_Call        reduce using rule 230 (parameters -> .)
    Absorb          reduce using rule 230 (parameters -> .)
    Discharge       reduce using rule 230 (parameters -> .)
    Return          reduce using rule 230 (parameters -> .)
    close_bracket   reduce using rule 230 (parameters -> .)
    Sys             reduce using rule 230 (parameters -> .)
    $end            reduce using rule 230 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 230 (parameters -> .) ]

    parameters                     shift and go to state 160
    data_type                      shift and go to state 112

state 110

    (199) functions -> Sys open_par . parameters declare_statements statements return_statement functions
    (207) functions -> Sys open_par . parameters close_par declare_statements statements return_statement functions
    (208) functions -> Sys open_par . parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> Sys open_par . parameters declare_statements statements return_statement close_bracket functions
    (219) functions -> Sys open_par . parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> Sys open_par . parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> Sys open_par . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> Sys open_par . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (229) parameters -> . data_type id more_parameters
    (230) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
    close_par       reduce using rule 230 (parameters -> .)
    open_bracket    reduce using rule 230 (parameters -> .)
    Generate        reduce using rule 230 (parameters -> .)
    For             reduce using rule 230 (parameters -> .)
    While           reduce using rule 230 (parameters -> .)
    If              reduce using rule 230 (parameters -> .)
    Switch          reduce using rule 230 (parameters -> .)
    Sys_Call        reduce using rule 230 (parameters -> .)
    Absorb          reduce using rule 230 (parameters -> .)
    Discharge       reduce using rule 230 (parameters -> .)
    Return          reduce using rule 230 (parameters -> .)
    close_bracket   reduce using rule 230 (parameters -> .)
    Sys             reduce using rule 230 (parameters -> .)
    $end            reduce using rule 230 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 230 (parameters -> .) ]

    parameters                     shift and go to state 161
    data_type                      shift and go to state 112

state 111

    (200) functions -> Sys parameters . close_par declare_statements statements return_statement functions
    (201) functions -> Sys parameters . open_bracket declare_statements statements return_statement functions
    (202) functions -> Sys parameters . declare_statements statements return_statement close_bracket functions
    (210) functions -> Sys parameters . close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> Sys parameters . close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> Sys parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> Sys parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 162
    open_bracket    shift and go to state 164
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 163

state 112

    (229) parameters -> data_type . id more_parameters

    id              shift and go to state 165


state 113

    (120) assignment_statements2 -> array id_struct . assignment_exp
    (122) assignment_exp -> . assignment_operators num_value
    (123) assignment_exp -> . equal assign_value
    (124) assignment_exp -> .
    (129) assignment_operators -> . plus_equal
    (130) assignment_operators -> . minus_equal
    (131) assignment_operators -> . times_equal
    (132) assignment_operators -> . divide_equal
    (133) assignment_operators -> . divide_divide_equal
    (134) assignment_operators -> . modulo_equal
    (135) assignment_operators -> . times_times_equal

    equal           shift and go to state 168
    id              reduce using rule 124 (assignment_exp -> .)
    For             reduce using rule 124 (assignment_exp -> .)
    While           reduce using rule 124 (assignment_exp -> .)
    If              reduce using rule 124 (assignment_exp -> .)
    Switch          reduce using rule 124 (assignment_exp -> .)
    Sys_Call        reduce using rule 124 (assignment_exp -> .)
    Absorb          reduce using rule 124 (assignment_exp -> .)
    Discharge       reduce using rule 124 (assignment_exp -> .)
    Link_End        reduce using rule 124 (assignment_exp -> .)
    Sys             reduce using rule 124 (assignment_exp -> .)
    $end            reduce using rule 124 (assignment_exp -> .)
    Return          reduce using rule 124 (assignment_exp -> .)
    close_bracket   reduce using rule 124 (assignment_exp -> .)
    Break           reduce using rule 124 (assignment_exp -> .)
    Continue        reduce using rule 124 (assignment_exp -> .)
    Avoid           reduce using rule 124 (assignment_exp -> .)
    plus_equal      shift and go to state 169
    minus_equal     shift and go to state 170
    times_equal     shift and go to state 171
    divide_equal    shift and go to state 172
    divide_divide_equal shift and go to state 173
    modulo_equal    shift and go to state 174
    times_times_equal shift and go to state 175

    assignment_exp                 shift and go to state 166
    assignment_operators           shift and go to state 167

state 114

    (101) id_struct -> period . id_array
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 73
    equal           reduce using rule 74 (id_array -> .)
    plus_equal      reduce using rule 74 (id_array -> .)
    minus_equal     reduce using rule 74 (id_array -> .)
    times_equal     reduce using rule 74 (id_array -> .)
    divide_equal    reduce using rule 74 (id_array -> .)
    divide_divide_equal reduce using rule 74 (id_array -> .)
    modulo_equal    reduce using rule 74 (id_array -> .)
    times_times_equal reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)
    Return          reduce using rule 74 (id_array -> .)
    close_bracket   reduce using rule 74 (id_array -> .)
    Break           reduce using rule 74 (id_array -> .)
    Continue        reduce using rule 74 (id_array -> .)
    Avoid           reduce using rule 74 (id_array -> .)
    plus            reduce using rule 74 (id_array -> .)
    minus           reduce using rule 74 (id_array -> .)
    times           reduce using rule 74 (id_array -> .)
    divide          reduce using rule 74 (id_array -> .)
    divide_divide   reduce using rule 74 (id_array -> .)
    modulo          reduce using rule 74 (id_array -> .)
    times_times     reduce using rule 74 (id_array -> .)
    close_brace     reduce using rule 74 (id_array -> .)
    greater_than    reduce using rule 74 (id_array -> .)
    less_than       reduce using rule 74 (id_array -> .)
    equal_equal     reduce using rule 74 (id_array -> .)
    not_equal       reduce using rule 74 (id_array -> .)
    great_than_equal reduce using rule 74 (id_array -> .)
    less_than_equal reduce using rule 74 (id_array -> .)
    comma           reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    close_par       reduce using rule 74 (id_array -> .)

  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array                       shift and go to state 176

state 115

    (121) assignment_statements2 -> open_brace lit_intposi . close_brace more_array equal open_brace value1 close_brace
    (83) literals -> lit_intposi .

  ! shift/reduce conflict for close_brace resolved as shift
    close_brace     shift and go to state 177
    plus            reduce using rule 83 (literals -> lit_intposi .)
    minus           reduce using rule 83 (literals -> lit_intposi .)
    times           reduce using rule 83 (literals -> lit_intposi .)
    divide          reduce using rule 83 (literals -> lit_intposi .)
    divide_divide   reduce using rule 83 (literals -> lit_intposi .)
    modulo          reduce using rule 83 (literals -> lit_intposi .)
    times_times     reduce using rule 83 (literals -> lit_intposi .)

  ! close_brace     [ reduce using rule 83 (literals -> lit_intposi .) ]


state 116

    (77) array -> open_brace close_brace .

    period          reduce using rule 77 (array -> open_brace close_brace .)
    equal           reduce using rule 77 (array -> open_brace close_brace .)
    plus_equal      reduce using rule 77 (array -> open_brace close_brace .)
    minus_equal     reduce using rule 77 (array -> open_brace close_brace .)
    times_equal     reduce using rule 77 (array -> open_brace close_brace .)
    divide_equal    reduce using rule 77 (array -> open_brace close_brace .)
    divide_divide_equal reduce using rule 77 (array -> open_brace close_brace .)
    modulo_equal    reduce using rule 77 (array -> open_brace close_brace .)
    times_times_equal reduce using rule 77 (array -> open_brace close_brace .)
    id              reduce using rule 77 (array -> open_brace close_brace .)
    For             reduce using rule 77 (array -> open_brace close_brace .)
    While           reduce using rule 77 (array -> open_brace close_brace .)
    If              reduce using rule 77 (array -> open_brace close_brace .)
    Switch          reduce using rule 77 (array -> open_brace close_brace .)
    Sys_Call        reduce using rule 77 (array -> open_brace close_brace .)
    Absorb          reduce using rule 77 (array -> open_brace close_brace .)
    Discharge       reduce using rule 77 (array -> open_brace close_brace .)
    Link_End        reduce using rule 77 (array -> open_brace close_brace .)
    Sys             reduce using rule 77 (array -> open_brace close_brace .)
    $end            reduce using rule 77 (array -> open_brace close_brace .)
    Return          reduce using rule 77 (array -> open_brace close_brace .)
    close_bracket   reduce using rule 77 (array -> open_brace close_brace .)
    Break           reduce using rule 77 (array -> open_brace close_brace .)
    Continue        reduce using rule 77 (array -> open_brace close_brace .)
    Avoid           reduce using rule 77 (array -> open_brace close_brace .)
    plus            reduce using rule 77 (array -> open_brace close_brace .)
    minus           reduce using rule 77 (array -> open_brace close_brace .)
    times           reduce using rule 77 (array -> open_brace close_brace .)
    divide          reduce using rule 77 (array -> open_brace close_brace .)
    divide_divide   reduce using rule 77 (array -> open_brace close_brace .)
    modulo          reduce using rule 77 (array -> open_brace close_brace .)
    times_times     reduce using rule 77 (array -> open_brace close_brace .)
    comma           reduce using rule 77 (array -> open_brace close_brace .)
    Struct          reduce using rule 77 (array -> open_brace close_brace .)
    Generate        reduce using rule 77 (array -> open_brace close_brace .)
    Link_Start      reduce using rule 77 (array -> open_brace close_brace .)
    close_brace     reduce using rule 77 (array -> open_brace close_brace .)
    greater_than    reduce using rule 77 (array -> open_brace close_brace .)
    less_than       reduce using rule 77 (array -> open_brace close_brace .)
    equal_equal     reduce using rule 77 (array -> open_brace close_brace .)
    not_equal       reduce using rule 77 (array -> open_brace close_brace .)
    great_than_equal reduce using rule 77 (array -> open_brace close_brace .)
    less_than_equal reduce using rule 77 (array -> open_brace close_brace .)
    close_par       reduce using rule 77 (array -> open_brace close_brace .)


state 117

    (76) array -> open_brace num_value . close_brace
    (93) arithmetic_expression -> num_value . arithmetic_operators num_value
    (94) arithmetic_operators -> . plus
    (95) arithmetic_operators -> . minus
    (96) arithmetic_operators -> . times
    (97) arithmetic_operators -> . divide
    (98) arithmetic_operators -> . divide_divide
    (99) arithmetic_operators -> . modulo
    (100) arithmetic_operators -> . times_times

    close_brace     shift and go to state 178
    plus            shift and go to state 133
    minus           shift and go to state 134
    times           shift and go to state 135
    divide          shift and go to state 136
    divide_divide   shift and go to state 137
    modulo          shift and go to state 138
    times_times     shift and go to state 139

    arithmetic_operators           shift and go to state 132

state 118

    (138) for_statements -> For id In . id open_brace close_brace colon open_bracket inside_statements close_bracket

    id              shift and go to state 179


state 119

    (163) logical_expression -> open_par . logical_operand close_par logical_operators open_par logical_operand close_par
    (92) arithmetic_expression -> open_par . arithmetic_expression close_par
    (164) logical_operand -> . Not open_par logical_operand close_par
    (165) logical_operand -> . relational_expression
    (166) logical_operand -> . logical_expression
    (167) logical_operand -> . lit_bool
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    Not             shift and go to state 182
    lit_bool        shift and go to state 185
    open_par        shift and go to state 180
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    logical_operand                shift and go to state 181
    arithmetic_expression          shift and go to state 141
    relational_expression          shift and go to state 183
    logical_expression             shift and go to state 184
    num_value                      shift and go to state 186
    value                          shift and go to state 125
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    func_call                      shift and go to state 81

state 120

    (140) while_statements -> While open_par condition . close_par colon open_bracket inside_statements close_bracket

    close_par       shift and go to state 187


state 121

    (149) condition -> relational_expression .

    close_par       reduce using rule 149 (condition -> relational_expression .)


state 122

    (150) condition -> logical_expression .

    close_par       reduce using rule 150 (condition -> logical_expression .)


state 123

    (151) condition -> Not . open_par condition_not close_par

    open_par        shift and go to state 188


state 124

    (152) condition -> lit_bool .
    (59) value -> lit_bool .

    close_par       reduce using rule 152 (condition -> lit_bool .)
    greater_than    reduce using rule 59 (value -> lit_bool .)
    less_than       reduce using rule 59 (value -> lit_bool .)
    equal_equal     reduce using rule 59 (value -> lit_bool .)
    not_equal       reduce using rule 59 (value -> lit_bool .)
    great_than_equal reduce using rule 59 (value -> lit_bool .)
    less_than_equal reduce using rule 59 (value -> lit_bool .)


state 125

    (156) relational_expression -> value . relational_operators value
    (157) relational_operators -> . greater_than
    (158) relational_operators -> . less_than
    (159) relational_operators -> . equal_equal
    (160) relational_operators -> . not_equal
    (161) relational_operators -> . great_than_equal
    (162) relational_operators -> . less_than_equal

    greater_than    shift and go to state 190
    less_than       shift and go to state 191
    equal_equal     shift and go to state 192
    not_equal       shift and go to state 193
    great_than_equal shift and go to state 194
    less_than_equal shift and go to state 195

    relational_operators           shift and go to state 189

state 126

    (172) if_statement -> If open_par condition . close_par colon open_bracket inside_statements close_bracket condition_else

    close_par       shift and go to state 196


state 127

    (180) switch_statements -> Switch id colon . open_bracket execute Default colon inside_statements close_bracket End_Switch

    open_bracket    shift and go to state 197


state 128

    (191) func_call -> Sys_Call id open_par . function_param close_par
    (192) function_param -> . id open_brace close_brace more_param
    (193) function_param -> . value1_opt more_param
    (194) function_param -> .
    (106) value1_opt -> . value_opt value2_opt
    (61) value_opt -> . num_value_opt
    (62) value_opt -> . lit_str
    (63) value_opt -> . lit_bool
    (69) num_value_opt -> . id_array_opt id_struct
    (70) num_value_opt -> . literals_opt
    (71) num_value_opt -> . arithmetic_expression
    (72) num_value_opt -> . func_call
    (75) id_array_opt -> . id array
    (88) literals_opt -> . lit_intposi
    (89) literals_opt -> . lit_intnega
    (90) literals_opt -> . lit_decposi
    (91) literals_opt -> . lit_decnega
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .

  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
    id              shift and go to state 198
    close_par       reduce using rule 194 (function_param -> .)
    lit_str         shift and go to state 203
    lit_bool        shift and go to state 204
    lit_intposi     shift and go to state 209
    lit_intnega     shift and go to state 210
    lit_decposi     shift and go to state 211
    lit_decnega     shift and go to state 212
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    period          reduce using rule 74 (id_array -> .)

  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]

    function_param                 shift and go to state 199
    value1_opt                     shift and go to state 200
    value_opt                      shift and go to state 201
    num_value_opt                  shift and go to state 202
    id_array_opt                   shift and go to state 205
    literals_opt                   shift and go to state 206
    arithmetic_expression          shift and go to state 207
    func_call                      shift and go to state 208
    num_value                      shift and go to state 142
    id_array                       shift and go to state 78
    literals                       shift and go to state 79

state 129

    (189) input_statements -> Absorb id_array id_struct .

    id              reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    For             reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    While           reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    If              reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Switch          reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Sys_Call        reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Absorb          reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Discharge       reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Link_End        reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Sys             reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    $end            reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Return          reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    close_bracket   reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Break           reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Continue        reduce using rule 189 (input_statements -> Absorb id_array id_struct .)
    Avoid           reduce using rule 189 (input_statements -> Absorb id_array id_struct .)


state 130

    (73) id_array -> id array .

    period          reduce using rule 73 (id_array -> id array .)
    id              reduce using rule 73 (id_array -> id array .)
    For             reduce using rule 73 (id_array -> id array .)
    While           reduce using rule 73 (id_array -> id array .)
    If              reduce using rule 73 (id_array -> id array .)
    Switch          reduce using rule 73 (id_array -> id array .)
    Sys_Call        reduce using rule 73 (id_array -> id array .)
    Absorb          reduce using rule 73 (id_array -> id array .)
    Discharge       reduce using rule 73 (id_array -> id array .)
    Link_End        reduce using rule 73 (id_array -> id array .)
    Sys             reduce using rule 73 (id_array -> id array .)
    $end            reduce using rule 73 (id_array -> id array .)
    Return          reduce using rule 73 (id_array -> id array .)
    close_bracket   reduce using rule 73 (id_array -> id array .)
    Break           reduce using rule 73 (id_array -> id array .)
    Continue        reduce using rule 73 (id_array -> id array .)
    Avoid           reduce using rule 73 (id_array -> id array .)
    plus            reduce using rule 73 (id_array -> id array .)
    minus           reduce using rule 73 (id_array -> id array .)
    times           reduce using rule 73 (id_array -> id array .)
    divide          reduce using rule 73 (id_array -> id array .)
    divide_divide   reduce using rule 73 (id_array -> id array .)
    modulo          reduce using rule 73 (id_array -> id array .)
    times_times     reduce using rule 73 (id_array -> id array .)
    comma           reduce using rule 73 (id_array -> id array .)
    Struct          reduce using rule 73 (id_array -> id array .)
    Generate        reduce using rule 73 (id_array -> id array .)
    Link_Start      reduce using rule 73 (id_array -> id array .)
    close_brace     reduce using rule 73 (id_array -> id array .)
    greater_than    reduce using rule 73 (id_array -> id array .)
    less_than       reduce using rule 73 (id_array -> id array .)
    equal_equal     reduce using rule 73 (id_array -> id array .)
    not_equal       reduce using rule 73 (id_array -> id array .)
    great_than_equal reduce using rule 73 (id_array -> id array .)
    less_than_equal reduce using rule 73 (id_array -> id array .)
    equal           reduce using rule 73 (id_array -> id array .)
    plus_equal      reduce using rule 73 (id_array -> id array .)
    minus_equal     reduce using rule 73 (id_array -> id array .)
    times_equal     reduce using rule 73 (id_array -> id array .)
    divide_equal    reduce using rule 73 (id_array -> id array .)
    divide_divide_equal reduce using rule 73 (id_array -> id array .)
    modulo_equal    reduce using rule 73 (id_array -> id array .)
    times_times_equal reduce using rule 73 (id_array -> id array .)
    close_par       reduce using rule 73 (id_array -> id array .)


state 131

    (76) array -> open_brace . num_value close_brace
    (77) array -> open_brace . close_brace
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
    close_brace     shift and go to state 116
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]

    num_value                      shift and go to state 117
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 132

    (93) arithmetic_expression -> num_value arithmetic_operators . num_value
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    For             reduce using rule 68 (num_value -> .)
    While           reduce using rule 68 (num_value -> .)
    If              reduce using rule 68 (num_value -> .)
    Switch          reduce using rule 68 (num_value -> .)
    Absorb          reduce using rule 68 (num_value -> .)
    Discharge       reduce using rule 68 (num_value -> .)
    Link_End        reduce using rule 68 (num_value -> .)
    Sys             reduce using rule 68 (num_value -> .)
    $end            reduce using rule 68 (num_value -> .)
    Return          reduce using rule 68 (num_value -> .)
    close_bracket   reduce using rule 68 (num_value -> .)
    Break           reduce using rule 68 (num_value -> .)
    Continue        reduce using rule 68 (num_value -> .)
    Avoid           reduce using rule 68 (num_value -> .)
    close_brace     reduce using rule 68 (num_value -> .)
    greater_than    reduce using rule 68 (num_value -> .)
    less_than       reduce using rule 68 (num_value -> .)
    equal_equal     reduce using rule 68 (num_value -> .)
    not_equal       reduce using rule 68 (num_value -> .)
    great_than_equal reduce using rule 68 (num_value -> .)
    less_than_equal reduce using rule 68 (num_value -> .)
    close_par       reduce using rule 68 (num_value -> .)
    comma           reduce using rule 68 (num_value -> .)
    Generate        reduce using rule 68 (num_value -> .)
    Struct          reduce using rule 68 (num_value -> .)
    Link_Start      reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! Break           [ reduce using rule 74 (id_array -> .) ]
  ! Continue        [ reduce using rule 74 (id_array -> .) ]
  ! Avoid           [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! close_par       [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! Generate        [ reduce using rule 74 (id_array -> .) ]
  ! Struct          [ reduce using rule 74 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]
  ! Break           [ reduce using rule 87 (literals -> .) ]
  ! Continue        [ reduce using rule 87 (literals -> .) ]
  ! Avoid           [ reduce using rule 87 (literals -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]
  ! close_par       [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! Generate        [ reduce using rule 87 (literals -> .) ]
  ! Struct          [ reduce using rule 87 (literals -> .) ]
  ! Link_Start      [ reduce using rule 87 (literals -> .) ]

    num_value                      shift and go to state 213
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 133

    (94) arithmetic_operators -> plus .

    id              reduce using rule 94 (arithmetic_operators -> plus .)
    lit_intposi     reduce using rule 94 (arithmetic_operators -> plus .)
    lit_intnega     reduce using rule 94 (arithmetic_operators -> plus .)
    lit_decposi     reduce using rule 94 (arithmetic_operators -> plus .)
    lit_decnega     reduce using rule 94 (arithmetic_operators -> plus .)
    open_par        reduce using rule 94 (arithmetic_operators -> plus .)
    Sys_Call        reduce using rule 94 (arithmetic_operators -> plus .)
    plus            reduce using rule 94 (arithmetic_operators -> plus .)
    minus           reduce using rule 94 (arithmetic_operators -> plus .)
    times           reduce using rule 94 (arithmetic_operators -> plus .)
    divide          reduce using rule 94 (arithmetic_operators -> plus .)
    divide_divide   reduce using rule 94 (arithmetic_operators -> plus .)
    modulo          reduce using rule 94 (arithmetic_operators -> plus .)
    times_times     reduce using rule 94 (arithmetic_operators -> plus .)
    period          reduce using rule 94 (arithmetic_operators -> plus .)
    For             reduce using rule 94 (arithmetic_operators -> plus .)
    While           reduce using rule 94 (arithmetic_operators -> plus .)
    If              reduce using rule 94 (arithmetic_operators -> plus .)
    Switch          reduce using rule 94 (arithmetic_operators -> plus .)
    Absorb          reduce using rule 94 (arithmetic_operators -> plus .)
    Discharge       reduce using rule 94 (arithmetic_operators -> plus .)
    Link_End        reduce using rule 94 (arithmetic_operators -> plus .)
    Sys             reduce using rule 94 (arithmetic_operators -> plus .)
    $end            reduce using rule 94 (arithmetic_operators -> plus .)
    Return          reduce using rule 94 (arithmetic_operators -> plus .)
    close_bracket   reduce using rule 94 (arithmetic_operators -> plus .)
    Break           reduce using rule 94 (arithmetic_operators -> plus .)
    Continue        reduce using rule 94 (arithmetic_operators -> plus .)
    Avoid           reduce using rule 94 (arithmetic_operators -> plus .)
    greater_than    reduce using rule 94 (arithmetic_operators -> plus .)
    less_than       reduce using rule 94 (arithmetic_operators -> plus .)
    equal_equal     reduce using rule 94 (arithmetic_operators -> plus .)
    not_equal       reduce using rule 94 (arithmetic_operators -> plus .)
    great_than_equal reduce using rule 94 (arithmetic_operators -> plus .)
    less_than_equal reduce using rule 94 (arithmetic_operators -> plus .)
    comma           reduce using rule 94 (arithmetic_operators -> plus .)
    Generate        reduce using rule 94 (arithmetic_operators -> plus .)
    Struct          reduce using rule 94 (arithmetic_operators -> plus .)
    Link_Start      reduce using rule 94 (arithmetic_operators -> plus .)
    close_par       reduce using rule 94 (arithmetic_operators -> plus .)
    close_brace     reduce using rule 94 (arithmetic_operators -> plus .)


state 134

    (95) arithmetic_operators -> minus .

    id              reduce using rule 95 (arithmetic_operators -> minus .)
    lit_intposi     reduce using rule 95 (arithmetic_operators -> minus .)
    lit_intnega     reduce using rule 95 (arithmetic_operators -> minus .)
    lit_decposi     reduce using rule 95 (arithmetic_operators -> minus .)
    lit_decnega     reduce using rule 95 (arithmetic_operators -> minus .)
    open_par        reduce using rule 95 (arithmetic_operators -> minus .)
    Sys_Call        reduce using rule 95 (arithmetic_operators -> minus .)
    plus            reduce using rule 95 (arithmetic_operators -> minus .)
    minus           reduce using rule 95 (arithmetic_operators -> minus .)
    times           reduce using rule 95 (arithmetic_operators -> minus .)
    divide          reduce using rule 95 (arithmetic_operators -> minus .)
    divide_divide   reduce using rule 95 (arithmetic_operators -> minus .)
    modulo          reduce using rule 95 (arithmetic_operators -> minus .)
    times_times     reduce using rule 95 (arithmetic_operators -> minus .)
    period          reduce using rule 95 (arithmetic_operators -> minus .)
    For             reduce using rule 95 (arithmetic_operators -> minus .)
    While           reduce using rule 95 (arithmetic_operators -> minus .)
    If              reduce using rule 95 (arithmetic_operators -> minus .)
    Switch          reduce using rule 95 (arithmetic_operators -> minus .)
    Absorb          reduce using rule 95 (arithmetic_operators -> minus .)
    Discharge       reduce using rule 95 (arithmetic_operators -> minus .)
    Link_End        reduce using rule 95 (arithmetic_operators -> minus .)
    Sys             reduce using rule 95 (arithmetic_operators -> minus .)
    $end            reduce using rule 95 (arithmetic_operators -> minus .)
    Return          reduce using rule 95 (arithmetic_operators -> minus .)
    close_bracket   reduce using rule 95 (arithmetic_operators -> minus .)
    Break           reduce using rule 95 (arithmetic_operators -> minus .)
    Continue        reduce using rule 95 (arithmetic_operators -> minus .)
    Avoid           reduce using rule 95 (arithmetic_operators -> minus .)
    greater_than    reduce using rule 95 (arithmetic_operators -> minus .)
    less_than       reduce using rule 95 (arithmetic_operators -> minus .)
    equal_equal     reduce using rule 95 (arithmetic_operators -> minus .)
    not_equal       reduce using rule 95 (arithmetic_operators -> minus .)
    great_than_equal reduce using rule 95 (arithmetic_operators -> minus .)
    less_than_equal reduce using rule 95 (arithmetic_operators -> minus .)
    comma           reduce using rule 95 (arithmetic_operators -> minus .)
    Generate        reduce using rule 95 (arithmetic_operators -> minus .)
    Struct          reduce using rule 95 (arithmetic_operators -> minus .)
    Link_Start      reduce using rule 95 (arithmetic_operators -> minus .)
    close_par       reduce using rule 95 (arithmetic_operators -> minus .)
    close_brace     reduce using rule 95 (arithmetic_operators -> minus .)


state 135

    (96) arithmetic_operators -> times .

    id              reduce using rule 96 (arithmetic_operators -> times .)
    lit_intposi     reduce using rule 96 (arithmetic_operators -> times .)
    lit_intnega     reduce using rule 96 (arithmetic_operators -> times .)
    lit_decposi     reduce using rule 96 (arithmetic_operators -> times .)
    lit_decnega     reduce using rule 96 (arithmetic_operators -> times .)
    open_par        reduce using rule 96 (arithmetic_operators -> times .)
    Sys_Call        reduce using rule 96 (arithmetic_operators -> times .)
    plus            reduce using rule 96 (arithmetic_operators -> times .)
    minus           reduce using rule 96 (arithmetic_operators -> times .)
    times           reduce using rule 96 (arithmetic_operators -> times .)
    divide          reduce using rule 96 (arithmetic_operators -> times .)
    divide_divide   reduce using rule 96 (arithmetic_operators -> times .)
    modulo          reduce using rule 96 (arithmetic_operators -> times .)
    times_times     reduce using rule 96 (arithmetic_operators -> times .)
    period          reduce using rule 96 (arithmetic_operators -> times .)
    For             reduce using rule 96 (arithmetic_operators -> times .)
    While           reduce using rule 96 (arithmetic_operators -> times .)
    If              reduce using rule 96 (arithmetic_operators -> times .)
    Switch          reduce using rule 96 (arithmetic_operators -> times .)
    Absorb          reduce using rule 96 (arithmetic_operators -> times .)
    Discharge       reduce using rule 96 (arithmetic_operators -> times .)
    Link_End        reduce using rule 96 (arithmetic_operators -> times .)
    Sys             reduce using rule 96 (arithmetic_operators -> times .)
    $end            reduce using rule 96 (arithmetic_operators -> times .)
    Return          reduce using rule 96 (arithmetic_operators -> times .)
    close_bracket   reduce using rule 96 (arithmetic_operators -> times .)
    Break           reduce using rule 96 (arithmetic_operators -> times .)
    Continue        reduce using rule 96 (arithmetic_operators -> times .)
    Avoid           reduce using rule 96 (arithmetic_operators -> times .)
    greater_than    reduce using rule 96 (arithmetic_operators -> times .)
    less_than       reduce using rule 96 (arithmetic_operators -> times .)
    equal_equal     reduce using rule 96 (arithmetic_operators -> times .)
    not_equal       reduce using rule 96 (arithmetic_operators -> times .)
    great_than_equal reduce using rule 96 (arithmetic_operators -> times .)
    less_than_equal reduce using rule 96 (arithmetic_operators -> times .)
    comma           reduce using rule 96 (arithmetic_operators -> times .)
    Generate        reduce using rule 96 (arithmetic_operators -> times .)
    Struct          reduce using rule 96 (arithmetic_operators -> times .)
    Link_Start      reduce using rule 96 (arithmetic_operators -> times .)
    close_par       reduce using rule 96 (arithmetic_operators -> times .)
    close_brace     reduce using rule 96 (arithmetic_operators -> times .)


state 136

    (97) arithmetic_operators -> divide .

    id              reduce using rule 97 (arithmetic_operators -> divide .)
    lit_intposi     reduce using rule 97 (arithmetic_operators -> divide .)
    lit_intnega     reduce using rule 97 (arithmetic_operators -> divide .)
    lit_decposi     reduce using rule 97 (arithmetic_operators -> divide .)
    lit_decnega     reduce using rule 97 (arithmetic_operators -> divide .)
    open_par        reduce using rule 97 (arithmetic_operators -> divide .)
    Sys_Call        reduce using rule 97 (arithmetic_operators -> divide .)
    plus            reduce using rule 97 (arithmetic_operators -> divide .)
    minus           reduce using rule 97 (arithmetic_operators -> divide .)
    times           reduce using rule 97 (arithmetic_operators -> divide .)
    divide          reduce using rule 97 (arithmetic_operators -> divide .)
    divide_divide   reduce using rule 97 (arithmetic_operators -> divide .)
    modulo          reduce using rule 97 (arithmetic_operators -> divide .)
    times_times     reduce using rule 97 (arithmetic_operators -> divide .)
    period          reduce using rule 97 (arithmetic_operators -> divide .)
    For             reduce using rule 97 (arithmetic_operators -> divide .)
    While           reduce using rule 97 (arithmetic_operators -> divide .)
    If              reduce using rule 97 (arithmetic_operators -> divide .)
    Switch          reduce using rule 97 (arithmetic_operators -> divide .)
    Absorb          reduce using rule 97 (arithmetic_operators -> divide .)
    Discharge       reduce using rule 97 (arithmetic_operators -> divide .)
    Link_End        reduce using rule 97 (arithmetic_operators -> divide .)
    Sys             reduce using rule 97 (arithmetic_operators -> divide .)
    $end            reduce using rule 97 (arithmetic_operators -> divide .)
    Return          reduce using rule 97 (arithmetic_operators -> divide .)
    close_bracket   reduce using rule 97 (arithmetic_operators -> divide .)
    Break           reduce using rule 97 (arithmetic_operators -> divide .)
    Continue        reduce using rule 97 (arithmetic_operators -> divide .)
    Avoid           reduce using rule 97 (arithmetic_operators -> divide .)
    greater_than    reduce using rule 97 (arithmetic_operators -> divide .)
    less_than       reduce using rule 97 (arithmetic_operators -> divide .)
    equal_equal     reduce using rule 97 (arithmetic_operators -> divide .)
    not_equal       reduce using rule 97 (arithmetic_operators -> divide .)
    great_than_equal reduce using rule 97 (arithmetic_operators -> divide .)
    less_than_equal reduce using rule 97 (arithmetic_operators -> divide .)
    comma           reduce using rule 97 (arithmetic_operators -> divide .)
    Generate        reduce using rule 97 (arithmetic_operators -> divide .)
    Struct          reduce using rule 97 (arithmetic_operators -> divide .)
    Link_Start      reduce using rule 97 (arithmetic_operators -> divide .)
    close_par       reduce using rule 97 (arithmetic_operators -> divide .)
    close_brace     reduce using rule 97 (arithmetic_operators -> divide .)


state 137

    (98) arithmetic_operators -> divide_divide .

    id              reduce using rule 98 (arithmetic_operators -> divide_divide .)
    lit_intposi     reduce using rule 98 (arithmetic_operators -> divide_divide .)
    lit_intnega     reduce using rule 98 (arithmetic_operators -> divide_divide .)
    lit_decposi     reduce using rule 98 (arithmetic_operators -> divide_divide .)
    lit_decnega     reduce using rule 98 (arithmetic_operators -> divide_divide .)
    open_par        reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Sys_Call        reduce using rule 98 (arithmetic_operators -> divide_divide .)
    plus            reduce using rule 98 (arithmetic_operators -> divide_divide .)
    minus           reduce using rule 98 (arithmetic_operators -> divide_divide .)
    times           reduce using rule 98 (arithmetic_operators -> divide_divide .)
    divide          reduce using rule 98 (arithmetic_operators -> divide_divide .)
    divide_divide   reduce using rule 98 (arithmetic_operators -> divide_divide .)
    modulo          reduce using rule 98 (arithmetic_operators -> divide_divide .)
    times_times     reduce using rule 98 (arithmetic_operators -> divide_divide .)
    period          reduce using rule 98 (arithmetic_operators -> divide_divide .)
    For             reduce using rule 98 (arithmetic_operators -> divide_divide .)
    While           reduce using rule 98 (arithmetic_operators -> divide_divide .)
    If              reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Switch          reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Absorb          reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Discharge       reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Link_End        reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Sys             reduce using rule 98 (arithmetic_operators -> divide_divide .)
    $end            reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Return          reduce using rule 98 (arithmetic_operators -> divide_divide .)
    close_bracket   reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Break           reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Continue        reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Avoid           reduce using rule 98 (arithmetic_operators -> divide_divide .)
    greater_than    reduce using rule 98 (arithmetic_operators -> divide_divide .)
    less_than       reduce using rule 98 (arithmetic_operators -> divide_divide .)
    equal_equal     reduce using rule 98 (arithmetic_operators -> divide_divide .)
    not_equal       reduce using rule 98 (arithmetic_operators -> divide_divide .)
    great_than_equal reduce using rule 98 (arithmetic_operators -> divide_divide .)
    less_than_equal reduce using rule 98 (arithmetic_operators -> divide_divide .)
    comma           reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Generate        reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Struct          reduce using rule 98 (arithmetic_operators -> divide_divide .)
    Link_Start      reduce using rule 98 (arithmetic_operators -> divide_divide .)
    close_par       reduce using rule 98 (arithmetic_operators -> divide_divide .)
    close_brace     reduce using rule 98 (arithmetic_operators -> divide_divide .)


state 138

    (99) arithmetic_operators -> modulo .

    id              reduce using rule 99 (arithmetic_operators -> modulo .)
    lit_intposi     reduce using rule 99 (arithmetic_operators -> modulo .)
    lit_intnega     reduce using rule 99 (arithmetic_operators -> modulo .)
    lit_decposi     reduce using rule 99 (arithmetic_operators -> modulo .)
    lit_decnega     reduce using rule 99 (arithmetic_operators -> modulo .)
    open_par        reduce using rule 99 (arithmetic_operators -> modulo .)
    Sys_Call        reduce using rule 99 (arithmetic_operators -> modulo .)
    plus            reduce using rule 99 (arithmetic_operators -> modulo .)
    minus           reduce using rule 99 (arithmetic_operators -> modulo .)
    times           reduce using rule 99 (arithmetic_operators -> modulo .)
    divide          reduce using rule 99 (arithmetic_operators -> modulo .)
    divide_divide   reduce using rule 99 (arithmetic_operators -> modulo .)
    modulo          reduce using rule 99 (arithmetic_operators -> modulo .)
    times_times     reduce using rule 99 (arithmetic_operators -> modulo .)
    period          reduce using rule 99 (arithmetic_operators -> modulo .)
    For             reduce using rule 99 (arithmetic_operators -> modulo .)
    While           reduce using rule 99 (arithmetic_operators -> modulo .)
    If              reduce using rule 99 (arithmetic_operators -> modulo .)
    Switch          reduce using rule 99 (arithmetic_operators -> modulo .)
    Absorb          reduce using rule 99 (arithmetic_operators -> modulo .)
    Discharge       reduce using rule 99 (arithmetic_operators -> modulo .)
    Link_End        reduce using rule 99 (arithmetic_operators -> modulo .)
    Sys             reduce using rule 99 (arithmetic_operators -> modulo .)
    $end            reduce using rule 99 (arithmetic_operators -> modulo .)
    Return          reduce using rule 99 (arithmetic_operators -> modulo .)
    close_bracket   reduce using rule 99 (arithmetic_operators -> modulo .)
    Break           reduce using rule 99 (arithmetic_operators -> modulo .)
    Continue        reduce using rule 99 (arithmetic_operators -> modulo .)
    Avoid           reduce using rule 99 (arithmetic_operators -> modulo .)
    greater_than    reduce using rule 99 (arithmetic_operators -> modulo .)
    less_than       reduce using rule 99 (arithmetic_operators -> modulo .)
    equal_equal     reduce using rule 99 (arithmetic_operators -> modulo .)
    not_equal       reduce using rule 99 (arithmetic_operators -> modulo .)
    great_than_equal reduce using rule 99 (arithmetic_operators -> modulo .)
    less_than_equal reduce using rule 99 (arithmetic_operators -> modulo .)
    comma           reduce using rule 99 (arithmetic_operators -> modulo .)
    Generate        reduce using rule 99 (arithmetic_operators -> modulo .)
    Struct          reduce using rule 99 (arithmetic_operators -> modulo .)
    Link_Start      reduce using rule 99 (arithmetic_operators -> modulo .)
    close_par       reduce using rule 99 (arithmetic_operators -> modulo .)
    close_brace     reduce using rule 99 (arithmetic_operators -> modulo .)


state 139

    (100) arithmetic_operators -> times_times .

    id              reduce using rule 100 (arithmetic_operators -> times_times .)
    lit_intposi     reduce using rule 100 (arithmetic_operators -> times_times .)
    lit_intnega     reduce using rule 100 (arithmetic_operators -> times_times .)
    lit_decposi     reduce using rule 100 (arithmetic_operators -> times_times .)
    lit_decnega     reduce using rule 100 (arithmetic_operators -> times_times .)
    open_par        reduce using rule 100 (arithmetic_operators -> times_times .)
    Sys_Call        reduce using rule 100 (arithmetic_operators -> times_times .)
    plus            reduce using rule 100 (arithmetic_operators -> times_times .)
    minus           reduce using rule 100 (arithmetic_operators -> times_times .)
    times           reduce using rule 100 (arithmetic_operators -> times_times .)
    divide          reduce using rule 100 (arithmetic_operators -> times_times .)
    divide_divide   reduce using rule 100 (arithmetic_operators -> times_times .)
    modulo          reduce using rule 100 (arithmetic_operators -> times_times .)
    times_times     reduce using rule 100 (arithmetic_operators -> times_times .)
    period          reduce using rule 100 (arithmetic_operators -> times_times .)
    For             reduce using rule 100 (arithmetic_operators -> times_times .)
    While           reduce using rule 100 (arithmetic_operators -> times_times .)
    If              reduce using rule 100 (arithmetic_operators -> times_times .)
    Switch          reduce using rule 100 (arithmetic_operators -> times_times .)
    Absorb          reduce using rule 100 (arithmetic_operators -> times_times .)
    Discharge       reduce using rule 100 (arithmetic_operators -> times_times .)
    Link_End        reduce using rule 100 (arithmetic_operators -> times_times .)
    Sys             reduce using rule 100 (arithmetic_operators -> times_times .)
    $end            reduce using rule 100 (arithmetic_operators -> times_times .)
    Return          reduce using rule 100 (arithmetic_operators -> times_times .)
    close_bracket   reduce using rule 100 (arithmetic_operators -> times_times .)
    Break           reduce using rule 100 (arithmetic_operators -> times_times .)
    Continue        reduce using rule 100 (arithmetic_operators -> times_times .)
    Avoid           reduce using rule 100 (arithmetic_operators -> times_times .)
    greater_than    reduce using rule 100 (arithmetic_operators -> times_times .)
    less_than       reduce using rule 100 (arithmetic_operators -> times_times .)
    equal_equal     reduce using rule 100 (arithmetic_operators -> times_times .)
    not_equal       reduce using rule 100 (arithmetic_operators -> times_times .)
    great_than_equal reduce using rule 100 (arithmetic_operators -> times_times .)
    less_than_equal reduce using rule 100 (arithmetic_operators -> times_times .)
    comma           reduce using rule 100 (arithmetic_operators -> times_times .)
    Generate        reduce using rule 100 (arithmetic_operators -> times_times .)
    Struct          reduce using rule 100 (arithmetic_operators -> times_times .)
    Link_Start      reduce using rule 100 (arithmetic_operators -> times_times .)
    close_par       reduce using rule 100 (arithmetic_operators -> times_times .)
    close_brace     reduce using rule 100 (arithmetic_operators -> times_times .)


state 140

    (64) num_value -> id_array id_struct .

    plus            reduce using rule 64 (num_value -> id_array id_struct .)
    minus           reduce using rule 64 (num_value -> id_array id_struct .)
    times           reduce using rule 64 (num_value -> id_array id_struct .)
    divide          reduce using rule 64 (num_value -> id_array id_struct .)
    divide_divide   reduce using rule 64 (num_value -> id_array id_struct .)
    modulo          reduce using rule 64 (num_value -> id_array id_struct .)
    times_times     reduce using rule 64 (num_value -> id_array id_struct .)
    id              reduce using rule 64 (num_value -> id_array id_struct .)
    For             reduce using rule 64 (num_value -> id_array id_struct .)
    While           reduce using rule 64 (num_value -> id_array id_struct .)
    If              reduce using rule 64 (num_value -> id_array id_struct .)
    Switch          reduce using rule 64 (num_value -> id_array id_struct .)
    Sys_Call        reduce using rule 64 (num_value -> id_array id_struct .)
    Absorb          reduce using rule 64 (num_value -> id_array id_struct .)
    Discharge       reduce using rule 64 (num_value -> id_array id_struct .)
    Link_End        reduce using rule 64 (num_value -> id_array id_struct .)
    Sys             reduce using rule 64 (num_value -> id_array id_struct .)
    $end            reduce using rule 64 (num_value -> id_array id_struct .)
    Return          reduce using rule 64 (num_value -> id_array id_struct .)
    close_bracket   reduce using rule 64 (num_value -> id_array id_struct .)
    Break           reduce using rule 64 (num_value -> id_array id_struct .)
    Continue        reduce using rule 64 (num_value -> id_array id_struct .)
    Avoid           reduce using rule 64 (num_value -> id_array id_struct .)
    close_brace     reduce using rule 64 (num_value -> id_array id_struct .)
    greater_than    reduce using rule 64 (num_value -> id_array id_struct .)
    less_than       reduce using rule 64 (num_value -> id_array id_struct .)
    equal_equal     reduce using rule 64 (num_value -> id_array id_struct .)
    not_equal       reduce using rule 64 (num_value -> id_array id_struct .)
    great_than_equal reduce using rule 64 (num_value -> id_array id_struct .)
    less_than_equal reduce using rule 64 (num_value -> id_array id_struct .)
    comma           reduce using rule 64 (num_value -> id_array id_struct .)
    Generate        reduce using rule 64 (num_value -> id_array id_struct .)
    Struct          reduce using rule 64 (num_value -> id_array id_struct .)
    Link_Start      reduce using rule 64 (num_value -> id_array id_struct .)
    close_par       reduce using rule 64 (num_value -> id_array id_struct .)


state 141

    (92) arithmetic_expression -> open_par arithmetic_expression . close_par
    (66) num_value -> arithmetic_expression .

    close_par       shift and go to state 214
    plus            reduce using rule 66 (num_value -> arithmetic_expression .)
    minus           reduce using rule 66 (num_value -> arithmetic_expression .)
    times           reduce using rule 66 (num_value -> arithmetic_expression .)
    divide          reduce using rule 66 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 66 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 66 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 66 (num_value -> arithmetic_expression .)
    greater_than    reduce using rule 66 (num_value -> arithmetic_expression .)
    less_than       reduce using rule 66 (num_value -> arithmetic_expression .)
    equal_equal     reduce using rule 66 (num_value -> arithmetic_expression .)
    not_equal       reduce using rule 66 (num_value -> arithmetic_expression .)
    great_than_equal reduce using rule 66 (num_value -> arithmetic_expression .)
    less_than_equal reduce using rule 66 (num_value -> arithmetic_expression .)


state 142

    (93) arithmetic_expression -> num_value . arithmetic_operators num_value
    (94) arithmetic_operators -> . plus
    (95) arithmetic_operators -> . minus
    (96) arithmetic_operators -> . times
    (97) arithmetic_operators -> . divide
    (98) arithmetic_operators -> . divide_divide
    (99) arithmetic_operators -> . modulo
    (100) arithmetic_operators -> . times_times

    plus            shift and go to state 133
    minus           shift and go to state 134
    times           shift and go to state 135
    divide          shift and go to state 136
    divide_divide   shift and go to state 137
    modulo          shift and go to state 138
    times_times     shift and go to state 139

    arithmetic_operators           shift and go to state 132

state 143

    (8) struct_dec -> Struct id open_bracket struct_element1 close_bracket . id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 215
    id_array                       shift and go to state 90

state 144

    (12) struct_dec -> Struct id open_bracket struct_element1 id_array1 .

    Struct          reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Generate        reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Link_Start      reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    id              reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    For             reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    While           reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    If              reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Switch          reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Sys_Call        reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Absorb          reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Discharge       reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Link_End        reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Sys             reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    $end            reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)


state 145

    (13) struct_dec -> Struct id struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    id              reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    For             reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    While           reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    If              reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)


state 146

    (79) id_array1 -> id_array id_array2 .

    Struct          reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Generate        reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Link_Start      reduce using rule 79 (id_array1 -> id_array id_array2 .)
    id              reduce using rule 79 (id_array1 -> id_array id_array2 .)
    For             reduce using rule 79 (id_array1 -> id_array id_array2 .)
    While           reduce using rule 79 (id_array1 -> id_array id_array2 .)
    If              reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Switch          reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Sys_Call        reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Absorb          reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Discharge       reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Link_End        reduce using rule 79 (id_array1 -> id_array id_array2 .)
    Sys             reduce using rule 79 (id_array1 -> id_array id_array2 .)
    $end            reduce using rule 79 (id_array1 -> id_array id_array2 .)


state 147

    (81) id_array2 -> comma . id_array1
    (79) id_array1 -> . id_array id_array2
    (80) id_array1 -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 74 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 74 (id_array -> .)
    id              shift and go to state 73
    comma           reduce using rule 74 (id_array -> .)
    Struct          reduce using rule 74 (id_array -> .)
    Generate        reduce using rule 74 (id_array -> .)
    Link_Start      reduce using rule 74 (id_array -> .)
    For             reduce using rule 74 (id_array -> .)
    While           reduce using rule 74 (id_array -> .)
    If              reduce using rule 74 (id_array -> .)
    Switch          reduce using rule 74 (id_array -> .)
    Sys_Call        reduce using rule 74 (id_array -> .)
    Absorb          reduce using rule 74 (id_array -> .)
    Discharge       reduce using rule 74 (id_array -> .)
    Link_End        reduce using rule 74 (id_array -> .)
    Sys             reduce using rule 74 (id_array -> .)
    $end            reduce using rule 74 (id_array -> .)

  ! Struct          [ reduce using rule 80 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 80 (id_array1 -> .) ]
  ! For             [ reduce using rule 80 (id_array1 -> .) ]
  ! While           [ reduce using rule 80 (id_array1 -> .) ]
  ! If              [ reduce using rule 80 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 80 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 80 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 80 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 80 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 80 (id_array1 -> .) ]
  ! $end            [ reduce using rule 80 (id_array1 -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]

    id_array1                      shift and go to state 216
    id_array                       shift and go to state 90

state 148

    (14) struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    id              reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    For             reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    While           reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    If              reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)


state 149

    (27) id_array_dec2 -> open_brace lit_intposi . close_brace array_dec1

    close_brace     shift and go to state 217


state 150

    (28) id_dec1 -> comma id . id_dec1
    (28) id_dec1 -> . comma id id_dec1
    (29) id_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 99
    Integer         reduce using rule 29 (id_dec1 -> .)
    Decimal         reduce using rule 29 (id_dec1 -> .)
    String          reduce using rule 29 (id_dec1 -> .)
    Boolean         reduce using rule 29 (id_dec1 -> .)
    id              reduce using rule 29 (id_dec1 -> .)
    close_bracket   reduce using rule 29 (id_dec1 -> .)
    Struct          reduce using rule 29 (id_dec1 -> .)
    Generate        reduce using rule 29 (id_dec1 -> .)
    Link_Start      reduce using rule 29 (id_dec1 -> .)
    For             reduce using rule 29 (id_dec1 -> .)
    While           reduce using rule 29 (id_dec1 -> .)
    If              reduce using rule 29 (id_dec1 -> .)
    Switch          reduce using rule 29 (id_dec1 -> .)
    Sys_Call        reduce using rule 29 (id_dec1 -> .)
    Absorb          reduce using rule 29 (id_dec1 -> .)
    Discharge       reduce using rule 29 (id_dec1 -> .)
    Link_End        reduce using rule 29 (id_dec1 -> .)
    Sys             reduce using rule 29 (id_dec1 -> .)
    $end            reduce using rule 29 (id_dec1 -> .)

  ! comma           [ reduce using rule 29 (id_dec1 -> .) ]

    id_dec1                        shift and go to state 218

state 151

    (37) id_array_const -> id id_array_const2 .

    Generate        reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Struct          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Link_Start      reduce using rule 37 (id_array_const -> id id_array_const2 .)
    id              reduce using rule 37 (id_array_const -> id id_array_const2 .)
    For             reduce using rule 37 (id_array_const -> id id_array_const2 .)
    While           reduce using rule 37 (id_array_const -> id id_array_const2 .)
    If              reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Switch          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Sys_Call        reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Absorb          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Discharge       reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Link_End        reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Sys             reduce using rule 37 (id_array_const -> id id_array_const2 .)
    $end            reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Return          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    close_bracket   reduce using rule 37 (id_array_const -> id id_array_const2 .)


state 152

    (39) id_array_const2 -> open_brace . lit_intposi close_brace equal open_brace value1 close_brace array_const1

    lit_intposi     shift and go to state 219


state 153

    (40) id_array_const2 -> equal . value id_const1
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    Generate        reduce using rule 60 (value -> .)
    Struct          reduce using rule 60 (value -> .)
    Link_Start      reduce using rule 60 (value -> .)
    For             reduce using rule 60 (value -> .)
    While           reduce using rule 60 (value -> .)
    If              reduce using rule 60 (value -> .)
    Switch          reduce using rule 60 (value -> .)
    Absorb          reduce using rule 60 (value -> .)
    Discharge       reduce using rule 60 (value -> .)
    Link_End        reduce using rule 60 (value -> .)
    Sys             reduce using rule 60 (value -> .)
    $end            reduce using rule 60 (value -> .)
    Return          reduce using rule 60 (value -> .)
    close_bracket   reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 60 (value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (value -> .) ]
  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! Generate        [ reduce using rule 68 (num_value -> .) ]
  ! Struct          [ reduce using rule 68 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 68 (num_value -> .) ]
  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! For             [ reduce using rule 68 (num_value -> .) ]
  ! While           [ reduce using rule 68 (num_value -> .) ]
  ! If              [ reduce using rule 68 (num_value -> .) ]
  ! Switch          [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! Absorb          [ reduce using rule 68 (num_value -> .) ]
  ! Discharge       [ reduce using rule 68 (num_value -> .) ]
  ! Link_End        [ reduce using rule 68 (num_value -> .) ]
  ! Sys             [ reduce using rule 68 (num_value -> .) ]
  ! $end            [ reduce using rule 68 (num_value -> .) ]
  ! Return          [ reduce using rule 68 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! Generate        [ reduce using rule 74 (id_array -> .) ]
  ! Struct          [ reduce using rule 74 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! Generate        [ reduce using rule 87 (literals -> .) ]
  ! Struct          [ reduce using rule 87 (literals -> .) ]
  ! Link_Start      [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]

    value                          shift and go to state 220
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 154

    (47) id_array_var2 -> var_init id_var1 .

    Generate        reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Struct          reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Link_Start      reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    id              reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    For             reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    While           reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    If              reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Switch          reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Sys_Call        reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Absorb          reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Discharge       reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Link_End        reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Sys             reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    $end            reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    Return          reduce using rule 47 (id_array_var2 -> var_init id_var1 .)
    close_bracket   reduce using rule 47 (id_array_var2 -> var_init id_var1 .)


state 155

    (51) id_var1 -> comma . id var_init id_var1

    id              shift and go to state 221


state 156

    (48) id_array_var2 -> open_brace lit_intposi . close_brace array_init array_var1

    close_brace     shift and go to state 222


state 157

    (49) var_init -> equal value . id_var1
    (51) id_var1 -> . comma id var_init id_var1
    (52) id_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 155
    Generate        reduce using rule 52 (id_var1 -> .)
    Struct          reduce using rule 52 (id_var1 -> .)
    Link_Start      reduce using rule 52 (id_var1 -> .)
    id              reduce using rule 52 (id_var1 -> .)
    For             reduce using rule 52 (id_var1 -> .)
    While           reduce using rule 52 (id_var1 -> .)
    If              reduce using rule 52 (id_var1 -> .)
    Switch          reduce using rule 52 (id_var1 -> .)
    Sys_Call        reduce using rule 52 (id_var1 -> .)
    Absorb          reduce using rule 52 (id_var1 -> .)
    Discharge       reduce using rule 52 (id_var1 -> .)
    Link_End        reduce using rule 52 (id_var1 -> .)
    Sys             reduce using rule 52 (id_var1 -> .)
    $end            reduce using rule 52 (id_var1 -> .)
    Return          reduce using rule 52 (id_var1 -> .)
    close_bracket   reduce using rule 52 (id_var1 -> .)

  ! comma           [ reduce using rule 52 (id_var1 -> .) ]

    id_var1                        shift and go to state 223

state 158

    (1) program -> global_dec Link_Start declare_statements statements Link_End functions .

    $end            reduce using rule 1 (program -> global_dec Link_Start declare_statements statements Link_End functions .)


state 159

    (197) functions -> Sys id open_par . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (203) functions -> Sys id open_par . parameters declare_statements statements return_statement functions
    (213) functions -> Sys id open_par . parameters close_par declare_statements statements return_statement functions
    (214) functions -> Sys id open_par . parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> Sys id open_par . parameters declare_statements statements return_statement close_bracket functions
    (223) functions -> Sys id open_par . parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> Sys id open_par . parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> Sys id open_par . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (229) parameters -> . data_type id more_parameters
    (230) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
    close_par       reduce using rule 230 (parameters -> .)
    open_bracket    reduce using rule 230 (parameters -> .)
    Generate        reduce using rule 230 (parameters -> .)
    For             reduce using rule 230 (parameters -> .)
    While           reduce using rule 230 (parameters -> .)
    If              reduce using rule 230 (parameters -> .)
    Switch          reduce using rule 230 (parameters -> .)
    Sys_Call        reduce using rule 230 (parameters -> .)
    Absorb          reduce using rule 230 (parameters -> .)
    Discharge       reduce using rule 230 (parameters -> .)
    Return          reduce using rule 230 (parameters -> .)
    close_bracket   reduce using rule 230 (parameters -> .)
    Sys             reduce using rule 230 (parameters -> .)
    $end            reduce using rule 230 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 230 (parameters -> .) ]

    parameters                     shift and go to state 224
    data_type                      shift and go to state 112

state 160

    (198) functions -> Sys id parameters . declare_statements statements return_statement functions
    (204) functions -> Sys id parameters . close_par declare_statements statements return_statement functions
    (205) functions -> Sys id parameters . open_bracket declare_statements statements return_statement functions
    (206) functions -> Sys id parameters . declare_statements statements return_statement close_bracket functions
    (216) functions -> Sys id parameters . close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> Sys id parameters . close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> Sys id parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> Sys id parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 226
    open_bracket    shift and go to state 227
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 225

state 161

    (199) functions -> Sys open_par parameters . declare_statements statements return_statement functions
    (207) functions -> Sys open_par parameters . close_par declare_statements statements return_statement functions
    (208) functions -> Sys open_par parameters . open_bracket declare_statements statements return_statement functions
    (209) functions -> Sys open_par parameters . declare_statements statements return_statement close_bracket functions
    (219) functions -> Sys open_par parameters . close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> Sys open_par parameters . close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> Sys open_par parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> Sys open_par parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 229
    open_bracket    shift and go to state 230
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 228

state 162

    (200) functions -> Sys parameters close_par . declare_statements statements return_statement functions
    (210) functions -> Sys parameters close_par . open_bracket declare_statements statements return_statement functions
    (211) functions -> Sys parameters close_par . declare_statements statements return_statement close_bracket functions
    (222) functions -> Sys parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 232
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 231

state 163

    (202) functions -> Sys parameters declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 233
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 164

    (201) functions -> Sys parameters open_bracket . declare_statements statements return_statement functions
    (212) functions -> Sys parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 234

state 165

    (229) parameters -> data_type id . more_parameters
    (231) more_parameters -> . comma data_type id more_parameters
    (232) more_parameters -> .

    comma           shift and go to state 236
    close_par       reduce using rule 232 (more_parameters -> .)
    open_bracket    reduce using rule 232 (more_parameters -> .)
    Generate        reduce using rule 232 (more_parameters -> .)
    id              reduce using rule 232 (more_parameters -> .)
    For             reduce using rule 232 (more_parameters -> .)
    While           reduce using rule 232 (more_parameters -> .)
    If              reduce using rule 232 (more_parameters -> .)
    Switch          reduce using rule 232 (more_parameters -> .)
    Sys_Call        reduce using rule 232 (more_parameters -> .)
    Absorb          reduce using rule 232 (more_parameters -> .)
    Discharge       reduce using rule 232 (more_parameters -> .)
    Return          reduce using rule 232 (more_parameters -> .)
    close_bracket   reduce using rule 232 (more_parameters -> .)
    Sys             reduce using rule 232 (more_parameters -> .)
    $end            reduce using rule 232 (more_parameters -> .)

    more_parameters                shift and go to state 235

state 166

    (120) assignment_statements2 -> array id_struct assignment_exp .

    id              reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    For             reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    While           reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    If              reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Switch          reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Sys_Call        reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Absorb          reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Discharge       reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Link_End        reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Sys             reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    $end            reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Return          reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    close_bracket   reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Break           reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Continue        reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)
    Avoid           reduce using rule 120 (assignment_statements2 -> array id_struct assignment_exp .)


state 167

    (122) assignment_exp -> assignment_operators . num_value
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    For             reduce using rule 68 (num_value -> .)
    While           reduce using rule 68 (num_value -> .)
    If              reduce using rule 68 (num_value -> .)
    Switch          reduce using rule 68 (num_value -> .)
    Absorb          reduce using rule 68 (num_value -> .)
    Discharge       reduce using rule 68 (num_value -> .)
    Link_End        reduce using rule 68 (num_value -> .)
    Sys             reduce using rule 68 (num_value -> .)
    $end            reduce using rule 68 (num_value -> .)
    Return          reduce using rule 68 (num_value -> .)
    close_bracket   reduce using rule 68 (num_value -> .)
    Break           reduce using rule 68 (num_value -> .)
    Continue        reduce using rule 68 (num_value -> .)
    Avoid           reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! Break           [ reduce using rule 74 (id_array -> .) ]
  ! Continue        [ reduce using rule 74 (id_array -> .) ]
  ! Avoid           [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]
  ! Break           [ reduce using rule 87 (literals -> .) ]
  ! Continue        [ reduce using rule 87 (literals -> .) ]
  ! Avoid           [ reduce using rule 87 (literals -> .) ]

    num_value                      shift and go to state 237
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 168

    (123) assignment_exp -> equal . assign_value
    (125) assign_value -> . num_value
    (126) assign_value -> . more_id value
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (127) more_id -> . id_array id_struct equal more_id
    (128) more_id -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for For resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for period resolved using rule 74 (id_array -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for lit_intposi resolved as shift
  ! shift/reduce conflict for lit_intnega resolved as shift
  ! shift/reduce conflict for lit_decposi resolved as shift
  ! shift/reduce conflict for lit_decnega resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for open_par resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    For             reduce using rule 68 (num_value -> .)
    While           reduce using rule 68 (num_value -> .)
    If              reduce using rule 68 (num_value -> .)
    Switch          reduce using rule 68 (num_value -> .)
    Absorb          reduce using rule 68 (num_value -> .)
    Discharge       reduce using rule 68 (num_value -> .)
    Link_End        reduce using rule 68 (num_value -> .)
    Sys             reduce using rule 68 (num_value -> .)
    $end            reduce using rule 68 (num_value -> .)
    Return          reduce using rule 68 (num_value -> .)
    close_bracket   reduce using rule 68 (num_value -> .)
    Break           reduce using rule 68 (num_value -> .)
    Continue        reduce using rule 68 (num_value -> .)
    Avoid           reduce using rule 68 (num_value -> .)
    lit_str         reduce using rule 128 (more_id -> .)
    lit_bool        reduce using rule 128 (more_id -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    equal           reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! id              [ reduce using rule 128 (more_id -> .) ]
  ! lit_intposi     [ reduce using rule 128 (more_id -> .) ]
  ! lit_intnega     [ reduce using rule 128 (more_id -> .) ]
  ! lit_decposi     [ reduce using rule 128 (more_id -> .) ]
  ! lit_decnega     [ reduce using rule 128 (more_id -> .) ]
  ! open_par        [ reduce using rule 128 (more_id -> .) ]
  ! Sys_Call        [ reduce using rule 128 (more_id -> .) ]
  ! plus            [ reduce using rule 128 (more_id -> .) ]
  ! minus           [ reduce using rule 128 (more_id -> .) ]
  ! times           [ reduce using rule 128 (more_id -> .) ]
  ! divide          [ reduce using rule 128 (more_id -> .) ]
  ! divide_divide   [ reduce using rule 128 (more_id -> .) ]
  ! modulo          [ reduce using rule 128 (more_id -> .) ]
  ! times_times     [ reduce using rule 128 (more_id -> .) ]
  ! period          [ reduce using rule 128 (more_id -> .) ]
  ! For             [ reduce using rule 128 (more_id -> .) ]
  ! While           [ reduce using rule 128 (more_id -> .) ]
  ! If              [ reduce using rule 128 (more_id -> .) ]
  ! Switch          [ reduce using rule 128 (more_id -> .) ]
  ! Absorb          [ reduce using rule 128 (more_id -> .) ]
  ! Discharge       [ reduce using rule 128 (more_id -> .) ]
  ! Link_End        [ reduce using rule 128 (more_id -> .) ]
  ! Sys             [ reduce using rule 128 (more_id -> .) ]
  ! $end            [ reduce using rule 128 (more_id -> .) ]
  ! Return          [ reduce using rule 128 (more_id -> .) ]
  ! close_bracket   [ reduce using rule 128 (more_id -> .) ]
  ! Break           [ reduce using rule 128 (more_id -> .) ]
  ! Continue        [ reduce using rule 128 (more_id -> .) ]
  ! Avoid           [ reduce using rule 128 (more_id -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! Break           [ reduce using rule 74 (id_array -> .) ]
  ! Continue        [ reduce using rule 74 (id_array -> .) ]
  ! Avoid           [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]
  ! Break           [ reduce using rule 87 (literals -> .) ]
  ! Continue        [ reduce using rule 87 (literals -> .) ]
  ! Avoid           [ reduce using rule 87 (literals -> .) ]

    assign_value                   shift and go to state 238
    num_value                      shift and go to state 239
    more_id                        shift and go to state 240
    id_array                       shift and go to state 241
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 169

    (129) assignment_operators -> plus_equal .

    id              reduce using rule 129 (assignment_operators -> plus_equal .)
    lit_intposi     reduce using rule 129 (assignment_operators -> plus_equal .)
    lit_intnega     reduce using rule 129 (assignment_operators -> plus_equal .)
    lit_decposi     reduce using rule 129 (assignment_operators -> plus_equal .)
    lit_decnega     reduce using rule 129 (assignment_operators -> plus_equal .)
    open_par        reduce using rule 129 (assignment_operators -> plus_equal .)
    Sys_Call        reduce using rule 129 (assignment_operators -> plus_equal .)
    plus            reduce using rule 129 (assignment_operators -> plus_equal .)
    minus           reduce using rule 129 (assignment_operators -> plus_equal .)
    times           reduce using rule 129 (assignment_operators -> plus_equal .)
    divide          reduce using rule 129 (assignment_operators -> plus_equal .)
    divide_divide   reduce using rule 129 (assignment_operators -> plus_equal .)
    modulo          reduce using rule 129 (assignment_operators -> plus_equal .)
    times_times     reduce using rule 129 (assignment_operators -> plus_equal .)
    period          reduce using rule 129 (assignment_operators -> plus_equal .)
    For             reduce using rule 129 (assignment_operators -> plus_equal .)
    While           reduce using rule 129 (assignment_operators -> plus_equal .)
    If              reduce using rule 129 (assignment_operators -> plus_equal .)
    Switch          reduce using rule 129 (assignment_operators -> plus_equal .)
    Absorb          reduce using rule 129 (assignment_operators -> plus_equal .)
    Discharge       reduce using rule 129 (assignment_operators -> plus_equal .)
    Link_End        reduce using rule 129 (assignment_operators -> plus_equal .)
    Sys             reduce using rule 129 (assignment_operators -> plus_equal .)
    $end            reduce using rule 129 (assignment_operators -> plus_equal .)
    Return          reduce using rule 129 (assignment_operators -> plus_equal .)
    close_bracket   reduce using rule 129 (assignment_operators -> plus_equal .)
    Break           reduce using rule 129 (assignment_operators -> plus_equal .)
    Continue        reduce using rule 129 (assignment_operators -> plus_equal .)
    Avoid           reduce using rule 129 (assignment_operators -> plus_equal .)


state 170

    (130) assignment_operators -> minus_equal .

    id              reduce using rule 130 (assignment_operators -> minus_equal .)
    lit_intposi     reduce using rule 130 (assignment_operators -> minus_equal .)
    lit_intnega     reduce using rule 130 (assignment_operators -> minus_equal .)
    lit_decposi     reduce using rule 130 (assignment_operators -> minus_equal .)
    lit_decnega     reduce using rule 130 (assignment_operators -> minus_equal .)
    open_par        reduce using rule 130 (assignment_operators -> minus_equal .)
    Sys_Call        reduce using rule 130 (assignment_operators -> minus_equal .)
    plus            reduce using rule 130 (assignment_operators -> minus_equal .)
    minus           reduce using rule 130 (assignment_operators -> minus_equal .)
    times           reduce using rule 130 (assignment_operators -> minus_equal .)
    divide          reduce using rule 130 (assignment_operators -> minus_equal .)
    divide_divide   reduce using rule 130 (assignment_operators -> minus_equal .)
    modulo          reduce using rule 130 (assignment_operators -> minus_equal .)
    times_times     reduce using rule 130 (assignment_operators -> minus_equal .)
    period          reduce using rule 130 (assignment_operators -> minus_equal .)
    For             reduce using rule 130 (assignment_operators -> minus_equal .)
    While           reduce using rule 130 (assignment_operators -> minus_equal .)
    If              reduce using rule 130 (assignment_operators -> minus_equal .)
    Switch          reduce using rule 130 (assignment_operators -> minus_equal .)
    Absorb          reduce using rule 130 (assignment_operators -> minus_equal .)
    Discharge       reduce using rule 130 (assignment_operators -> minus_equal .)
    Link_End        reduce using rule 130 (assignment_operators -> minus_equal .)
    Sys             reduce using rule 130 (assignment_operators -> minus_equal .)
    $end            reduce using rule 130 (assignment_operators -> minus_equal .)
    Return          reduce using rule 130 (assignment_operators -> minus_equal .)
    close_bracket   reduce using rule 130 (assignment_operators -> minus_equal .)
    Break           reduce using rule 130 (assignment_operators -> minus_equal .)
    Continue        reduce using rule 130 (assignment_operators -> minus_equal .)
    Avoid           reduce using rule 130 (assignment_operators -> minus_equal .)


state 171

    (131) assignment_operators -> times_equal .

    id              reduce using rule 131 (assignment_operators -> times_equal .)
    lit_intposi     reduce using rule 131 (assignment_operators -> times_equal .)
    lit_intnega     reduce using rule 131 (assignment_operators -> times_equal .)
    lit_decposi     reduce using rule 131 (assignment_operators -> times_equal .)
    lit_decnega     reduce using rule 131 (assignment_operators -> times_equal .)
    open_par        reduce using rule 131 (assignment_operators -> times_equal .)
    Sys_Call        reduce using rule 131 (assignment_operators -> times_equal .)
    plus            reduce using rule 131 (assignment_operators -> times_equal .)
    minus           reduce using rule 131 (assignment_operators -> times_equal .)
    times           reduce using rule 131 (assignment_operators -> times_equal .)
    divide          reduce using rule 131 (assignment_operators -> times_equal .)
    divide_divide   reduce using rule 131 (assignment_operators -> times_equal .)
    modulo          reduce using rule 131 (assignment_operators -> times_equal .)
    times_times     reduce using rule 131 (assignment_operators -> times_equal .)
    period          reduce using rule 131 (assignment_operators -> times_equal .)
    For             reduce using rule 131 (assignment_operators -> times_equal .)
    While           reduce using rule 131 (assignment_operators -> times_equal .)
    If              reduce using rule 131 (assignment_operators -> times_equal .)
    Switch          reduce using rule 131 (assignment_operators -> times_equal .)
    Absorb          reduce using rule 131 (assignment_operators -> times_equal .)
    Discharge       reduce using rule 131 (assignment_operators -> times_equal .)
    Link_End        reduce using rule 131 (assignment_operators -> times_equal .)
    Sys             reduce using rule 131 (assignment_operators -> times_equal .)
    $end            reduce using rule 131 (assignment_operators -> times_equal .)
    Return          reduce using rule 131 (assignment_operators -> times_equal .)
    close_bracket   reduce using rule 131 (assignment_operators -> times_equal .)
    Break           reduce using rule 131 (assignment_operators -> times_equal .)
    Continue        reduce using rule 131 (assignment_operators -> times_equal .)
    Avoid           reduce using rule 131 (assignment_operators -> times_equal .)


state 172

    (132) assignment_operators -> divide_equal .

    id              reduce using rule 132 (assignment_operators -> divide_equal .)
    lit_intposi     reduce using rule 132 (assignment_operators -> divide_equal .)
    lit_intnega     reduce using rule 132 (assignment_operators -> divide_equal .)
    lit_decposi     reduce using rule 132 (assignment_operators -> divide_equal .)
    lit_decnega     reduce using rule 132 (assignment_operators -> divide_equal .)
    open_par        reduce using rule 132 (assignment_operators -> divide_equal .)
    Sys_Call        reduce using rule 132 (assignment_operators -> divide_equal .)
    plus            reduce using rule 132 (assignment_operators -> divide_equal .)
    minus           reduce using rule 132 (assignment_operators -> divide_equal .)
    times           reduce using rule 132 (assignment_operators -> divide_equal .)
    divide          reduce using rule 132 (assignment_operators -> divide_equal .)
    divide_divide   reduce using rule 132 (assignment_operators -> divide_equal .)
    modulo          reduce using rule 132 (assignment_operators -> divide_equal .)
    times_times     reduce using rule 132 (assignment_operators -> divide_equal .)
    period          reduce using rule 132 (assignment_operators -> divide_equal .)
    For             reduce using rule 132 (assignment_operators -> divide_equal .)
    While           reduce using rule 132 (assignment_operators -> divide_equal .)
    If              reduce using rule 132 (assignment_operators -> divide_equal .)
    Switch          reduce using rule 132 (assignment_operators -> divide_equal .)
    Absorb          reduce using rule 132 (assignment_operators -> divide_equal .)
    Discharge       reduce using rule 132 (assignment_operators -> divide_equal .)
    Link_End        reduce using rule 132 (assignment_operators -> divide_equal .)
    Sys             reduce using rule 132 (assignment_operators -> divide_equal .)
    $end            reduce using rule 132 (assignment_operators -> divide_equal .)
    Return          reduce using rule 132 (assignment_operators -> divide_equal .)
    close_bracket   reduce using rule 132 (assignment_operators -> divide_equal .)
    Break           reduce using rule 132 (assignment_operators -> divide_equal .)
    Continue        reduce using rule 132 (assignment_operators -> divide_equal .)
    Avoid           reduce using rule 132 (assignment_operators -> divide_equal .)


state 173

    (133) assignment_operators -> divide_divide_equal .

    id              reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    lit_intposi     reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    lit_intnega     reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    lit_decposi     reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    lit_decnega     reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    open_par        reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Sys_Call        reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    plus            reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    minus           reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    times           reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    divide          reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    divide_divide   reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    modulo          reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    times_times     reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    period          reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    For             reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    While           reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    If              reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Switch          reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Absorb          reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Discharge       reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Link_End        reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Sys             reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    $end            reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Return          reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    close_bracket   reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Break           reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Continue        reduce using rule 133 (assignment_operators -> divide_divide_equal .)
    Avoid           reduce using rule 133 (assignment_operators -> divide_divide_equal .)


state 174

    (134) assignment_operators -> modulo_equal .

    id              reduce using rule 134 (assignment_operators -> modulo_equal .)
    lit_intposi     reduce using rule 134 (assignment_operators -> modulo_equal .)
    lit_intnega     reduce using rule 134 (assignment_operators -> modulo_equal .)
    lit_decposi     reduce using rule 134 (assignment_operators -> modulo_equal .)
    lit_decnega     reduce using rule 134 (assignment_operators -> modulo_equal .)
    open_par        reduce using rule 134 (assignment_operators -> modulo_equal .)
    Sys_Call        reduce using rule 134 (assignment_operators -> modulo_equal .)
    plus            reduce using rule 134 (assignment_operators -> modulo_equal .)
    minus           reduce using rule 134 (assignment_operators -> modulo_equal .)
    times           reduce using rule 134 (assignment_operators -> modulo_equal .)
    divide          reduce using rule 134 (assignment_operators -> modulo_equal .)
    divide_divide   reduce using rule 134 (assignment_operators -> modulo_equal .)
    modulo          reduce using rule 134 (assignment_operators -> modulo_equal .)
    times_times     reduce using rule 134 (assignment_operators -> modulo_equal .)
    period          reduce using rule 134 (assignment_operators -> modulo_equal .)
    For             reduce using rule 134 (assignment_operators -> modulo_equal .)
    While           reduce using rule 134 (assignment_operators -> modulo_equal .)
    If              reduce using rule 134 (assignment_operators -> modulo_equal .)
    Switch          reduce using rule 134 (assignment_operators -> modulo_equal .)
    Absorb          reduce using rule 134 (assignment_operators -> modulo_equal .)
    Discharge       reduce using rule 134 (assignment_operators -> modulo_equal .)
    Link_End        reduce using rule 134 (assignment_operators -> modulo_equal .)
    Sys             reduce using rule 134 (assignment_operators -> modulo_equal .)
    $end            reduce using rule 134 (assignment_operators -> modulo_equal .)
    Return          reduce using rule 134 (assignment_operators -> modulo_equal .)
    close_bracket   reduce using rule 134 (assignment_operators -> modulo_equal .)
    Break           reduce using rule 134 (assignment_operators -> modulo_equal .)
    Continue        reduce using rule 134 (assignment_operators -> modulo_equal .)
    Avoid           reduce using rule 134 (assignment_operators -> modulo_equal .)


state 175

    (135) assignment_operators -> times_times_equal .

    id              reduce using rule 135 (assignment_operators -> times_times_equal .)
    lit_intposi     reduce using rule 135 (assignment_operators -> times_times_equal .)
    lit_intnega     reduce using rule 135 (assignment_operators -> times_times_equal .)
    lit_decposi     reduce using rule 135 (assignment_operators -> times_times_equal .)
    lit_decnega     reduce using rule 135 (assignment_operators -> times_times_equal .)
    open_par        reduce using rule 135 (assignment_operators -> times_times_equal .)
    Sys_Call        reduce using rule 135 (assignment_operators -> times_times_equal .)
    plus            reduce using rule 135 (assignment_operators -> times_times_equal .)
    minus           reduce using rule 135 (assignment_operators -> times_times_equal .)
    times           reduce using rule 135 (assignment_operators -> times_times_equal .)
    divide          reduce using rule 135 (assignment_operators -> times_times_equal .)
    divide_divide   reduce using rule 135 (assignment_operators -> times_times_equal .)
    modulo          reduce using rule 135 (assignment_operators -> times_times_equal .)
    times_times     reduce using rule 135 (assignment_operators -> times_times_equal .)
    period          reduce using rule 135 (assignment_operators -> times_times_equal .)
    For             reduce using rule 135 (assignment_operators -> times_times_equal .)
    While           reduce using rule 135 (assignment_operators -> times_times_equal .)
    If              reduce using rule 135 (assignment_operators -> times_times_equal .)
    Switch          reduce using rule 135 (assignment_operators -> times_times_equal .)
    Absorb          reduce using rule 135 (assignment_operators -> times_times_equal .)
    Discharge       reduce using rule 135 (assignment_operators -> times_times_equal .)
    Link_End        reduce using rule 135 (assignment_operators -> times_times_equal .)
    Sys             reduce using rule 135 (assignment_operators -> times_times_equal .)
    $end            reduce using rule 135 (assignment_operators -> times_times_equal .)
    Return          reduce using rule 135 (assignment_operators -> times_times_equal .)
    close_bracket   reduce using rule 135 (assignment_operators -> times_times_equal .)
    Break           reduce using rule 135 (assignment_operators -> times_times_equal .)
    Continue        reduce using rule 135 (assignment_operators -> times_times_equal .)
    Avoid           reduce using rule 135 (assignment_operators -> times_times_equal .)


state 176

    (101) id_struct -> period id_array .

    equal           reduce using rule 101 (id_struct -> period id_array .)
    plus_equal      reduce using rule 101 (id_struct -> period id_array .)
    minus_equal     reduce using rule 101 (id_struct -> period id_array .)
    times_equal     reduce using rule 101 (id_struct -> period id_array .)
    divide_equal    reduce using rule 101 (id_struct -> period id_array .)
    divide_divide_equal reduce using rule 101 (id_struct -> period id_array .)
    modulo_equal    reduce using rule 101 (id_struct -> period id_array .)
    times_times_equal reduce using rule 101 (id_struct -> period id_array .)
    id              reduce using rule 101 (id_struct -> period id_array .)
    For             reduce using rule 101 (id_struct -> period id_array .)
    While           reduce using rule 101 (id_struct -> period id_array .)
    If              reduce using rule 101 (id_struct -> period id_array .)
    Switch          reduce using rule 101 (id_struct -> period id_array .)
    Sys_Call        reduce using rule 101 (id_struct -> period id_array .)
    Absorb          reduce using rule 101 (id_struct -> period id_array .)
    Discharge       reduce using rule 101 (id_struct -> period id_array .)
    Link_End        reduce using rule 101 (id_struct -> period id_array .)
    Sys             reduce using rule 101 (id_struct -> period id_array .)
    $end            reduce using rule 101 (id_struct -> period id_array .)
    Return          reduce using rule 101 (id_struct -> period id_array .)
    close_bracket   reduce using rule 101 (id_struct -> period id_array .)
    Break           reduce using rule 101 (id_struct -> period id_array .)
    Continue        reduce using rule 101 (id_struct -> period id_array .)
    Avoid           reduce using rule 101 (id_struct -> period id_array .)
    plus            reduce using rule 101 (id_struct -> period id_array .)
    minus           reduce using rule 101 (id_struct -> period id_array .)
    times           reduce using rule 101 (id_struct -> period id_array .)
    divide          reduce using rule 101 (id_struct -> period id_array .)
    divide_divide   reduce using rule 101 (id_struct -> period id_array .)
    modulo          reduce using rule 101 (id_struct -> period id_array .)
    times_times     reduce using rule 101 (id_struct -> period id_array .)
    close_brace     reduce using rule 101 (id_struct -> period id_array .)
    greater_than    reduce using rule 101 (id_struct -> period id_array .)
    less_than       reduce using rule 101 (id_struct -> period id_array .)
    equal_equal     reduce using rule 101 (id_struct -> period id_array .)
    not_equal       reduce using rule 101 (id_struct -> period id_array .)
    great_than_equal reduce using rule 101 (id_struct -> period id_array .)
    less_than_equal reduce using rule 101 (id_struct -> period id_array .)
    comma           reduce using rule 101 (id_struct -> period id_array .)
    Generate        reduce using rule 101 (id_struct -> period id_array .)
    Struct          reduce using rule 101 (id_struct -> period id_array .)
    Link_Start      reduce using rule 101 (id_struct -> period id_array .)
    close_par       reduce using rule 101 (id_struct -> period id_array .)


state 177

    (121) assignment_statements2 -> open_brace lit_intposi close_brace . more_array equal open_brace value1 close_brace
    (136) more_array -> . equal id open_brace lit_intposi close_brace more_array
    (137) more_array -> .

  ! shift/reduce conflict for equal resolved as shift
    equal           shift and go to state 243

  ! equal           [ reduce using rule 137 (more_array -> .) ]

    more_array                     shift and go to state 242

state 178

    (76) array -> open_brace num_value close_brace .

    period          reduce using rule 76 (array -> open_brace num_value close_brace .)
    equal           reduce using rule 76 (array -> open_brace num_value close_brace .)
    plus_equal      reduce using rule 76 (array -> open_brace num_value close_brace .)
    minus_equal     reduce using rule 76 (array -> open_brace num_value close_brace .)
    times_equal     reduce using rule 76 (array -> open_brace num_value close_brace .)
    divide_equal    reduce using rule 76 (array -> open_brace num_value close_brace .)
    divide_divide_equal reduce using rule 76 (array -> open_brace num_value close_brace .)
    modulo_equal    reduce using rule 76 (array -> open_brace num_value close_brace .)
    times_times_equal reduce using rule 76 (array -> open_brace num_value close_brace .)
    id              reduce using rule 76 (array -> open_brace num_value close_brace .)
    For             reduce using rule 76 (array -> open_brace num_value close_brace .)
    While           reduce using rule 76 (array -> open_brace num_value close_brace .)
    If              reduce using rule 76 (array -> open_brace num_value close_brace .)
    Switch          reduce using rule 76 (array -> open_brace num_value close_brace .)
    Sys_Call        reduce using rule 76 (array -> open_brace num_value close_brace .)
    Absorb          reduce using rule 76 (array -> open_brace num_value close_brace .)
    Discharge       reduce using rule 76 (array -> open_brace num_value close_brace .)
    Link_End        reduce using rule 76 (array -> open_brace num_value close_brace .)
    Sys             reduce using rule 76 (array -> open_brace num_value close_brace .)
    $end            reduce using rule 76 (array -> open_brace num_value close_brace .)
    Return          reduce using rule 76 (array -> open_brace num_value close_brace .)
    close_bracket   reduce using rule 76 (array -> open_brace num_value close_brace .)
    Break           reduce using rule 76 (array -> open_brace num_value close_brace .)
    Continue        reduce using rule 76 (array -> open_brace num_value close_brace .)
    Avoid           reduce using rule 76 (array -> open_brace num_value close_brace .)
    plus            reduce using rule 76 (array -> open_brace num_value close_brace .)
    minus           reduce using rule 76 (array -> open_brace num_value close_brace .)
    times           reduce using rule 76 (array -> open_brace num_value close_brace .)
    divide          reduce using rule 76 (array -> open_brace num_value close_brace .)
    divide_divide   reduce using rule 76 (array -> open_brace num_value close_brace .)
    modulo          reduce using rule 76 (array -> open_brace num_value close_brace .)
    times_times     reduce using rule 76 (array -> open_brace num_value close_brace .)
    comma           reduce using rule 76 (array -> open_brace num_value close_brace .)
    Struct          reduce using rule 76 (array -> open_brace num_value close_brace .)
    Generate        reduce using rule 76 (array -> open_brace num_value close_brace .)
    Link_Start      reduce using rule 76 (array -> open_brace num_value close_brace .)
    close_brace     reduce using rule 76 (array -> open_brace num_value close_brace .)
    greater_than    reduce using rule 76 (array -> open_brace num_value close_brace .)
    less_than       reduce using rule 76 (array -> open_brace num_value close_brace .)
    equal_equal     reduce using rule 76 (array -> open_brace num_value close_brace .)
    not_equal       reduce using rule 76 (array -> open_brace num_value close_brace .)
    great_than_equal reduce using rule 76 (array -> open_brace num_value close_brace .)
    less_than_equal reduce using rule 76 (array -> open_brace num_value close_brace .)
    close_par       reduce using rule 76 (array -> open_brace num_value close_brace .)


state 179

    (138) for_statements -> For id In id . open_brace close_brace colon open_bracket inside_statements close_bracket

    open_brace      shift and go to state 244


state 180

    (92) arithmetic_expression -> open_par . arithmetic_expression close_par
    (163) logical_expression -> open_par . logical_operand close_par logical_operators open_par logical_operand close_par
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (164) logical_operand -> . Not open_par logical_operand close_par
    (165) logical_operand -> . relational_expression
    (166) logical_operand -> . logical_expression
    (167) logical_operand -> . lit_bool
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .

  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    open_par        shift and go to state 180
    Not             shift and go to state 182
    lit_bool        shift and go to state 185
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    arithmetic_expression          shift and go to state 141
    logical_operand                shift and go to state 181
    num_value                      shift and go to state 186
    relational_expression          shift and go to state 183
    logical_expression             shift and go to state 184
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    func_call                      shift and go to state 81
    value                          shift and go to state 125

state 181

    (163) logical_expression -> open_par logical_operand . close_par logical_operators open_par logical_operand close_par

    close_par       shift and go to state 245


state 182

    (164) logical_operand -> Not . open_par logical_operand close_par

    open_par        shift and go to state 246


state 183

    (165) logical_operand -> relational_expression .

    close_par       reduce using rule 165 (logical_operand -> relational_expression .)


state 184

    (166) logical_operand -> logical_expression .

    close_par       reduce using rule 166 (logical_operand -> logical_expression .)


state 185

    (167) logical_operand -> lit_bool .
    (59) value -> lit_bool .

    close_par       reduce using rule 167 (logical_operand -> lit_bool .)
    greater_than    reduce using rule 59 (value -> lit_bool .)
    less_than       reduce using rule 59 (value -> lit_bool .)
    equal_equal     reduce using rule 59 (value -> lit_bool .)
    not_equal       reduce using rule 59 (value -> lit_bool .)
    great_than_equal reduce using rule 59 (value -> lit_bool .)
    less_than_equal reduce using rule 59 (value -> lit_bool .)


state 186

    (93) arithmetic_expression -> num_value . arithmetic_operators num_value
    (57) value -> num_value .
    (94) arithmetic_operators -> . plus
    (95) arithmetic_operators -> . minus
    (96) arithmetic_operators -> . times
    (97) arithmetic_operators -> . divide
    (98) arithmetic_operators -> . divide_divide
    (99) arithmetic_operators -> . modulo
    (100) arithmetic_operators -> . times_times

    greater_than    reduce using rule 57 (value -> num_value .)
    less_than       reduce using rule 57 (value -> num_value .)
    equal_equal     reduce using rule 57 (value -> num_value .)
    not_equal       reduce using rule 57 (value -> num_value .)
    great_than_equal reduce using rule 57 (value -> num_value .)
    less_than_equal reduce using rule 57 (value -> num_value .)
    plus            shift and go to state 133
    minus           shift and go to state 134
    times           shift and go to state 135
    divide          shift and go to state 136
    divide_divide   shift and go to state 137
    modulo          shift and go to state 138
    times_times     shift and go to state 139

    arithmetic_operators           shift and go to state 132

state 187

    (140) while_statements -> While open_par condition close_par . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 247


state 188

    (151) condition -> Not open_par . condition_not close_par
    (153) condition_not -> . relational_expression
    (154) condition_not -> . logical_expression
    (155) condition_not -> . lit_bool
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    lit_bool        shift and go to state 251
    open_par        shift and go to state 119
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    condition_not                  shift and go to state 248
    relational_expression          shift and go to state 249
    logical_expression             shift and go to state 250
    value                          shift and go to state 125
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 189

    (156) relational_expression -> value relational_operators . value
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for close_par resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 60 (value -> .)
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    close_par       reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! close_par       [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! close_par       [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! close_par       [ reduce using rule 87 (literals -> .) ]

    value                          shift and go to state 252
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 190

    (157) relational_operators -> greater_than .

    lit_str         reduce using rule 157 (relational_operators -> greater_than .)
    lit_bool        reduce using rule 157 (relational_operators -> greater_than .)
    id              reduce using rule 157 (relational_operators -> greater_than .)
    lit_intposi     reduce using rule 157 (relational_operators -> greater_than .)
    lit_intnega     reduce using rule 157 (relational_operators -> greater_than .)
    lit_decposi     reduce using rule 157 (relational_operators -> greater_than .)
    lit_decnega     reduce using rule 157 (relational_operators -> greater_than .)
    open_par        reduce using rule 157 (relational_operators -> greater_than .)
    Sys_Call        reduce using rule 157 (relational_operators -> greater_than .)
    plus            reduce using rule 157 (relational_operators -> greater_than .)
    minus           reduce using rule 157 (relational_operators -> greater_than .)
    times           reduce using rule 157 (relational_operators -> greater_than .)
    divide          reduce using rule 157 (relational_operators -> greater_than .)
    divide_divide   reduce using rule 157 (relational_operators -> greater_than .)
    modulo          reduce using rule 157 (relational_operators -> greater_than .)
    times_times     reduce using rule 157 (relational_operators -> greater_than .)
    period          reduce using rule 157 (relational_operators -> greater_than .)
    close_par       reduce using rule 157 (relational_operators -> greater_than .)


state 191

    (158) relational_operators -> less_than .

    lit_str         reduce using rule 158 (relational_operators -> less_than .)
    lit_bool        reduce using rule 158 (relational_operators -> less_than .)
    id              reduce using rule 158 (relational_operators -> less_than .)
    lit_intposi     reduce using rule 158 (relational_operators -> less_than .)
    lit_intnega     reduce using rule 158 (relational_operators -> less_than .)
    lit_decposi     reduce using rule 158 (relational_operators -> less_than .)
    lit_decnega     reduce using rule 158 (relational_operators -> less_than .)
    open_par        reduce using rule 158 (relational_operators -> less_than .)
    Sys_Call        reduce using rule 158 (relational_operators -> less_than .)
    plus            reduce using rule 158 (relational_operators -> less_than .)
    minus           reduce using rule 158 (relational_operators -> less_than .)
    times           reduce using rule 158 (relational_operators -> less_than .)
    divide          reduce using rule 158 (relational_operators -> less_than .)
    divide_divide   reduce using rule 158 (relational_operators -> less_than .)
    modulo          reduce using rule 158 (relational_operators -> less_than .)
    times_times     reduce using rule 158 (relational_operators -> less_than .)
    period          reduce using rule 158 (relational_operators -> less_than .)
    close_par       reduce using rule 158 (relational_operators -> less_than .)


state 192

    (159) relational_operators -> equal_equal .

    lit_str         reduce using rule 159 (relational_operators -> equal_equal .)
    lit_bool        reduce using rule 159 (relational_operators -> equal_equal .)
    id              reduce using rule 159 (relational_operators -> equal_equal .)
    lit_intposi     reduce using rule 159 (relational_operators -> equal_equal .)
    lit_intnega     reduce using rule 159 (relational_operators -> equal_equal .)
    lit_decposi     reduce using rule 159 (relational_operators -> equal_equal .)
    lit_decnega     reduce using rule 159 (relational_operators -> equal_equal .)
    open_par        reduce using rule 159 (relational_operators -> equal_equal .)
    Sys_Call        reduce using rule 159 (relational_operators -> equal_equal .)
    plus            reduce using rule 159 (relational_operators -> equal_equal .)
    minus           reduce using rule 159 (relational_operators -> equal_equal .)
    times           reduce using rule 159 (relational_operators -> equal_equal .)
    divide          reduce using rule 159 (relational_operators -> equal_equal .)
    divide_divide   reduce using rule 159 (relational_operators -> equal_equal .)
    modulo          reduce using rule 159 (relational_operators -> equal_equal .)
    times_times     reduce using rule 159 (relational_operators -> equal_equal .)
    period          reduce using rule 159 (relational_operators -> equal_equal .)
    close_par       reduce using rule 159 (relational_operators -> equal_equal .)


state 193

    (160) relational_operators -> not_equal .

    lit_str         reduce using rule 160 (relational_operators -> not_equal .)
    lit_bool        reduce using rule 160 (relational_operators -> not_equal .)
    id              reduce using rule 160 (relational_operators -> not_equal .)
    lit_intposi     reduce using rule 160 (relational_operators -> not_equal .)
    lit_intnega     reduce using rule 160 (relational_operators -> not_equal .)
    lit_decposi     reduce using rule 160 (relational_operators -> not_equal .)
    lit_decnega     reduce using rule 160 (relational_operators -> not_equal .)
    open_par        reduce using rule 160 (relational_operators -> not_equal .)
    Sys_Call        reduce using rule 160 (relational_operators -> not_equal .)
    plus            reduce using rule 160 (relational_operators -> not_equal .)
    minus           reduce using rule 160 (relational_operators -> not_equal .)
    times           reduce using rule 160 (relational_operators -> not_equal .)
    divide          reduce using rule 160 (relational_operators -> not_equal .)
    divide_divide   reduce using rule 160 (relational_operators -> not_equal .)
    modulo          reduce using rule 160 (relational_operators -> not_equal .)
    times_times     reduce using rule 160 (relational_operators -> not_equal .)
    period          reduce using rule 160 (relational_operators -> not_equal .)
    close_par       reduce using rule 160 (relational_operators -> not_equal .)


state 194

    (161) relational_operators -> great_than_equal .

    lit_str         reduce using rule 161 (relational_operators -> great_than_equal .)
    lit_bool        reduce using rule 161 (relational_operators -> great_than_equal .)
    id              reduce using rule 161 (relational_operators -> great_than_equal .)
    lit_intposi     reduce using rule 161 (relational_operators -> great_than_equal .)
    lit_intnega     reduce using rule 161 (relational_operators -> great_than_equal .)
    lit_decposi     reduce using rule 161 (relational_operators -> great_than_equal .)
    lit_decnega     reduce using rule 161 (relational_operators -> great_than_equal .)
    open_par        reduce using rule 161 (relational_operators -> great_than_equal .)
    Sys_Call        reduce using rule 161 (relational_operators -> great_than_equal .)
    plus            reduce using rule 161 (relational_operators -> great_than_equal .)
    minus           reduce using rule 161 (relational_operators -> great_than_equal .)
    times           reduce using rule 161 (relational_operators -> great_than_equal .)
    divide          reduce using rule 161 (relational_operators -> great_than_equal .)
    divide_divide   reduce using rule 161 (relational_operators -> great_than_equal .)
    modulo          reduce using rule 161 (relational_operators -> great_than_equal .)
    times_times     reduce using rule 161 (relational_operators -> great_than_equal .)
    period          reduce using rule 161 (relational_operators -> great_than_equal .)
    close_par       reduce using rule 161 (relational_operators -> great_than_equal .)


state 195

    (162) relational_operators -> less_than_equal .

    lit_str         reduce using rule 162 (relational_operators -> less_than_equal .)
    lit_bool        reduce using rule 162 (relational_operators -> less_than_equal .)
    id              reduce using rule 162 (relational_operators -> less_than_equal .)
    lit_intposi     reduce using rule 162 (relational_operators -> less_than_equal .)
    lit_intnega     reduce using rule 162 (relational_operators -> less_than_equal .)
    lit_decposi     reduce using rule 162 (relational_operators -> less_than_equal .)
    lit_decnega     reduce using rule 162 (relational_operators -> less_than_equal .)
    open_par        reduce using rule 162 (relational_operators -> less_than_equal .)
    Sys_Call        reduce using rule 162 (relational_operators -> less_than_equal .)
    plus            reduce using rule 162 (relational_operators -> less_than_equal .)
    minus           reduce using rule 162 (relational_operators -> less_than_equal .)
    times           reduce using rule 162 (relational_operators -> less_than_equal .)
    divide          reduce using rule 162 (relational_operators -> less_than_equal .)
    divide_divide   reduce using rule 162 (relational_operators -> less_than_equal .)
    modulo          reduce using rule 162 (relational_operators -> less_than_equal .)
    times_times     reduce using rule 162 (relational_operators -> less_than_equal .)
    period          reduce using rule 162 (relational_operators -> less_than_equal .)
    close_par       reduce using rule 162 (relational_operators -> less_than_equal .)


state 196

    (172) if_statement -> If open_par condition close_par . colon open_bracket inside_statements close_bracket condition_else

    colon           shift and go to state 253


state 197

    (180) switch_statements -> Switch id colon open_bracket . execute Default colon inside_statements close_bracket End_Switch
    (181) execute -> . Execute switch_lit colon statements Break execute1

    Execute         shift and go to state 255

    execute                        shift and go to state 254

state 198

    (192) function_param -> id . open_brace close_brace more_param
    (75) id_array_opt -> id . array
    (73) id_array -> id . array
    (76) array -> . open_brace num_value close_brace
    (77) array -> . open_brace close_brace
    (78) array -> .

    open_brace      shift and go to state 256
    period          reduce using rule 78 (array -> .)
    comma           reduce using rule 78 (array -> .)
    close_par       reduce using rule 78 (array -> .)
    plus            reduce using rule 78 (array -> .)
    minus           reduce using rule 78 (array -> .)
    times           reduce using rule 78 (array -> .)
    divide          reduce using rule 78 (array -> .)
    divide_divide   reduce using rule 78 (array -> .)
    modulo          reduce using rule 78 (array -> .)
    times_times     reduce using rule 78 (array -> .)

    array                          shift and go to state 257

state 199

    (191) func_call -> Sys_Call id open_par function_param . close_par

    close_par       shift and go to state 258


state 200

    (193) function_param -> value1_opt . more_param
    (195) more_param -> . comma function_param
    (196) more_param -> .

    comma           shift and go to state 260
    close_par       reduce using rule 196 (more_param -> .)

    more_param                     shift and go to state 259

state 201

    (106) value1_opt -> value_opt . value2_opt
    (107) value2_opt -> . comma value1_opt
    (108) value2_opt -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 262
    close_par       reduce using rule 108 (value2_opt -> .)

  ! comma           [ reduce using rule 108 (value2_opt -> .) ]

    value2_opt                     shift and go to state 261

state 202

    (61) value_opt -> num_value_opt .

    comma           reduce using rule 61 (value_opt -> num_value_opt .)
    close_par       reduce using rule 61 (value_opt -> num_value_opt .)


state 203

    (62) value_opt -> lit_str .

    comma           reduce using rule 62 (value_opt -> lit_str .)
    close_par       reduce using rule 62 (value_opt -> lit_str .)


state 204

    (63) value_opt -> lit_bool .

    comma           reduce using rule 63 (value_opt -> lit_bool .)
    close_par       reduce using rule 63 (value_opt -> lit_bool .)


state 205

    (69) num_value_opt -> id_array_opt . id_struct
    (101) id_struct -> . period id_array
    (102) id_struct -> .

    period          shift and go to state 114
    comma           reduce using rule 102 (id_struct -> .)
    close_par       reduce using rule 102 (id_struct -> .)

    id_struct                      shift and go to state 263

state 206

    (70) num_value_opt -> literals_opt .

    comma           reduce using rule 70 (num_value_opt -> literals_opt .)
    close_par       reduce using rule 70 (num_value_opt -> literals_opt .)


state 207

    (71) num_value_opt -> arithmetic_expression .
    (66) num_value -> arithmetic_expression .

    comma           reduce using rule 71 (num_value_opt -> arithmetic_expression .)
    close_par       reduce using rule 71 (num_value_opt -> arithmetic_expression .)
    plus            reduce using rule 66 (num_value -> arithmetic_expression .)
    minus           reduce using rule 66 (num_value -> arithmetic_expression .)
    times           reduce using rule 66 (num_value -> arithmetic_expression .)
    divide          reduce using rule 66 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 66 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 66 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 66 (num_value -> arithmetic_expression .)


state 208

    (72) num_value_opt -> func_call .
    (67) num_value -> func_call .

    comma           reduce using rule 72 (num_value_opt -> func_call .)
    close_par       reduce using rule 72 (num_value_opt -> func_call .)
    plus            reduce using rule 67 (num_value -> func_call .)
    minus           reduce using rule 67 (num_value -> func_call .)
    times           reduce using rule 67 (num_value -> func_call .)
    divide          reduce using rule 67 (num_value -> func_call .)
    divide_divide   reduce using rule 67 (num_value -> func_call .)
    modulo          reduce using rule 67 (num_value -> func_call .)
    times_times     reduce using rule 67 (num_value -> func_call .)


state 209

    (88) literals_opt -> lit_intposi .
    (83) literals -> lit_intposi .

    comma           reduce using rule 88 (literals_opt -> lit_intposi .)
    close_par       reduce using rule 88 (literals_opt -> lit_intposi .)
    plus            reduce using rule 83 (literals -> lit_intposi .)
    minus           reduce using rule 83 (literals -> lit_intposi .)
    times           reduce using rule 83 (literals -> lit_intposi .)
    divide          reduce using rule 83 (literals -> lit_intposi .)
    divide_divide   reduce using rule 83 (literals -> lit_intposi .)
    modulo          reduce using rule 83 (literals -> lit_intposi .)
    times_times     reduce using rule 83 (literals -> lit_intposi .)


state 210

    (89) literals_opt -> lit_intnega .
    (84) literals -> lit_intnega .

    comma           reduce using rule 89 (literals_opt -> lit_intnega .)
    close_par       reduce using rule 89 (literals_opt -> lit_intnega .)
    plus            reduce using rule 84 (literals -> lit_intnega .)
    minus           reduce using rule 84 (literals -> lit_intnega .)
    times           reduce using rule 84 (literals -> lit_intnega .)
    divide          reduce using rule 84 (literals -> lit_intnega .)
    divide_divide   reduce using rule 84 (literals -> lit_intnega .)
    modulo          reduce using rule 84 (literals -> lit_intnega .)
    times_times     reduce using rule 84 (literals -> lit_intnega .)


state 211

    (90) literals_opt -> lit_decposi .
    (85) literals -> lit_decposi .

    comma           reduce using rule 90 (literals_opt -> lit_decposi .)
    close_par       reduce using rule 90 (literals_opt -> lit_decposi .)
    plus            reduce using rule 85 (literals -> lit_decposi .)
    minus           reduce using rule 85 (literals -> lit_decposi .)
    times           reduce using rule 85 (literals -> lit_decposi .)
    divide          reduce using rule 85 (literals -> lit_decposi .)
    divide_divide   reduce using rule 85 (literals -> lit_decposi .)
    modulo          reduce using rule 85 (literals -> lit_decposi .)
    times_times     reduce using rule 85 (literals -> lit_decposi .)


state 212

    (91) literals_opt -> lit_decnega .
    (86) literals -> lit_decnega .

    comma           reduce using rule 91 (literals_opt -> lit_decnega .)
    close_par       reduce using rule 91 (literals_opt -> lit_decnega .)
    plus            reduce using rule 86 (literals -> lit_decnega .)
    minus           reduce using rule 86 (literals -> lit_decnega .)
    times           reduce using rule 86 (literals -> lit_decnega .)
    divide          reduce using rule 86 (literals -> lit_decnega .)
    divide_divide   reduce using rule 86 (literals -> lit_decnega .)
    modulo          reduce using rule 86 (literals -> lit_decnega .)
    times_times     reduce using rule 86 (literals -> lit_decnega .)


state 213

    (93) arithmetic_expression -> num_value arithmetic_operators num_value .
    (93) arithmetic_expression -> num_value . arithmetic_operators num_value
    (94) arithmetic_operators -> . plus
    (95) arithmetic_operators -> . minus
    (96) arithmetic_operators -> . times
    (97) arithmetic_operators -> . divide
    (98) arithmetic_operators -> . divide_divide
    (99) arithmetic_operators -> . modulo
    (100) arithmetic_operators -> . times_times

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for times resolved as shift
  ! shift/reduce conflict for divide resolved as shift
  ! shift/reduce conflict for divide_divide resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for times_times resolved as shift
    id              reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    For             reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    While           reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    If              reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Switch          reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Sys_Call        reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Absorb          reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Discharge       reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Link_End        reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Sys             reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    $end            reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Return          reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_bracket   reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Break           reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Continue        reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Avoid           reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_brace     reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    greater_than    reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    less_than       reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    equal_equal     reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    not_equal       reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    great_than_equal reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    less_than_equal reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_par       reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    comma           reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Generate        reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Struct          reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Link_Start      reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    plus            shift and go to state 133
    minus           shift and go to state 134
    times           shift and go to state 135
    divide          shift and go to state 136
    divide_divide   shift and go to state 137
    modulo          shift and go to state 138
    times_times     shift and go to state 139

  ! plus            [ reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! minus           [ reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! times           [ reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! divide          [ reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! divide_divide   [ reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! modulo          [ reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! times_times     [ reduce using rule 93 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]

    arithmetic_operators           shift and go to state 132

state 214

    (92) arithmetic_expression -> open_par arithmetic_expression close_par .

    plus            reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    minus           reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    times           reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    divide          reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    divide_divide   reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    modulo          reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    times_times     reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    id              reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    For             reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    While           reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    If              reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Switch          reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Sys_Call        reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Absorb          reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Discharge       reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Link_End        reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Sys             reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    $end            reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Return          reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_bracket   reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Break           reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Continue        reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Avoid           reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_brace     reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    greater_than    reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    less_than       reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    equal_equal     reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    not_equal       reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    great_than_equal reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    less_than_equal reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_par       reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    comma           reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Generate        reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Struct          reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Link_Start      reduce using rule 92 (arithmetic_expression -> open_par arithmetic_expression close_par .)


state 215

    (8) struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    id              reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    For             reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    While           reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    If              reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)


state 216

    (81) id_array2 -> comma id_array1 .

    Struct          reduce using rule 81 (id_array2 -> comma id_array1 .)
    Generate        reduce using rule 81 (id_array2 -> comma id_array1 .)
    Link_Start      reduce using rule 81 (id_array2 -> comma id_array1 .)
    id              reduce using rule 81 (id_array2 -> comma id_array1 .)
    For             reduce using rule 81 (id_array2 -> comma id_array1 .)
    While           reduce using rule 81 (id_array2 -> comma id_array1 .)
    If              reduce using rule 81 (id_array2 -> comma id_array1 .)
    Switch          reduce using rule 81 (id_array2 -> comma id_array1 .)
    Sys_Call        reduce using rule 81 (id_array2 -> comma id_array1 .)
    Absorb          reduce using rule 81 (id_array2 -> comma id_array1 .)
    Discharge       reduce using rule 81 (id_array2 -> comma id_array1 .)
    Link_End        reduce using rule 81 (id_array2 -> comma id_array1 .)
    Sys             reduce using rule 81 (id_array2 -> comma id_array1 .)
    $end            reduce using rule 81 (id_array2 -> comma id_array1 .)


state 217

    (27) id_array_dec2 -> open_brace lit_intposi close_brace . array_dec1
    (30) array_dec1 -> . comma id open_brace lit_intposi close_brace array_dec1
    (31) array_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 265
    Integer         reduce using rule 31 (array_dec1 -> .)
    Decimal         reduce using rule 31 (array_dec1 -> .)
    String          reduce using rule 31 (array_dec1 -> .)
    Boolean         reduce using rule 31 (array_dec1 -> .)
    id              reduce using rule 31 (array_dec1 -> .)
    close_bracket   reduce using rule 31 (array_dec1 -> .)
    Struct          reduce using rule 31 (array_dec1 -> .)
    Generate        reduce using rule 31 (array_dec1 -> .)
    Link_Start      reduce using rule 31 (array_dec1 -> .)
    For             reduce using rule 31 (array_dec1 -> .)
    While           reduce using rule 31 (array_dec1 -> .)
    If              reduce using rule 31 (array_dec1 -> .)
    Switch          reduce using rule 31 (array_dec1 -> .)
    Sys_Call        reduce using rule 31 (array_dec1 -> .)
    Absorb          reduce using rule 31 (array_dec1 -> .)
    Discharge       reduce using rule 31 (array_dec1 -> .)
    Link_End        reduce using rule 31 (array_dec1 -> .)
    Sys             reduce using rule 31 (array_dec1 -> .)
    $end            reduce using rule 31 (array_dec1 -> .)

  ! comma           [ reduce using rule 31 (array_dec1 -> .) ]

    array_dec1                     shift and go to state 264

state 218

    (28) id_dec1 -> comma id id_dec1 .

    Integer         reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Decimal         reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    String          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Boolean         reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    id              reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    close_bracket   reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    comma           reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Struct          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Generate        reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Link_Start      reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    For             reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    While           reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    If              reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Switch          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Sys_Call        reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Absorb          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Discharge       reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Link_End        reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Sys             reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    $end            reduce using rule 28 (id_dec1 -> comma id id_dec1 .)


state 219

    (39) id_array_const2 -> open_brace lit_intposi . close_brace equal open_brace value1 close_brace array_const1

    close_brace     shift and go to state 266


state 220

    (40) id_array_const2 -> equal value . id_const1
    (42) id_const1 -> . comma id equal value id_const1
    (43) id_const1 -> .

    comma           shift and go to state 268
    Generate        reduce using rule 43 (id_const1 -> .)
    Struct          reduce using rule 43 (id_const1 -> .)
    Link_Start      reduce using rule 43 (id_const1 -> .)
    id              reduce using rule 43 (id_const1 -> .)
    For             reduce using rule 43 (id_const1 -> .)
    While           reduce using rule 43 (id_const1 -> .)
    If              reduce using rule 43 (id_const1 -> .)
    Switch          reduce using rule 43 (id_const1 -> .)
    Sys_Call        reduce using rule 43 (id_const1 -> .)
    Absorb          reduce using rule 43 (id_const1 -> .)
    Discharge       reduce using rule 43 (id_const1 -> .)
    Link_End        reduce using rule 43 (id_const1 -> .)
    Sys             reduce using rule 43 (id_const1 -> .)
    $end            reduce using rule 43 (id_const1 -> .)
    Return          reduce using rule 43 (id_const1 -> .)
    close_bracket   reduce using rule 43 (id_const1 -> .)

    id_const1                      shift and go to state 267

state 221

    (51) id_var1 -> comma id . var_init id_var1
    (49) var_init -> . equal value id_var1
    (50) var_init -> .

    equal           shift and go to state 105
    comma           reduce using rule 50 (var_init -> .)
    Generate        reduce using rule 50 (var_init -> .)
    Struct          reduce using rule 50 (var_init -> .)
    Link_Start      reduce using rule 50 (var_init -> .)
    id              reduce using rule 50 (var_init -> .)
    For             reduce using rule 50 (var_init -> .)
    While           reduce using rule 50 (var_init -> .)
    If              reduce using rule 50 (var_init -> .)
    Switch          reduce using rule 50 (var_init -> .)
    Sys_Call        reduce using rule 50 (var_init -> .)
    Absorb          reduce using rule 50 (var_init -> .)
    Discharge       reduce using rule 50 (var_init -> .)
    Link_End        reduce using rule 50 (var_init -> .)
    Sys             reduce using rule 50 (var_init -> .)
    $end            reduce using rule 50 (var_init -> .)
    Return          reduce using rule 50 (var_init -> .)
    close_bracket   reduce using rule 50 (var_init -> .)

    var_init                       shift and go to state 269

state 222

    (48) id_array_var2 -> open_brace lit_intposi close_brace . array_init array_var1
    (53) array_init -> . equal open_brace value1 close_brace array_var1
    (54) array_init -> .

    equal           shift and go to state 271
    comma           reduce using rule 54 (array_init -> .)
    Generate        reduce using rule 54 (array_init -> .)
    Struct          reduce using rule 54 (array_init -> .)
    Link_Start      reduce using rule 54 (array_init -> .)
    id              reduce using rule 54 (array_init -> .)
    For             reduce using rule 54 (array_init -> .)
    While           reduce using rule 54 (array_init -> .)
    If              reduce using rule 54 (array_init -> .)
    Switch          reduce using rule 54 (array_init -> .)
    Sys_Call        reduce using rule 54 (array_init -> .)
    Absorb          reduce using rule 54 (array_init -> .)
    Discharge       reduce using rule 54 (array_init -> .)
    Link_End        reduce using rule 54 (array_init -> .)
    Sys             reduce using rule 54 (array_init -> .)
    $end            reduce using rule 54 (array_init -> .)
    Return          reduce using rule 54 (array_init -> .)
    close_bracket   reduce using rule 54 (array_init -> .)

    array_init                     shift and go to state 270

state 223

    (49) var_init -> equal value id_var1 .

    comma           reduce using rule 49 (var_init -> equal value id_var1 .)
    Generate        reduce using rule 49 (var_init -> equal value id_var1 .)
    Struct          reduce using rule 49 (var_init -> equal value id_var1 .)
    Link_Start      reduce using rule 49 (var_init -> equal value id_var1 .)
    id              reduce using rule 49 (var_init -> equal value id_var1 .)
    For             reduce using rule 49 (var_init -> equal value id_var1 .)
    While           reduce using rule 49 (var_init -> equal value id_var1 .)
    If              reduce using rule 49 (var_init -> equal value id_var1 .)
    Switch          reduce using rule 49 (var_init -> equal value id_var1 .)
    Sys_Call        reduce using rule 49 (var_init -> equal value id_var1 .)
    Absorb          reduce using rule 49 (var_init -> equal value id_var1 .)
    Discharge       reduce using rule 49 (var_init -> equal value id_var1 .)
    Link_End        reduce using rule 49 (var_init -> equal value id_var1 .)
    Sys             reduce using rule 49 (var_init -> equal value id_var1 .)
    $end            reduce using rule 49 (var_init -> equal value id_var1 .)
    Return          reduce using rule 49 (var_init -> equal value id_var1 .)
    close_bracket   reduce using rule 49 (var_init -> equal value id_var1 .)


state 224

    (197) functions -> Sys id open_par parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (203) functions -> Sys id open_par parameters . declare_statements statements return_statement functions
    (213) functions -> Sys id open_par parameters . close_par declare_statements statements return_statement functions
    (214) functions -> Sys id open_par parameters . open_bracket declare_statements statements return_statement functions
    (215) functions -> Sys id open_par parameters . declare_statements statements return_statement close_bracket functions
    (223) functions -> Sys id open_par parameters . close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> Sys id open_par parameters . close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> Sys id open_par parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 272
    open_bracket    shift and go to state 273
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 274

state 225

    (198) functions -> Sys id parameters declare_statements . statements return_statement functions
    (206) functions -> Sys id parameters declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 275
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 226

    (204) functions -> Sys id parameters close_par . declare_statements statements return_statement functions
    (216) functions -> Sys id parameters close_par . open_bracket declare_statements statements return_statement functions
    (217) functions -> Sys id parameters close_par . declare_statements statements return_statement close_bracket functions
    (226) functions -> Sys id parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 277
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 276

state 227

    (205) functions -> Sys id parameters open_bracket . declare_statements statements return_statement functions
    (218) functions -> Sys id parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 278

state 228

    (199) functions -> Sys open_par parameters declare_statements . statements return_statement functions
    (209) functions -> Sys open_par parameters declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 279
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 229

    (207) functions -> Sys open_par parameters close_par . declare_statements statements return_statement functions
    (219) functions -> Sys open_par parameters close_par . open_bracket declare_statements statements return_statement functions
    (220) functions -> Sys open_par parameters close_par . declare_statements statements return_statement close_bracket functions
    (227) functions -> Sys open_par parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 281
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 280

state 230

    (208) functions -> Sys open_par parameters open_bracket . declare_statements statements return_statement functions
    (221) functions -> Sys open_par parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 282

state 231

    (200) functions -> Sys parameters close_par declare_statements . statements return_statement functions
    (211) functions -> Sys parameters close_par declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 283
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 232

    (210) functions -> Sys parameters close_par open_bracket . declare_statements statements return_statement functions
    (222) functions -> Sys parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 284

state 233

    (202) functions -> Sys parameters declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 285

state 234

    (201) functions -> Sys parameters open_bracket declare_statements . statements return_statement functions
    (212) functions -> Sys parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 287
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 235

    (229) parameters -> data_type id more_parameters .

    close_par       reduce using rule 229 (parameters -> data_type id more_parameters .)
    open_bracket    reduce using rule 229 (parameters -> data_type id more_parameters .)
    Generate        reduce using rule 229 (parameters -> data_type id more_parameters .)
    id              reduce using rule 229 (parameters -> data_type id more_parameters .)
    For             reduce using rule 229 (parameters -> data_type id more_parameters .)
    While           reduce using rule 229 (parameters -> data_type id more_parameters .)
    If              reduce using rule 229 (parameters -> data_type id more_parameters .)
    Switch          reduce using rule 229 (parameters -> data_type id more_parameters .)
    Sys_Call        reduce using rule 229 (parameters -> data_type id more_parameters .)
    Absorb          reduce using rule 229 (parameters -> data_type id more_parameters .)
    Discharge       reduce using rule 229 (parameters -> data_type id more_parameters .)
    Return          reduce using rule 229 (parameters -> data_type id more_parameters .)
    close_bracket   reduce using rule 229 (parameters -> data_type id more_parameters .)
    Sys             reduce using rule 229 (parameters -> data_type id more_parameters .)
    $end            reduce using rule 229 (parameters -> data_type id more_parameters .)


state 236

    (231) more_parameters -> comma . data_type id more_parameters
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

    data_type                      shift and go to state 288

state 237

    (122) assignment_exp -> assignment_operators num_value .
    (93) arithmetic_expression -> num_value . arithmetic_operators num_value
    (94) arithmetic_operators -> . plus
    (95) arithmetic_operators -> . minus
    (96) arithmetic_operators -> . times
    (97) arithmetic_operators -> . divide
    (98) arithmetic_operators -> . divide_divide
    (99) arithmetic_operators -> . modulo
    (100) arithmetic_operators -> . times_times

    id              reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    For             reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    While           reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    If              reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Switch          reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Sys_Call        reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Absorb          reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Discharge       reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Link_End        reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Sys             reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    $end            reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Return          reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    close_bracket   reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Break           reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Continue        reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    Avoid           reduce using rule 122 (assignment_exp -> assignment_operators num_value .)
    plus            shift and go to state 133
    minus           shift and go to state 134
    times           shift and go to state 135
    divide          shift and go to state 136
    divide_divide   shift and go to state 137
    modulo          shift and go to state 138
    times_times     shift and go to state 139

    arithmetic_operators           shift and go to state 132

state 238

    (123) assignment_exp -> equal assign_value .

    id              reduce using rule 123 (assignment_exp -> equal assign_value .)
    For             reduce using rule 123 (assignment_exp -> equal assign_value .)
    While           reduce using rule 123 (assignment_exp -> equal assign_value .)
    If              reduce using rule 123 (assignment_exp -> equal assign_value .)
    Switch          reduce using rule 123 (assignment_exp -> equal assign_value .)
    Sys_Call        reduce using rule 123 (assignment_exp -> equal assign_value .)
    Absorb          reduce using rule 123 (assignment_exp -> equal assign_value .)
    Discharge       reduce using rule 123 (assignment_exp -> equal assign_value .)
    Link_End        reduce using rule 123 (assignment_exp -> equal assign_value .)
    Sys             reduce using rule 123 (assignment_exp -> equal assign_value .)
    $end            reduce using rule 123 (assignment_exp -> equal assign_value .)
    Return          reduce using rule 123 (assignment_exp -> equal assign_value .)
    close_bracket   reduce using rule 123 (assignment_exp -> equal assign_value .)
    Break           reduce using rule 123 (assignment_exp -> equal assign_value .)
    Continue        reduce using rule 123 (assignment_exp -> equal assign_value .)
    Avoid           reduce using rule 123 (assignment_exp -> equal assign_value .)


state 239

    (125) assign_value -> num_value .
    (93) arithmetic_expression -> num_value . arithmetic_operators num_value
    (94) arithmetic_operators -> . plus
    (95) arithmetic_operators -> . minus
    (96) arithmetic_operators -> . times
    (97) arithmetic_operators -> . divide
    (98) arithmetic_operators -> . divide_divide
    (99) arithmetic_operators -> . modulo
    (100) arithmetic_operators -> . times_times

    id              reduce using rule 125 (assign_value -> num_value .)
    For             reduce using rule 125 (assign_value -> num_value .)
    While           reduce using rule 125 (assign_value -> num_value .)
    If              reduce using rule 125 (assign_value -> num_value .)
    Switch          reduce using rule 125 (assign_value -> num_value .)
    Sys_Call        reduce using rule 125 (assign_value -> num_value .)
    Absorb          reduce using rule 125 (assign_value -> num_value .)
    Discharge       reduce using rule 125 (assign_value -> num_value .)
    Link_End        reduce using rule 125 (assign_value -> num_value .)
    Sys             reduce using rule 125 (assign_value -> num_value .)
    $end            reduce using rule 125 (assign_value -> num_value .)
    Return          reduce using rule 125 (assign_value -> num_value .)
    close_bracket   reduce using rule 125 (assign_value -> num_value .)
    Break           reduce using rule 125 (assign_value -> num_value .)
    Continue        reduce using rule 125 (assign_value -> num_value .)
    Avoid           reduce using rule 125 (assign_value -> num_value .)
    plus            shift and go to state 133
    minus           shift and go to state 134
    times           shift and go to state 135
    divide          shift and go to state 136
    divide_divide   shift and go to state 137
    modulo          shift and go to state 138
    times_times     shift and go to state 139

    arithmetic_operators           shift and go to state 132

state 240

    (126) assign_value -> more_id . value
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 60 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    For             reduce using rule 60 (value -> .)
    While           reduce using rule 60 (value -> .)
    If              reduce using rule 60 (value -> .)
    Switch          reduce using rule 60 (value -> .)
    Absorb          reduce using rule 60 (value -> .)
    Discharge       reduce using rule 60 (value -> .)
    Link_End        reduce using rule 60 (value -> .)
    Sys             reduce using rule 60 (value -> .)
    $end            reduce using rule 60 (value -> .)
    Return          reduce using rule 60 (value -> .)
    close_bracket   reduce using rule 60 (value -> .)
    Break           reduce using rule 60 (value -> .)
    Continue        reduce using rule 60 (value -> .)
    Avoid           reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 60 (value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (value -> .) ]
  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! For             [ reduce using rule 68 (num_value -> .) ]
  ! While           [ reduce using rule 68 (num_value -> .) ]
  ! If              [ reduce using rule 68 (num_value -> .) ]
  ! Switch          [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! Absorb          [ reduce using rule 68 (num_value -> .) ]
  ! Discharge       [ reduce using rule 68 (num_value -> .) ]
  ! Link_End        [ reduce using rule 68 (num_value -> .) ]
  ! Sys             [ reduce using rule 68 (num_value -> .) ]
  ! $end            [ reduce using rule 68 (num_value -> .) ]
  ! Return          [ reduce using rule 68 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 68 (num_value -> .) ]
  ! Break           [ reduce using rule 68 (num_value -> .) ]
  ! Continue        [ reduce using rule 68 (num_value -> .) ]
  ! Avoid           [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! Break           [ reduce using rule 74 (id_array -> .) ]
  ! Continue        [ reduce using rule 74 (id_array -> .) ]
  ! Avoid           [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]
  ! Break           [ reduce using rule 87 (literals -> .) ]
  ! Continue        [ reduce using rule 87 (literals -> .) ]
  ! Avoid           [ reduce using rule 87 (literals -> .) ]

    value                          shift and go to state 289
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 241

    (64) num_value -> id_array . id_struct
    (127) more_id -> id_array . id_struct equal more_id
    (101) id_struct -> . period id_array
    (102) id_struct -> .

    period          shift and go to state 114
    equal           reduce using rule 102 (id_struct -> .)
    plus            reduce using rule 102 (id_struct -> .)
    minus           reduce using rule 102 (id_struct -> .)
    times           reduce using rule 102 (id_struct -> .)
    divide          reduce using rule 102 (id_struct -> .)
    divide_divide   reduce using rule 102 (id_struct -> .)
    modulo          reduce using rule 102 (id_struct -> .)
    times_times     reduce using rule 102 (id_struct -> .)
    id              reduce using rule 102 (id_struct -> .)
    For             reduce using rule 102 (id_struct -> .)
    While           reduce using rule 102 (id_struct -> .)
    If              reduce using rule 102 (id_struct -> .)
    Switch          reduce using rule 102 (id_struct -> .)
    Sys_Call        reduce using rule 102 (id_struct -> .)
    Absorb          reduce using rule 102 (id_struct -> .)
    Discharge       reduce using rule 102 (id_struct -> .)
    Link_End        reduce using rule 102 (id_struct -> .)
    Sys             reduce using rule 102 (id_struct -> .)
    $end            reduce using rule 102 (id_struct -> .)
    Return          reduce using rule 102 (id_struct -> .)
    close_bracket   reduce using rule 102 (id_struct -> .)
    Break           reduce using rule 102 (id_struct -> .)
    Continue        reduce using rule 102 (id_struct -> .)
    Avoid           reduce using rule 102 (id_struct -> .)

    id_struct                      shift and go to state 290

state 242

    (121) assignment_statements2 -> open_brace lit_intposi close_brace more_array . equal open_brace value1 close_brace

    equal           shift and go to state 291


state 243

    (136) more_array -> equal . id open_brace lit_intposi close_brace more_array

    id              shift and go to state 292


state 244

    (138) for_statements -> For id In id open_brace . close_brace colon open_bracket inside_statements close_bracket

    close_brace     shift and go to state 293


state 245

    (163) logical_expression -> open_par logical_operand close_par . logical_operators open_par logical_operand close_par
    (168) logical_operators -> . And
    (169) logical_operators -> . Or

    And             shift and go to state 295
    Or              shift and go to state 296

    logical_operators              shift and go to state 294

state 246

    (164) logical_operand -> Not open_par . logical_operand close_par
    (164) logical_operand -> . Not open_par logical_operand close_par
    (165) logical_operand -> . relational_expression
    (166) logical_operand -> . logical_expression
    (167) logical_operand -> . lit_bool
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    Not             shift and go to state 182
    lit_bool        shift and go to state 185
    open_par        shift and go to state 119
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    logical_operand                shift and go to state 297
    relational_expression          shift and go to state 183
    logical_expression             shift and go to state 184
    value                          shift and go to state 125
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 247

    (140) while_statements -> While open_par condition close_par colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 298


state 248

    (151) condition -> Not open_par condition_not . close_par

    close_par       shift and go to state 299


state 249

    (153) condition_not -> relational_expression .

    close_par       reduce using rule 153 (condition_not -> relational_expression .)


state 250

    (154) condition_not -> logical_expression .

    close_par       reduce using rule 154 (condition_not -> logical_expression .)


state 251

    (155) condition_not -> lit_bool .
    (59) value -> lit_bool .

    close_par       reduce using rule 155 (condition_not -> lit_bool .)
    greater_than    reduce using rule 59 (value -> lit_bool .)
    less_than       reduce using rule 59 (value -> lit_bool .)
    equal_equal     reduce using rule 59 (value -> lit_bool .)
    not_equal       reduce using rule 59 (value -> lit_bool .)
    great_than_equal reduce using rule 59 (value -> lit_bool .)
    less_than_equal reduce using rule 59 (value -> lit_bool .)


state 252

    (156) relational_expression -> value relational_operators value .

    close_par       reduce using rule 156 (relational_expression -> value relational_operators value .)


state 253

    (172) if_statement -> If open_par condition close_par colon . open_bracket inside_statements close_bracket condition_else

    open_bracket    shift and go to state 300


state 254

    (180) switch_statements -> Switch id colon open_bracket execute . Default colon inside_statements close_bracket End_Switch

    Default         shift and go to state 301


state 255

    (181) execute -> Execute . switch_lit colon statements Break execute1
    (182) switch_lit -> . lit_str
    (183) switch_lit -> . lit_intposi
    (184) switch_lit -> . lit_intnega

    lit_str         shift and go to state 303
    lit_intposi     shift and go to state 304
    lit_intnega     shift and go to state 305

    switch_lit                     shift and go to state 302

state 256

    (192) function_param -> id open_brace . close_brace more_param
    (76) array -> open_brace . num_value close_brace
    (77) array -> open_brace . close_brace
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
    close_brace     shift and go to state 306
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]

    num_value                      shift and go to state 117
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 257

    (75) id_array_opt -> id array .
    (73) id_array -> id array .

  ! reduce/reduce conflict for period resolved using rule 73 (id_array -> id array .)
    comma           reduce using rule 75 (id_array_opt -> id array .)
    close_par       reduce using rule 75 (id_array_opt -> id array .)
    period          reduce using rule 73 (id_array -> id array .)
    plus            reduce using rule 73 (id_array -> id array .)
    minus           reduce using rule 73 (id_array -> id array .)
    times           reduce using rule 73 (id_array -> id array .)
    divide          reduce using rule 73 (id_array -> id array .)
    divide_divide   reduce using rule 73 (id_array -> id array .)
    modulo          reduce using rule 73 (id_array -> id array .)
    times_times     reduce using rule 73 (id_array -> id array .)

  ! period          [ reduce using rule 75 (id_array_opt -> id array .) ]


state 258

    (191) func_call -> Sys_Call id open_par function_param close_par .

    id              reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    For             reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    While           reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    If              reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Switch          reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Sys_Call        reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Absorb          reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Discharge       reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Link_End        reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Sys             reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    $end            reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Return          reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    close_bracket   reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Break           reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Continue        reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Avoid           reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    plus            reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    minus           reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    times           reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    divide          reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    divide_divide   reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    modulo          reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    times_times     reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    close_brace     reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    greater_than    reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    less_than       reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    equal_equal     reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    not_equal       reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    great_than_equal reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    less_than_equal reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    comma           reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Generate        reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Struct          reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    Link_Start      reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)
    close_par       reduce using rule 191 (func_call -> Sys_Call id open_par function_param close_par .)


state 259

    (193) function_param -> value1_opt more_param .

    close_par       reduce using rule 193 (function_param -> value1_opt more_param .)


state 260

    (195) more_param -> comma . function_param
    (192) function_param -> . id open_brace close_brace more_param
    (193) function_param -> . value1_opt more_param
    (194) function_param -> .
    (106) value1_opt -> . value_opt value2_opt
    (61) value_opt -> . num_value_opt
    (62) value_opt -> . lit_str
    (63) value_opt -> . lit_bool
    (69) num_value_opt -> . id_array_opt id_struct
    (70) num_value_opt -> . literals_opt
    (71) num_value_opt -> . arithmetic_expression
    (72) num_value_opt -> . func_call
    (75) id_array_opt -> . id array
    (88) literals_opt -> . lit_intposi
    (89) literals_opt -> . lit_intnega
    (90) literals_opt -> . lit_decposi
    (91) literals_opt -> . lit_decnega
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .

  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
    id              shift and go to state 198
    close_par       reduce using rule 194 (function_param -> .)
    lit_str         shift and go to state 203
    lit_bool        shift and go to state 204
    lit_intposi     shift and go to state 209
    lit_intnega     shift and go to state 210
    lit_decposi     shift and go to state 211
    lit_decnega     shift and go to state 212
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    period          reduce using rule 74 (id_array -> .)

  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]

    function_param                 shift and go to state 307
    value1_opt                     shift and go to state 200
    value_opt                      shift and go to state 201
    num_value_opt                  shift and go to state 202
    id_array_opt                   shift and go to state 205
    literals_opt                   shift and go to state 206
    arithmetic_expression          shift and go to state 207
    func_call                      shift and go to state 208
    num_value                      shift and go to state 142
    id_array                       shift and go to state 78
    literals                       shift and go to state 79

state 261

    (106) value1_opt -> value_opt value2_opt .

    comma           reduce using rule 106 (value1_opt -> value_opt value2_opt .)
    close_par       reduce using rule 106 (value1_opt -> value_opt value2_opt .)


state 262

    (107) value2_opt -> comma . value1_opt
    (106) value1_opt -> . value_opt value2_opt
    (61) value_opt -> . num_value_opt
    (62) value_opt -> . lit_str
    (63) value_opt -> . lit_bool
    (69) num_value_opt -> . id_array_opt id_struct
    (70) num_value_opt -> . literals_opt
    (71) num_value_opt -> . arithmetic_expression
    (72) num_value_opt -> . func_call
    (75) id_array_opt -> . id array
    (88) literals_opt -> . lit_intposi
    (89) literals_opt -> . lit_intnega
    (90) literals_opt -> . lit_decposi
    (91) literals_opt -> . lit_decnega
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .

  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
    lit_str         shift and go to state 203
    lit_bool        shift and go to state 204
    id              shift and go to state 309
    lit_intposi     shift and go to state 209
    lit_intnega     shift and go to state 210
    lit_decposi     shift and go to state 211
    lit_decnega     shift and go to state 212
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    period          reduce using rule 74 (id_array -> .)

  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]

    value1_opt                     shift and go to state 308
    value_opt                      shift and go to state 201
    num_value_opt                  shift and go to state 202
    id_array_opt                   shift and go to state 205
    literals_opt                   shift and go to state 206
    arithmetic_expression          shift and go to state 207
    func_call                      shift and go to state 208
    num_value                      shift and go to state 142
    id_array                       shift and go to state 78
    literals                       shift and go to state 79

state 263

    (69) num_value_opt -> id_array_opt id_struct .

    comma           reduce using rule 69 (num_value_opt -> id_array_opt id_struct .)
    close_par       reduce using rule 69 (num_value_opt -> id_array_opt id_struct .)


state 264

    (27) id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .

    Integer         reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Decimal         reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    String          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Boolean         reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    id              reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    close_bracket   reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    comma           reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Struct          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Generate        reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Link_Start      reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    For             reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    While           reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    If              reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Switch          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Sys_Call        reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Absorb          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Discharge       reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Link_End        reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Sys             reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    $end            reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)


state 265

    (30) array_dec1 -> comma . id open_brace lit_intposi close_brace array_dec1

    id              shift and go to state 310


state 266

    (39) id_array_const2 -> open_brace lit_intposi close_brace . equal open_brace value1 close_brace array_const1

    equal           shift and go to state 311


state 267

    (40) id_array_const2 -> equal value id_const1 .

    Generate        reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Struct          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Link_Start      reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    id              reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    For             reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    While           reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    If              reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Switch          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Sys_Call        reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Absorb          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Discharge       reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Link_End        reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Sys             reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    $end            reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Return          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    close_bracket   reduce using rule 40 (id_array_const2 -> equal value id_const1 .)


state 268

    (42) id_const1 -> comma . id equal value id_const1

    id              shift and go to state 312


state 269

    (51) id_var1 -> comma id var_init . id_var1
    (51) id_var1 -> . comma id var_init id_var1
    (52) id_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 155
    Generate        reduce using rule 52 (id_var1 -> .)
    Struct          reduce using rule 52 (id_var1 -> .)
    Link_Start      reduce using rule 52 (id_var1 -> .)
    id              reduce using rule 52 (id_var1 -> .)
    For             reduce using rule 52 (id_var1 -> .)
    While           reduce using rule 52 (id_var1 -> .)
    If              reduce using rule 52 (id_var1 -> .)
    Switch          reduce using rule 52 (id_var1 -> .)
    Sys_Call        reduce using rule 52 (id_var1 -> .)
    Absorb          reduce using rule 52 (id_var1 -> .)
    Discharge       reduce using rule 52 (id_var1 -> .)
    Link_End        reduce using rule 52 (id_var1 -> .)
    Sys             reduce using rule 52 (id_var1 -> .)
    $end            reduce using rule 52 (id_var1 -> .)
    Return          reduce using rule 52 (id_var1 -> .)
    close_bracket   reduce using rule 52 (id_var1 -> .)

  ! comma           [ reduce using rule 52 (id_var1 -> .) ]

    id_var1                        shift and go to state 313

state 270

    (48) id_array_var2 -> open_brace lit_intposi close_brace array_init . array_var1
    (55) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (56) array_var1 -> .

    comma           shift and go to state 315
    Generate        reduce using rule 56 (array_var1 -> .)
    Struct          reduce using rule 56 (array_var1 -> .)
    Link_Start      reduce using rule 56 (array_var1 -> .)
    id              reduce using rule 56 (array_var1 -> .)
    For             reduce using rule 56 (array_var1 -> .)
    While           reduce using rule 56 (array_var1 -> .)
    If              reduce using rule 56 (array_var1 -> .)
    Switch          reduce using rule 56 (array_var1 -> .)
    Sys_Call        reduce using rule 56 (array_var1 -> .)
    Absorb          reduce using rule 56 (array_var1 -> .)
    Discharge       reduce using rule 56 (array_var1 -> .)
    Link_End        reduce using rule 56 (array_var1 -> .)
    Sys             reduce using rule 56 (array_var1 -> .)
    $end            reduce using rule 56 (array_var1 -> .)
    Return          reduce using rule 56 (array_var1 -> .)
    close_bracket   reduce using rule 56 (array_var1 -> .)

    array_var1                     shift and go to state 314

state 271

    (53) array_init -> equal . open_brace value1 close_brace array_var1

    open_brace      shift and go to state 316


state 272

    (197) functions -> Sys id open_par parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> Sys id open_par parameters close_par . declare_statements statements return_statement functions
    (223) functions -> Sys id open_par parameters close_par . open_bracket declare_statements statements return_statement functions
    (224) functions -> Sys id open_par parameters close_par . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 317
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 318

state 273

    (214) functions -> Sys id open_par parameters open_bracket . declare_statements statements return_statement functions
    (225) functions -> Sys id open_par parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 319

state 274

    (203) functions -> Sys id open_par parameters declare_statements . statements return_statement functions
    (215) functions -> Sys id open_par parameters declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 320
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 275

    (198) functions -> Sys id parameters declare_statements statements . return_statement functions
    (206) functions -> Sys id parameters declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 321

state 276

    (204) functions -> Sys id parameters close_par declare_statements . statements return_statement functions
    (217) functions -> Sys id parameters close_par declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 322
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 277

    (216) functions -> Sys id parameters close_par open_bracket . declare_statements statements return_statement functions
    (226) functions -> Sys id parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 323

state 278

    (205) functions -> Sys id parameters open_bracket declare_statements . statements return_statement functions
    (218) functions -> Sys id parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 324
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 279

    (199) functions -> Sys open_par parameters declare_statements statements . return_statement functions
    (209) functions -> Sys open_par parameters declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 325

state 280

    (207) functions -> Sys open_par parameters close_par declare_statements . statements return_statement functions
    (220) functions -> Sys open_par parameters close_par declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 326
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 281

    (219) functions -> Sys open_par parameters close_par open_bracket . declare_statements statements return_statement functions
    (227) functions -> Sys open_par parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 327

state 282

    (208) functions -> Sys open_par parameters open_bracket declare_statements . statements return_statement functions
    (221) functions -> Sys open_par parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 328
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 283

    (200) functions -> Sys parameters close_par declare_statements statements . return_statement functions
    (211) functions -> Sys parameters close_par declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 329

state 284

    (210) functions -> Sys parameters close_par open_bracket declare_statements . statements return_statement functions
    (222) functions -> Sys parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 330
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 285

    (202) functions -> Sys parameters declare_statements statements return_statement . close_bracket functions

    close_bracket   shift and go to state 331


state 286

    (233) return_statement -> Return . value statements return_statement
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    For             reduce using rule 60 (value -> .)
    While           reduce using rule 60 (value -> .)
    If              reduce using rule 60 (value -> .)
    Switch          reduce using rule 60 (value -> .)
    Absorb          reduce using rule 60 (value -> .)
    Discharge       reduce using rule 60 (value -> .)
    Return          reduce using rule 60 (value -> .)
    close_bracket   reduce using rule 60 (value -> .)
    Sys             reduce using rule 60 (value -> .)
    $end            reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 60 (value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (value -> .) ]
  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! For             [ reduce using rule 68 (num_value -> .) ]
  ! While           [ reduce using rule 68 (num_value -> .) ]
  ! If              [ reduce using rule 68 (num_value -> .) ]
  ! Switch          [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! Absorb          [ reduce using rule 68 (num_value -> .) ]
  ! Discharge       [ reduce using rule 68 (num_value -> .) ]
  ! Return          [ reduce using rule 68 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 68 (num_value -> .) ]
  ! Sys             [ reduce using rule 68 (num_value -> .) ]
  ! $end            [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]

    value                          shift and go to state 332
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 287

    (201) functions -> Sys parameters open_bracket declare_statements statements . return_statement functions
    (212) functions -> Sys parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 333

state 288

    (231) more_parameters -> comma data_type . id more_parameters

    id              shift and go to state 334


state 289

    (126) assign_value -> more_id value .

    id              reduce using rule 126 (assign_value -> more_id value .)
    For             reduce using rule 126 (assign_value -> more_id value .)
    While           reduce using rule 126 (assign_value -> more_id value .)
    If              reduce using rule 126 (assign_value -> more_id value .)
    Switch          reduce using rule 126 (assign_value -> more_id value .)
    Sys_Call        reduce using rule 126 (assign_value -> more_id value .)
    Absorb          reduce using rule 126 (assign_value -> more_id value .)
    Discharge       reduce using rule 126 (assign_value -> more_id value .)
    Link_End        reduce using rule 126 (assign_value -> more_id value .)
    Sys             reduce using rule 126 (assign_value -> more_id value .)
    $end            reduce using rule 126 (assign_value -> more_id value .)
    Return          reduce using rule 126 (assign_value -> more_id value .)
    close_bracket   reduce using rule 126 (assign_value -> more_id value .)
    Break           reduce using rule 126 (assign_value -> more_id value .)
    Continue        reduce using rule 126 (assign_value -> more_id value .)
    Avoid           reduce using rule 126 (assign_value -> more_id value .)


state 290

    (64) num_value -> id_array id_struct .
    (127) more_id -> id_array id_struct . equal more_id

    plus            reduce using rule 64 (num_value -> id_array id_struct .)
    minus           reduce using rule 64 (num_value -> id_array id_struct .)
    times           reduce using rule 64 (num_value -> id_array id_struct .)
    divide          reduce using rule 64 (num_value -> id_array id_struct .)
    divide_divide   reduce using rule 64 (num_value -> id_array id_struct .)
    modulo          reduce using rule 64 (num_value -> id_array id_struct .)
    times_times     reduce using rule 64 (num_value -> id_array id_struct .)
    id              reduce using rule 64 (num_value -> id_array id_struct .)
    For             reduce using rule 64 (num_value -> id_array id_struct .)
    While           reduce using rule 64 (num_value -> id_array id_struct .)
    If              reduce using rule 64 (num_value -> id_array id_struct .)
    Switch          reduce using rule 64 (num_value -> id_array id_struct .)
    Sys_Call        reduce using rule 64 (num_value -> id_array id_struct .)
    Absorb          reduce using rule 64 (num_value -> id_array id_struct .)
    Discharge       reduce using rule 64 (num_value -> id_array id_struct .)
    Link_End        reduce using rule 64 (num_value -> id_array id_struct .)
    Sys             reduce using rule 64 (num_value -> id_array id_struct .)
    $end            reduce using rule 64 (num_value -> id_array id_struct .)
    Return          reduce using rule 64 (num_value -> id_array id_struct .)
    close_bracket   reduce using rule 64 (num_value -> id_array id_struct .)
    Break           reduce using rule 64 (num_value -> id_array id_struct .)
    Continue        reduce using rule 64 (num_value -> id_array id_struct .)
    Avoid           reduce using rule 64 (num_value -> id_array id_struct .)
    equal           shift and go to state 335


state 291

    (121) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal . open_brace value1 close_brace

    open_brace      shift and go to state 336


state 292

    (136) more_array -> equal id . open_brace lit_intposi close_brace more_array

    open_brace      shift and go to state 337


state 293

    (138) for_statements -> For id In id open_brace close_brace . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 338


state 294

    (163) logical_expression -> open_par logical_operand close_par logical_operators . open_par logical_operand close_par

    open_par        shift and go to state 339


state 295

    (168) logical_operators -> And .

    open_par        reduce using rule 168 (logical_operators -> And .)


state 296

    (169) logical_operators -> Or .

    open_par        reduce using rule 169 (logical_operators -> Or .)


state 297

    (164) logical_operand -> Not open_par logical_operand . close_par

    close_par       shift and go to state 340


state 298

    (140) while_statements -> While open_par condition close_par colon open_bracket . inside_statements close_bracket
    (142) inside_statements -> . statements control_statements
    (143) inside_statements -> . control_statements statements
    (144) inside_statements -> .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (145) control_statements -> . Break
    (146) control_statements -> . Continue
    (147) control_statements -> . Avoid
    (148) control_statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 117 (statements -> .)
    Break           shift and go to state 344
    Continue        shift and go to state 345
    Avoid           shift and go to state 346
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 144 (inside_statements -> .) ]
  ! Break           [ reduce using rule 117 (statements -> .) ]
  ! Continue        [ reduce using rule 117 (statements -> .) ]
  ! Avoid           [ reduce using rule 117 (statements -> .) ]
  ! id              [ reduce using rule 148 (control_statements -> .) ]
  ! For             [ reduce using rule 148 (control_statements -> .) ]
  ! While           [ reduce using rule 148 (control_statements -> .) ]
  ! If              [ reduce using rule 148 (control_statements -> .) ]
  ! Switch          [ reduce using rule 148 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 148 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 148 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 148 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 148 (control_statements -> .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    inside_statements              shift and go to state 341
    statements                     shift and go to state 342
    control_statements             shift and go to state 343
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 299

    (151) condition -> Not open_par condition_not close_par .

    close_par       reduce using rule 151 (condition -> Not open_par condition_not close_par .)


state 300

    (172) if_statement -> If open_par condition close_par colon open_bracket . inside_statements close_bracket condition_else
    (142) inside_statements -> . statements control_statements
    (143) inside_statements -> . control_statements statements
    (144) inside_statements -> .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (145) control_statements -> . Break
    (146) control_statements -> . Continue
    (147) control_statements -> . Avoid
    (148) control_statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 117 (statements -> .)
    Break           shift and go to state 344
    Continue        shift and go to state 345
    Avoid           shift and go to state 346
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 144 (inside_statements -> .) ]
  ! Break           [ reduce using rule 117 (statements -> .) ]
  ! Continue        [ reduce using rule 117 (statements -> .) ]
  ! Avoid           [ reduce using rule 117 (statements -> .) ]
  ! id              [ reduce using rule 148 (control_statements -> .) ]
  ! For             [ reduce using rule 148 (control_statements -> .) ]
  ! While           [ reduce using rule 148 (control_statements -> .) ]
  ! If              [ reduce using rule 148 (control_statements -> .) ]
  ! Switch          [ reduce using rule 148 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 148 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 148 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 148 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 148 (control_statements -> .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    inside_statements              shift and go to state 347
    statements                     shift and go to state 342
    control_statements             shift and go to state 343
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 301

    (180) switch_statements -> Switch id colon open_bracket execute Default . colon inside_statements close_bracket End_Switch

    colon           shift and go to state 348


state 302

    (181) execute -> Execute switch_lit . colon statements Break execute1

    colon           shift and go to state 349


state 303

    (182) switch_lit -> lit_str .

    colon           reduce using rule 182 (switch_lit -> lit_str .)


state 304

    (183) switch_lit -> lit_intposi .

    colon           reduce using rule 183 (switch_lit -> lit_intposi .)


state 305

    (184) switch_lit -> lit_intnega .

    colon           reduce using rule 184 (switch_lit -> lit_intnega .)


state 306

    (192) function_param -> id open_brace close_brace . more_param
    (77) array -> open_brace close_brace .
    (195) more_param -> . comma function_param
    (196) more_param -> .

  ! shift/reduce conflict for comma resolved as shift
  ! reduce/reduce conflict for close_par resolved using rule 77 (array -> open_brace close_brace .)
    period          reduce using rule 77 (array -> open_brace close_brace .)
    close_par       reduce using rule 77 (array -> open_brace close_brace .)
    plus            reduce using rule 77 (array -> open_brace close_brace .)
    minus           reduce using rule 77 (array -> open_brace close_brace .)
    times           reduce using rule 77 (array -> open_brace close_brace .)
    divide          reduce using rule 77 (array -> open_brace close_brace .)
    divide_divide   reduce using rule 77 (array -> open_brace close_brace .)
    modulo          reduce using rule 77 (array -> open_brace close_brace .)
    times_times     reduce using rule 77 (array -> open_brace close_brace .)
    comma           shift and go to state 260

  ! comma           [ reduce using rule 77 (array -> open_brace close_brace .) ]
  ! close_par       [ reduce using rule 196 (more_param -> .) ]

    more_param                     shift and go to state 350

state 307

    (195) more_param -> comma function_param .

    close_par       reduce using rule 195 (more_param -> comma function_param .)


state 308

    (107) value2_opt -> comma value1_opt .

    comma           reduce using rule 107 (value2_opt -> comma value1_opt .)
    close_par       reduce using rule 107 (value2_opt -> comma value1_opt .)


state 309

    (75) id_array_opt -> id . array
    (73) id_array -> id . array
    (76) array -> . open_brace num_value close_brace
    (77) array -> . open_brace close_brace
    (78) array -> .

    open_brace      shift and go to state 131
    period          reduce using rule 78 (array -> .)
    comma           reduce using rule 78 (array -> .)
    close_par       reduce using rule 78 (array -> .)
    plus            reduce using rule 78 (array -> .)
    minus           reduce using rule 78 (array -> .)
    times           reduce using rule 78 (array -> .)
    divide          reduce using rule 78 (array -> .)
    divide_divide   reduce using rule 78 (array -> .)
    modulo          reduce using rule 78 (array -> .)
    times_times     reduce using rule 78 (array -> .)

    array                          shift and go to state 257

state 310

    (30) array_dec1 -> comma id . open_brace lit_intposi close_brace array_dec1

    open_brace      shift and go to state 351


state 311

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal . open_brace value1 close_brace array_const1

    open_brace      shift and go to state 352


state 312

    (42) id_const1 -> comma id . equal value id_const1

    equal           shift and go to state 353


state 313

    (51) id_var1 -> comma id var_init id_var1 .

    Generate        reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Struct          reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Link_Start      reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    id              reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    For             reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    While           reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    If              reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Switch          reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Sys_Call        reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Absorb          reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Discharge       reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Link_End        reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Sys             reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    $end            reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    Return          reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    close_bracket   reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)
    comma           reduce using rule 51 (id_var1 -> comma id var_init id_var1 .)


state 314

    (48) id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .

    Generate        reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Struct          reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Link_Start      reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    id              reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    For             reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    While           reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    If              reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Switch          reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Sys_Call        reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Absorb          reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Discharge       reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Link_End        reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Sys             reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    $end            reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Return          reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    close_bracket   reduce using rule 48 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)


state 315

    (55) array_var1 -> comma . id open_brace lit_intposi close_brace array_init array_var1

    id              shift and go to state 354


state 316

    (53) array_init -> equal open_brace . value1 close_brace array_var1
    (103) value1 -> . value value2
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    close_brace     reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]

    value1                         shift and go to state 355
    value                          shift and go to state 356
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 317

    (197) functions -> Sys id open_par parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (223) functions -> Sys id open_par parameters close_par open_bracket . declare_statements statements return_statement functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 357

state 318

    (213) functions -> Sys id open_par parameters close_par declare_statements . statements return_statement functions
    (224) functions -> Sys id open_par parameters close_par declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 358
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 319

    (214) functions -> Sys id open_par parameters open_bracket declare_statements . statements return_statement functions
    (225) functions -> Sys id open_par parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 359
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 320

    (203) functions -> Sys id open_par parameters declare_statements statements . return_statement functions
    (215) functions -> Sys id open_par parameters declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 360

state 321

    (198) functions -> Sys id parameters declare_statements statements return_statement . functions
    (206) functions -> Sys id parameters declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 362
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 361

state 322

    (204) functions -> Sys id parameters close_par declare_statements statements . return_statement functions
    (217) functions -> Sys id parameters close_par declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 363

state 323

    (216) functions -> Sys id parameters close_par open_bracket declare_statements . statements return_statement functions
    (226) functions -> Sys id parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 364
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 324

    (205) functions -> Sys id parameters open_bracket declare_statements statements . return_statement functions
    (218) functions -> Sys id parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 365

state 325

    (199) functions -> Sys open_par parameters declare_statements statements return_statement . functions
    (209) functions -> Sys open_par parameters declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 367
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 366

state 326

    (207) functions -> Sys open_par parameters close_par declare_statements statements . return_statement functions
    (220) functions -> Sys open_par parameters close_par declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 368

state 327

    (219) functions -> Sys open_par parameters close_par open_bracket declare_statements . statements return_statement functions
    (227) functions -> Sys open_par parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 369
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 328

    (208) functions -> Sys open_par parameters open_bracket declare_statements statements . return_statement functions
    (221) functions -> Sys open_par parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 370

state 329

    (200) functions -> Sys parameters close_par declare_statements statements return_statement . functions
    (211) functions -> Sys parameters close_par declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 372
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 371

state 330

    (210) functions -> Sys parameters close_par open_bracket declare_statements statements . return_statement functions
    (222) functions -> Sys parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 373

state 331

    (202) functions -> Sys parameters declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 374

state 332

    (233) return_statement -> Return value . statements return_statement
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 375
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 333

    (201) functions -> Sys parameters open_bracket declare_statements statements return_statement . functions
    (212) functions -> Sys parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 377
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 376

state 334

    (231) more_parameters -> comma data_type id . more_parameters
    (231) more_parameters -> . comma data_type id more_parameters
    (232) more_parameters -> .

    comma           shift and go to state 236
    close_par       reduce using rule 232 (more_parameters -> .)
    open_bracket    reduce using rule 232 (more_parameters -> .)
    Generate        reduce using rule 232 (more_parameters -> .)
    id              reduce using rule 232 (more_parameters -> .)
    For             reduce using rule 232 (more_parameters -> .)
    While           reduce using rule 232 (more_parameters -> .)
    If              reduce using rule 232 (more_parameters -> .)
    Switch          reduce using rule 232 (more_parameters -> .)
    Sys_Call        reduce using rule 232 (more_parameters -> .)
    Absorb          reduce using rule 232 (more_parameters -> .)
    Discharge       reduce using rule 232 (more_parameters -> .)
    Return          reduce using rule 232 (more_parameters -> .)
    close_bracket   reduce using rule 232 (more_parameters -> .)
    Sys             reduce using rule 232 (more_parameters -> .)
    $end            reduce using rule 232 (more_parameters -> .)

    more_parameters                shift and go to state 378

state 335

    (127) more_id -> id_array id_struct equal . more_id
    (127) more_id -> . id_array id_struct equal more_id
    (128) more_id -> .
    (73) id_array -> . id array
    (74) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for period resolved using rule 74 (id_array -> .)
    lit_str         reduce using rule 128 (more_id -> .)
    lit_bool        reduce using rule 128 (more_id -> .)
    lit_intposi     reduce using rule 128 (more_id -> .)
    lit_intnega     reduce using rule 128 (more_id -> .)
    lit_decposi     reduce using rule 128 (more_id -> .)
    lit_decnega     reduce using rule 128 (more_id -> .)
    open_par        reduce using rule 128 (more_id -> .)
    Sys_Call        reduce using rule 128 (more_id -> .)
    plus            reduce using rule 128 (more_id -> .)
    minus           reduce using rule 128 (more_id -> .)
    times           reduce using rule 128 (more_id -> .)
    divide          reduce using rule 128 (more_id -> .)
    divide_divide   reduce using rule 128 (more_id -> .)
    modulo          reduce using rule 128 (more_id -> .)
    times_times     reduce using rule 128 (more_id -> .)
    For             reduce using rule 128 (more_id -> .)
    While           reduce using rule 128 (more_id -> .)
    If              reduce using rule 128 (more_id -> .)
    Switch          reduce using rule 128 (more_id -> .)
    Absorb          reduce using rule 128 (more_id -> .)
    Discharge       reduce using rule 128 (more_id -> .)
    Link_End        reduce using rule 128 (more_id -> .)
    Sys             reduce using rule 128 (more_id -> .)
    $end            reduce using rule 128 (more_id -> .)
    Return          reduce using rule 128 (more_id -> .)
    close_bracket   reduce using rule 128 (more_id -> .)
    Break           reduce using rule 128 (more_id -> .)
    Continue        reduce using rule 128 (more_id -> .)
    Avoid           reduce using rule 128 (more_id -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    equal           reduce using rule 74 (id_array -> .)

  ! id              [ reduce using rule 128 (more_id -> .) ]
  ! period          [ reduce using rule 128 (more_id -> .) ]

    id_array                       shift and go to state 379
    more_id                        shift and go to state 380

state 336

    (121) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace . value1 close_brace
    (103) value1 -> . value value2
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    close_brace     reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]

    value1                         shift and go to state 381
    value                          shift and go to state 356
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 337

    (136) more_array -> equal id open_brace . lit_intposi close_brace more_array

    lit_intposi     shift and go to state 382


state 338

    (138) for_statements -> For id In id open_brace close_brace colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 383


state 339

    (163) logical_expression -> open_par logical_operand close_par logical_operators open_par . logical_operand close_par
    (164) logical_operand -> . Not open_par logical_operand close_par
    (165) logical_operand -> . relational_expression
    (166) logical_operand -> . logical_expression
    (167) logical_operand -> . lit_bool
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    Not             shift and go to state 182
    lit_bool        shift and go to state 185
    open_par        shift and go to state 119
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    logical_operand                shift and go to state 384
    relational_expression          shift and go to state 183
    logical_expression             shift and go to state 184
    value                          shift and go to state 125
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 340

    (164) logical_operand -> Not open_par logical_operand close_par .

    close_par       reduce using rule 164 (logical_operand -> Not open_par logical_operand close_par .)


state 341

    (140) while_statements -> While open_par condition close_par colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 385


state 342

    (142) inside_statements -> statements . control_statements
    (145) control_statements -> . Break
    (146) control_statements -> . Continue
    (147) control_statements -> . Avoid
    (148) control_statements -> .

    Break           shift and go to state 344
    Continue        shift and go to state 345
    Avoid           shift and go to state 346
    close_bracket   reduce using rule 148 (control_statements -> .)

    control_statements             shift and go to state 386

state 343

    (143) inside_statements -> control_statements . statements
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 387
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 344

    (145) control_statements -> Break .

    id              reduce using rule 145 (control_statements -> Break .)
    For             reduce using rule 145 (control_statements -> Break .)
    While           reduce using rule 145 (control_statements -> Break .)
    If              reduce using rule 145 (control_statements -> Break .)
    Switch          reduce using rule 145 (control_statements -> Break .)
    Sys_Call        reduce using rule 145 (control_statements -> Break .)
    Absorb          reduce using rule 145 (control_statements -> Break .)
    Discharge       reduce using rule 145 (control_statements -> Break .)
    close_bracket   reduce using rule 145 (control_statements -> Break .)


state 345

    (146) control_statements -> Continue .

    id              reduce using rule 146 (control_statements -> Continue .)
    For             reduce using rule 146 (control_statements -> Continue .)
    While           reduce using rule 146 (control_statements -> Continue .)
    If              reduce using rule 146 (control_statements -> Continue .)
    Switch          reduce using rule 146 (control_statements -> Continue .)
    Sys_Call        reduce using rule 146 (control_statements -> Continue .)
    Absorb          reduce using rule 146 (control_statements -> Continue .)
    Discharge       reduce using rule 146 (control_statements -> Continue .)
    close_bracket   reduce using rule 146 (control_statements -> Continue .)


state 346

    (147) control_statements -> Avoid .

    id              reduce using rule 147 (control_statements -> Avoid .)
    For             reduce using rule 147 (control_statements -> Avoid .)
    While           reduce using rule 147 (control_statements -> Avoid .)
    If              reduce using rule 147 (control_statements -> Avoid .)
    Switch          reduce using rule 147 (control_statements -> Avoid .)
    Sys_Call        reduce using rule 147 (control_statements -> Avoid .)
    Absorb          reduce using rule 147 (control_statements -> Avoid .)
    Discharge       reduce using rule 147 (control_statements -> Avoid .)
    close_bracket   reduce using rule 147 (control_statements -> Avoid .)


state 347

    (172) if_statement -> If open_par condition close_par colon open_bracket inside_statements . close_bracket condition_else

    close_bracket   shift and go to state 388


state 348

    (180) switch_statements -> Switch id colon open_bracket execute Default colon . inside_statements close_bracket End_Switch
    (142) inside_statements -> . statements control_statements
    (143) inside_statements -> . control_statements statements
    (144) inside_statements -> .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (145) control_statements -> . Break
    (146) control_statements -> . Continue
    (147) control_statements -> . Avoid
    (148) control_statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 117 (statements -> .)
    Break           shift and go to state 344
    Continue        shift and go to state 345
    Avoid           shift and go to state 346
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 144 (inside_statements -> .) ]
  ! Break           [ reduce using rule 117 (statements -> .) ]
  ! Continue        [ reduce using rule 117 (statements -> .) ]
  ! Avoid           [ reduce using rule 117 (statements -> .) ]
  ! id              [ reduce using rule 148 (control_statements -> .) ]
  ! For             [ reduce using rule 148 (control_statements -> .) ]
  ! While           [ reduce using rule 148 (control_statements -> .) ]
  ! If              [ reduce using rule 148 (control_statements -> .) ]
  ! Switch          [ reduce using rule 148 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 148 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 148 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 148 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 148 (control_statements -> .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    inside_statements              shift and go to state 389
    statements                     shift and go to state 342
    control_statements             shift and go to state 343
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 349

    (181) execute -> Execute switch_lit colon . statements Break execute1
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Break           reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 390
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 350

    (192) function_param -> id open_brace close_brace more_param .

    close_par       reduce using rule 192 (function_param -> id open_brace close_brace more_param .)


state 351

    (30) array_dec1 -> comma id open_brace . lit_intposi close_brace array_dec1

    lit_intposi     shift and go to state 391


state 352

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace . value1 close_brace array_const1
    (103) value1 -> . value value2
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    close_brace     reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]

    value1                         shift and go to state 392
    value                          shift and go to state 356
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 353

    (42) id_const1 -> comma id equal . value id_const1
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 60 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 60 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    Generate        reduce using rule 60 (value -> .)
    Struct          reduce using rule 60 (value -> .)
    Link_Start      reduce using rule 60 (value -> .)
    For             reduce using rule 60 (value -> .)
    While           reduce using rule 60 (value -> .)
    If              reduce using rule 60 (value -> .)
    Switch          reduce using rule 60 (value -> .)
    Absorb          reduce using rule 60 (value -> .)
    Discharge       reduce using rule 60 (value -> .)
    Link_End        reduce using rule 60 (value -> .)
    Sys             reduce using rule 60 (value -> .)
    $end            reduce using rule 60 (value -> .)
    Return          reduce using rule 60 (value -> .)
    close_bracket   reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 60 (value -> .) ]
  ! Sys_Call        [ reduce using rule 60 (value -> .) ]
  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! Generate        [ reduce using rule 68 (num_value -> .) ]
  ! Struct          [ reduce using rule 68 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 68 (num_value -> .) ]
  ! id              [ reduce using rule 68 (num_value -> .) ]
  ! For             [ reduce using rule 68 (num_value -> .) ]
  ! While           [ reduce using rule 68 (num_value -> .) ]
  ! If              [ reduce using rule 68 (num_value -> .) ]
  ! Switch          [ reduce using rule 68 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 68 (num_value -> .) ]
  ! Absorb          [ reduce using rule 68 (num_value -> .) ]
  ! Discharge       [ reduce using rule 68 (num_value -> .) ]
  ! Link_End        [ reduce using rule 68 (num_value -> .) ]
  ! Sys             [ reduce using rule 68 (num_value -> .) ]
  ! $end            [ reduce using rule 68 (num_value -> .) ]
  ! Return          [ reduce using rule 68 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! Generate        [ reduce using rule 74 (id_array -> .) ]
  ! Struct          [ reduce using rule 74 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 74 (id_array -> .) ]
  ! id              [ reduce using rule 74 (id_array -> .) ]
  ! For             [ reduce using rule 74 (id_array -> .) ]
  ! While           [ reduce using rule 74 (id_array -> .) ]
  ! If              [ reduce using rule 74 (id_array -> .) ]
  ! Switch          [ reduce using rule 74 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 74 (id_array -> .) ]
  ! Absorb          [ reduce using rule 74 (id_array -> .) ]
  ! Discharge       [ reduce using rule 74 (id_array -> .) ]
  ! Link_End        [ reduce using rule 74 (id_array -> .) ]
  ! Sys             [ reduce using rule 74 (id_array -> .) ]
  ! $end            [ reduce using rule 74 (id_array -> .) ]
  ! Return          [ reduce using rule 74 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! Generate        [ reduce using rule 87 (literals -> .) ]
  ! Struct          [ reduce using rule 87 (literals -> .) ]
  ! Link_Start      [ reduce using rule 87 (literals -> .) ]
  ! id              [ reduce using rule 87 (literals -> .) ]
  ! For             [ reduce using rule 87 (literals -> .) ]
  ! While           [ reduce using rule 87 (literals -> .) ]
  ! If              [ reduce using rule 87 (literals -> .) ]
  ! Switch          [ reduce using rule 87 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 87 (literals -> .) ]
  ! Absorb          [ reduce using rule 87 (literals -> .) ]
  ! Discharge       [ reduce using rule 87 (literals -> .) ]
  ! Link_End        [ reduce using rule 87 (literals -> .) ]
  ! Sys             [ reduce using rule 87 (literals -> .) ]
  ! $end            [ reduce using rule 87 (literals -> .) ]
  ! Return          [ reduce using rule 87 (literals -> .) ]
  ! close_bracket   [ reduce using rule 87 (literals -> .) ]

    value                          shift and go to state 393
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 354

    (55) array_var1 -> comma id . open_brace lit_intposi close_brace array_init array_var1

    open_brace      shift and go to state 394


state 355

    (53) array_init -> equal open_brace value1 . close_brace array_var1

    close_brace     shift and go to state 395


state 356

    (103) value1 -> value . value2
    (104) value2 -> . comma value1
    (105) value2 -> .

    comma           shift and go to state 397
    close_brace     reduce using rule 105 (value2 -> .)

    value2                         shift and go to state 396

state 357

    (197) functions -> Sys id open_par parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (223) functions -> Sys id open_par parameters close_par open_bracket declare_statements . statements return_statement functions
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 117 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 117 (statements -> .)
    close_bracket   reduce using rule 117 (statements -> .)
    Sys             reduce using rule 117 (statements -> .)
    $end            reduce using rule 117 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 119 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Return          [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! Sys             [ reduce using rule 139 (for_statements -> .) ]
  ! $end            [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Return          [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! Sys             [ reduce using rule 141 (while_statements -> .) ]
  ! $end            [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Return          [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]
  ! Sys             [ reduce using rule 173 (if_statement -> .) ]
  ! $end            [ reduce using rule 173 (if_statement -> .) ]

    statements                     shift and go to state 398
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 358

    (213) functions -> Sys id open_par parameters close_par declare_statements statements . return_statement functions
    (224) functions -> Sys id open_par parameters close_par declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 399

state 359

    (214) functions -> Sys id open_par parameters open_bracket declare_statements statements . return_statement functions
    (225) functions -> Sys id open_par parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 400

state 360

    (203) functions -> Sys id open_par parameters declare_statements statements return_statement . functions
    (215) functions -> Sys id open_par parameters declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 402
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 401

state 361

    (198) functions -> Sys id parameters declare_statements statements return_statement functions .

    $end            reduce using rule 198 (functions -> Sys id parameters declare_statements statements return_statement functions .)


state 362

    (206) functions -> Sys id parameters declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 403

state 363

    (204) functions -> Sys id parameters close_par declare_statements statements return_statement . functions
    (217) functions -> Sys id parameters close_par declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 405
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 404

state 364

    (216) functions -> Sys id parameters close_par open_bracket declare_statements statements . return_statement functions
    (226) functions -> Sys id parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 406

state 365

    (205) functions -> Sys id parameters open_bracket declare_statements statements return_statement . functions
    (218) functions -> Sys id parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 408
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 407

state 366

    (199) functions -> Sys open_par parameters declare_statements statements return_statement functions .

    $end            reduce using rule 199 (functions -> Sys open_par parameters declare_statements statements return_statement functions .)


state 367

    (209) functions -> Sys open_par parameters declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 409

state 368

    (207) functions -> Sys open_par parameters close_par declare_statements statements return_statement . functions
    (220) functions -> Sys open_par parameters close_par declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 411
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 410

state 369

    (219) functions -> Sys open_par parameters close_par open_bracket declare_statements statements . return_statement functions
    (227) functions -> Sys open_par parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 412

state 370

    (208) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement . functions
    (221) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 414
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 413

state 371

    (200) functions -> Sys parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 200 (functions -> Sys parameters close_par declare_statements statements return_statement functions .)


state 372

    (211) functions -> Sys parameters close_par declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 415

state 373

    (210) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement . functions
    (222) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 417
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 416

state 374

    (202) functions -> Sys parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 202 (functions -> Sys parameters declare_statements statements return_statement close_bracket functions .)


state 375

    (233) return_statement -> Return value statements . return_statement
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 418

state 376

    (201) functions -> Sys parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 201 (functions -> Sys parameters open_bracket declare_statements statements return_statement functions .)


state 377

    (212) functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 419

state 378

    (231) more_parameters -> comma data_type id more_parameters .

    close_par       reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    open_bracket    reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    Generate        reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    id              reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    For             reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    While           reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    If              reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    Switch          reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    Sys_Call        reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    Absorb          reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    Discharge       reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    Return          reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    close_bracket   reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    Sys             reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)
    $end            reduce using rule 231 (more_parameters -> comma data_type id more_parameters .)


state 379

    (127) more_id -> id_array . id_struct equal more_id
    (101) id_struct -> . period id_array
    (102) id_struct -> .

    period          shift and go to state 114
    equal           reduce using rule 102 (id_struct -> .)

    id_struct                      shift and go to state 420

state 380

    (127) more_id -> id_array id_struct equal more_id .

    lit_str         reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    lit_bool        reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    id              reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    lit_intposi     reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    lit_intnega     reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    lit_decposi     reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    lit_decnega     reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    open_par        reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Sys_Call        reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    plus            reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    minus           reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    times           reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    divide          reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    divide_divide   reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    modulo          reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    times_times     reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    period          reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    For             reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    While           reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    If              reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Switch          reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Absorb          reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Discharge       reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Link_End        reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Sys             reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    $end            reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Return          reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    close_bracket   reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Break           reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Continue        reduce using rule 127 (more_id -> id_array id_struct equal more_id .)
    Avoid           reduce using rule 127 (more_id -> id_array id_struct equal more_id .)


state 381

    (121) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 . close_brace

    close_brace     shift and go to state 421


state 382

    (136) more_array -> equal id open_brace lit_intposi . close_brace more_array

    close_brace     shift and go to state 422


state 383

    (138) for_statements -> For id In id open_brace close_brace colon open_bracket . inside_statements close_bracket
    (142) inside_statements -> . statements control_statements
    (143) inside_statements -> . control_statements statements
    (144) inside_statements -> .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (145) control_statements -> . Break
    (146) control_statements -> . Continue
    (147) control_statements -> . Avoid
    (148) control_statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 117 (statements -> .)
    Break           shift and go to state 344
    Continue        shift and go to state 345
    Avoid           shift and go to state 346
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 144 (inside_statements -> .) ]
  ! Break           [ reduce using rule 117 (statements -> .) ]
  ! Continue        [ reduce using rule 117 (statements -> .) ]
  ! Avoid           [ reduce using rule 117 (statements -> .) ]
  ! id              [ reduce using rule 148 (control_statements -> .) ]
  ! For             [ reduce using rule 148 (control_statements -> .) ]
  ! While           [ reduce using rule 148 (control_statements -> .) ]
  ! If              [ reduce using rule 148 (control_statements -> .) ]
  ! Switch          [ reduce using rule 148 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 148 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 148 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 148 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 148 (control_statements -> .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    inside_statements              shift and go to state 423
    statements                     shift and go to state 342
    control_statements             shift and go to state 343
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 384

    (163) logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand . close_par

    close_par       shift and go to state 424


state 385

    (140) while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .

    id              reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 140 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)


state 386

    (142) inside_statements -> statements control_statements .

    close_bracket   reduce using rule 142 (inside_statements -> statements control_statements .)


state 387

    (143) inside_statements -> control_statements statements .

    close_bracket   reduce using rule 143 (inside_statements -> control_statements statements .)


state 388

    (172) if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket . condition_else
    (174) condition_else -> . elif_statement
    (175) condition_else -> . else_statement
    (176) condition_else -> .
    (177) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (178) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (179) else_statement -> .

  ! reduce/reduce conflict for id resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Return resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 176 (condition_else -> .)
    id              reduce using rule 176 (condition_else -> .)
    For             reduce using rule 176 (condition_else -> .)
    While           reduce using rule 176 (condition_else -> .)
    If              reduce using rule 176 (condition_else -> .)
    Switch          reduce using rule 176 (condition_else -> .)
    Sys_Call        reduce using rule 176 (condition_else -> .)
    Absorb          reduce using rule 176 (condition_else -> .)
    Discharge       reduce using rule 176 (condition_else -> .)
    Link_End        reduce using rule 176 (condition_else -> .)
    Sys             reduce using rule 176 (condition_else -> .)
    $end            reduce using rule 176 (condition_else -> .)
    Return          reduce using rule 176 (condition_else -> .)
    close_bracket   reduce using rule 176 (condition_else -> .)
    Break           reduce using rule 176 (condition_else -> .)
    Continue        reduce using rule 176 (condition_else -> .)
    Avoid           reduce using rule 176 (condition_else -> .)
    Elif            shift and go to state 428
    Else            shift and go to state 429

  ! id              [ reduce using rule 179 (else_statement -> .) ]
  ! For             [ reduce using rule 179 (else_statement -> .) ]
  ! While           [ reduce using rule 179 (else_statement -> .) ]
  ! If              [ reduce using rule 179 (else_statement -> .) ]
  ! Switch          [ reduce using rule 179 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 179 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 179 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 179 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 179 (else_statement -> .) ]
  ! Sys             [ reduce using rule 179 (else_statement -> .) ]
  ! $end            [ reduce using rule 179 (else_statement -> .) ]
  ! Return          [ reduce using rule 179 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 179 (else_statement -> .) ]
  ! Break           [ reduce using rule 179 (else_statement -> .) ]
  ! Continue        [ reduce using rule 179 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 179 (else_statement -> .) ]

    condition_else                 shift and go to state 425
    elif_statement                 shift and go to state 426
    else_statement                 shift and go to state 427

state 389

    (180) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements . close_bracket End_Switch

    close_bracket   shift and go to state 430


state 390

    (181) execute -> Execute switch_lit colon statements . Break execute1

    Break           shift and go to state 431


state 391

    (30) array_dec1 -> comma id open_brace lit_intposi . close_brace array_dec1

    close_brace     shift and go to state 432


state 392

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 . close_brace array_const1

    close_brace     shift and go to state 433


state 393

    (42) id_const1 -> comma id equal value . id_const1
    (42) id_const1 -> . comma id equal value id_const1
    (43) id_const1 -> .

    comma           shift and go to state 268
    Generate        reduce using rule 43 (id_const1 -> .)
    Struct          reduce using rule 43 (id_const1 -> .)
    Link_Start      reduce using rule 43 (id_const1 -> .)
    id              reduce using rule 43 (id_const1 -> .)
    For             reduce using rule 43 (id_const1 -> .)
    While           reduce using rule 43 (id_const1 -> .)
    If              reduce using rule 43 (id_const1 -> .)
    Switch          reduce using rule 43 (id_const1 -> .)
    Sys_Call        reduce using rule 43 (id_const1 -> .)
    Absorb          reduce using rule 43 (id_const1 -> .)
    Discharge       reduce using rule 43 (id_const1 -> .)
    Link_End        reduce using rule 43 (id_const1 -> .)
    Sys             reduce using rule 43 (id_const1 -> .)
    $end            reduce using rule 43 (id_const1 -> .)
    Return          reduce using rule 43 (id_const1 -> .)
    close_bracket   reduce using rule 43 (id_const1 -> .)

    id_const1                      shift and go to state 434

state 394

    (55) array_var1 -> comma id open_brace . lit_intposi close_brace array_init array_var1

    lit_intposi     shift and go to state 435


state 395

    (53) array_init -> equal open_brace value1 close_brace . array_var1
    (55) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (56) array_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 315
    Generate        reduce using rule 56 (array_var1 -> .)
    Struct          reduce using rule 56 (array_var1 -> .)
    Link_Start      reduce using rule 56 (array_var1 -> .)
    id              reduce using rule 56 (array_var1 -> .)
    For             reduce using rule 56 (array_var1 -> .)
    While           reduce using rule 56 (array_var1 -> .)
    If              reduce using rule 56 (array_var1 -> .)
    Switch          reduce using rule 56 (array_var1 -> .)
    Sys_Call        reduce using rule 56 (array_var1 -> .)
    Absorb          reduce using rule 56 (array_var1 -> .)
    Discharge       reduce using rule 56 (array_var1 -> .)
    Link_End        reduce using rule 56 (array_var1 -> .)
    Sys             reduce using rule 56 (array_var1 -> .)
    $end            reduce using rule 56 (array_var1 -> .)
    Return          reduce using rule 56 (array_var1 -> .)
    close_bracket   reduce using rule 56 (array_var1 -> .)

  ! comma           [ reduce using rule 56 (array_var1 -> .) ]

    array_var1                     shift and go to state 436

state 396

    (103) value1 -> value value2 .

    close_brace     reduce using rule 103 (value1 -> value value2 .)


state 397

    (104) value2 -> comma . value1
    (103) value1 -> . value value2
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    close_brace     reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]

    value1                         shift and go to state 437
    value                          shift and go to state 356
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 398

    (197) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (223) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements . return_statement functions
    (233) return_statement -> . Return value statements return_statement
    (234) return_statement -> .

    Return          shift and go to state 286
    close_bracket   reduce using rule 234 (return_statement -> .)
    Sys             reduce using rule 234 (return_statement -> .)
    $end            reduce using rule 234 (return_statement -> .)

    return_statement               shift and go to state 438

state 399

    (213) functions -> Sys id open_par parameters close_par declare_statements statements return_statement . functions
    (224) functions -> Sys id open_par parameters close_par declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 440
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 439

state 400

    (214) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement . functions
    (225) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 442
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 441

state 401

    (203) functions -> Sys id open_par parameters declare_statements statements return_statement functions .

    $end            reduce using rule 203 (functions -> Sys id open_par parameters declare_statements statements return_statement functions .)


state 402

    (215) functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 443

state 403

    (206) functions -> Sys id parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 206 (functions -> Sys id parameters declare_statements statements return_statement close_bracket functions .)


state 404

    (204) functions -> Sys id parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 204 (functions -> Sys id parameters close_par declare_statements statements return_statement functions .)


state 405

    (217) functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 444

state 406

    (216) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement . functions
    (226) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 446
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 445

state 407

    (205) functions -> Sys id parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 205 (functions -> Sys id parameters open_bracket declare_statements statements return_statement functions .)


state 408

    (218) functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 447

state 409

    (209) functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 209 (functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions .)


state 410

    (207) functions -> Sys open_par parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 207 (functions -> Sys open_par parameters close_par declare_statements statements return_statement functions .)


state 411

    (220) functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 448

state 412

    (219) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement . functions
    (227) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 450
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 449

state 413

    (208) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 208 (functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions .)


state 414

    (221) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 451

state 415

    (211) functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 211 (functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions .)


state 416

    (210) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 210 (functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions .)


state 417

    (222) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 452

state 418

    (233) return_statement -> Return value statements return_statement .

    close_bracket   reduce using rule 233 (return_statement -> Return value statements return_statement .)
    Sys             reduce using rule 233 (return_statement -> Return value statements return_statement .)
    $end            reduce using rule 233 (return_statement -> Return value statements return_statement .)


state 419

    (212) functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 212 (functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 420

    (127) more_id -> id_array id_struct . equal more_id

    equal           shift and go to state 335


state 421

    (121) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .

    id              reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    For             reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    While           reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    If              reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Switch          reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Sys_Call        reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Absorb          reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Discharge       reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Link_End        reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Sys             reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    $end            reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Return          reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    close_bracket   reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Break           reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Continue        reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Avoid           reduce using rule 121 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)


state 422

    (136) more_array -> equal id open_brace lit_intposi close_brace . more_array
    (136) more_array -> . equal id open_brace lit_intposi close_brace more_array
    (137) more_array -> .

  ! shift/reduce conflict for equal resolved as shift
    equal           shift and go to state 243

  ! equal           [ reduce using rule 137 (more_array -> .) ]

    more_array                     shift and go to state 453

state 423

    (138) for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 454


state 424

    (163) logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .

    close_par       reduce using rule 163 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)


state 425

    (172) if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 172 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)


state 426

    (174) condition_else -> elif_statement .

    id              reduce using rule 174 (condition_else -> elif_statement .)
    For             reduce using rule 174 (condition_else -> elif_statement .)
    While           reduce using rule 174 (condition_else -> elif_statement .)
    If              reduce using rule 174 (condition_else -> elif_statement .)
    Switch          reduce using rule 174 (condition_else -> elif_statement .)
    Sys_Call        reduce using rule 174 (condition_else -> elif_statement .)
    Absorb          reduce using rule 174 (condition_else -> elif_statement .)
    Discharge       reduce using rule 174 (condition_else -> elif_statement .)
    Link_End        reduce using rule 174 (condition_else -> elif_statement .)
    Sys             reduce using rule 174 (condition_else -> elif_statement .)
    $end            reduce using rule 174 (condition_else -> elif_statement .)
    Return          reduce using rule 174 (condition_else -> elif_statement .)
    close_bracket   reduce using rule 174 (condition_else -> elif_statement .)
    Break           reduce using rule 174 (condition_else -> elif_statement .)
    Continue        reduce using rule 174 (condition_else -> elif_statement .)
    Avoid           reduce using rule 174 (condition_else -> elif_statement .)


state 427

    (175) condition_else -> else_statement .

    id              reduce using rule 175 (condition_else -> else_statement .)
    For             reduce using rule 175 (condition_else -> else_statement .)
    While           reduce using rule 175 (condition_else -> else_statement .)
    If              reduce using rule 175 (condition_else -> else_statement .)
    Switch          reduce using rule 175 (condition_else -> else_statement .)
    Sys_Call        reduce using rule 175 (condition_else -> else_statement .)
    Absorb          reduce using rule 175 (condition_else -> else_statement .)
    Discharge       reduce using rule 175 (condition_else -> else_statement .)
    Link_End        reduce using rule 175 (condition_else -> else_statement .)
    Sys             reduce using rule 175 (condition_else -> else_statement .)
    $end            reduce using rule 175 (condition_else -> else_statement .)
    Return          reduce using rule 175 (condition_else -> else_statement .)
    close_bracket   reduce using rule 175 (condition_else -> else_statement .)
    Break           reduce using rule 175 (condition_else -> else_statement .)
    Continue        reduce using rule 175 (condition_else -> else_statement .)
    Avoid           reduce using rule 175 (condition_else -> else_statement .)


state 428

    (177) elif_statement -> Elif . open_par condition close_par colon open_bracket inside_statements close_bracket condition_else

    open_par        shift and go to state 455


state 429

    (178) else_statement -> Else . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 456


state 430

    (180) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket . End_Switch

    End_Switch      shift and go to state 457


state 431

    (181) execute -> Execute switch_lit colon statements Break . execute1
    (185) execute1 -> . execute
    (186) execute1 -> .
    (181) execute -> . Execute switch_lit colon statements Break execute1

    Default         reduce using rule 186 (execute1 -> .)
    Execute         shift and go to state 255

    execute1                       shift and go to state 458
    execute                        shift and go to state 459

state 432

    (30) array_dec1 -> comma id open_brace lit_intposi close_brace . array_dec1
    (30) array_dec1 -> . comma id open_brace lit_intposi close_brace array_dec1
    (31) array_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 265
    Integer         reduce using rule 31 (array_dec1 -> .)
    Decimal         reduce using rule 31 (array_dec1 -> .)
    String          reduce using rule 31 (array_dec1 -> .)
    Boolean         reduce using rule 31 (array_dec1 -> .)
    id              reduce using rule 31 (array_dec1 -> .)
    close_bracket   reduce using rule 31 (array_dec1 -> .)
    Struct          reduce using rule 31 (array_dec1 -> .)
    Generate        reduce using rule 31 (array_dec1 -> .)
    Link_Start      reduce using rule 31 (array_dec1 -> .)
    For             reduce using rule 31 (array_dec1 -> .)
    While           reduce using rule 31 (array_dec1 -> .)
    If              reduce using rule 31 (array_dec1 -> .)
    Switch          reduce using rule 31 (array_dec1 -> .)
    Sys_Call        reduce using rule 31 (array_dec1 -> .)
    Absorb          reduce using rule 31 (array_dec1 -> .)
    Discharge       reduce using rule 31 (array_dec1 -> .)
    Link_End        reduce using rule 31 (array_dec1 -> .)
    Sys             reduce using rule 31 (array_dec1 -> .)
    $end            reduce using rule 31 (array_dec1 -> .)

  ! comma           [ reduce using rule 31 (array_dec1 -> .) ]

    array_dec1                     shift and go to state 460

state 433

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace . array_const1
    (44) array_const1 -> . comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (45) array_const1 -> .

    comma           shift and go to state 462
    Generate        reduce using rule 45 (array_const1 -> .)
    Struct          reduce using rule 45 (array_const1 -> .)
    Link_Start      reduce using rule 45 (array_const1 -> .)
    id              reduce using rule 45 (array_const1 -> .)
    For             reduce using rule 45 (array_const1 -> .)
    While           reduce using rule 45 (array_const1 -> .)
    If              reduce using rule 45 (array_const1 -> .)
    Switch          reduce using rule 45 (array_const1 -> .)
    Sys_Call        reduce using rule 45 (array_const1 -> .)
    Absorb          reduce using rule 45 (array_const1 -> .)
    Discharge       reduce using rule 45 (array_const1 -> .)
    Link_End        reduce using rule 45 (array_const1 -> .)
    Sys             reduce using rule 45 (array_const1 -> .)
    $end            reduce using rule 45 (array_const1 -> .)
    Return          reduce using rule 45 (array_const1 -> .)
    close_bracket   reduce using rule 45 (array_const1 -> .)

    array_const1                   shift and go to state 461

state 434

    (42) id_const1 -> comma id equal value id_const1 .

    Generate        reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Struct          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Link_Start      reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    id              reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    For             reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    While           reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    If              reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Switch          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Sys_Call        reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Absorb          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Discharge       reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Link_End        reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Sys             reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    $end            reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Return          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    close_bracket   reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)


state 435

    (55) array_var1 -> comma id open_brace lit_intposi . close_brace array_init array_var1

    close_brace     shift and go to state 463


state 436

    (53) array_init -> equal open_brace value1 close_brace array_var1 .

    comma           reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Generate        reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Struct          reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Link_Start      reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    id              reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    For             reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    While           reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    If              reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Switch          reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Sys_Call        reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Absorb          reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Discharge       reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Link_End        reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Sys             reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    $end            reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Return          reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)
    close_bracket   reduce using rule 53 (array_init -> equal open_brace value1 close_brace array_var1 .)


state 437

    (104) value2 -> comma value1 .

    close_brace     reduce using rule 104 (value2 -> comma value1 .)


state 438

    (197) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (223) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    close_bracket   shift and go to state 464
    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 465

state 439

    (213) functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 213 (functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions .)


state 440

    (224) functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 466

state 441

    (214) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 214 (functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions .)


state 442

    (225) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 467

state 443

    (215) functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 215 (functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions .)


state 444

    (217) functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 217 (functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions .)


state 445

    (216) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 216 (functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions .)


state 446

    (226) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 468

state 447

    (218) functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 218 (functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 448

    (220) functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 220 (functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions .)


state 449

    (219) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 219 (functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions .)


state 450

    (227) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 469

state 451

    (221) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 221 (functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 452

    (222) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 222 (functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 453

    (136) more_array -> equal id open_brace lit_intposi close_brace more_array .

    equal           reduce using rule 136 (more_array -> equal id open_brace lit_intposi close_brace more_array .)


state 454

    (138) for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .

    id              reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 138 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)


state 455

    (177) elif_statement -> Elif open_par . condition close_par colon open_bracket inside_statements close_bracket condition_else
    (149) condition -> . relational_expression
    (150) condition -> . logical_expression
    (151) condition -> . Not open_par condition_not close_par
    (152) condition -> . lit_bool
    (156) relational_expression -> . value relational_operators value
    (163) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 60 (value -> .)
    Not             shift and go to state 123
    lit_bool        shift and go to state 124
    open_par        shift and go to state 119
    lit_str         shift and go to state 76
    greater_than    reduce using rule 60 (value -> .)
    less_than       reduce using rule 60 (value -> .)
    equal_equal     reduce using rule 60 (value -> .)
    not_equal       reduce using rule 60 (value -> .)
    great_than_equal reduce using rule 60 (value -> .)
    less_than_equal reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 68 (num_value -> .) ]
  ! less_than       [ reduce using rule 68 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 68 (num_value -> .) ]
  ! not_equal       [ reduce using rule 68 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! greater_than    [ reduce using rule 74 (id_array -> .) ]
  ! less_than       [ reduce using rule 74 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 74 (id_array -> .) ]
  ! not_equal       [ reduce using rule 74 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! greater_than    [ reduce using rule 87 (literals -> .) ]
  ! less_than       [ reduce using rule 87 (literals -> .) ]
  ! equal_equal     [ reduce using rule 87 (literals -> .) ]
  ! not_equal       [ reduce using rule 87 (literals -> .) ]
  ! great_than_equal [ reduce using rule 87 (literals -> .) ]
  ! less_than_equal [ reduce using rule 87 (literals -> .) ]

    condition                      shift and go to state 470
    relational_expression          shift and go to state 121
    logical_expression             shift and go to state 122
    value                          shift and go to state 125
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 456

    (178) else_statement -> Else colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 471


state 457

    (180) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .

    id              reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    For             reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    While           reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    If              reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Switch          reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Sys_Call        reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Absorb          reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Discharge       reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Link_End        reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Sys             reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    $end            reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Return          reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    close_bracket   reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Break           reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Continue        reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Avoid           reduce using rule 180 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)


state 458

    (181) execute -> Execute switch_lit colon statements Break execute1 .

    Default         reduce using rule 181 (execute -> Execute switch_lit colon statements Break execute1 .)


state 459

    (185) execute1 -> execute .

    Default         reduce using rule 185 (execute1 -> execute .)


state 460

    (30) array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .

    Integer         reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Decimal         reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    String          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Boolean         reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    id              reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    close_bracket   reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    comma           reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Struct          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Generate        reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Link_Start      reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    For             reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    While           reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    If              reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Switch          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Sys_Call        reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Absorb          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Discharge       reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Link_End        reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Sys             reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    $end            reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)


state 461

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .

    Generate        reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Struct          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_Start      reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    id              reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    For             reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    While           reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    If              reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Switch          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys_Call        reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Absorb          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Discharge       reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_End        reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys             reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    $end            reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Return          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    close_bracket   reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)


state 462

    (44) array_const1 -> comma . id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1

    id              shift and go to state 472


state 463

    (55) array_var1 -> comma id open_brace lit_intposi close_brace . array_init array_var1
    (53) array_init -> . equal open_brace value1 close_brace array_var1
    (54) array_init -> .

    equal           shift and go to state 271
    comma           reduce using rule 54 (array_init -> .)
    Generate        reduce using rule 54 (array_init -> .)
    Struct          reduce using rule 54 (array_init -> .)
    Link_Start      reduce using rule 54 (array_init -> .)
    id              reduce using rule 54 (array_init -> .)
    For             reduce using rule 54 (array_init -> .)
    While           reduce using rule 54 (array_init -> .)
    If              reduce using rule 54 (array_init -> .)
    Switch          reduce using rule 54 (array_init -> .)
    Sys_Call        reduce using rule 54 (array_init -> .)
    Absorb          reduce using rule 54 (array_init -> .)
    Discharge       reduce using rule 54 (array_init -> .)
    Link_End        reduce using rule 54 (array_init -> .)
    Sys             reduce using rule 54 (array_init -> .)
    $end            reduce using rule 54 (array_init -> .)
    Return          reduce using rule 54 (array_init -> .)
    close_bracket   reduce using rule 54 (array_init -> .)

    array_init                     shift and go to state 473

state 464

    (197) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (197) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (198) functions -> . Sys id parameters declare_statements statements return_statement functions
    (199) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (200) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (201) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (202) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (203) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (204) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (205) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (206) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (207) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (208) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (209) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (210) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (211) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (212) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (213) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (214) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (215) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (216) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (217) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (218) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (219) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (220) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (221) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (222) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (223) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (224) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (225) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (226) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (227) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 228 (functions -> .)

    functions                      shift and go to state 474

state 465

    (223) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 223 (functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions .)


state 466

    (224) functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 224 (functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions .)


state 467

    (225) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 225 (functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 468

    (226) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 226 (functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 469

    (227) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 227 (functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 470

    (177) elif_statement -> Elif open_par condition . close_par colon open_bracket inside_statements close_bracket condition_else

    close_par       shift and go to state 475


state 471

    (178) else_statement -> Else colon open_bracket . inside_statements close_bracket
    (142) inside_statements -> . statements control_statements
    (143) inside_statements -> . control_statements statements
    (144) inside_statements -> .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (145) control_statements -> . Break
    (146) control_statements -> . Continue
    (147) control_statements -> . Avoid
    (148) control_statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 117 (statements -> .)
    Break           shift and go to state 344
    Continue        shift and go to state 345
    Avoid           shift and go to state 346
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 144 (inside_statements -> .) ]
  ! Break           [ reduce using rule 117 (statements -> .) ]
  ! Continue        [ reduce using rule 117 (statements -> .) ]
  ! Avoid           [ reduce using rule 117 (statements -> .) ]
  ! id              [ reduce using rule 148 (control_statements -> .) ]
  ! For             [ reduce using rule 148 (control_statements -> .) ]
  ! While           [ reduce using rule 148 (control_statements -> .) ]
  ! If              [ reduce using rule 148 (control_statements -> .) ]
  ! Switch          [ reduce using rule 148 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 148 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 148 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 148 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 148 (control_statements -> .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    inside_statements              shift and go to state 476
    statements                     shift and go to state 342
    control_statements             shift and go to state 343
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 472

    (44) array_const1 -> comma id . open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1

    open_brace      shift and go to state 477


state 473

    (55) array_var1 -> comma id open_brace lit_intposi close_brace array_init . array_var1
    (55) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (56) array_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 315
    Generate        reduce using rule 56 (array_var1 -> .)
    Struct          reduce using rule 56 (array_var1 -> .)
    Link_Start      reduce using rule 56 (array_var1 -> .)
    id              reduce using rule 56 (array_var1 -> .)
    For             reduce using rule 56 (array_var1 -> .)
    While           reduce using rule 56 (array_var1 -> .)
    If              reduce using rule 56 (array_var1 -> .)
    Switch          reduce using rule 56 (array_var1 -> .)
    Sys_Call        reduce using rule 56 (array_var1 -> .)
    Absorb          reduce using rule 56 (array_var1 -> .)
    Discharge       reduce using rule 56 (array_var1 -> .)
    Link_End        reduce using rule 56 (array_var1 -> .)
    Sys             reduce using rule 56 (array_var1 -> .)
    $end            reduce using rule 56 (array_var1 -> .)
    Return          reduce using rule 56 (array_var1 -> .)
    close_bracket   reduce using rule 56 (array_var1 -> .)

  ! comma           [ reduce using rule 56 (array_var1 -> .) ]

    array_var1                     shift and go to state 478

state 474

    (197) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 197 (functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 475

    (177) elif_statement -> Elif open_par condition close_par . colon open_bracket inside_statements close_bracket condition_else

    colon           shift and go to state 479


state 476

    (178) else_statement -> Else colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 480


state 477

    (44) array_const1 -> comma id open_brace . lit_intposi close_brace equal open_brace value1 close_brace array_const1

    lit_intposi     shift and go to state 481


state 478

    (55) array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .

    Generate        reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Struct          reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Link_Start      reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    id              reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    For             reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    While           reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    If              reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Switch          reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Sys_Call        reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Absorb          reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Discharge       reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Link_End        reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Sys             reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    $end            reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Return          reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    close_bracket   reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    comma           reduce using rule 55 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)


state 479

    (177) elif_statement -> Elif open_par condition close_par colon . open_bracket inside_statements close_bracket condition_else

    open_bracket    shift and go to state 482


state 480

    (178) else_statement -> Else colon open_bracket inside_statements close_bracket .

    id              reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 178 (else_statement -> Else colon open_bracket inside_statements close_bracket .)


state 481

    (44) array_const1 -> comma id open_brace lit_intposi . close_brace equal open_brace value1 close_brace array_const1

    close_brace     shift and go to state 483


state 482

    (177) elif_statement -> Elif open_par condition close_par colon open_bracket . inside_statements close_bracket condition_else
    (142) inside_statements -> . statements control_statements
    (143) inside_statements -> . control_statements statements
    (144) inside_statements -> .
    (109) statements -> . assignment_statements statements
    (110) statements -> . for_statements statements
    (111) statements -> . while_statements statements
    (112) statements -> . if_statement statements
    (113) statements -> . switch_statements statements
    (114) statements -> . conditional_statements statements
    (115) statements -> . io_statements statements
    (116) statements -> . func_call statements
    (117) statements -> .
    (145) control_statements -> . Break
    (146) control_statements -> . Continue
    (147) control_statements -> . Avoid
    (148) control_statements -> .
    (118) assignment_statements -> . id assignment_statements2
    (119) assignment_statements -> .
    (138) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (139) for_statements -> .
    (140) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (141) while_statements -> .
    (172) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (173) if_statement -> .
    (180) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (170) conditional_statements -> . if_statement
    (171) conditional_statements -> . switch_statements
    (187) io_statements -> . input_statements
    (188) io_statements -> . output_statements
    (191) func_call -> . Sys_Call id open_par function_param close_par
    (189) input_statements -> . Absorb id_array id_struct
    (190) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for If resolved as shift
  ! reduce/reduce conflict for Switch resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 119 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 119 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 117 (statements -> .)
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 117 (statements -> .)
    Break           shift and go to state 344
    Continue        shift and go to state 345
    Avoid           shift and go to state 346
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 144 (inside_statements -> .) ]
  ! Break           [ reduce using rule 117 (statements -> .) ]
  ! Continue        [ reduce using rule 117 (statements -> .) ]
  ! Avoid           [ reduce using rule 117 (statements -> .) ]
  ! id              [ reduce using rule 148 (control_statements -> .) ]
  ! For             [ reduce using rule 148 (control_statements -> .) ]
  ! While           [ reduce using rule 148 (control_statements -> .) ]
  ! If              [ reduce using rule 148 (control_statements -> .) ]
  ! Switch          [ reduce using rule 148 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 148 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 148 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 148 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 148 (control_statements -> .) ]
  ! id              [ reduce using rule 119 (assignment_statements -> .) ]
  ! For             [ reduce using rule 119 (assignment_statements -> .) ]
  ! While           [ reduce using rule 119 (assignment_statements -> .) ]
  ! If              [ reduce using rule 119 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 119 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 119 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 119 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 119 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 119 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 119 (assignment_statements -> .) ]
  ! id              [ reduce using rule 139 (for_statements -> .) ]
  ! For             [ reduce using rule 139 (for_statements -> .) ]
  ! While           [ reduce using rule 139 (for_statements -> .) ]
  ! If              [ reduce using rule 139 (for_statements -> .) ]
  ! Switch          [ reduce using rule 139 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 139 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 139 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 139 (for_statements -> .) ]
  ! Break           [ reduce using rule 139 (for_statements -> .) ]
  ! Continue        [ reduce using rule 139 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 139 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 139 (for_statements -> .) ]
  ! id              [ reduce using rule 141 (while_statements -> .) ]
  ! For             [ reduce using rule 141 (while_statements -> .) ]
  ! While           [ reduce using rule 141 (while_statements -> .) ]
  ! If              [ reduce using rule 141 (while_statements -> .) ]
  ! Switch          [ reduce using rule 141 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 141 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 141 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 141 (while_statements -> .) ]
  ! Break           [ reduce using rule 141 (while_statements -> .) ]
  ! Continue        [ reduce using rule 141 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 141 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 141 (while_statements -> .) ]
  ! id              [ reduce using rule 173 (if_statement -> .) ]
  ! For             [ reduce using rule 173 (if_statement -> .) ]
  ! While           [ reduce using rule 173 (if_statement -> .) ]
  ! If              [ reduce using rule 173 (if_statement -> .) ]
  ! Switch          [ reduce using rule 173 (if_statement -> .) ]
  ! Sys_Call        [ reduce using rule 173 (if_statement -> .) ]
  ! Absorb          [ reduce using rule 173 (if_statement -> .) ]
  ! Discharge       [ reduce using rule 173 (if_statement -> .) ]
  ! Break           [ reduce using rule 173 (if_statement -> .) ]
  ! Continue        [ reduce using rule 173 (if_statement -> .) ]
  ! Avoid           [ reduce using rule 173 (if_statement -> .) ]
  ! close_bracket   [ reduce using rule 173 (if_statement -> .) ]

    inside_statements              shift and go to state 484
    statements                     shift and go to state 342
    control_statements             shift and go to state 343
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 483

    (44) array_const1 -> comma id open_brace lit_intposi close_brace . equal open_brace value1 close_brace array_const1

    equal           shift and go to state 485


state 484

    (177) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements . close_bracket condition_else

    close_bracket   shift and go to state 486


state 485

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal . open_brace value1 close_brace array_const1

    open_brace      shift and go to state 487


state 486

    (177) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket . condition_else
    (174) condition_else -> . elif_statement
    (175) condition_else -> . else_statement
    (176) condition_else -> .
    (177) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (178) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (179) else_statement -> .

  ! reduce/reduce conflict for id resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Return resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 176 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 176 (condition_else -> .)
    id              reduce using rule 176 (condition_else -> .)
    For             reduce using rule 176 (condition_else -> .)
    While           reduce using rule 176 (condition_else -> .)
    If              reduce using rule 176 (condition_else -> .)
    Switch          reduce using rule 176 (condition_else -> .)
    Sys_Call        reduce using rule 176 (condition_else -> .)
    Absorb          reduce using rule 176 (condition_else -> .)
    Discharge       reduce using rule 176 (condition_else -> .)
    Link_End        reduce using rule 176 (condition_else -> .)
    Sys             reduce using rule 176 (condition_else -> .)
    $end            reduce using rule 176 (condition_else -> .)
    Return          reduce using rule 176 (condition_else -> .)
    close_bracket   reduce using rule 176 (condition_else -> .)
    Break           reduce using rule 176 (condition_else -> .)
    Continue        reduce using rule 176 (condition_else -> .)
    Avoid           reduce using rule 176 (condition_else -> .)
    Elif            shift and go to state 428
    Else            shift and go to state 429

  ! id              [ reduce using rule 179 (else_statement -> .) ]
  ! For             [ reduce using rule 179 (else_statement -> .) ]
  ! While           [ reduce using rule 179 (else_statement -> .) ]
  ! If              [ reduce using rule 179 (else_statement -> .) ]
  ! Switch          [ reduce using rule 179 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 179 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 179 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 179 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 179 (else_statement -> .) ]
  ! Sys             [ reduce using rule 179 (else_statement -> .) ]
  ! $end            [ reduce using rule 179 (else_statement -> .) ]
  ! Return          [ reduce using rule 179 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 179 (else_statement -> .) ]
  ! Break           [ reduce using rule 179 (else_statement -> .) ]
  ! Continue        [ reduce using rule 179 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 179 (else_statement -> .) ]

    condition_else                 shift and go to state 488
    elif_statement                 shift and go to state 426
    else_statement                 shift and go to state 427

state 487

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace . value1 close_brace array_const1
    (103) value1 -> . value value2
    (57) value -> . num_value
    (58) value -> . lit_str
    (59) value -> . lit_bool
    (60) value -> .
    (64) num_value -> . id_array id_struct
    (65) num_value -> . literals
    (66) num_value -> . arithmetic_expression
    (67) num_value -> . func_call
    (68) num_value -> .
    (73) id_array -> . id array
    (74) id_array -> .
    (83) literals -> . lit_intposi
    (84) literals -> . lit_intnega
    (85) literals -> . lit_decposi
    (86) literals -> . lit_decnega
    (87) literals -> .
    (92) arithmetic_expression -> . open_par arithmetic_expression close_par
    (93) arithmetic_expression -> . num_value arithmetic_operators num_value
    (191) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 68 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 60 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 60 (value -> .)
    lit_str         shift and go to state 76
    lit_bool        shift and go to state 77
    comma           reduce using rule 60 (value -> .)
    close_brace     reduce using rule 60 (value -> .)
    plus            reduce using rule 68 (num_value -> .)
    minus           reduce using rule 68 (num_value -> .)
    times           reduce using rule 68 (num_value -> .)
    divide          reduce using rule 68 (num_value -> .)
    divide_divide   reduce using rule 68 (num_value -> .)
    modulo          reduce using rule 68 (num_value -> .)
    times_times     reduce using rule 68 (num_value -> .)
    id              shift and go to state 73
    period          reduce using rule 74 (id_array -> .)
    lit_intposi     shift and go to state 82
    lit_intnega     shift and go to state 83
    lit_decposi     shift and go to state 84
    lit_decnega     shift and go to state 85
    open_par        shift and go to state 86
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 68 (num_value -> .) ]
  ! close_brace     [ reduce using rule 68 (num_value -> .) ]
  ! plus            [ reduce using rule 74 (id_array -> .) ]
  ! minus           [ reduce using rule 74 (id_array -> .) ]
  ! times           [ reduce using rule 74 (id_array -> .) ]
  ! divide          [ reduce using rule 74 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 74 (id_array -> .) ]
  ! modulo          [ reduce using rule 74 (id_array -> .) ]
  ! times_times     [ reduce using rule 74 (id_array -> .) ]
  ! comma           [ reduce using rule 74 (id_array -> .) ]
  ! close_brace     [ reduce using rule 74 (id_array -> .) ]
  ! plus            [ reduce using rule 87 (literals -> .) ]
  ! minus           [ reduce using rule 87 (literals -> .) ]
  ! times           [ reduce using rule 87 (literals -> .) ]
  ! divide          [ reduce using rule 87 (literals -> .) ]
  ! divide_divide   [ reduce using rule 87 (literals -> .) ]
  ! modulo          [ reduce using rule 87 (literals -> .) ]
  ! times_times     [ reduce using rule 87 (literals -> .) ]
  ! comma           [ reduce using rule 87 (literals -> .) ]
  ! close_brace     [ reduce using rule 87 (literals -> .) ]

    value1                         shift and go to state 489
    value                          shift and go to state 356
    num_value                      shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 488

    (177) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 177 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)


state 489

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 . close_brace array_const1

    close_brace     shift and go to state 490


state 490

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace . array_const1
    (44) array_const1 -> . comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (45) array_const1 -> .

    comma           shift and go to state 462
    Generate        reduce using rule 45 (array_const1 -> .)
    Struct          reduce using rule 45 (array_const1 -> .)
    Link_Start      reduce using rule 45 (array_const1 -> .)
    id              reduce using rule 45 (array_const1 -> .)
    For             reduce using rule 45 (array_const1 -> .)
    While           reduce using rule 45 (array_const1 -> .)
    If              reduce using rule 45 (array_const1 -> .)
    Switch          reduce using rule 45 (array_const1 -> .)
    Sys_Call        reduce using rule 45 (array_const1 -> .)
    Absorb          reduce using rule 45 (array_const1 -> .)
    Discharge       reduce using rule 45 (array_const1 -> .)
    Link_End        reduce using rule 45 (array_const1 -> .)
    Sys             reduce using rule 45 (array_const1 -> .)
    $end            reduce using rule 45 (array_const1 -> .)
    Return          reduce using rule 45 (array_const1 -> .)
    close_bracket   reduce using rule 45 (array_const1 -> .)

    array_const1                   shift and go to state 491

state 491

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .

    Generate        reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Struct          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_Start      reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    id              reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    For             reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    While           reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    If              reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Switch          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys_Call        reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Absorb          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Discharge       reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_End        reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys             reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    $end            reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Return          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    close_bracket   reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Struct in state 0 resolved as shift
WARNING: shift/reduce conflict for Generate in state 0 resolved as shift
WARNING: shift/reduce conflict for Struct in state 0 resolved as shift
WARNING: shift/reduce conflict for Generate in state 0 resolved as shift
WARNING: shift/reduce conflict for Struct in state 3 resolved as shift
WARNING: shift/reduce conflict for Generate in state 3 resolved as shift
WARNING: shift/reduce conflict for Struct in state 3 resolved as shift
WARNING: shift/reduce conflict for Generate in state 3 resolved as shift
WARNING: shift/reduce conflict for Struct in state 4 resolved as shift
WARNING: shift/reduce conflict for Generate in state 4 resolved as shift
WARNING: shift/reduce conflict for Struct in state 4 resolved as shift
WARNING: shift/reduce conflict for Generate in state 4 resolved as shift
WARNING: shift/reduce conflict for id in state 5 resolved as shift
WARNING: shift/reduce conflict for Integer in state 5 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 5 resolved as shift
WARNING: shift/reduce conflict for String in state 5 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 5 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for If in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for If in state 8 resolved as shift
WARNING: shift/reduce conflict for Switch in state 8 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 8 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 8 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 8 resolved as shift
WARNING: shift/reduce conflict for Integer in state 11 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 11 resolved as shift
WARNING: shift/reduce conflict for String in state 11 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 11 resolved as shift
WARNING: shift/reduce conflict for Integer in state 12 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 12 resolved as shift
WARNING: shift/reduce conflict for String in state 12 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 12 resolved as shift
WARNING: shift/reduce conflict for id in state 14 resolved as shift
WARNING: shift/reduce conflict for Generate in state 19 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for If in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for If in state 22 resolved as shift
WARNING: shift/reduce conflict for Switch in state 22 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 22 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 22 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for If in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for If in state 24 resolved as shift
WARNING: shift/reduce conflict for Switch in state 24 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 24 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 24 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for If in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for If in state 25 resolved as shift
WARNING: shift/reduce conflict for Switch in state 25 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 25 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 25 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for If in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for If in state 26 resolved as shift
WARNING: shift/reduce conflict for Switch in state 26 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 26 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 26 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for If in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for If in state 27 resolved as shift
WARNING: shift/reduce conflict for Switch in state 27 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 27 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 27 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for If in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for If in state 28 resolved as shift
WARNING: shift/reduce conflict for Switch in state 28 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 28 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 28 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for If in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for If in state 29 resolved as shift
WARNING: shift/reduce conflict for Switch in state 29 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 29 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 29 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for For in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for For in state 30 resolved as shift
WARNING: shift/reduce conflict for While in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for For in state 30 resolved as shift
WARNING: shift/reduce conflict for While in state 30 resolved as shift
WARNING: shift/reduce conflict for If in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for For in state 30 resolved as shift
WARNING: shift/reduce conflict for While in state 30 resolved as shift
WARNING: shift/reduce conflict for If in state 30 resolved as shift
WARNING: shift/reduce conflict for Switch in state 30 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 30 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 30 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for For in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for For in state 31 resolved as shift
WARNING: shift/reduce conflict for While in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for For in state 31 resolved as shift
WARNING: shift/reduce conflict for While in state 31 resolved as shift
WARNING: shift/reduce conflict for If in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for For in state 31 resolved as shift
WARNING: shift/reduce conflict for While in state 31 resolved as shift
WARNING: shift/reduce conflict for If in state 31 resolved as shift
WARNING: shift/reduce conflict for Switch in state 31 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 31 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 31 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 40 resolved as shift
WARNING: shift/reduce conflict for id in state 41 resolved as shift
WARNING: shift/reduce conflict for id in state 41 resolved as shift
WARNING: shift/reduce conflict for id in state 41 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 41 resolved as shift
WARNING: shift/reduce conflict for Integer in state 42 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 42 resolved as shift
WARNING: shift/reduce conflict for String in state 42 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 42 resolved as shift
WARNING: shift/reduce conflict for id in state 43 resolved as shift
WARNING: shift/reduce conflict for id in state 43 resolved as shift
WARNING: shift/reduce conflict for id in state 44 resolved as shift
WARNING: shift/reduce conflict for id in state 44 resolved as shift
WARNING: shift/reduce conflict for id in state 45 resolved as shift
WARNING: shift/reduce conflict for id in state 45 resolved as shift
WARNING: shift/reduce conflict for Integer in state 46 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 46 resolved as shift
WARNING: shift/reduce conflict for String in state 46 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 46 resolved as shift
WARNING: shift/reduce conflict for comma in state 47 resolved as shift
WARNING: shift/reduce conflict for id in state 49 resolved as shift
WARNING: shift/reduce conflict for id in state 55 resolved as shift
WARNING: shift/reduce conflict for id in state 55 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 66 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 66 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 66 resolved as shift
WARNING: shift/reduce conflict for id in state 87 resolved as shift
WARNING: shift/reduce conflict for id in state 87 resolved as shift
WARNING: shift/reduce conflict for id in state 89 resolved as shift
WARNING: shift/reduce conflict for id in state 89 resolved as shift
WARNING: shift/reduce conflict for id in state 92 resolved as shift
WARNING: shift/reduce conflict for id in state 92 resolved as shift
WARNING: shift/reduce conflict for id in state 105 resolved as shift
WARNING: shift/reduce conflict for id in state 105 resolved as shift
WARNING: shift/reduce conflict for id in state 105 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 105 resolved as shift
WARNING: shift/reduce conflict for id in state 114 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 115 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 131 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 131 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 131 resolved as shift
WARNING: shift/reduce conflict for id in state 132 resolved as shift
WARNING: shift/reduce conflict for id in state 132 resolved as shift
WARNING: shift/reduce conflict for id in state 132 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 132 resolved as shift
WARNING: shift/reduce conflict for id in state 143 resolved as shift
WARNING: shift/reduce conflict for id in state 143 resolved as shift
WARNING: shift/reduce conflict for id in state 147 resolved as shift
WARNING: shift/reduce conflict for id in state 147 resolved as shift
WARNING: shift/reduce conflict for comma in state 150 resolved as shift
WARNING: shift/reduce conflict for id in state 153 resolved as shift
WARNING: shift/reduce conflict for id in state 153 resolved as shift
WARNING: shift/reduce conflict for id in state 153 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 153 resolved as shift
WARNING: shift/reduce conflict for comma in state 157 resolved as shift
WARNING: shift/reduce conflict for id in state 163 resolved as shift
WARNING: shift/reduce conflict for For in state 163 resolved as shift
WARNING: shift/reduce conflict for id in state 163 resolved as shift
WARNING: shift/reduce conflict for For in state 163 resolved as shift
WARNING: shift/reduce conflict for While in state 163 resolved as shift
WARNING: shift/reduce conflict for id in state 163 resolved as shift
WARNING: shift/reduce conflict for For in state 163 resolved as shift
WARNING: shift/reduce conflict for While in state 163 resolved as shift
WARNING: shift/reduce conflict for If in state 163 resolved as shift
WARNING: shift/reduce conflict for id in state 163 resolved as shift
WARNING: shift/reduce conflict for For in state 163 resolved as shift
WARNING: shift/reduce conflict for While in state 163 resolved as shift
WARNING: shift/reduce conflict for If in state 163 resolved as shift
WARNING: shift/reduce conflict for Switch in state 163 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 163 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 163 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 163 resolved as shift
WARNING: shift/reduce conflict for id in state 167 resolved as shift
WARNING: shift/reduce conflict for id in state 167 resolved as shift
WARNING: shift/reduce conflict for id in state 167 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 167 resolved as shift
WARNING: shift/reduce conflict for id in state 168 resolved as shift
WARNING: shift/reduce conflict for id in state 168 resolved as shift
WARNING: shift/reduce conflict for lit_intposi in state 168 resolved as shift
WARNING: shift/reduce conflict for lit_intnega in state 168 resolved as shift
WARNING: shift/reduce conflict for lit_decposi in state 168 resolved as shift
WARNING: shift/reduce conflict for lit_decnega in state 168 resolved as shift
WARNING: shift/reduce conflict for id in state 168 resolved as shift
WARNING: shift/reduce conflict for open_par in state 168 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 168 resolved as shift
WARNING: shift/reduce conflict for equal in state 177 resolved as shift
WARNING: shift/reduce conflict for comma in state 201 resolved as shift
WARNING: shift/reduce conflict for plus in state 213 resolved as shift
WARNING: shift/reduce conflict for minus in state 213 resolved as shift
WARNING: shift/reduce conflict for times in state 213 resolved as shift
WARNING: shift/reduce conflict for divide in state 213 resolved as shift
WARNING: shift/reduce conflict for divide_divide in state 213 resolved as shift
WARNING: shift/reduce conflict for modulo in state 213 resolved as shift
WARNING: shift/reduce conflict for times_times in state 213 resolved as shift
WARNING: shift/reduce conflict for comma in state 217 resolved as shift
WARNING: shift/reduce conflict for id in state 225 resolved as shift
WARNING: shift/reduce conflict for For in state 225 resolved as shift
WARNING: shift/reduce conflict for id in state 225 resolved as shift
WARNING: shift/reduce conflict for For in state 225 resolved as shift
WARNING: shift/reduce conflict for While in state 225 resolved as shift
WARNING: shift/reduce conflict for id in state 225 resolved as shift
WARNING: shift/reduce conflict for For in state 225 resolved as shift
WARNING: shift/reduce conflict for While in state 225 resolved as shift
WARNING: shift/reduce conflict for If in state 225 resolved as shift
WARNING: shift/reduce conflict for id in state 225 resolved as shift
WARNING: shift/reduce conflict for For in state 225 resolved as shift
WARNING: shift/reduce conflict for While in state 225 resolved as shift
WARNING: shift/reduce conflict for If in state 225 resolved as shift
WARNING: shift/reduce conflict for Switch in state 225 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 225 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 225 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 225 resolved as shift
WARNING: shift/reduce conflict for id in state 228 resolved as shift
WARNING: shift/reduce conflict for For in state 228 resolved as shift
WARNING: shift/reduce conflict for id in state 228 resolved as shift
WARNING: shift/reduce conflict for For in state 228 resolved as shift
WARNING: shift/reduce conflict for While in state 228 resolved as shift
WARNING: shift/reduce conflict for id in state 228 resolved as shift
WARNING: shift/reduce conflict for For in state 228 resolved as shift
WARNING: shift/reduce conflict for While in state 228 resolved as shift
WARNING: shift/reduce conflict for If in state 228 resolved as shift
WARNING: shift/reduce conflict for id in state 228 resolved as shift
WARNING: shift/reduce conflict for For in state 228 resolved as shift
WARNING: shift/reduce conflict for While in state 228 resolved as shift
WARNING: shift/reduce conflict for If in state 228 resolved as shift
WARNING: shift/reduce conflict for Switch in state 228 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 228 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 228 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 228 resolved as shift
WARNING: shift/reduce conflict for id in state 231 resolved as shift
WARNING: shift/reduce conflict for For in state 231 resolved as shift
WARNING: shift/reduce conflict for id in state 231 resolved as shift
WARNING: shift/reduce conflict for For in state 231 resolved as shift
WARNING: shift/reduce conflict for While in state 231 resolved as shift
WARNING: shift/reduce conflict for id in state 231 resolved as shift
WARNING: shift/reduce conflict for For in state 231 resolved as shift
WARNING: shift/reduce conflict for While in state 231 resolved as shift
WARNING: shift/reduce conflict for If in state 231 resolved as shift
WARNING: shift/reduce conflict for id in state 231 resolved as shift
WARNING: shift/reduce conflict for For in state 231 resolved as shift
WARNING: shift/reduce conflict for While in state 231 resolved as shift
WARNING: shift/reduce conflict for If in state 231 resolved as shift
WARNING: shift/reduce conflict for Switch in state 231 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 231 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 231 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 231 resolved as shift
WARNING: shift/reduce conflict for id in state 234 resolved as shift
WARNING: shift/reduce conflict for For in state 234 resolved as shift
WARNING: shift/reduce conflict for id in state 234 resolved as shift
WARNING: shift/reduce conflict for For in state 234 resolved as shift
WARNING: shift/reduce conflict for While in state 234 resolved as shift
WARNING: shift/reduce conflict for id in state 234 resolved as shift
WARNING: shift/reduce conflict for For in state 234 resolved as shift
WARNING: shift/reduce conflict for While in state 234 resolved as shift
WARNING: shift/reduce conflict for If in state 234 resolved as shift
WARNING: shift/reduce conflict for id in state 234 resolved as shift
WARNING: shift/reduce conflict for For in state 234 resolved as shift
WARNING: shift/reduce conflict for While in state 234 resolved as shift
WARNING: shift/reduce conflict for If in state 234 resolved as shift
WARNING: shift/reduce conflict for Switch in state 234 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 234 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 234 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 234 resolved as shift
WARNING: shift/reduce conflict for id in state 240 resolved as shift
WARNING: shift/reduce conflict for id in state 240 resolved as shift
WARNING: shift/reduce conflict for id in state 240 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 240 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 256 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 256 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 256 resolved as shift
WARNING: shift/reduce conflict for comma in state 269 resolved as shift
WARNING: shift/reduce conflict for id in state 274 resolved as shift
WARNING: shift/reduce conflict for For in state 274 resolved as shift
WARNING: shift/reduce conflict for id in state 274 resolved as shift
WARNING: shift/reduce conflict for For in state 274 resolved as shift
WARNING: shift/reduce conflict for While in state 274 resolved as shift
WARNING: shift/reduce conflict for id in state 274 resolved as shift
WARNING: shift/reduce conflict for For in state 274 resolved as shift
WARNING: shift/reduce conflict for While in state 274 resolved as shift
WARNING: shift/reduce conflict for If in state 274 resolved as shift
WARNING: shift/reduce conflict for id in state 274 resolved as shift
WARNING: shift/reduce conflict for For in state 274 resolved as shift
WARNING: shift/reduce conflict for While in state 274 resolved as shift
WARNING: shift/reduce conflict for If in state 274 resolved as shift
WARNING: shift/reduce conflict for Switch in state 274 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 274 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 274 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 274 resolved as shift
WARNING: shift/reduce conflict for id in state 276 resolved as shift
WARNING: shift/reduce conflict for For in state 276 resolved as shift
WARNING: shift/reduce conflict for id in state 276 resolved as shift
WARNING: shift/reduce conflict for For in state 276 resolved as shift
WARNING: shift/reduce conflict for While in state 276 resolved as shift
WARNING: shift/reduce conflict for id in state 276 resolved as shift
WARNING: shift/reduce conflict for For in state 276 resolved as shift
WARNING: shift/reduce conflict for While in state 276 resolved as shift
WARNING: shift/reduce conflict for If in state 276 resolved as shift
WARNING: shift/reduce conflict for id in state 276 resolved as shift
WARNING: shift/reduce conflict for For in state 276 resolved as shift
WARNING: shift/reduce conflict for While in state 276 resolved as shift
WARNING: shift/reduce conflict for If in state 276 resolved as shift
WARNING: shift/reduce conflict for Switch in state 276 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 276 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 276 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 276 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for While in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for While in state 278 resolved as shift
WARNING: shift/reduce conflict for If in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 278 resolved as shift
WARNING: shift/reduce conflict for For in state 278 resolved as shift
WARNING: shift/reduce conflict for While in state 278 resolved as shift
WARNING: shift/reduce conflict for If in state 278 resolved as shift
WARNING: shift/reduce conflict for Switch in state 278 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 278 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 278 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 278 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for For in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for For in state 280 resolved as shift
WARNING: shift/reduce conflict for While in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for For in state 280 resolved as shift
WARNING: shift/reduce conflict for While in state 280 resolved as shift
WARNING: shift/reduce conflict for If in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for For in state 280 resolved as shift
WARNING: shift/reduce conflict for While in state 280 resolved as shift
WARNING: shift/reduce conflict for If in state 280 resolved as shift
WARNING: shift/reduce conflict for Switch in state 280 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 280 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 280 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 282 resolved as shift
WARNING: shift/reduce conflict for For in state 282 resolved as shift
WARNING: shift/reduce conflict for id in state 282 resolved as shift
WARNING: shift/reduce conflict for For in state 282 resolved as shift
WARNING: shift/reduce conflict for While in state 282 resolved as shift
WARNING: shift/reduce conflict for id in state 282 resolved as shift
WARNING: shift/reduce conflict for For in state 282 resolved as shift
WARNING: shift/reduce conflict for While in state 282 resolved as shift
WARNING: shift/reduce conflict for If in state 282 resolved as shift
WARNING: shift/reduce conflict for id in state 282 resolved as shift
WARNING: shift/reduce conflict for For in state 282 resolved as shift
WARNING: shift/reduce conflict for While in state 282 resolved as shift
WARNING: shift/reduce conflict for If in state 282 resolved as shift
WARNING: shift/reduce conflict for Switch in state 282 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 282 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 282 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 282 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for For in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for For in state 284 resolved as shift
WARNING: shift/reduce conflict for While in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for For in state 284 resolved as shift
WARNING: shift/reduce conflict for While in state 284 resolved as shift
WARNING: shift/reduce conflict for If in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for For in state 284 resolved as shift
WARNING: shift/reduce conflict for While in state 284 resolved as shift
WARNING: shift/reduce conflict for If in state 284 resolved as shift
WARNING: shift/reduce conflict for Switch in state 284 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 284 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 284 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 286 resolved as shift
WARNING: shift/reduce conflict for id in state 286 resolved as shift
WARNING: shift/reduce conflict for id in state 286 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 286 resolved as shift
WARNING: shift/reduce conflict for Break in state 298 resolved as shift
WARNING: shift/reduce conflict for Continue in state 298 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 298 resolved as shift
WARNING: shift/reduce conflict for id in state 298 resolved as shift
WARNING: shift/reduce conflict for id in state 298 resolved as shift
WARNING: shift/reduce conflict for Break in state 298 resolved as shift
WARNING: shift/reduce conflict for Continue in state 298 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 298 resolved as shift
WARNING: shift/reduce conflict for For in state 298 resolved as shift
WARNING: shift/reduce conflict for id in state 298 resolved as shift
WARNING: shift/reduce conflict for For in state 298 resolved as shift
WARNING: shift/reduce conflict for Break in state 298 resolved as shift
WARNING: shift/reduce conflict for Continue in state 298 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 298 resolved as shift
WARNING: shift/reduce conflict for While in state 298 resolved as shift
WARNING: shift/reduce conflict for id in state 298 resolved as shift
WARNING: shift/reduce conflict for For in state 298 resolved as shift
WARNING: shift/reduce conflict for While in state 298 resolved as shift
WARNING: shift/reduce conflict for Break in state 298 resolved as shift
WARNING: shift/reduce conflict for Continue in state 298 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 298 resolved as shift
WARNING: shift/reduce conflict for If in state 298 resolved as shift
WARNING: shift/reduce conflict for id in state 298 resolved as shift
WARNING: shift/reduce conflict for For in state 298 resolved as shift
WARNING: shift/reduce conflict for While in state 298 resolved as shift
WARNING: shift/reduce conflict for If in state 298 resolved as shift
WARNING: shift/reduce conflict for Break in state 298 resolved as shift
WARNING: shift/reduce conflict for Continue in state 298 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 298 resolved as shift
WARNING: shift/reduce conflict for Switch in state 298 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 298 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 298 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 298 resolved as shift
WARNING: shift/reduce conflict for Break in state 300 resolved as shift
WARNING: shift/reduce conflict for Continue in state 300 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 300 resolved as shift
WARNING: shift/reduce conflict for id in state 300 resolved as shift
WARNING: shift/reduce conflict for id in state 300 resolved as shift
WARNING: shift/reduce conflict for Break in state 300 resolved as shift
WARNING: shift/reduce conflict for Continue in state 300 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 300 resolved as shift
WARNING: shift/reduce conflict for For in state 300 resolved as shift
WARNING: shift/reduce conflict for id in state 300 resolved as shift
WARNING: shift/reduce conflict for For in state 300 resolved as shift
WARNING: shift/reduce conflict for Break in state 300 resolved as shift
WARNING: shift/reduce conflict for Continue in state 300 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 300 resolved as shift
WARNING: shift/reduce conflict for While in state 300 resolved as shift
WARNING: shift/reduce conflict for id in state 300 resolved as shift
WARNING: shift/reduce conflict for For in state 300 resolved as shift
WARNING: shift/reduce conflict for While in state 300 resolved as shift
WARNING: shift/reduce conflict for Break in state 300 resolved as shift
WARNING: shift/reduce conflict for Continue in state 300 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 300 resolved as shift
WARNING: shift/reduce conflict for If in state 300 resolved as shift
WARNING: shift/reduce conflict for id in state 300 resolved as shift
WARNING: shift/reduce conflict for For in state 300 resolved as shift
WARNING: shift/reduce conflict for While in state 300 resolved as shift
WARNING: shift/reduce conflict for If in state 300 resolved as shift
WARNING: shift/reduce conflict for Break in state 300 resolved as shift
WARNING: shift/reduce conflict for Continue in state 300 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 300 resolved as shift
WARNING: shift/reduce conflict for Switch in state 300 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 300 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 300 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 300 resolved as shift
WARNING: shift/reduce conflict for comma in state 306 resolved as shift
WARNING: shift/reduce conflict for id in state 318 resolved as shift
WARNING: shift/reduce conflict for For in state 318 resolved as shift
WARNING: shift/reduce conflict for id in state 318 resolved as shift
WARNING: shift/reduce conflict for For in state 318 resolved as shift
WARNING: shift/reduce conflict for While in state 318 resolved as shift
WARNING: shift/reduce conflict for id in state 318 resolved as shift
WARNING: shift/reduce conflict for For in state 318 resolved as shift
WARNING: shift/reduce conflict for While in state 318 resolved as shift
WARNING: shift/reduce conflict for If in state 318 resolved as shift
WARNING: shift/reduce conflict for id in state 318 resolved as shift
WARNING: shift/reduce conflict for For in state 318 resolved as shift
WARNING: shift/reduce conflict for While in state 318 resolved as shift
WARNING: shift/reduce conflict for If in state 318 resolved as shift
WARNING: shift/reduce conflict for Switch in state 318 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 318 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 318 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 318 resolved as shift
WARNING: shift/reduce conflict for id in state 319 resolved as shift
WARNING: shift/reduce conflict for For in state 319 resolved as shift
WARNING: shift/reduce conflict for id in state 319 resolved as shift
WARNING: shift/reduce conflict for For in state 319 resolved as shift
WARNING: shift/reduce conflict for While in state 319 resolved as shift
WARNING: shift/reduce conflict for id in state 319 resolved as shift
WARNING: shift/reduce conflict for For in state 319 resolved as shift
WARNING: shift/reduce conflict for While in state 319 resolved as shift
WARNING: shift/reduce conflict for If in state 319 resolved as shift
WARNING: shift/reduce conflict for id in state 319 resolved as shift
WARNING: shift/reduce conflict for For in state 319 resolved as shift
WARNING: shift/reduce conflict for While in state 319 resolved as shift
WARNING: shift/reduce conflict for If in state 319 resolved as shift
WARNING: shift/reduce conflict for Switch in state 319 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 319 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 319 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 319 resolved as shift
WARNING: shift/reduce conflict for id in state 323 resolved as shift
WARNING: shift/reduce conflict for For in state 323 resolved as shift
WARNING: shift/reduce conflict for id in state 323 resolved as shift
WARNING: shift/reduce conflict for For in state 323 resolved as shift
WARNING: shift/reduce conflict for While in state 323 resolved as shift
WARNING: shift/reduce conflict for id in state 323 resolved as shift
WARNING: shift/reduce conflict for For in state 323 resolved as shift
WARNING: shift/reduce conflict for While in state 323 resolved as shift
WARNING: shift/reduce conflict for If in state 323 resolved as shift
WARNING: shift/reduce conflict for id in state 323 resolved as shift
WARNING: shift/reduce conflict for For in state 323 resolved as shift
WARNING: shift/reduce conflict for While in state 323 resolved as shift
WARNING: shift/reduce conflict for If in state 323 resolved as shift
WARNING: shift/reduce conflict for Switch in state 323 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 323 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 323 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 323 resolved as shift
WARNING: shift/reduce conflict for id in state 327 resolved as shift
WARNING: shift/reduce conflict for For in state 327 resolved as shift
WARNING: shift/reduce conflict for id in state 327 resolved as shift
WARNING: shift/reduce conflict for For in state 327 resolved as shift
WARNING: shift/reduce conflict for While in state 327 resolved as shift
WARNING: shift/reduce conflict for id in state 327 resolved as shift
WARNING: shift/reduce conflict for For in state 327 resolved as shift
WARNING: shift/reduce conflict for While in state 327 resolved as shift
WARNING: shift/reduce conflict for If in state 327 resolved as shift
WARNING: shift/reduce conflict for id in state 327 resolved as shift
WARNING: shift/reduce conflict for For in state 327 resolved as shift
WARNING: shift/reduce conflict for While in state 327 resolved as shift
WARNING: shift/reduce conflict for If in state 327 resolved as shift
WARNING: shift/reduce conflict for Switch in state 327 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 327 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 327 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 327 resolved as shift
WARNING: shift/reduce conflict for id in state 332 resolved as shift
WARNING: shift/reduce conflict for For in state 332 resolved as shift
WARNING: shift/reduce conflict for id in state 332 resolved as shift
WARNING: shift/reduce conflict for For in state 332 resolved as shift
WARNING: shift/reduce conflict for While in state 332 resolved as shift
WARNING: shift/reduce conflict for id in state 332 resolved as shift
WARNING: shift/reduce conflict for For in state 332 resolved as shift
WARNING: shift/reduce conflict for While in state 332 resolved as shift
WARNING: shift/reduce conflict for If in state 332 resolved as shift
WARNING: shift/reduce conflict for id in state 332 resolved as shift
WARNING: shift/reduce conflict for For in state 332 resolved as shift
WARNING: shift/reduce conflict for While in state 332 resolved as shift
WARNING: shift/reduce conflict for If in state 332 resolved as shift
WARNING: shift/reduce conflict for Switch in state 332 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 332 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 332 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 332 resolved as shift
WARNING: shift/reduce conflict for id in state 335 resolved as shift
WARNING: shift/reduce conflict for id in state 343 resolved as shift
WARNING: shift/reduce conflict for For in state 343 resolved as shift
WARNING: shift/reduce conflict for id in state 343 resolved as shift
WARNING: shift/reduce conflict for For in state 343 resolved as shift
WARNING: shift/reduce conflict for While in state 343 resolved as shift
WARNING: shift/reduce conflict for id in state 343 resolved as shift
WARNING: shift/reduce conflict for For in state 343 resolved as shift
WARNING: shift/reduce conflict for While in state 343 resolved as shift
WARNING: shift/reduce conflict for If in state 343 resolved as shift
WARNING: shift/reduce conflict for id in state 343 resolved as shift
WARNING: shift/reduce conflict for For in state 343 resolved as shift
WARNING: shift/reduce conflict for While in state 343 resolved as shift
WARNING: shift/reduce conflict for If in state 343 resolved as shift
WARNING: shift/reduce conflict for Switch in state 343 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 343 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 343 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 343 resolved as shift
WARNING: shift/reduce conflict for Break in state 348 resolved as shift
WARNING: shift/reduce conflict for Continue in state 348 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 348 resolved as shift
WARNING: shift/reduce conflict for id in state 348 resolved as shift
WARNING: shift/reduce conflict for id in state 348 resolved as shift
WARNING: shift/reduce conflict for Break in state 348 resolved as shift
WARNING: shift/reduce conflict for Continue in state 348 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 348 resolved as shift
WARNING: shift/reduce conflict for For in state 348 resolved as shift
WARNING: shift/reduce conflict for id in state 348 resolved as shift
WARNING: shift/reduce conflict for For in state 348 resolved as shift
WARNING: shift/reduce conflict for Break in state 348 resolved as shift
WARNING: shift/reduce conflict for Continue in state 348 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 348 resolved as shift
WARNING: shift/reduce conflict for While in state 348 resolved as shift
WARNING: shift/reduce conflict for id in state 348 resolved as shift
WARNING: shift/reduce conflict for For in state 348 resolved as shift
WARNING: shift/reduce conflict for While in state 348 resolved as shift
WARNING: shift/reduce conflict for Break in state 348 resolved as shift
WARNING: shift/reduce conflict for Continue in state 348 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 348 resolved as shift
WARNING: shift/reduce conflict for If in state 348 resolved as shift
WARNING: shift/reduce conflict for id in state 348 resolved as shift
WARNING: shift/reduce conflict for For in state 348 resolved as shift
WARNING: shift/reduce conflict for While in state 348 resolved as shift
WARNING: shift/reduce conflict for If in state 348 resolved as shift
WARNING: shift/reduce conflict for Break in state 348 resolved as shift
WARNING: shift/reduce conflict for Continue in state 348 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 348 resolved as shift
WARNING: shift/reduce conflict for Switch in state 348 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 348 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 348 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 348 resolved as shift
WARNING: shift/reduce conflict for id in state 349 resolved as shift
WARNING: shift/reduce conflict for For in state 349 resolved as shift
WARNING: shift/reduce conflict for id in state 349 resolved as shift
WARNING: shift/reduce conflict for For in state 349 resolved as shift
WARNING: shift/reduce conflict for While in state 349 resolved as shift
WARNING: shift/reduce conflict for id in state 349 resolved as shift
WARNING: shift/reduce conflict for For in state 349 resolved as shift
WARNING: shift/reduce conflict for While in state 349 resolved as shift
WARNING: shift/reduce conflict for If in state 349 resolved as shift
WARNING: shift/reduce conflict for id in state 349 resolved as shift
WARNING: shift/reduce conflict for For in state 349 resolved as shift
WARNING: shift/reduce conflict for While in state 349 resolved as shift
WARNING: shift/reduce conflict for If in state 349 resolved as shift
WARNING: shift/reduce conflict for Switch in state 349 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 349 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 349 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 349 resolved as shift
WARNING: shift/reduce conflict for id in state 353 resolved as shift
WARNING: shift/reduce conflict for id in state 353 resolved as shift
WARNING: shift/reduce conflict for id in state 353 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 353 resolved as shift
WARNING: shift/reduce conflict for id in state 357 resolved as shift
WARNING: shift/reduce conflict for For in state 357 resolved as shift
WARNING: shift/reduce conflict for id in state 357 resolved as shift
WARNING: shift/reduce conflict for For in state 357 resolved as shift
WARNING: shift/reduce conflict for While in state 357 resolved as shift
WARNING: shift/reduce conflict for id in state 357 resolved as shift
WARNING: shift/reduce conflict for For in state 357 resolved as shift
WARNING: shift/reduce conflict for While in state 357 resolved as shift
WARNING: shift/reduce conflict for If in state 357 resolved as shift
WARNING: shift/reduce conflict for id in state 357 resolved as shift
WARNING: shift/reduce conflict for For in state 357 resolved as shift
WARNING: shift/reduce conflict for While in state 357 resolved as shift
WARNING: shift/reduce conflict for If in state 357 resolved as shift
WARNING: shift/reduce conflict for Switch in state 357 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 357 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 357 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 357 resolved as shift
WARNING: shift/reduce conflict for Break in state 383 resolved as shift
WARNING: shift/reduce conflict for Continue in state 383 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 383 resolved as shift
WARNING: shift/reduce conflict for id in state 383 resolved as shift
WARNING: shift/reduce conflict for id in state 383 resolved as shift
WARNING: shift/reduce conflict for Break in state 383 resolved as shift
WARNING: shift/reduce conflict for Continue in state 383 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 383 resolved as shift
WARNING: shift/reduce conflict for For in state 383 resolved as shift
WARNING: shift/reduce conflict for id in state 383 resolved as shift
WARNING: shift/reduce conflict for For in state 383 resolved as shift
WARNING: shift/reduce conflict for Break in state 383 resolved as shift
WARNING: shift/reduce conflict for Continue in state 383 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 383 resolved as shift
WARNING: shift/reduce conflict for While in state 383 resolved as shift
WARNING: shift/reduce conflict for id in state 383 resolved as shift
WARNING: shift/reduce conflict for For in state 383 resolved as shift
WARNING: shift/reduce conflict for While in state 383 resolved as shift
WARNING: shift/reduce conflict for Break in state 383 resolved as shift
WARNING: shift/reduce conflict for Continue in state 383 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 383 resolved as shift
WARNING: shift/reduce conflict for If in state 383 resolved as shift
WARNING: shift/reduce conflict for id in state 383 resolved as shift
WARNING: shift/reduce conflict for For in state 383 resolved as shift
WARNING: shift/reduce conflict for While in state 383 resolved as shift
WARNING: shift/reduce conflict for If in state 383 resolved as shift
WARNING: shift/reduce conflict for Break in state 383 resolved as shift
WARNING: shift/reduce conflict for Continue in state 383 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 383 resolved as shift
WARNING: shift/reduce conflict for Switch in state 383 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 383 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 383 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 383 resolved as shift
WARNING: shift/reduce conflict for comma in state 395 resolved as shift
WARNING: shift/reduce conflict for equal in state 422 resolved as shift
WARNING: shift/reduce conflict for comma in state 432 resolved as shift
WARNING: shift/reduce conflict for Break in state 471 resolved as shift
WARNING: shift/reduce conflict for Continue in state 471 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 471 resolved as shift
WARNING: shift/reduce conflict for id in state 471 resolved as shift
WARNING: shift/reduce conflict for id in state 471 resolved as shift
WARNING: shift/reduce conflict for Break in state 471 resolved as shift
WARNING: shift/reduce conflict for Continue in state 471 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 471 resolved as shift
WARNING: shift/reduce conflict for For in state 471 resolved as shift
WARNING: shift/reduce conflict for id in state 471 resolved as shift
WARNING: shift/reduce conflict for For in state 471 resolved as shift
WARNING: shift/reduce conflict for Break in state 471 resolved as shift
WARNING: shift/reduce conflict for Continue in state 471 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 471 resolved as shift
WARNING: shift/reduce conflict for While in state 471 resolved as shift
WARNING: shift/reduce conflict for id in state 471 resolved as shift
WARNING: shift/reduce conflict for For in state 471 resolved as shift
WARNING: shift/reduce conflict for While in state 471 resolved as shift
WARNING: shift/reduce conflict for Break in state 471 resolved as shift
WARNING: shift/reduce conflict for Continue in state 471 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 471 resolved as shift
WARNING: shift/reduce conflict for If in state 471 resolved as shift
WARNING: shift/reduce conflict for id in state 471 resolved as shift
WARNING: shift/reduce conflict for For in state 471 resolved as shift
WARNING: shift/reduce conflict for While in state 471 resolved as shift
WARNING: shift/reduce conflict for If in state 471 resolved as shift
WARNING: shift/reduce conflict for Break in state 471 resolved as shift
WARNING: shift/reduce conflict for Continue in state 471 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 471 resolved as shift
WARNING: shift/reduce conflict for Switch in state 471 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 471 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 471 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 471 resolved as shift
WARNING: shift/reduce conflict for comma in state 473 resolved as shift
WARNING: shift/reduce conflict for Break in state 482 resolved as shift
WARNING: shift/reduce conflict for Continue in state 482 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 482 resolved as shift
WARNING: shift/reduce conflict for id in state 482 resolved as shift
WARNING: shift/reduce conflict for id in state 482 resolved as shift
WARNING: shift/reduce conflict for Break in state 482 resolved as shift
WARNING: shift/reduce conflict for Continue in state 482 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 482 resolved as shift
WARNING: shift/reduce conflict for For in state 482 resolved as shift
WARNING: shift/reduce conflict for id in state 482 resolved as shift
WARNING: shift/reduce conflict for For in state 482 resolved as shift
WARNING: shift/reduce conflict for Break in state 482 resolved as shift
WARNING: shift/reduce conflict for Continue in state 482 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 482 resolved as shift
WARNING: shift/reduce conflict for While in state 482 resolved as shift
WARNING: shift/reduce conflict for id in state 482 resolved as shift
WARNING: shift/reduce conflict for For in state 482 resolved as shift
WARNING: shift/reduce conflict for While in state 482 resolved as shift
WARNING: shift/reduce conflict for Break in state 482 resolved as shift
WARNING: shift/reduce conflict for Continue in state 482 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 482 resolved as shift
WARNING: shift/reduce conflict for If in state 482 resolved as shift
WARNING: shift/reduce conflict for id in state 482 resolved as shift
WARNING: shift/reduce conflict for For in state 482 resolved as shift
WARNING: shift/reduce conflict for While in state 482 resolved as shift
WARNING: shift/reduce conflict for If in state 482 resolved as shift
WARNING: shift/reduce conflict for Break in state 482 resolved as shift
WARNING: shift/reduce conflict for Continue in state 482 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 482 resolved as shift
WARNING: shift/reduce conflict for Switch in state 482 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 482 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 482 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 482 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 0 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 3 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 4 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 6 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (const_var_dec -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (conditional_statements -> if_statement) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (conditional_statements -> if_statement) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (conditional_statements -> switch_statements) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (conditional_statements -> switch_statements) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 30 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 31 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 41 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 43 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 44 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 44
WARNING: reduce/reduce conflict in state 45 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 45
WARNING: reduce/reduce conflict in state 46 resolved using rule (struct_element2 -> <empty>)
WARNING: rejected rule (data_type -> <empty>) in state 46
WARNING: reduce/reduce conflict in state 66 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 66 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 68 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 69 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 86 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 86
WARNING: reduce/reduce conflict in state 86 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 86
WARNING: reduce/reduce conflict in state 87 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 87
WARNING: reduce/reduce conflict in state 89 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 89
WARNING: reduce/reduce conflict in state 92 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 105 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 105 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 105 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 105 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 105 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 109 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (parameters -> <empty>) in state 109
WARNING: reduce/reduce conflict in state 110 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (parameters -> <empty>) in state 110
WARNING: reduce/reduce conflict in state 119 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 119 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 119 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 119 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 119 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 128 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 128 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 131 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 131
WARNING: reduce/reduce conflict in state 131 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 131
WARNING: reduce/reduce conflict in state 132 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 132
WARNING: reduce/reduce conflict in state 132 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 132
WARNING: reduce/reduce conflict in state 143 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 143
WARNING: reduce/reduce conflict in state 147 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 147
WARNING: reduce/reduce conflict in state 153 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 159 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (parameters -> <empty>) in state 159
WARNING: reduce/reduce conflict in state 163 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 167 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 167
WARNING: reduce/reduce conflict in state 167 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 168
WARNING: reduce/reduce conflict in state 168 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 168
WARNING: reduce/reduce conflict in state 168 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 168
WARNING: reduce/reduce conflict in state 168 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 168
WARNING: reduce/reduce conflict in state 180 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 180
WARNING: reduce/reduce conflict in state 180 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 180
WARNING: reduce/reduce conflict in state 180 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 180
WARNING: reduce/reduce conflict in state 188 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 189 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 189
WARNING: reduce/reduce conflict in state 189 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 189
WARNING: reduce/reduce conflict in state 189 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 189
WARNING: reduce/reduce conflict in state 189 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 189
WARNING: reduce/reduce conflict in state 189 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 189
WARNING: reduce/reduce conflict in state 225 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 228 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 228
WARNING: reduce/reduce conflict in state 228 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 228
WARNING: reduce/reduce conflict in state 228 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 228
WARNING: reduce/reduce conflict in state 228 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 228
WARNING: reduce/reduce conflict in state 228 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 228
WARNING: reduce/reduce conflict in state 228 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 228
WARNING: reduce/reduce conflict in state 228 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 228
WARNING: reduce/reduce conflict in state 231 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 231
WARNING: reduce/reduce conflict in state 234 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 240 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 240
WARNING: reduce/reduce conflict in state 240 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 240
WARNING: reduce/reduce conflict in state 240 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 240
WARNING: reduce/reduce conflict in state 240 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 240
WARNING: reduce/reduce conflict in state 240 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 240
WARNING: reduce/reduce conflict in state 246 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 246
WARNING: reduce/reduce conflict in state 246 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 246
WARNING: reduce/reduce conflict in state 246 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 246
WARNING: reduce/reduce conflict in state 246 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 246
WARNING: reduce/reduce conflict in state 246 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 246
WARNING: reduce/reduce conflict in state 256 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 256
WARNING: reduce/reduce conflict in state 256 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 256
WARNING: reduce/reduce conflict in state 257 resolved using rule (id_array -> id array)
WARNING: rejected rule (id_array_opt -> id array) in state 257
WARNING: reduce/reduce conflict in state 260 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 260 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 262 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 262
WARNING: reduce/reduce conflict in state 262 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 262
WARNING: reduce/reduce conflict in state 274 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 274 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 274 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 274 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 274 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 274 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 274 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 276 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 282 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 286 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 286
WARNING: reduce/reduce conflict in state 286 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 286
WARNING: reduce/reduce conflict in state 286 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 286
WARNING: reduce/reduce conflict in state 286 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 286
WARNING: reduce/reduce conflict in state 286 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 286
WARNING: reduce/reduce conflict in state 298 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 298 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 298
WARNING: reduce/reduce conflict in state 300 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 300 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 306 resolved using rule (array -> open_brace close_brace)
WARNING: rejected rule (more_param -> <empty>) in state 306
WARNING: reduce/reduce conflict in state 316 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 316
WARNING: reduce/reduce conflict in state 316 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 316
WARNING: reduce/reduce conflict in state 316 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 316
WARNING: reduce/reduce conflict in state 316 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 316
WARNING: reduce/reduce conflict in state 316 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 316
WARNING: reduce/reduce conflict in state 318 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 318 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 318 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 318 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 318 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 318 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 318 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 319 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 323 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 323
WARNING: reduce/reduce conflict in state 327 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 327 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 327 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 327 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 327 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 327 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 327 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 332 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 332 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 332 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 332 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 332 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 332 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 332 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 335 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 336 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 336
WARNING: reduce/reduce conflict in state 336 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 336
WARNING: reduce/reduce conflict in state 336 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 336
WARNING: reduce/reduce conflict in state 336 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 336
WARNING: reduce/reduce conflict in state 336 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 336
WARNING: reduce/reduce conflict in state 339 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 343 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 348 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 348 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 348
WARNING: reduce/reduce conflict in state 349 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 349
WARNING: reduce/reduce conflict in state 349 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 349
WARNING: reduce/reduce conflict in state 349 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 349
WARNING: reduce/reduce conflict in state 349 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 349
WARNING: reduce/reduce conflict in state 349 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 349
WARNING: reduce/reduce conflict in state 349 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 349
WARNING: reduce/reduce conflict in state 349 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 349
WARNING: reduce/reduce conflict in state 352 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 353 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 353
WARNING: reduce/reduce conflict in state 353 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 353
WARNING: reduce/reduce conflict in state 353 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 353
WARNING: reduce/reduce conflict in state 353 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 353
WARNING: reduce/reduce conflict in state 353 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 353
WARNING: reduce/reduce conflict in state 357 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 357
WARNING: reduce/reduce conflict in state 357 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 357
WARNING: reduce/reduce conflict in state 357 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 357
WARNING: reduce/reduce conflict in state 357 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 357
WARNING: reduce/reduce conflict in state 357 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 357
WARNING: reduce/reduce conflict in state 357 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 357
WARNING: reduce/reduce conflict in state 357 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 357
WARNING: reduce/reduce conflict in state 383 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 383 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 383
WARNING: reduce/reduce conflict in state 388 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 388
WARNING: reduce/reduce conflict in state 397 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 397
WARNING: reduce/reduce conflict in state 397 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 397
WARNING: reduce/reduce conflict in state 397 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 397
WARNING: reduce/reduce conflict in state 397 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 397
WARNING: reduce/reduce conflict in state 397 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 397
WARNING: reduce/reduce conflict in state 455 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 455
WARNING: reduce/reduce conflict in state 455 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 455
WARNING: reduce/reduce conflict in state 455 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 455
WARNING: reduce/reduce conflict in state 455 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 455
WARNING: reduce/reduce conflict in state 455 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 455
WARNING: reduce/reduce conflict in state 471 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 471 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 482 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 482 resolved using rule (statements -> <empty>)
WARNING: rejected rule (if_statement -> <empty>) in state 482
WARNING: reduce/reduce conflict in state 486 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 486
WARNING: reduce/reduce conflict in state 487 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 487
WARNING: reduce/reduce conflict in state 487 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 487
WARNING: reduce/reduce conflict in state 487 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 487
WARNING: reduce/reduce conflict in state 487 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 487
WARNING: reduce/reduce conflict in state 487 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 487
WARNING: Rule (struct_dec -> <empty>) is never reduced
WARNING: Rule (assignment_statements -> <empty>) is never reduced
WARNING: Rule (for_statements -> <empty>) is never reduced
WARNING: Rule (while_statements -> <empty>) is never reduced
WARNING: Rule (if_statement -> <empty>) is never reduced
WARNING: Rule (conditional_statements -> if_statement) is never reduced
WARNING: Rule (conditional_statements -> switch_statements) is never reduced
WARNING: Rule (literals -> <empty>) is never reduced
WARNING: Rule (id_array1 -> <empty>) is never reduced
WARNING: Rule (inside_statements -> <empty>) is never reduced
WARNING: Rule (else_statement -> <empty>) is never reduced
