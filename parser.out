Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    comment

Grammar

Rule 0     S' -> program
Rule 1     program -> global_dec Link_Start declare_statements statements Link_End functions
Rule 2     empty -> <empty>
Rule 3     global_dec -> struct_dec global_dec
Rule 4     global_dec -> declare_statements global_dec
Rule 5     global_dec -> empty
Rule 6     struct_dec -> Struct id open_bracket struct_element1 struct_element2 close_bracket id_array1
Rule 7     struct_element1 -> data_type id_array_dec
Rule 8     data_type -> Integer
Rule 9     data_type -> Decimal
Rule 10    data_type -> String
Rule 11    data_type -> Boolean
Rule 12    id_array_dec -> id id_array_dec2
Rule 13    id_array_dec2 -> id_dec1
Rule 14    id_array_dec2 -> open_brace lit_intposi close_brace array_dec1
Rule 15    id_array_dec2 -> empty
Rule 16    id_dec1 -> comma id id_dec1
Rule 17    id_dec1 -> empty
Rule 18    array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1
Rule 19    array_dec1 -> empty
Rule 20    struct_element2 -> comma struct_element1 struct_element2
Rule 21    struct_element2 -> empty
Rule 22    declare_statements -> Generate const_var_dec declare_statements
Rule 23    declare_statements -> empty
Rule 24    const_var_dec -> Fixed data_type id_array_const
Rule 25    const_var_dec -> data_type id_array_var
Rule 26    id_array_const -> id id_array_const2
Rule 27    id_array_const2 -> equal value id_const1
Rule 28    id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 29    id_const1 -> comma id equal value id_const1
Rule 30    id_const1 -> empty
Rule 31    array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 32    array_const1 -> empty
Rule 33    id_array_var -> id id_array_var2
Rule 34    id_array_var2 -> var_init id_var1
Rule 35    id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1
Rule 36    var_init -> equal value id_var1
Rule 37    var_init -> empty
Rule 38    id_var1 -> comma id var_init id_var1
Rule 39    id_var1 -> empty
Rule 40    array_init -> equal open_brace value1 close_brace array_var1
Rule 41    array_init -> empty
Rule 42    array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1
Rule 43    array_var1 -> empty
Rule 44    value -> num_value
Rule 45    value -> lit_str
Rule 46    value -> lit_bool
Rule 47    num_value -> id_array id_struct
Rule 48    num_value -> literals
Rule 49    num_value -> arithmetic_expression
Rule 50    num_value -> func_call
Rule 51    id_array -> id array
Rule 52    array -> open_brace lit_intposi close_brace
Rule 53    array -> empty
Rule 54    id_array1 -> id_array id_array2
Rule 55    id_array2 -> comma id_array1
Rule 56    id_array2 -> empty
Rule 57    literals -> lit_intposi
Rule 58    literals -> lit_intnega
Rule 59    literals -> lit_decposi
Rule 60    literals -> lit_decnega
Rule 61    arithmetic_expression -> open_par arithmetic_expression close_par
Rule 62    arithmetic_expression -> num_value arithmetic_operators num_value
Rule 63    arithmetic_operators -> plus
Rule 64    arithmetic_operators -> minus
Rule 65    arithmetic_operators -> times
Rule 66    arithmetic_operators -> divide
Rule 67    arithmetic_operators -> divide_divide
Rule 68    arithmetic_operators -> modulo
Rule 69    arithmetic_operators -> times_times
Rule 70    id_struct -> period id_array
Rule 71    id_struct -> empty
Rule 72    value1 -> value value2
Rule 73    value2 -> comma value1
Rule 74    value2 -> empty
Rule 75    statements -> assignment_statements statements
Rule 76    statements -> looping_statements statements
Rule 77    statements -> conditional_statements statements
Rule 78    statements -> io_statements statements
Rule 79    statements -> func_call statements
Rule 80    statements -> empty
Rule 81    assignment_statements -> id assignment_statements2
Rule 82    assignment_statements2 -> array id_struct assignment_exp
Rule 83    assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace
Rule 84    assignment_exp -> assignment_operators num_value
Rule 85    assignment_exp -> equal assign_value
Rule 86    assign_value -> num_value
Rule 87    assign_value -> more_id value
Rule 88    more_id -> id_array id_struct equal more_id
Rule 89    more_id -> empty
Rule 90    assignment_operators -> plus_equal
Rule 91    assignment_operators -> minus_equal
Rule 92    assignment_operators -> times_equal
Rule 93    assignment_operators -> divide_equal
Rule 94    assignment_operators -> divide_divide_equal
Rule 95    assignment_operators -> modulo_equal
Rule 96    assignment_operators -> times_times_equal
Rule 97    more_array -> equal id open_brace lit_intposi close_brace more_array
Rule 98    more_array -> empty
Rule 99    looping_statements -> for_statements
Rule 100   looping_statements -> while_statements
Rule 101   for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
Rule 102   while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket
Rule 103   inside_statements -> statements inside_statements
Rule 104   inside_statements -> control_statements inside_statements
Rule 105   control_statements -> Break
Rule 106   control_statements -> Continue
Rule 107   control_statements -> Avoid
Rule 108   condition -> relational_expression
Rule 109   condition -> logical_expression
Rule 110   condition -> lit_bool
Rule 111   condition -> Not open_par condition_not close_par
Rule 112   condition_not -> relational_expression
Rule 113   condition_not -> logical_expression
Rule 114   condition_not -> lit_bool
Rule 115   relational_expression -> value relational_operators value
Rule 116   relational_operators -> greater_than
Rule 117   relational_operators -> less_than
Rule 118   relational_operators -> equal_equal
Rule 119   relational_operators -> not_equal
Rule 120   relational_operators -> great_than_equal
Rule 121   relational_operators -> less_than_equal
Rule 122   logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par
Rule 123   logical_operand -> Not open_par logical_operand close_par
Rule 124   logical_operand -> relational_expression
Rule 125   logical_operand -> logical_expression
Rule 126   logical_operand -> lit_bool
Rule 127   logical_operators -> And
Rule 128   logical_operators -> Or
Rule 129   conditional_statements -> if_statement
Rule 130   conditional_statements -> switch_statements
Rule 131   if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 132   condition_else -> elif_statement
Rule 133   condition_else -> else_statement
Rule 134   condition_else -> empty
Rule 135   elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 136   else_statement -> Else colon open_bracket inside_statements close_bracket
Rule 137   switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
Rule 138   execute -> Execute switch_lit colon statements Break execute1
Rule 139   switch_lit -> lit_str
Rule 140   switch_lit -> lit_intposi
Rule 141   switch_lit -> lit_intnega
Rule 142   execute1 -> execute
Rule 143   execute1 -> empty
Rule 144   io_statements -> input_statements
Rule 145   io_statements -> output_statements
Rule 146   input_statements -> Absorb id_array id_struct
Rule 147   output_statements -> Discharge value
Rule 148   func_call -> Sys_Call id open_par function_param close_par
Rule 149   function_param -> value1 more_param
Rule 150   function_param -> id open_brace close_brace more_param
Rule 151   function_param -> empty
Rule 152   more_param -> comma value1 more_param
Rule 153   more_param -> comma id open_brace close_brace more_param
Rule 154   more_param -> empty
Rule 155   functions -> Sys id open_par parameters close_par open_bracket declare_statements function_body close_bracket functions
Rule 156   functions -> empty
Rule 157   parameters -> data_type id parameters
Rule 158   parameters -> empty
Rule 159   function_body -> statements function_body
Rule 160   function_body -> return_statement function_body
Rule 161   function_body -> empty
Rule 162   return_statement -> Return value

Terminals, with rules where they appear

Absorb               : 146
And                  : 127
Avoid                : 107
Boolean              : 11
Break                : 105 138
Continue             : 106
Decimal              : 9
Default              : 137
Discharge            : 147
Elif                 : 135
Else                 : 136
End_Switch           : 137
Execute              : 138
Fixed                : 24
For                  : 101
Generate             : 22
If                   : 131
In                   : 101
Integer              : 8
Link_End             : 1
Link_Start           : 1
Not                  : 111 123
Or                   : 128
Return               : 162
String               : 10
Struct               : 6
Switch               : 137
Sys                  : 155
Sys_Call             : 148
While                : 102
close_brace          : 14 18 28 28 31 31 35 40 42 52 83 83 97 101 150 153
close_bracket        : 6 101 102 131 135 136 137 155
close_par            : 61 102 111 122 122 123 131 135 148 155
colon                : 101 102 131 135 136 137 137 138
comma                : 16 18 20 29 31 38 42 55 73 152 153
comment              : 
divide               : 66
divide_divide        : 67
divide_divide_equal  : 94
divide_equal         : 93
equal                : 27 28 29 31 36 40 83 85 88 97
equal_equal          : 118
error                : 
great_than_equal     : 120
greater_than         : 116
id                   : 6 12 16 18 26 29 31 33 38 42 51 81 97 101 101 137 148 150 153 155 157
less_than            : 117
less_than_equal      : 121
lit_bool             : 46 110 114 126
lit_decnega          : 60
lit_decposi          : 59
lit_intnega          : 58 141
lit_intposi          : 14 18 28 31 35 42 52 57 83 97 140
lit_str              : 45 139
minus                : 64
minus_equal          : 91
modulo               : 68
modulo_equal         : 95
not_equal            : 119
open_brace           : 14 18 28 28 31 31 35 40 42 52 83 83 97 101 150 153
open_bracket         : 6 101 102 131 135 136 137 155
open_par             : 61 102 111 122 122 123 131 135 148 155
period               : 70
plus                 : 63
plus_equal           : 90
times                : 65
times_equal          : 92
times_times          : 69
times_times_equal    : 96

Nonterminals, with rules where they appear

arithmetic_expression : 49 61
arithmetic_operators : 62
array                : 51 82
array_const1         : 28 31
array_dec1           : 14 18
array_init           : 35 42
array_var1           : 35 40 42
assign_value         : 85
assignment_exp       : 82
assignment_operators : 84
assignment_statements : 75
assignment_statements2 : 81
condition            : 102 131 135
condition_else       : 131 135
condition_not        : 111
conditional_statements : 77
const_var_dec        : 22
control_statements   : 104
data_type            : 7 24 25 157
declare_statements   : 1 4 22 155
elif_statement       : 132
else_statement       : 133
empty                : 5 15 17 19 21 23 30 32 37 39 41 43 53 56 71 74 80 89 98 134 143 151 154 156 158 161
execute              : 137 142
execute1             : 138
for_statements       : 99
func_call            : 50 79
function_body        : 155 159 160
function_param       : 148
functions            : 1 155
global_dec           : 1 3 4
id_array             : 47 54 70 88 146
id_array1            : 6 55
id_array2            : 54
id_array_const       : 24
id_array_const2      : 26
id_array_dec         : 7
id_array_dec2        : 12
id_array_var         : 25
id_array_var2        : 33
id_const1            : 27 29
id_dec1              : 13 16
id_struct            : 47 82 88 146
id_var1              : 34 36 38
if_statement         : 129
input_statements     : 144
inside_statements    : 101 102 103 104 131 135 136 137
io_statements        : 78
literals             : 48
logical_expression   : 109 113 125
logical_operand      : 122 122 123
logical_operators    : 122
looping_statements   : 76
more_array           : 83 97
more_id              : 87 88
more_param           : 149 150 152 153
num_value            : 44 62 62 84 86
output_statements    : 145
parameters           : 155 157
program              : 0
relational_expression : 108 112 124
relational_operators : 115
return_statement     : 160
statements           : 1 75 76 77 78 79 103 138 159
struct_dec           : 3
struct_element1      : 6 20
struct_element2      : 6 20
switch_lit           : 138
switch_statements    : 130
value                : 27 29 36 72 87 115 115 147 162
value1               : 28 31 40 73 83 149 152
value2               : 72
var_init             : 34 38
while_statements     : 100

