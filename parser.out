Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    comment
    space

Grammar

Rule 0     S' -> program
Rule 1     program -> global_dec Link_Start declare_statements statements Link_End functions
Rule 2     program -> global_dec Link_Start declare_statements statements functions
Rule 3     program -> global_dec declare_statements statements Link_End functions
Rule 4     program -> global_dec declare_statements statements functions
Rule 5     global_dec -> struct_dec global_dec
Rule 6     global_dec -> declare_statements global_dec
Rule 7     global_dec -> <empty>
Rule 8     struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1
Rule 9     struct_dec -> Struct id struct_element1 id_array1
Rule 10    struct_dec -> Struct open_bracket struct_element1 id_array1
Rule 11    struct_dec -> Struct struct_element1 close_bracket id_array1
Rule 12    struct_dec -> Struct id open_bracket struct_element1 id_array1
Rule 13    struct_dec -> Struct id struct_element1 close_bracket id_array1
Rule 14    struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1
Rule 15    struct_dec -> <empty>
Rule 16    struct_element1 -> data_type id_array_dec struct_element2
Rule 17    struct_element2 -> struct_element1
Rule 18    struct_element2 -> <empty>
Rule 19    data_type -> Integer
Rule 20    data_type -> Decimal
Rule 21    data_type -> String
Rule 22    data_type -> Boolean
Rule 23    data_type -> <empty>
Rule 24    id_array_dec -> id id_array_dec2
Rule 25    id_array_dec -> <empty>
Rule 26    id_array_dec2 -> id_dec1
Rule 27    id_array_dec2 -> open_brace lit_intposi close_brace array_dec1
Rule 28    id_dec1 -> comma id id_dec1
Rule 29    id_dec1 -> <empty>
Rule 30    array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1
Rule 31    array_dec1 -> <empty>
Rule 32    declare_statements -> Generate const_var_dec declare_statements
Rule 33    declare_statements -> <empty>
Rule 34    const_var_dec -> Fixed data_type id_array_const
Rule 35    const_var_dec -> data_type id_array_var
Rule 36    const_var_dec -> <empty>
Rule 37    id_array_const -> id id_array_const2
Rule 38    id_array_const -> <empty>
Rule 39    id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 40    id_array_const2 -> equal value id_const1
Rule 41    id_array_const2 -> <empty>
Rule 42    id_const1 -> comma id equal value id_const1
Rule 43    id_const1 -> <empty>
Rule 44    array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
Rule 45    array_const1 -> <empty>
Rule 46    id_array_var -> id id_array_var2
Rule 47    id_array_var -> <empty>
Rule 48    id_array_var2 -> var_init id_var1
Rule 49    id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1
Rule 50    var_init -> equal value id_var1
Rule 51    var_init -> <empty>
Rule 52    id_var1 -> comma id var_init id_var1
Rule 53    id_var1 -> <empty>
Rule 54    array_init -> equal open_brace value1 close_brace array_var1
Rule 55    array_init -> <empty>
Rule 56    array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1
Rule 57    array_var1 -> <empty>
Rule 58    value -> num_value
Rule 59    value -> lit_str
Rule 60    value -> lit_bool
Rule 61    value -> <empty>
Rule 62    value_opt -> num_value_opt
Rule 63    value_opt -> lit_str
Rule 64    value_opt -> lit_bool
Rule 65    num_value -> id_array id_struct
Rule 66    num_value -> literals
Rule 67    num_value -> arithmetic_expression
Rule 68    num_value -> func_call
Rule 69    num_value -> <empty>
Rule 70    num_value_opt -> id_array_opt id_struct
Rule 71    num_value_opt -> literals_opt
Rule 72    num_value_opt -> arithmetic_expression
Rule 73    num_value_opt -> func_call
Rule 74    id_array -> id array
Rule 75    id_array -> <empty>
Rule 76    id_array_opt -> id array
Rule 77    array -> open_brace num_value close_brace
Rule 78    array -> open_brace close_brace
Rule 79    array -> <empty>
Rule 80    id_array1 -> id_array id_array2
Rule 81    id_array1 -> <empty>
Rule 82    id_array2 -> comma id_array1
Rule 83    id_array2 -> <empty>
Rule 84    literals -> lit_intposi
Rule 85    literals -> lit_intnega
Rule 86    literals -> lit_decposi
Rule 87    literals -> lit_decnega
Rule 88    literals -> <empty>
Rule 89    literals_opt -> lit_intposi
Rule 90    literals_opt -> lit_intnega
Rule 91    literals_opt -> lit_decposi
Rule 92    literals_opt -> lit_decnega
Rule 93    arithmetic_expression -> open_par arithmetic_expression close_par
Rule 94    arithmetic_expression -> num_value arithmetic_operators num_value
Rule 95    arithmetic_operators -> plus
Rule 96    arithmetic_operators -> minus
Rule 97    arithmetic_operators -> times
Rule 98    arithmetic_operators -> divide
Rule 99    arithmetic_operators -> divide_divide
Rule 100   arithmetic_operators -> modulo
Rule 101   arithmetic_operators -> times_times
Rule 102   id_struct -> period id_array
Rule 103   id_struct -> <empty>
Rule 104   value1 -> value value2
Rule 105   value2 -> comma value1
Rule 106   value2 -> <empty>
Rule 107   value1_opt -> value_opt value2_opt
Rule 108   value2_opt -> comma value1_opt
Rule 109   value2_opt -> <empty>
Rule 110   statements -> assignment_statements statements
Rule 111   statements -> for_statements statements
Rule 112   statements -> while_statements statements
Rule 113   statements -> if_statement statements
Rule 114   statements -> switch_statements statements
Rule 115   statements -> conditional_statements statements
Rule 116   statements -> io_statements statements
Rule 117   statements -> func_call statements
Rule 118   statements -> <empty>
Rule 119   assignment_statements -> id assignment_statements2
Rule 120   assignment_statements -> <empty>
Rule 121   assignment_statements2 -> array id_struct assignment_exp
Rule 122   assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace
Rule 123   assignment_exp -> assignment_operators num_value
Rule 124   assignment_exp -> equal assign_value
Rule 125   assignment_exp -> <empty>
Rule 126   assign_value -> num_value
Rule 127   assign_value -> more_id value
Rule 128   more_id -> id_array id_struct equal more_id
Rule 129   more_id -> <empty>
Rule 130   assignment_operators -> plus_equal
Rule 131   assignment_operators -> minus_equal
Rule 132   assignment_operators -> times_equal
Rule 133   assignment_operators -> divide_equal
Rule 134   assignment_operators -> divide_divide_equal
Rule 135   assignment_operators -> modulo_equal
Rule 136   assignment_operators -> times_times_equal
Rule 137   more_array -> equal id open_brace lit_intposi close_brace more_array
Rule 138   more_array -> <empty>
Rule 139   for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
Rule 140   for_statements -> <empty>
Rule 141   while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket
Rule 142   while_statements -> <empty>
Rule 143   inside_statements -> statements control_statements
Rule 144   inside_statements -> control_statements statements
Rule 145   inside_statements -> <empty>
Rule 146   control_statements -> Break
Rule 147   control_statements -> Continue
Rule 148   control_statements -> Avoid
Rule 149   control_statements -> <empty>
Rule 150   condition -> relational_expression
Rule 151   condition -> logical_expression
Rule 152   condition -> Not open_par condition_not close_par
Rule 153   condition -> lit_bool
Rule 154   condition_not -> relational_expression
Rule 155   condition_not -> logical_expression
Rule 156   condition_not -> lit_bool
Rule 157   relational_expression -> value relational_operators value
Rule 158   relational_operators -> greater_than
Rule 159   relational_operators -> less_than
Rule 160   relational_operators -> equal_equal
Rule 161   relational_operators -> not_equal
Rule 162   relational_operators -> great_than_equal
Rule 163   relational_operators -> less_than_equal
Rule 164   logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par
Rule 165   logical_operand -> Not open_par logical_operand close_par
Rule 166   logical_operand -> relational_expression
Rule 167   logical_operand -> logical_expression
Rule 168   logical_operand -> lit_bool
Rule 169   logical_operators -> And
Rule 170   logical_operators -> Or
Rule 171   conditional_statements -> if_statement
Rule 172   conditional_statements -> switch_statements
Rule 173   if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 174   if_statement -> If open_par condition inside_statements condition_else
Rule 175   if_statement -> If condition close_par inside_statements condition_else
Rule 176   if_statement -> If condition colon inside_statements condition_else
Rule 177   if_statement -> If condition open_bracket inside_statements condition_else
Rule 178   if_statement -> If condition inside_statements close_bracket condition_else
Rule 179   if_statement -> If open_par condition close_par inside_statements condition_else
Rule 180   if_statement -> If open_par condition colon inside_statements condition_else
Rule 181   if_statement -> If open_par condition open_bracket inside_statements condition_else
Rule 182   if_statement -> If open_par condition inside_statements close_bracket condition_else
Rule 183   if_statement -> If condition close_par colon inside_statements condition_else
Rule 184   if_statement -> If condition close_par open_bracket inside_statements condition_else
Rule 185   if_statement -> If condition close_par inside_statements close_bracket condition_else
Rule 186   if_statement -> If condition colon open_bracket inside_statements condition_else
Rule 187   if_statement -> If condition colon inside_statements close_bracket condition_else
Rule 188   if_statement -> If condition open_bracket inside_statements close_bracket condition_else
Rule 189   if_statement -> If open_par condition close_par colon inside_statements condition_else
Rule 190   if_statement -> If open_par condition close_par open_bracket inside_statements condition_else
Rule 191   if_statement -> If open_par condition close_par inside_statements close_bracket condition_else
Rule 192   if_statement -> If open_par condition colon open_bracket inside_statements condition_else
Rule 193   if_statement -> If open_par condition colon inside_statements close_bracket condition_else
Rule 194   if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else
Rule 195   if_statement -> If condition close_par colon open_bracket inside_statements condition_else
Rule 196   if_statement -> If condition close_par colon inside_statements close_bracket condition_else
Rule 197   if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else
Rule 198   if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else
Rule 199   if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else
Rule 200   if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else
Rule 201   if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else
Rule 202   if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else
Rule 203   if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 204   condition_else -> elif_statement
Rule 205   condition_else -> else_statement
Rule 206   condition_else -> <empty>
Rule 207   elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
Rule 208   else_statement -> Else colon open_bracket inside_statements close_bracket
Rule 209   else_statement -> <empty>
Rule 210   switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
Rule 211   execute -> Execute switch_lit colon statements Break execute1
Rule 212   switch_lit -> lit_str
Rule 213   switch_lit -> lit_intposi
Rule 214   switch_lit -> lit_intnega
Rule 215   execute1 -> execute
Rule 216   execute1 -> <empty>
Rule 217   io_statements -> input_statements
Rule 218   io_statements -> output_statements
Rule 219   input_statements -> Absorb id_array id_struct
Rule 220   output_statements -> Discharge value
Rule 221   func_call -> Sys_Call id open_par function_param close_par
Rule 222   function_param -> id open_brace close_brace more_param
Rule 223   function_param -> value1_opt more_param
Rule 224   function_param -> <empty>
Rule 225   more_param -> comma function_param
Rule 226   more_param -> <empty>
Rule 227   functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 228   functions -> Sys id parameters declare_statements statements return_statement functions
Rule 229   functions -> Sys open_par parameters declare_statements statements return_statement functions
Rule 230   functions -> Sys parameters close_par declare_statements statements return_statement functions
Rule 231   functions -> Sys parameters open_bracket declare_statements statements return_statement functions
Rule 232   functions -> Sys parameters declare_statements statements return_statement close_bracket functions
Rule 233   functions -> Sys id open_par parameters declare_statements statements return_statement functions
Rule 234   functions -> Sys id parameters close_par declare_statements statements return_statement functions
Rule 235   functions -> Sys id parameters open_bracket declare_statements statements return_statement functions
Rule 236   functions -> Sys id parameters declare_statements statements return_statement close_bracket functions
Rule 237   functions -> Sys open_par parameters close_par declare_statements statements return_statement functions
Rule 238   functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions
Rule 239   functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions
Rule 240   functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions
Rule 241   functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions
Rule 242   functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 243   functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions
Rule 244   functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions
Rule 245   functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions
Rule 246   functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions
Rule 247   functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions
Rule 248   functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 249   functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
Rule 250   functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
Rule 251   functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 252   functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 253   functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
Rule 254   functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
Rule 255   functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
Rule 256   functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 257   functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
Rule 258   functions -> <empty>
Rule 259   parameters -> data_type id more_parameters
Rule 260   parameters -> <empty>
Rule 261   more_parameters -> comma data_type id more_parameters
Rule 262   more_parameters -> <empty>
Rule 263   return_statement -> Return value statements return_statement
Rule 264   return_statement -> <empty>

Terminals, with rules where they appear

Absorb               : 219
And                  : 169
Avoid                : 148
Boolean              : 22
Break                : 146 211
Continue             : 147
Decimal              : 20
Default              : 210
Discharge            : 220
Elif                 : 207
Else                 : 208
End_Switch           : 210
Execute              : 211
Fixed                : 34
For                  : 139
Generate             : 32
If                   : 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
In                   : 139
Integer              : 19
Link_End             : 1 3
Link_Start           : 1 2
Not                  : 152 165
Or                   : 170
Return               : 263
String               : 21
Struct               : 8 9 10 11 12 13 14
Switch               : 210
Sys                  : 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257
Sys_Call             : 221
While                : 141
close_brace          : 27 30 39 39 44 44 49 54 56 77 78 122 122 137 139 222
close_bracket        : 8 11 13 14 139 141 173 178 182 185 187 188 191 193 194 196 197 198 200 201 202 203 207 208 210 227 232 236 239 241 242 245 247 248 250 251 252 254 255 256 257
close_par            : 93 141 152 164 164 165 173 175 179 183 184 185 189 190 191 195 196 197 199 200 201 203 207 221 227 230 234 237 240 241 243 246 247 249 250 252 253 254 256 257
colon                : 139 141 173 176 180 183 186 187 189 192 193 195 196 198 199 200 202 203 207 208 210 210 211
comma                : 28 30 42 44 52 56 82 105 108 225 261
comment              : 
divide               : 98
divide_divide        : 99
divide_divide_equal  : 134
divide_equal         : 133
equal                : 39 40 42 44 50 54 122 124 128 137
equal_equal          : 160
error                : 
great_than_equal     : 162
greater_than         : 158
id                   : 8 9 12 13 24 28 30 37 42 44 46 52 56 74 76 119 137 139 139 210 221 222 227 228 233 234 235 236 243 244 245 246 247 248 253 254 255 256 259 261
less_than            : 159
less_than_equal      : 163
lit_bool             : 60 64 153 156 168
lit_decnega          : 87 92
lit_decposi          : 86 91
lit_intnega          : 85 90 214
lit_intposi          : 27 30 39 44 49 56 84 89 122 137 213
lit_str              : 59 63 212
minus                : 96
minus_equal          : 131
modulo               : 100
modulo_equal         : 135
not_equal            : 161
open_brace           : 27 30 39 39 44 44 49 54 56 77 78 122 122 137 139 222
open_bracket         : 8 10 12 14 139 141 173 177 181 184 186 188 190 192 194 195 197 198 199 201 202 203 207 208 210 227 231 235 238 240 242 244 246 248 249 251 252 253 255 256 257
open_par             : 93 141 152 164 164 165 173 174 179 180 181 182 189 190 191 192 193 194 199 200 201 202 207 221 227 229 233 237 238 239 243 244 245 249 250 251 253 254 255 257
period               : 102
plus                 : 95
plus_equal           : 130
space                : 
times                : 97
times_equal          : 132
times_times          : 101
times_times_equal    : 136

Nonterminals, with rules where they appear

arithmetic_expression : 67 72 93
arithmetic_operators : 94
array                : 74 76 121
array_const1         : 39 44
array_dec1           : 27 30
array_init           : 49 56
array_var1           : 49 54 56
assign_value         : 124
assignment_exp       : 121
assignment_operators : 123
assignment_statements : 110
assignment_statements2 : 119
condition            : 141 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 207
condition_else       : 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 207
condition_not        : 152
conditional_statements : 115
const_var_dec        : 32
control_statements   : 143 144
data_type            : 16 34 35 259 261
declare_statements   : 1 2 3 4 6 32 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257
elif_statement       : 204
else_statement       : 205
execute              : 210 215
execute1             : 211
for_statements       : 111
func_call            : 68 73 117
function_param       : 221 225
functions            : 1 2 3 4 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257
global_dec           : 1 2 3 4 5 6
id_array             : 65 80 102 128 219
id_array1            : 8 9 10 11 12 13 14 82
id_array2            : 80
id_array_const       : 34
id_array_const2      : 37
id_array_dec         : 16
id_array_dec2        : 24
id_array_opt         : 70
id_array_var         : 35
id_array_var2        : 46
id_const1            : 40 42
id_dec1              : 26 28
id_struct            : 65 70 121 128 219
id_var1              : 48 50 52
if_statement         : 113 171
input_statements     : 217
inside_statements    : 139 141 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 207 208 210
io_statements        : 116
literals             : 66
literals_opt         : 71
logical_expression   : 151 155 167
logical_operand      : 164 164 165
logical_operators    : 164
more_array           : 122 137
more_id              : 127 128
more_param           : 222 223
more_parameters      : 259 261
num_value            : 58 77 94 94 123 126
num_value_opt        : 62
output_statements    : 218
parameters           : 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257
program              : 0
relational_expression : 150 154 166
relational_operators : 157
return_statement     : 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 263
statements           : 1 2 3 4 110 111 112 113 114 115 116 117 143 144 211 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 263
struct_dec           : 5
struct_element1      : 8 9 10 11 12 13 14 17
struct_element2      : 16
switch_lit           : 211
switch_statements    : 114 172
value                : 40 42 50 104 127 157 157 220 263
value1               : 39 44 54 105 122
value1_opt           : 108 223
value2               : 104
value2_opt           : 107
value_opt            : 107
var_init             : 48 52
while_statements     : 112

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . global_dec Link_Start declare_statements statements Link_End functions
    (2) program -> . global_dec Link_Start declare_statements statements functions
    (3) program -> . global_dec declare_statements statements Link_End functions
    (4) program -> . global_dec declare_statements statements functions
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> . Struct id struct_element1 id_array1
    (10) struct_dec -> . Struct open_bracket struct_element1 id_array1
    (11) struct_dec -> . Struct struct_element1 close_bracket id_array1
    (12) struct_dec -> . Struct id open_bracket struct_element1 id_array1
    (13) struct_dec -> . Struct id struct_element1 close_bracket id_array1
    (14) struct_dec -> . Struct open_bracket struct_element1 close_bracket id_array1
    (15) struct_dec -> .
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 15 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 15 (struct_dec -> .) ]
  ! id              [ reduce using rule 15 (struct_dec -> .) ]
  ! For             [ reduce using rule 15 (struct_dec -> .) ]
  ! While           [ reduce using rule 15 (struct_dec -> .) ]
  ! If              [ reduce using rule 15 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 15 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 15 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 15 (struct_dec -> .) ]
  ! $end            [ reduce using rule 15 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 33 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 33 (declare_statements -> .) ]
  ! id              [ reduce using rule 33 (declare_statements -> .) ]
  ! For             [ reduce using rule 33 (declare_statements -> .) ]
  ! While           [ reduce using rule 33 (declare_statements -> .) ]
  ! If              [ reduce using rule 33 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 33 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 33 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 33 (declare_statements -> .) ]
  ! $end            [ reduce using rule 33 (declare_statements -> .) ]

    program                        shift and go to state 1
    global_dec                     shift and go to state 2
    declare_statements             shift and go to state 3
    struct_dec                     shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> global_dec . Link_Start declare_statements statements Link_End functions
    (2) program -> global_dec . Link_Start declare_statements statements functions
    (3) program -> global_dec . declare_statements statements Link_End functions
    (4) program -> global_dec . declare_statements statements functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Link_Start      shift and go to state 7
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Link_End        reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 8

state 3

    (6) global_dec -> declare_statements . global_dec
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> . Struct id struct_element1 id_array1
    (10) struct_dec -> . Struct open_bracket struct_element1 id_array1
    (11) struct_dec -> . Struct struct_element1 close_bracket id_array1
    (12) struct_dec -> . Struct id open_bracket struct_element1 id_array1
    (13) struct_dec -> . Struct id struct_element1 close_bracket id_array1
    (14) struct_dec -> . Struct open_bracket struct_element1 close_bracket id_array1
    (15) struct_dec -> .
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 15 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 15 (struct_dec -> .) ]
  ! id              [ reduce using rule 15 (struct_dec -> .) ]
  ! For             [ reduce using rule 15 (struct_dec -> .) ]
  ! While           [ reduce using rule 15 (struct_dec -> .) ]
  ! If              [ reduce using rule 15 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 15 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 15 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 15 (struct_dec -> .) ]
  ! $end            [ reduce using rule 15 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 33 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 33 (declare_statements -> .) ]
  ! id              [ reduce using rule 33 (declare_statements -> .) ]
  ! For             [ reduce using rule 33 (declare_statements -> .) ]
  ! While           [ reduce using rule 33 (declare_statements -> .) ]
  ! If              [ reduce using rule 33 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 33 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 33 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 33 (declare_statements -> .) ]
  ! $end            [ reduce using rule 33 (declare_statements -> .) ]

    declare_statements             shift and go to state 3
    global_dec                     shift and go to state 9
    struct_dec                     shift and go to state 4

state 4

    (5) global_dec -> struct_dec . global_dec
    (5) global_dec -> . struct_dec global_dec
    (6) global_dec -> . declare_statements global_dec
    (7) global_dec -> .
    (8) struct_dec -> . Struct id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> . Struct id struct_element1 id_array1
    (10) struct_dec -> . Struct open_bracket struct_element1 id_array1
    (11) struct_dec -> . Struct struct_element1 close_bracket id_array1
    (12) struct_dec -> . Struct id open_bracket struct_element1 id_array1
    (13) struct_dec -> . Struct id struct_element1 close_bracket id_array1
    (14) struct_dec -> . Struct open_bracket struct_element1 close_bracket id_array1
    (15) struct_dec -> .
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Struct resolved as shift
  ! reduce/reduce conflict for Generate resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
  ! shift/reduce conflict for Generate resolved as shift
  ! shift/reduce conflict for Struct resolved as shift
  ! shift/reduce conflict for Generate resolved as shift
  ! reduce/reduce conflict for Link_Start resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for id resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for For resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for While resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for If resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Switch resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for Sys resolved using rule 7 (global_dec -> .)
  ! reduce/reduce conflict for $end resolved using rule 7 (global_dec -> .)
    Link_Start      reduce using rule 7 (global_dec -> .)
    id              reduce using rule 7 (global_dec -> .)
    For             reduce using rule 7 (global_dec -> .)
    While           reduce using rule 7 (global_dec -> .)
    If              reduce using rule 7 (global_dec -> .)
    Switch          reduce using rule 7 (global_dec -> .)
    Sys_Call        reduce using rule 7 (global_dec -> .)
    Absorb          reduce using rule 7 (global_dec -> .)
    Discharge       reduce using rule 7 (global_dec -> .)
    Link_End        reduce using rule 7 (global_dec -> .)
    Sys             reduce using rule 7 (global_dec -> .)
    $end            reduce using rule 7 (global_dec -> .)
    Struct          shift and go to state 5
    Generate        shift and go to state 6

  ! Generate        [ reduce using rule 7 (global_dec -> .) ]
  ! Struct          [ reduce using rule 15 (struct_dec -> .) ]
  ! Generate        [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_Start      [ reduce using rule 15 (struct_dec -> .) ]
  ! id              [ reduce using rule 15 (struct_dec -> .) ]
  ! For             [ reduce using rule 15 (struct_dec -> .) ]
  ! While           [ reduce using rule 15 (struct_dec -> .) ]
  ! If              [ reduce using rule 15 (struct_dec -> .) ]
  ! Switch          [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys_Call        [ reduce using rule 15 (struct_dec -> .) ]
  ! Absorb          [ reduce using rule 15 (struct_dec -> .) ]
  ! Discharge       [ reduce using rule 15 (struct_dec -> .) ]
  ! Link_End        [ reduce using rule 15 (struct_dec -> .) ]
  ! Sys             [ reduce using rule 15 (struct_dec -> .) ]
  ! $end            [ reduce using rule 15 (struct_dec -> .) ]
  ! Struct          [ reduce using rule 33 (declare_statements -> .) ]
  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_Start      [ reduce using rule 33 (declare_statements -> .) ]
  ! id              [ reduce using rule 33 (declare_statements -> .) ]
  ! For             [ reduce using rule 33 (declare_statements -> .) ]
  ! While           [ reduce using rule 33 (declare_statements -> .) ]
  ! If              [ reduce using rule 33 (declare_statements -> .) ]
  ! Switch          [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys_Call        [ reduce using rule 33 (declare_statements -> .) ]
  ! Absorb          [ reduce using rule 33 (declare_statements -> .) ]
  ! Discharge       [ reduce using rule 33 (declare_statements -> .) ]
  ! Link_End        [ reduce using rule 33 (declare_statements -> .) ]
  ! Sys             [ reduce using rule 33 (declare_statements -> .) ]
  ! $end            [ reduce using rule 33 (declare_statements -> .) ]

    struct_dec                     shift and go to state 4
    global_dec                     shift and go to state 10
    declare_statements             shift and go to state 3

state 5

    (8) struct_dec -> Struct . id open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> Struct . id struct_element1 id_array1
    (10) struct_dec -> Struct . open_bracket struct_element1 id_array1
    (11) struct_dec -> Struct . struct_element1 close_bracket id_array1
    (12) struct_dec -> Struct . id open_bracket struct_element1 id_array1
    (13) struct_dec -> Struct . id struct_element1 close_bracket id_array1
    (14) struct_dec -> Struct . open_bracket struct_element1 close_bracket id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    id              shift and go to state 11
    open_bracket    shift and go to state 12
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    close_bracket   reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 23 (data_type -> .) ]
  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 13
    data_type                      shift and go to state 14

state 6

    (32) declare_statements -> Generate . const_var_dec declare_statements
    (34) const_var_dec -> . Fixed data_type id_array_const
    (35) const_var_dec -> . data_type id_array_var
    (36) const_var_dec -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Generate resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Struct resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for For resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for While resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for If resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Switch resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Sys resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for $end resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for Return resolved using rule 23 (data_type -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 23 (data_type -> .)
    Fixed           shift and go to state 20
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)
    Return          reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)

  ! Generate        [ reduce using rule 36 (const_var_dec -> .) ]
  ! Struct          [ reduce using rule 36 (const_var_dec -> .) ]
  ! Link_Start      [ reduce using rule 36 (const_var_dec -> .) ]
  ! id              [ reduce using rule 36 (const_var_dec -> .) ]
  ! For             [ reduce using rule 36 (const_var_dec -> .) ]
  ! While           [ reduce using rule 36 (const_var_dec -> .) ]
  ! If              [ reduce using rule 36 (const_var_dec -> .) ]
  ! Switch          [ reduce using rule 36 (const_var_dec -> .) ]
  ! Sys_Call        [ reduce using rule 36 (const_var_dec -> .) ]
  ! Absorb          [ reduce using rule 36 (const_var_dec -> .) ]
  ! Discharge       [ reduce using rule 36 (const_var_dec -> .) ]
  ! Link_End        [ reduce using rule 36 (const_var_dec -> .) ]
  ! Sys             [ reduce using rule 36 (const_var_dec -> .) ]
  ! $end            [ reduce using rule 36 (const_var_dec -> .) ]
  ! Return          [ reduce using rule 36 (const_var_dec -> .) ]
  ! close_bracket   [ reduce using rule 36 (const_var_dec -> .) ]

    const_var_dec                  shift and go to state 19
    data_type                      shift and go to state 21

state 7

    (1) program -> global_dec Link_Start . declare_statements statements Link_End functions
    (2) program -> global_dec Link_Start . declare_statements statements functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Link_End        reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 22

state 8

    (3) program -> global_dec declare_statements . statements Link_End functions
    (4) program -> global_dec declare_statements . statements functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 23
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 9

    (6) global_dec -> declare_statements global_dec .

    Link_Start      reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Generate        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    id              reduce using rule 6 (global_dec -> declare_statements global_dec .)
    For             reduce using rule 6 (global_dec -> declare_statements global_dec .)
    While           reduce using rule 6 (global_dec -> declare_statements global_dec .)
    If              reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Switch          reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Sys_Call        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Absorb          reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Discharge       reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Link_End        reduce using rule 6 (global_dec -> declare_statements global_dec .)
    Sys             reduce using rule 6 (global_dec -> declare_statements global_dec .)
    $end            reduce using rule 6 (global_dec -> declare_statements global_dec .)


state 10

    (5) global_dec -> struct_dec global_dec .

    Link_Start      reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Generate        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    id              reduce using rule 5 (global_dec -> struct_dec global_dec .)
    For             reduce using rule 5 (global_dec -> struct_dec global_dec .)
    While           reduce using rule 5 (global_dec -> struct_dec global_dec .)
    If              reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Switch          reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Sys_Call        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Absorb          reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Discharge       reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Link_End        reduce using rule 5 (global_dec -> struct_dec global_dec .)
    Sys             reduce using rule 5 (global_dec -> struct_dec global_dec .)
    $end            reduce using rule 5 (global_dec -> struct_dec global_dec .)


state 11

    (8) struct_dec -> Struct id . open_bracket struct_element1 close_bracket id_array1
    (9) struct_dec -> Struct id . struct_element1 id_array1
    (12) struct_dec -> Struct id . open_bracket struct_element1 id_array1
    (13) struct_dec -> Struct id . struct_element1 close_bracket id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    open_bracket    shift and go to state 42
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)
    comma           reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 43
    data_type                      shift and go to state 14

state 12

    (10) struct_dec -> Struct open_bracket . struct_element1 id_array1
    (14) struct_dec -> Struct open_bracket . struct_element1 close_bracket id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)
    comma           reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 44
    data_type                      shift and go to state 14

state 13

    (11) struct_dec -> Struct struct_element1 . close_bracket id_array1

    close_bracket   shift and go to state 45


state 14

    (16) struct_element1 -> data_type . id_array_dec struct_element2
    (24) id_array_dec -> . id id_array_dec2
    (25) id_array_dec -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 47
    Integer         reduce using rule 25 (id_array_dec -> .)
    Decimal         reduce using rule 25 (id_array_dec -> .)
    String          reduce using rule 25 (id_array_dec -> .)
    Boolean         reduce using rule 25 (id_array_dec -> .)
    close_bracket   reduce using rule 25 (id_array_dec -> .)
    comma           reduce using rule 25 (id_array_dec -> .)
    Struct          reduce using rule 25 (id_array_dec -> .)
    Generate        reduce using rule 25 (id_array_dec -> .)
    Link_Start      reduce using rule 25 (id_array_dec -> .)
    For             reduce using rule 25 (id_array_dec -> .)
    While           reduce using rule 25 (id_array_dec -> .)
    If              reduce using rule 25 (id_array_dec -> .)
    Switch          reduce using rule 25 (id_array_dec -> .)
    Sys_Call        reduce using rule 25 (id_array_dec -> .)
    Absorb          reduce using rule 25 (id_array_dec -> .)
    Discharge       reduce using rule 25 (id_array_dec -> .)
    Link_End        reduce using rule 25 (id_array_dec -> .)
    Sys             reduce using rule 25 (id_array_dec -> .)
    $end            reduce using rule 25 (id_array_dec -> .)

  ! id              [ reduce using rule 25 (id_array_dec -> .) ]

    id_array_dec                   shift and go to state 46

state 15

    (19) data_type -> Integer .

    id              reduce using rule 19 (data_type -> Integer .)
    Integer         reduce using rule 19 (data_type -> Integer .)
    Decimal         reduce using rule 19 (data_type -> Integer .)
    String          reduce using rule 19 (data_type -> Integer .)
    Boolean         reduce using rule 19 (data_type -> Integer .)
    close_bracket   reduce using rule 19 (data_type -> Integer .)
    Generate        reduce using rule 19 (data_type -> Integer .)
    Struct          reduce using rule 19 (data_type -> Integer .)
    Link_Start      reduce using rule 19 (data_type -> Integer .)
    For             reduce using rule 19 (data_type -> Integer .)
    While           reduce using rule 19 (data_type -> Integer .)
    If              reduce using rule 19 (data_type -> Integer .)
    Switch          reduce using rule 19 (data_type -> Integer .)
    Sys_Call        reduce using rule 19 (data_type -> Integer .)
    Absorb          reduce using rule 19 (data_type -> Integer .)
    Discharge       reduce using rule 19 (data_type -> Integer .)
    Link_End        reduce using rule 19 (data_type -> Integer .)
    Sys             reduce using rule 19 (data_type -> Integer .)
    $end            reduce using rule 19 (data_type -> Integer .)
    Return          reduce using rule 19 (data_type -> Integer .)
    comma           reduce using rule 19 (data_type -> Integer .)


state 16

    (20) data_type -> Decimal .

    id              reduce using rule 20 (data_type -> Decimal .)
    Integer         reduce using rule 20 (data_type -> Decimal .)
    Decimal         reduce using rule 20 (data_type -> Decimal .)
    String          reduce using rule 20 (data_type -> Decimal .)
    Boolean         reduce using rule 20 (data_type -> Decimal .)
    close_bracket   reduce using rule 20 (data_type -> Decimal .)
    Generate        reduce using rule 20 (data_type -> Decimal .)
    Struct          reduce using rule 20 (data_type -> Decimal .)
    Link_Start      reduce using rule 20 (data_type -> Decimal .)
    For             reduce using rule 20 (data_type -> Decimal .)
    While           reduce using rule 20 (data_type -> Decimal .)
    If              reduce using rule 20 (data_type -> Decimal .)
    Switch          reduce using rule 20 (data_type -> Decimal .)
    Sys_Call        reduce using rule 20 (data_type -> Decimal .)
    Absorb          reduce using rule 20 (data_type -> Decimal .)
    Discharge       reduce using rule 20 (data_type -> Decimal .)
    Link_End        reduce using rule 20 (data_type -> Decimal .)
    Sys             reduce using rule 20 (data_type -> Decimal .)
    $end            reduce using rule 20 (data_type -> Decimal .)
    Return          reduce using rule 20 (data_type -> Decimal .)
    comma           reduce using rule 20 (data_type -> Decimal .)


state 17

    (21) data_type -> String .

    id              reduce using rule 21 (data_type -> String .)
    Integer         reduce using rule 21 (data_type -> String .)
    Decimal         reduce using rule 21 (data_type -> String .)
    String          reduce using rule 21 (data_type -> String .)
    Boolean         reduce using rule 21 (data_type -> String .)
    close_bracket   reduce using rule 21 (data_type -> String .)
    Generate        reduce using rule 21 (data_type -> String .)
    Struct          reduce using rule 21 (data_type -> String .)
    Link_Start      reduce using rule 21 (data_type -> String .)
    For             reduce using rule 21 (data_type -> String .)
    While           reduce using rule 21 (data_type -> String .)
    If              reduce using rule 21 (data_type -> String .)
    Switch          reduce using rule 21 (data_type -> String .)
    Sys_Call        reduce using rule 21 (data_type -> String .)
    Absorb          reduce using rule 21 (data_type -> String .)
    Discharge       reduce using rule 21 (data_type -> String .)
    Link_End        reduce using rule 21 (data_type -> String .)
    Sys             reduce using rule 21 (data_type -> String .)
    $end            reduce using rule 21 (data_type -> String .)
    Return          reduce using rule 21 (data_type -> String .)
    comma           reduce using rule 21 (data_type -> String .)


state 18

    (22) data_type -> Boolean .

    id              reduce using rule 22 (data_type -> Boolean .)
    Integer         reduce using rule 22 (data_type -> Boolean .)
    Decimal         reduce using rule 22 (data_type -> Boolean .)
    String          reduce using rule 22 (data_type -> Boolean .)
    Boolean         reduce using rule 22 (data_type -> Boolean .)
    close_bracket   reduce using rule 22 (data_type -> Boolean .)
    Generate        reduce using rule 22 (data_type -> Boolean .)
    Struct          reduce using rule 22 (data_type -> Boolean .)
    Link_Start      reduce using rule 22 (data_type -> Boolean .)
    For             reduce using rule 22 (data_type -> Boolean .)
    While           reduce using rule 22 (data_type -> Boolean .)
    If              reduce using rule 22 (data_type -> Boolean .)
    Switch          reduce using rule 22 (data_type -> Boolean .)
    Sys_Call        reduce using rule 22 (data_type -> Boolean .)
    Absorb          reduce using rule 22 (data_type -> Boolean .)
    Discharge       reduce using rule 22 (data_type -> Boolean .)
    Link_End        reduce using rule 22 (data_type -> Boolean .)
    Sys             reduce using rule 22 (data_type -> Boolean .)
    $end            reduce using rule 22 (data_type -> Boolean .)
    Return          reduce using rule 22 (data_type -> Boolean .)
    comma           reduce using rule 22 (data_type -> Boolean .)


state 19

    (32) declare_statements -> Generate const_var_dec . declare_statements
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

  ! shift/reduce conflict for Generate resolved as shift
    Generate        shift and go to state 6
    Struct          reduce using rule 33 (declare_statements -> .)
    Link_Start      reduce using rule 33 (declare_statements -> .)
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Link_End        reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)

  ! Generate        [ reduce using rule 33 (declare_statements -> .) ]

    declare_statements             shift and go to state 48

state 20

    (34) const_var_dec -> Fixed . data_type id_array_const
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)
    Return          reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)

    data_type                      shift and go to state 49

state 21

    (35) const_var_dec -> data_type . id_array_var
    (46) id_array_var -> . id id_array_var2
    (47) id_array_var -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 51
    Generate        reduce using rule 47 (id_array_var -> .)
    Struct          reduce using rule 47 (id_array_var -> .)
    Link_Start      reduce using rule 47 (id_array_var -> .)
    For             reduce using rule 47 (id_array_var -> .)
    While           reduce using rule 47 (id_array_var -> .)
    If              reduce using rule 47 (id_array_var -> .)
    Switch          reduce using rule 47 (id_array_var -> .)
    Sys_Call        reduce using rule 47 (id_array_var -> .)
    Absorb          reduce using rule 47 (id_array_var -> .)
    Discharge       reduce using rule 47 (id_array_var -> .)
    Link_End        reduce using rule 47 (id_array_var -> .)
    Sys             reduce using rule 47 (id_array_var -> .)
    $end            reduce using rule 47 (id_array_var -> .)
    Return          reduce using rule 47 (id_array_var -> .)
    close_bracket   reduce using rule 47 (id_array_var -> .)

  ! id              [ reduce using rule 47 (id_array_var -> .) ]

    id_array_var                   shift and go to state 50

state 22

    (1) program -> global_dec Link_Start declare_statements . statements Link_End functions
    (2) program -> global_dec Link_Start declare_statements . statements functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 52
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 23

    (3) program -> global_dec declare_statements statements . Link_End functions
    (4) program -> global_dec declare_statements statements . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Link_End        shift and go to state 53
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 54

state 24

    (110) statements -> assignment_statements . statements
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    assignment_statements          shift and go to state 24
    statements                     shift and go to state 56
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 25

    (111) statements -> for_statements . statements
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    for_statements                 shift and go to state 25
    statements                     shift and go to state 57
    assignment_statements          shift and go to state 24
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 26

    (112) statements -> while_statements . statements
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    while_statements               shift and go to state 26
    statements                     shift and go to state 58
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 27

    (113) statements -> if_statement . statements
    (171) conditional_statements -> if_statement .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! For             [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! While           [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! If              [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Switch          [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Sys_Call        [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Absorb          [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Discharge       [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Link_End        [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Sys             [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! $end            [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Break           [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Continue        [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Avoid           [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! close_bracket   [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Elif            [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Else            [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! Return          [ reduce using rule 171 (conditional_statements -> if_statement .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    if_statement                   shift and go to state 27
    statements                     shift and go to state 59
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 28

    (114) statements -> switch_statements . statements
    (172) conditional_statements -> switch_statements .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! For             [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! While           [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! If              [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Switch          [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Sys_Call        [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Absorb          [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Discharge       [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Link_End        [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Sys             [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! $end            [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Break           [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Continue        [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Avoid           [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! close_bracket   [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Elif            [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Else            [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! Return          [ reduce using rule 172 (conditional_statements -> switch_statements .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    switch_statements              shift and go to state 28
    statements                     shift and go to state 60
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 29

    (115) statements -> conditional_statements . statements
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    conditional_statements         shift and go to state 29
    statements                     shift and go to state 61
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 30

    (116) statements -> io_statements . statements
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    io_statements                  shift and go to state 30
    statements                     shift and go to state 62
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 31

    (117) statements -> func_call . statements
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    func_call                      shift and go to state 31
    statements                     shift and go to state 63
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 32

    (119) assignment_statements -> id . assignment_statements2
    (121) assignment_statements2 -> . array id_struct assignment_exp
    (122) assignment_statements2 -> . open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace
    (77) array -> . open_brace num_value close_brace
    (78) array -> . open_brace close_brace
    (79) array -> .

    open_brace      shift and go to state 66
    period          reduce using rule 79 (array -> .)
    equal           reduce using rule 79 (array -> .)
    plus_equal      reduce using rule 79 (array -> .)
    minus_equal     reduce using rule 79 (array -> .)
    times_equal     reduce using rule 79 (array -> .)
    divide_equal    reduce using rule 79 (array -> .)
    divide_divide_equal reduce using rule 79 (array -> .)
    modulo_equal    reduce using rule 79 (array -> .)
    times_times_equal reduce using rule 79 (array -> .)
    id              reduce using rule 79 (array -> .)
    For             reduce using rule 79 (array -> .)
    While           reduce using rule 79 (array -> .)
    If              reduce using rule 79 (array -> .)
    Switch          reduce using rule 79 (array -> .)
    Sys_Call        reduce using rule 79 (array -> .)
    Absorb          reduce using rule 79 (array -> .)
    Discharge       reduce using rule 79 (array -> .)
    Link_End        reduce using rule 79 (array -> .)
    Sys             reduce using rule 79 (array -> .)
    $end            reduce using rule 79 (array -> .)
    Break           reduce using rule 79 (array -> .)
    Continue        reduce using rule 79 (array -> .)
    Avoid           reduce using rule 79 (array -> .)
    close_bracket   reduce using rule 79 (array -> .)
    Elif            reduce using rule 79 (array -> .)
    Else            reduce using rule 79 (array -> .)
    Return          reduce using rule 79 (array -> .)

    assignment_statements2         shift and go to state 64
    array                          shift and go to state 65

state 33

    (139) for_statements -> For . id In id open_brace close_brace colon open_bracket inside_statements close_bracket

    id              shift and go to state 67


state 34

    (141) while_statements -> While . open_par condition close_par colon open_bracket inside_statements close_bracket

    open_par        shift and go to state 68


state 35

    (173) if_statement -> If . open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> If . open_par condition inside_statements condition_else
    (175) if_statement -> If . condition close_par inside_statements condition_else
    (176) if_statement -> If . condition colon inside_statements condition_else
    (177) if_statement -> If . condition open_bracket inside_statements condition_else
    (178) if_statement -> If . condition inside_statements close_bracket condition_else
    (179) if_statement -> If . open_par condition close_par inside_statements condition_else
    (180) if_statement -> If . open_par condition colon inside_statements condition_else
    (181) if_statement -> If . open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> If . open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> If . condition close_par colon inside_statements condition_else
    (184) if_statement -> If . condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> If . condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> If . condition colon open_bracket inside_statements condition_else
    (187) if_statement -> If . condition colon inside_statements close_bracket condition_else
    (188) if_statement -> If . condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> If . open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> If . open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> If . open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> If . open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> If . open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> If . open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> If . condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> If . condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> If . condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> If . condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> If . open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> If . open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> If . open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> If . open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> If . condition close_par colon open_bracket inside_statements close_bracket condition_else
    (150) condition -> . relational_expression
    (151) condition -> . logical_expression
    (152) condition -> . Not open_par condition_not close_par
    (153) condition -> . lit_bool
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    open_par        shift and go to state 69
    Not             shift and go to state 73
    lit_bool        shift and go to state 74
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    condition                      shift and go to state 70
    relational_expression          shift and go to state 71
    logical_expression             shift and go to state 72
    value                          shift and go to state 75
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 36

    (210) switch_statements -> Switch . id colon open_bracket execute Default colon inside_statements close_bracket End_Switch

    id              shift and go to state 87


state 37

    (217) io_statements -> input_statements .

    id              reduce using rule 217 (io_statements -> input_statements .)
    For             reduce using rule 217 (io_statements -> input_statements .)
    While           reduce using rule 217 (io_statements -> input_statements .)
    If              reduce using rule 217 (io_statements -> input_statements .)
    Switch          reduce using rule 217 (io_statements -> input_statements .)
    Sys_Call        reduce using rule 217 (io_statements -> input_statements .)
    Absorb          reduce using rule 217 (io_statements -> input_statements .)
    Discharge       reduce using rule 217 (io_statements -> input_statements .)
    Link_End        reduce using rule 217 (io_statements -> input_statements .)
    Sys             reduce using rule 217 (io_statements -> input_statements .)
    $end            reduce using rule 217 (io_statements -> input_statements .)
    Break           reduce using rule 217 (io_statements -> input_statements .)
    Continue        reduce using rule 217 (io_statements -> input_statements .)
    Avoid           reduce using rule 217 (io_statements -> input_statements .)
    close_bracket   reduce using rule 217 (io_statements -> input_statements .)
    Elif            reduce using rule 217 (io_statements -> input_statements .)
    Else            reduce using rule 217 (io_statements -> input_statements .)
    Return          reduce using rule 217 (io_statements -> input_statements .)


state 38

    (218) io_statements -> output_statements .

    id              reduce using rule 218 (io_statements -> output_statements .)
    For             reduce using rule 218 (io_statements -> output_statements .)
    While           reduce using rule 218 (io_statements -> output_statements .)
    If              reduce using rule 218 (io_statements -> output_statements .)
    Switch          reduce using rule 218 (io_statements -> output_statements .)
    Sys_Call        reduce using rule 218 (io_statements -> output_statements .)
    Absorb          reduce using rule 218 (io_statements -> output_statements .)
    Discharge       reduce using rule 218 (io_statements -> output_statements .)
    Link_End        reduce using rule 218 (io_statements -> output_statements .)
    Sys             reduce using rule 218 (io_statements -> output_statements .)
    $end            reduce using rule 218 (io_statements -> output_statements .)
    Break           reduce using rule 218 (io_statements -> output_statements .)
    Continue        reduce using rule 218 (io_statements -> output_statements .)
    Avoid           reduce using rule 218 (io_statements -> output_statements .)
    close_bracket   reduce using rule 218 (io_statements -> output_statements .)
    Elif            reduce using rule 218 (io_statements -> output_statements .)
    Else            reduce using rule 218 (io_statements -> output_statements .)
    Return          reduce using rule 218 (io_statements -> output_statements .)


state 39

    (221) func_call -> Sys_Call . id open_par function_param close_par

    id              shift and go to state 88


state 40

    (219) input_statements -> Absorb . id_array id_struct
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)
    Break           reduce using rule 75 (id_array -> .)
    Continue        reduce using rule 75 (id_array -> .)
    Avoid           reduce using rule 75 (id_array -> .)
    close_bracket   reduce using rule 75 (id_array -> .)
    Elif            reduce using rule 75 (id_array -> .)
    Else            reduce using rule 75 (id_array -> .)
    Return          reduce using rule 75 (id_array -> .)

  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array                       shift and go to state 89

state 41

    (220) output_statements -> Discharge . value
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    For             reduce using rule 61 (value -> .)
    While           reduce using rule 61 (value -> .)
    If              reduce using rule 61 (value -> .)
    Switch          reduce using rule 61 (value -> .)
    Absorb          reduce using rule 61 (value -> .)
    Discharge       reduce using rule 61 (value -> .)
    Link_End        reduce using rule 61 (value -> .)
    Sys             reduce using rule 61 (value -> .)
    $end            reduce using rule 61 (value -> .)
    Break           reduce using rule 61 (value -> .)
    Continue        reduce using rule 61 (value -> .)
    Avoid           reduce using rule 61 (value -> .)
    close_bracket   reduce using rule 61 (value -> .)
    Elif            reduce using rule 61 (value -> .)
    Else            reduce using rule 61 (value -> .)
    Return          reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 61 (value -> .) ]
  ! Sys_Call        [ reduce using rule 61 (value -> .) ]
  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! For             [ reduce using rule 69 (num_value -> .) ]
  ! While           [ reduce using rule 69 (num_value -> .) ]
  ! If              [ reduce using rule 69 (num_value -> .) ]
  ! Switch          [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! Absorb          [ reduce using rule 69 (num_value -> .) ]
  ! Discharge       [ reduce using rule 69 (num_value -> .) ]
  ! Link_End        [ reduce using rule 69 (num_value -> .) ]
  ! Sys             [ reduce using rule 69 (num_value -> .) ]
  ! $end            [ reduce using rule 69 (num_value -> .) ]
  ! Break           [ reduce using rule 69 (num_value -> .) ]
  ! Continue        [ reduce using rule 69 (num_value -> .) ]
  ! Avoid           [ reduce using rule 69 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 69 (num_value -> .) ]
  ! Elif            [ reduce using rule 69 (num_value -> .) ]
  ! Else            [ reduce using rule 69 (num_value -> .) ]
  ! Return          [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Break           [ reduce using rule 75 (id_array -> .) ]
  ! Continue        [ reduce using rule 75 (id_array -> .) ]
  ! Avoid           [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! Elif            [ reduce using rule 75 (id_array -> .) ]
  ! Else            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Break           [ reduce using rule 88 (literals -> .) ]
  ! Continue        [ reduce using rule 88 (literals -> .) ]
  ! Avoid           [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]
  ! Elif            [ reduce using rule 88 (literals -> .) ]
  ! Else            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]

    value                          shift and go to state 90
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 42

    (8) struct_dec -> Struct id open_bracket . struct_element1 close_bracket id_array1
    (12) struct_dec -> Struct id open_bracket . struct_element1 id_array1
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)
    close_bracket   reduce using rule 23 (data_type -> .)
    comma           reduce using rule 23 (data_type -> .)
    Struct          reduce using rule 23 (data_type -> .)
    Generate        reduce using rule 23 (data_type -> .)
    Link_Start      reduce using rule 23 (data_type -> .)
    For             reduce using rule 23 (data_type -> .)
    While           reduce using rule 23 (data_type -> .)
    If              reduce using rule 23 (data_type -> .)
    Switch          reduce using rule 23 (data_type -> .)
    Sys_Call        reduce using rule 23 (data_type -> .)
    Absorb          reduce using rule 23 (data_type -> .)
    Discharge       reduce using rule 23 (data_type -> .)
    Link_End        reduce using rule 23 (data_type -> .)
    Sys             reduce using rule 23 (data_type -> .)
    $end            reduce using rule 23 (data_type -> .)

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]

    struct_element1                shift and go to state 93
    data_type                      shift and go to state 14

state 43

    (9) struct_dec -> Struct id struct_element1 . id_array1
    (13) struct_dec -> Struct id struct_element1 . close_bracket id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    close_bracket   shift and go to state 95
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 94
    id_array                       shift and go to state 96

state 44

    (10) struct_dec -> Struct open_bracket struct_element1 . id_array1
    (14) struct_dec -> Struct open_bracket struct_element1 . close_bracket id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    close_bracket   shift and go to state 98
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 97
    id_array                       shift and go to state 96

state 45

    (11) struct_dec -> Struct struct_element1 close_bracket . id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 99
    id_array                       shift and go to state 96

state 46

    (16) struct_element1 -> data_type id_array_dec . struct_element2
    (17) struct_element2 -> . struct_element1
    (18) struct_element2 -> .
    (16) struct_element1 -> . data_type id_array_dec struct_element2
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for Integer resolved as shift
  ! shift/reduce conflict for Decimal resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Boolean resolved as shift
  ! reduce/reduce conflict for id resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for comma resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Struct resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Generate resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for For resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for While resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for If resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Switch resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for Sys resolved using rule 18 (struct_element2 -> .)
  ! reduce/reduce conflict for $end resolved using rule 18 (struct_element2 -> .)
    close_bracket   reduce using rule 18 (struct_element2 -> .)
    id              reduce using rule 18 (struct_element2 -> .)
    comma           reduce using rule 18 (struct_element2 -> .)
    Struct          reduce using rule 18 (struct_element2 -> .)
    Generate        reduce using rule 18 (struct_element2 -> .)
    Link_Start      reduce using rule 18 (struct_element2 -> .)
    For             reduce using rule 18 (struct_element2 -> .)
    While           reduce using rule 18 (struct_element2 -> .)
    If              reduce using rule 18 (struct_element2 -> .)
    Switch          reduce using rule 18 (struct_element2 -> .)
    Sys_Call        reduce using rule 18 (struct_element2 -> .)
    Absorb          reduce using rule 18 (struct_element2 -> .)
    Discharge       reduce using rule 18 (struct_element2 -> .)
    Link_End        reduce using rule 18 (struct_element2 -> .)
    Sys             reduce using rule 18 (struct_element2 -> .)
    $end            reduce using rule 18 (struct_element2 -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18

  ! Integer         [ reduce using rule 23 (data_type -> .) ]
  ! Decimal         [ reduce using rule 23 (data_type -> .) ]
  ! String          [ reduce using rule 23 (data_type -> .) ]
  ! Boolean         [ reduce using rule 23 (data_type -> .) ]
  ! id              [ reduce using rule 23 (data_type -> .) ]
  ! close_bracket   [ reduce using rule 23 (data_type -> .) ]
  ! comma           [ reduce using rule 23 (data_type -> .) ]
  ! Struct          [ reduce using rule 23 (data_type -> .) ]
  ! Generate        [ reduce using rule 23 (data_type -> .) ]
  ! Link_Start      [ reduce using rule 23 (data_type -> .) ]
  ! For             [ reduce using rule 23 (data_type -> .) ]
  ! While           [ reduce using rule 23 (data_type -> .) ]
  ! If              [ reduce using rule 23 (data_type -> .) ]
  ! Switch          [ reduce using rule 23 (data_type -> .) ]
  ! Sys_Call        [ reduce using rule 23 (data_type -> .) ]
  ! Absorb          [ reduce using rule 23 (data_type -> .) ]
  ! Discharge       [ reduce using rule 23 (data_type -> .) ]
  ! Link_End        [ reduce using rule 23 (data_type -> .) ]
  ! Sys             [ reduce using rule 23 (data_type -> .) ]
  ! $end            [ reduce using rule 23 (data_type -> .) ]

    data_type                      shift and go to state 14
    struct_element2                shift and go to state 100
    struct_element1                shift and go to state 101

state 47

    (24) id_array_dec -> id . id_array_dec2
    (26) id_array_dec2 -> . id_dec1
    (27) id_array_dec2 -> . open_brace lit_intposi close_brace array_dec1
    (28) id_dec1 -> . comma id id_dec1
    (29) id_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    open_brace      shift and go to state 104
    comma           shift and go to state 105
    Integer         reduce using rule 29 (id_dec1 -> .)
    Decimal         reduce using rule 29 (id_dec1 -> .)
    String          reduce using rule 29 (id_dec1 -> .)
    Boolean         reduce using rule 29 (id_dec1 -> .)
    id              reduce using rule 29 (id_dec1 -> .)
    close_bracket   reduce using rule 29 (id_dec1 -> .)
    Struct          reduce using rule 29 (id_dec1 -> .)
    Generate        reduce using rule 29 (id_dec1 -> .)
    Link_Start      reduce using rule 29 (id_dec1 -> .)
    For             reduce using rule 29 (id_dec1 -> .)
    While           reduce using rule 29 (id_dec1 -> .)
    If              reduce using rule 29 (id_dec1 -> .)
    Switch          reduce using rule 29 (id_dec1 -> .)
    Sys_Call        reduce using rule 29 (id_dec1 -> .)
    Absorb          reduce using rule 29 (id_dec1 -> .)
    Discharge       reduce using rule 29 (id_dec1 -> .)
    Link_End        reduce using rule 29 (id_dec1 -> .)
    Sys             reduce using rule 29 (id_dec1 -> .)
    $end            reduce using rule 29 (id_dec1 -> .)

  ! comma           [ reduce using rule 29 (id_dec1 -> .) ]

    id_array_dec2                  shift and go to state 102
    id_dec1                        shift and go to state 103

state 48

    (32) declare_statements -> Generate const_var_dec declare_statements .

    Struct          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Generate        reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Link_Start      reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    id              reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    For             reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    While           reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    If              reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Switch          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Sys_Call        reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Absorb          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Discharge       reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Link_End        reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Sys             reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    $end            reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    Return          reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)
    close_bracket   reduce using rule 32 (declare_statements -> Generate const_var_dec declare_statements .)


state 49

    (34) const_var_dec -> Fixed data_type . id_array_const
    (37) id_array_const -> . id id_array_const2
    (38) id_array_const -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 107
    Generate        reduce using rule 38 (id_array_const -> .)
    Struct          reduce using rule 38 (id_array_const -> .)
    Link_Start      reduce using rule 38 (id_array_const -> .)
    For             reduce using rule 38 (id_array_const -> .)
    While           reduce using rule 38 (id_array_const -> .)
    If              reduce using rule 38 (id_array_const -> .)
    Switch          reduce using rule 38 (id_array_const -> .)
    Sys_Call        reduce using rule 38 (id_array_const -> .)
    Absorb          reduce using rule 38 (id_array_const -> .)
    Discharge       reduce using rule 38 (id_array_const -> .)
    Link_End        reduce using rule 38 (id_array_const -> .)
    Sys             reduce using rule 38 (id_array_const -> .)
    $end            reduce using rule 38 (id_array_const -> .)
    Return          reduce using rule 38 (id_array_const -> .)
    close_bracket   reduce using rule 38 (id_array_const -> .)

  ! id              [ reduce using rule 38 (id_array_const -> .) ]

    id_array_const                 shift and go to state 106

state 50

    (35) const_var_dec -> data_type id_array_var .

    Generate        reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Struct          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Link_Start      reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    id              reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    For             reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    While           reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    If              reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Switch          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Sys_Call        reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Absorb          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Discharge       reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Link_End        reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Sys             reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    $end            reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    Return          reduce using rule 35 (const_var_dec -> data_type id_array_var .)
    close_bracket   reduce using rule 35 (const_var_dec -> data_type id_array_var .)


state 51

    (46) id_array_var -> id . id_array_var2
    (48) id_array_var2 -> . var_init id_var1
    (49) id_array_var2 -> . open_brace lit_intposi close_brace array_init array_var1
    (50) var_init -> . equal value id_var1
    (51) var_init -> .

    open_brace      shift and go to state 110
    equal           shift and go to state 111
    comma           reduce using rule 51 (var_init -> .)
    Generate        reduce using rule 51 (var_init -> .)
    Struct          reduce using rule 51 (var_init -> .)
    Link_Start      reduce using rule 51 (var_init -> .)
    id              reduce using rule 51 (var_init -> .)
    For             reduce using rule 51 (var_init -> .)
    While           reduce using rule 51 (var_init -> .)
    If              reduce using rule 51 (var_init -> .)
    Switch          reduce using rule 51 (var_init -> .)
    Sys_Call        reduce using rule 51 (var_init -> .)
    Absorb          reduce using rule 51 (var_init -> .)
    Discharge       reduce using rule 51 (var_init -> .)
    Link_End        reduce using rule 51 (var_init -> .)
    Sys             reduce using rule 51 (var_init -> .)
    $end            reduce using rule 51 (var_init -> .)
    Return          reduce using rule 51 (var_init -> .)
    close_bracket   reduce using rule 51 (var_init -> .)

    id_array_var2                  shift and go to state 108
    var_init                       shift and go to state 109

state 52

    (1) program -> global_dec Link_Start declare_statements statements . Link_End functions
    (2) program -> global_dec Link_Start declare_statements statements . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Link_End        shift and go to state 112
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 113

state 53

    (3) program -> global_dec declare_statements statements Link_End . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 114

state 54

    (4) program -> global_dec declare_statements statements functions .

    $end            reduce using rule 4 (program -> global_dec declare_statements statements functions .)


state 55

    (227) functions -> Sys . id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> Sys . id parameters declare_statements statements return_statement functions
    (229) functions -> Sys . open_par parameters declare_statements statements return_statement functions
    (230) functions -> Sys . parameters close_par declare_statements statements return_statement functions
    (231) functions -> Sys . parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> Sys . parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> Sys . id open_par parameters declare_statements statements return_statement functions
    (234) functions -> Sys . id parameters close_par declare_statements statements return_statement functions
    (235) functions -> Sys . id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> Sys . id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> Sys . open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> Sys . open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> Sys . open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> Sys . parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> Sys . parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> Sys . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> Sys . id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> Sys . id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> Sys . id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> Sys . id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> Sys . id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> Sys . id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> Sys . open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> Sys . open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> Sys . open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> Sys . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> Sys . id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> Sys . id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> Sys . id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> Sys . id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> Sys . open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (259) parameters -> . data_type id more_parameters
    (260) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 115
    open_par        shift and go to state 116
    close_par       reduce using rule 260 (parameters -> .)
    open_bracket    reduce using rule 260 (parameters -> .)
    Generate        reduce using rule 260 (parameters -> .)
    For             reduce using rule 260 (parameters -> .)
    While           reduce using rule 260 (parameters -> .)
    If              reduce using rule 260 (parameters -> .)
    Switch          reduce using rule 260 (parameters -> .)
    Sys_Call        reduce using rule 260 (parameters -> .)
    Absorb          reduce using rule 260 (parameters -> .)
    Discharge       reduce using rule 260 (parameters -> .)
    Return          reduce using rule 260 (parameters -> .)
    close_bracket   reduce using rule 260 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18

  ! id              [ reduce using rule 260 (parameters -> .) ]
  ! id              [ reduce using rule 23 (data_type -> .) ]

    parameters                     shift and go to state 117
    data_type                      shift and go to state 118

state 56

    (110) statements -> assignment_statements statements .

    Link_End        reduce using rule 110 (statements -> assignment_statements statements .)
    Sys             reduce using rule 110 (statements -> assignment_statements statements .)
    $end            reduce using rule 110 (statements -> assignment_statements statements .)
    Break           reduce using rule 110 (statements -> assignment_statements statements .)
    Continue        reduce using rule 110 (statements -> assignment_statements statements .)
    Avoid           reduce using rule 110 (statements -> assignment_statements statements .)
    close_bracket   reduce using rule 110 (statements -> assignment_statements statements .)
    Elif            reduce using rule 110 (statements -> assignment_statements statements .)
    Else            reduce using rule 110 (statements -> assignment_statements statements .)
    id              reduce using rule 110 (statements -> assignment_statements statements .)
    For             reduce using rule 110 (statements -> assignment_statements statements .)
    While           reduce using rule 110 (statements -> assignment_statements statements .)
    If              reduce using rule 110 (statements -> assignment_statements statements .)
    Switch          reduce using rule 110 (statements -> assignment_statements statements .)
    Sys_Call        reduce using rule 110 (statements -> assignment_statements statements .)
    Absorb          reduce using rule 110 (statements -> assignment_statements statements .)
    Discharge       reduce using rule 110 (statements -> assignment_statements statements .)
    Return          reduce using rule 110 (statements -> assignment_statements statements .)


state 57

    (111) statements -> for_statements statements .

    Link_End        reduce using rule 111 (statements -> for_statements statements .)
    Sys             reduce using rule 111 (statements -> for_statements statements .)
    $end            reduce using rule 111 (statements -> for_statements statements .)
    Break           reduce using rule 111 (statements -> for_statements statements .)
    Continue        reduce using rule 111 (statements -> for_statements statements .)
    Avoid           reduce using rule 111 (statements -> for_statements statements .)
    close_bracket   reduce using rule 111 (statements -> for_statements statements .)
    Elif            reduce using rule 111 (statements -> for_statements statements .)
    Else            reduce using rule 111 (statements -> for_statements statements .)
    id              reduce using rule 111 (statements -> for_statements statements .)
    For             reduce using rule 111 (statements -> for_statements statements .)
    While           reduce using rule 111 (statements -> for_statements statements .)
    If              reduce using rule 111 (statements -> for_statements statements .)
    Switch          reduce using rule 111 (statements -> for_statements statements .)
    Sys_Call        reduce using rule 111 (statements -> for_statements statements .)
    Absorb          reduce using rule 111 (statements -> for_statements statements .)
    Discharge       reduce using rule 111 (statements -> for_statements statements .)
    Return          reduce using rule 111 (statements -> for_statements statements .)


state 58

    (112) statements -> while_statements statements .

    Link_End        reduce using rule 112 (statements -> while_statements statements .)
    Sys             reduce using rule 112 (statements -> while_statements statements .)
    $end            reduce using rule 112 (statements -> while_statements statements .)
    Break           reduce using rule 112 (statements -> while_statements statements .)
    Continue        reduce using rule 112 (statements -> while_statements statements .)
    Avoid           reduce using rule 112 (statements -> while_statements statements .)
    close_bracket   reduce using rule 112 (statements -> while_statements statements .)
    Elif            reduce using rule 112 (statements -> while_statements statements .)
    Else            reduce using rule 112 (statements -> while_statements statements .)
    id              reduce using rule 112 (statements -> while_statements statements .)
    For             reduce using rule 112 (statements -> while_statements statements .)
    While           reduce using rule 112 (statements -> while_statements statements .)
    If              reduce using rule 112 (statements -> while_statements statements .)
    Switch          reduce using rule 112 (statements -> while_statements statements .)
    Sys_Call        reduce using rule 112 (statements -> while_statements statements .)
    Absorb          reduce using rule 112 (statements -> while_statements statements .)
    Discharge       reduce using rule 112 (statements -> while_statements statements .)
    Return          reduce using rule 112 (statements -> while_statements statements .)


state 59

    (113) statements -> if_statement statements .

    Link_End        reduce using rule 113 (statements -> if_statement statements .)
    Sys             reduce using rule 113 (statements -> if_statement statements .)
    $end            reduce using rule 113 (statements -> if_statement statements .)
    Break           reduce using rule 113 (statements -> if_statement statements .)
    Continue        reduce using rule 113 (statements -> if_statement statements .)
    Avoid           reduce using rule 113 (statements -> if_statement statements .)
    close_bracket   reduce using rule 113 (statements -> if_statement statements .)
    Elif            reduce using rule 113 (statements -> if_statement statements .)
    Else            reduce using rule 113 (statements -> if_statement statements .)
    id              reduce using rule 113 (statements -> if_statement statements .)
    For             reduce using rule 113 (statements -> if_statement statements .)
    While           reduce using rule 113 (statements -> if_statement statements .)
    If              reduce using rule 113 (statements -> if_statement statements .)
    Switch          reduce using rule 113 (statements -> if_statement statements .)
    Sys_Call        reduce using rule 113 (statements -> if_statement statements .)
    Absorb          reduce using rule 113 (statements -> if_statement statements .)
    Discharge       reduce using rule 113 (statements -> if_statement statements .)
    Return          reduce using rule 113 (statements -> if_statement statements .)


state 60

    (114) statements -> switch_statements statements .

    Link_End        reduce using rule 114 (statements -> switch_statements statements .)
    Sys             reduce using rule 114 (statements -> switch_statements statements .)
    $end            reduce using rule 114 (statements -> switch_statements statements .)
    Break           reduce using rule 114 (statements -> switch_statements statements .)
    Continue        reduce using rule 114 (statements -> switch_statements statements .)
    Avoid           reduce using rule 114 (statements -> switch_statements statements .)
    close_bracket   reduce using rule 114 (statements -> switch_statements statements .)
    Elif            reduce using rule 114 (statements -> switch_statements statements .)
    Else            reduce using rule 114 (statements -> switch_statements statements .)
    id              reduce using rule 114 (statements -> switch_statements statements .)
    For             reduce using rule 114 (statements -> switch_statements statements .)
    While           reduce using rule 114 (statements -> switch_statements statements .)
    If              reduce using rule 114 (statements -> switch_statements statements .)
    Switch          reduce using rule 114 (statements -> switch_statements statements .)
    Sys_Call        reduce using rule 114 (statements -> switch_statements statements .)
    Absorb          reduce using rule 114 (statements -> switch_statements statements .)
    Discharge       reduce using rule 114 (statements -> switch_statements statements .)
    Return          reduce using rule 114 (statements -> switch_statements statements .)


state 61

    (115) statements -> conditional_statements statements .

    Link_End        reduce using rule 115 (statements -> conditional_statements statements .)
    Sys             reduce using rule 115 (statements -> conditional_statements statements .)
    $end            reduce using rule 115 (statements -> conditional_statements statements .)
    Break           reduce using rule 115 (statements -> conditional_statements statements .)
    Continue        reduce using rule 115 (statements -> conditional_statements statements .)
    Avoid           reduce using rule 115 (statements -> conditional_statements statements .)
    close_bracket   reduce using rule 115 (statements -> conditional_statements statements .)
    Elif            reduce using rule 115 (statements -> conditional_statements statements .)
    Else            reduce using rule 115 (statements -> conditional_statements statements .)
    id              reduce using rule 115 (statements -> conditional_statements statements .)
    For             reduce using rule 115 (statements -> conditional_statements statements .)
    While           reduce using rule 115 (statements -> conditional_statements statements .)
    If              reduce using rule 115 (statements -> conditional_statements statements .)
    Switch          reduce using rule 115 (statements -> conditional_statements statements .)
    Sys_Call        reduce using rule 115 (statements -> conditional_statements statements .)
    Absorb          reduce using rule 115 (statements -> conditional_statements statements .)
    Discharge       reduce using rule 115 (statements -> conditional_statements statements .)
    Return          reduce using rule 115 (statements -> conditional_statements statements .)


state 62

    (116) statements -> io_statements statements .

    Link_End        reduce using rule 116 (statements -> io_statements statements .)
    Sys             reduce using rule 116 (statements -> io_statements statements .)
    $end            reduce using rule 116 (statements -> io_statements statements .)
    Break           reduce using rule 116 (statements -> io_statements statements .)
    Continue        reduce using rule 116 (statements -> io_statements statements .)
    Avoid           reduce using rule 116 (statements -> io_statements statements .)
    close_bracket   reduce using rule 116 (statements -> io_statements statements .)
    Elif            reduce using rule 116 (statements -> io_statements statements .)
    Else            reduce using rule 116 (statements -> io_statements statements .)
    id              reduce using rule 116 (statements -> io_statements statements .)
    For             reduce using rule 116 (statements -> io_statements statements .)
    While           reduce using rule 116 (statements -> io_statements statements .)
    If              reduce using rule 116 (statements -> io_statements statements .)
    Switch          reduce using rule 116 (statements -> io_statements statements .)
    Sys_Call        reduce using rule 116 (statements -> io_statements statements .)
    Absorb          reduce using rule 116 (statements -> io_statements statements .)
    Discharge       reduce using rule 116 (statements -> io_statements statements .)
    Return          reduce using rule 116 (statements -> io_statements statements .)


state 63

    (117) statements -> func_call statements .

    Link_End        reduce using rule 117 (statements -> func_call statements .)
    Sys             reduce using rule 117 (statements -> func_call statements .)
    $end            reduce using rule 117 (statements -> func_call statements .)
    Break           reduce using rule 117 (statements -> func_call statements .)
    Continue        reduce using rule 117 (statements -> func_call statements .)
    Avoid           reduce using rule 117 (statements -> func_call statements .)
    close_bracket   reduce using rule 117 (statements -> func_call statements .)
    Elif            reduce using rule 117 (statements -> func_call statements .)
    Else            reduce using rule 117 (statements -> func_call statements .)
    id              reduce using rule 117 (statements -> func_call statements .)
    For             reduce using rule 117 (statements -> func_call statements .)
    While           reduce using rule 117 (statements -> func_call statements .)
    If              reduce using rule 117 (statements -> func_call statements .)
    Switch          reduce using rule 117 (statements -> func_call statements .)
    Sys_Call        reduce using rule 117 (statements -> func_call statements .)
    Absorb          reduce using rule 117 (statements -> func_call statements .)
    Discharge       reduce using rule 117 (statements -> func_call statements .)
    Return          reduce using rule 117 (statements -> func_call statements .)


state 64

    (119) assignment_statements -> id assignment_statements2 .

    id              reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    For             reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    While           reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    If              reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Switch          reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Sys_Call        reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Absorb          reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Discharge       reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Link_End        reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Sys             reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    $end            reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Break           reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Continue        reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Avoid           reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    close_bracket   reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Elif            reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Else            reduce using rule 119 (assignment_statements -> id assignment_statements2 .)
    Return          reduce using rule 119 (assignment_statements -> id assignment_statements2 .)


state 65

    (121) assignment_statements2 -> array . id_struct assignment_exp
    (102) id_struct -> . period id_array
    (103) id_struct -> .

    period          shift and go to state 120
    equal           reduce using rule 103 (id_struct -> .)
    plus_equal      reduce using rule 103 (id_struct -> .)
    minus_equal     reduce using rule 103 (id_struct -> .)
    times_equal     reduce using rule 103 (id_struct -> .)
    divide_equal    reduce using rule 103 (id_struct -> .)
    divide_divide_equal reduce using rule 103 (id_struct -> .)
    modulo_equal    reduce using rule 103 (id_struct -> .)
    times_times_equal reduce using rule 103 (id_struct -> .)
    id              reduce using rule 103 (id_struct -> .)
    For             reduce using rule 103 (id_struct -> .)
    While           reduce using rule 103 (id_struct -> .)
    If              reduce using rule 103 (id_struct -> .)
    Switch          reduce using rule 103 (id_struct -> .)
    Sys_Call        reduce using rule 103 (id_struct -> .)
    Absorb          reduce using rule 103 (id_struct -> .)
    Discharge       reduce using rule 103 (id_struct -> .)
    Link_End        reduce using rule 103 (id_struct -> .)
    Sys             reduce using rule 103 (id_struct -> .)
    $end            reduce using rule 103 (id_struct -> .)
    Break           reduce using rule 103 (id_struct -> .)
    Continue        reduce using rule 103 (id_struct -> .)
    Avoid           reduce using rule 103 (id_struct -> .)
    close_bracket   reduce using rule 103 (id_struct -> .)
    Elif            reduce using rule 103 (id_struct -> .)
    Else            reduce using rule 103 (id_struct -> .)
    Return          reduce using rule 103 (id_struct -> .)

    id_struct                      shift and go to state 119

state 66

    (122) assignment_statements2 -> open_brace . lit_intposi close_brace more_array equal open_brace value1 close_brace
    (77) array -> open_brace . num_value close_brace
    (78) array -> open_brace . close_brace
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
    lit_intposi     shift and go to state 121
    close_brace     shift and go to state 122
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]

    num_value                      shift and go to state 123
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 67

    (139) for_statements -> For id . In id open_brace close_brace colon open_bracket inside_statements close_bracket

    In              shift and go to state 124


state 68

    (141) while_statements -> While open_par . condition close_par colon open_bracket inside_statements close_bracket
    (150) condition -> . relational_expression
    (151) condition -> . logical_expression
    (152) condition -> . Not open_par condition_not close_par
    (153) condition -> . lit_bool
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    Not             shift and go to state 73
    lit_bool        shift and go to state 74
    open_par        shift and go to state 125
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    condition                      shift and go to state 126
    relational_expression          shift and go to state 71
    logical_expression             shift and go to state 72
    value                          shift and go to state 75
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 69

    (173) if_statement -> If open_par . condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> If open_par . condition inside_statements condition_else
    (179) if_statement -> If open_par . condition close_par inside_statements condition_else
    (180) if_statement -> If open_par . condition colon inside_statements condition_else
    (181) if_statement -> If open_par . condition open_bracket inside_statements condition_else
    (182) if_statement -> If open_par . condition inside_statements close_bracket condition_else
    (189) if_statement -> If open_par . condition close_par colon inside_statements condition_else
    (190) if_statement -> If open_par . condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> If open_par . condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> If open_par . condition colon open_bracket inside_statements condition_else
    (193) if_statement -> If open_par . condition colon inside_statements close_bracket condition_else
    (194) if_statement -> If open_par . condition open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> If open_par . condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> If open_par . condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> If open_par . condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> If open_par . condition colon open_bracket inside_statements close_bracket condition_else
    (164) logical_expression -> open_par . logical_operand close_par logical_operators open_par logical_operand close_par
    (93) arithmetic_expression -> open_par . arithmetic_expression close_par
    (150) condition -> . relational_expression
    (151) condition -> . logical_expression
    (152) condition -> . Not open_par condition_not close_par
    (153) condition -> . lit_bool
    (165) logical_operand -> . Not open_par logical_operand close_par
    (166) logical_operand -> . relational_expression
    (167) logical_operand -> . logical_expression
    (168) logical_operand -> . lit_bool
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    Not             shift and go to state 133
    lit_bool        shift and go to state 134
    open_par        shift and go to state 127
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    condition                      shift and go to state 128
    logical_operand                shift and go to state 129
    arithmetic_expression          shift and go to state 130
    relational_expression          shift and go to state 131
    logical_expression             shift and go to state 132
    num_value                      shift and go to state 135
    value                          shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    func_call                      shift and go to state 81

state 70

    (175) if_statement -> If condition . close_par inside_statements condition_else
    (176) if_statement -> If condition . colon inside_statements condition_else
    (177) if_statement -> If condition . open_bracket inside_statements condition_else
    (178) if_statement -> If condition . inside_statements close_bracket condition_else
    (183) if_statement -> If condition . close_par colon inside_statements condition_else
    (184) if_statement -> If condition . close_par open_bracket inside_statements condition_else
    (185) if_statement -> If condition . close_par inside_statements close_bracket condition_else
    (186) if_statement -> If condition . colon open_bracket inside_statements condition_else
    (187) if_statement -> If condition . colon inside_statements close_bracket condition_else
    (188) if_statement -> If condition . open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> If condition . close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> If condition . close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> If condition . close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> If condition . colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> If condition . close_par colon open_bracket inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_par       shift and go to state 136
    colon           shift and go to state 138
    open_bracket    shift and go to state 139
    close_bracket   reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 137
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 71

    (150) condition -> relational_expression .

    close_par       reduce using rule 150 (condition -> relational_expression .)
    colon           reduce using rule 150 (condition -> relational_expression .)
    open_bracket    reduce using rule 150 (condition -> relational_expression .)
    Break           reduce using rule 150 (condition -> relational_expression .)
    Continue        reduce using rule 150 (condition -> relational_expression .)
    Avoid           reduce using rule 150 (condition -> relational_expression .)
    id              reduce using rule 150 (condition -> relational_expression .)
    For             reduce using rule 150 (condition -> relational_expression .)
    While           reduce using rule 150 (condition -> relational_expression .)
    If              reduce using rule 150 (condition -> relational_expression .)
    Switch          reduce using rule 150 (condition -> relational_expression .)
    Sys_Call        reduce using rule 150 (condition -> relational_expression .)
    Absorb          reduce using rule 150 (condition -> relational_expression .)
    Discharge       reduce using rule 150 (condition -> relational_expression .)
    close_bracket   reduce using rule 150 (condition -> relational_expression .)


state 72

    (151) condition -> logical_expression .

    close_par       reduce using rule 151 (condition -> logical_expression .)
    colon           reduce using rule 151 (condition -> logical_expression .)
    open_bracket    reduce using rule 151 (condition -> logical_expression .)
    Break           reduce using rule 151 (condition -> logical_expression .)
    Continue        reduce using rule 151 (condition -> logical_expression .)
    Avoid           reduce using rule 151 (condition -> logical_expression .)
    id              reduce using rule 151 (condition -> logical_expression .)
    For             reduce using rule 151 (condition -> logical_expression .)
    While           reduce using rule 151 (condition -> logical_expression .)
    If              reduce using rule 151 (condition -> logical_expression .)
    Switch          reduce using rule 151 (condition -> logical_expression .)
    Sys_Call        reduce using rule 151 (condition -> logical_expression .)
    Absorb          reduce using rule 151 (condition -> logical_expression .)
    Discharge       reduce using rule 151 (condition -> logical_expression .)
    close_bracket   reduce using rule 151 (condition -> logical_expression .)


state 73

    (152) condition -> Not . open_par condition_not close_par

    open_par        shift and go to state 145


state 74

    (153) condition -> lit_bool .
    (60) value -> lit_bool .

    close_par       reduce using rule 153 (condition -> lit_bool .)
    colon           reduce using rule 153 (condition -> lit_bool .)
    open_bracket    reduce using rule 153 (condition -> lit_bool .)
    Break           reduce using rule 153 (condition -> lit_bool .)
    Continue        reduce using rule 153 (condition -> lit_bool .)
    Avoid           reduce using rule 153 (condition -> lit_bool .)
    id              reduce using rule 153 (condition -> lit_bool .)
    For             reduce using rule 153 (condition -> lit_bool .)
    While           reduce using rule 153 (condition -> lit_bool .)
    If              reduce using rule 153 (condition -> lit_bool .)
    Switch          reduce using rule 153 (condition -> lit_bool .)
    Sys_Call        reduce using rule 153 (condition -> lit_bool .)
    Absorb          reduce using rule 153 (condition -> lit_bool .)
    Discharge       reduce using rule 153 (condition -> lit_bool .)
    close_bracket   reduce using rule 153 (condition -> lit_bool .)
    greater_than    reduce using rule 60 (value -> lit_bool .)
    less_than       reduce using rule 60 (value -> lit_bool .)
    equal_equal     reduce using rule 60 (value -> lit_bool .)
    not_equal       reduce using rule 60 (value -> lit_bool .)
    great_than_equal reduce using rule 60 (value -> lit_bool .)
    less_than_equal reduce using rule 60 (value -> lit_bool .)


state 75

    (157) relational_expression -> value . relational_operators value
    (158) relational_operators -> . greater_than
    (159) relational_operators -> . less_than
    (160) relational_operators -> . equal_equal
    (161) relational_operators -> . not_equal
    (162) relational_operators -> . great_than_equal
    (163) relational_operators -> . less_than_equal

    greater_than    shift and go to state 147
    less_than       shift and go to state 148
    equal_equal     shift and go to state 149
    not_equal       shift and go to state 150
    great_than_equal shift and go to state 151
    less_than_equal shift and go to state 152

    relational_operators           shift and go to state 146

state 76

    (58) value -> num_value .
    (94) arithmetic_expression -> num_value . arithmetic_operators num_value
    (95) arithmetic_operators -> . plus
    (96) arithmetic_operators -> . minus
    (97) arithmetic_operators -> . times
    (98) arithmetic_operators -> . divide
    (99) arithmetic_operators -> . divide_divide
    (100) arithmetic_operators -> . modulo
    (101) arithmetic_operators -> . times_times

    greater_than    reduce using rule 58 (value -> num_value .)
    less_than       reduce using rule 58 (value -> num_value .)
    equal_equal     reduce using rule 58 (value -> num_value .)
    not_equal       reduce using rule 58 (value -> num_value .)
    great_than_equal reduce using rule 58 (value -> num_value .)
    less_than_equal reduce using rule 58 (value -> num_value .)
    id              reduce using rule 58 (value -> num_value .)
    For             reduce using rule 58 (value -> num_value .)
    While           reduce using rule 58 (value -> num_value .)
    If              reduce using rule 58 (value -> num_value .)
    Switch          reduce using rule 58 (value -> num_value .)
    Sys_Call        reduce using rule 58 (value -> num_value .)
    Absorb          reduce using rule 58 (value -> num_value .)
    Discharge       reduce using rule 58 (value -> num_value .)
    Link_End        reduce using rule 58 (value -> num_value .)
    Sys             reduce using rule 58 (value -> num_value .)
    $end            reduce using rule 58 (value -> num_value .)
    Break           reduce using rule 58 (value -> num_value .)
    Continue        reduce using rule 58 (value -> num_value .)
    Avoid           reduce using rule 58 (value -> num_value .)
    close_bracket   reduce using rule 58 (value -> num_value .)
    Elif            reduce using rule 58 (value -> num_value .)
    Else            reduce using rule 58 (value -> num_value .)
    Return          reduce using rule 58 (value -> num_value .)
    comma           reduce using rule 58 (value -> num_value .)
    Generate        reduce using rule 58 (value -> num_value .)
    Struct          reduce using rule 58 (value -> num_value .)
    Link_Start      reduce using rule 58 (value -> num_value .)
    close_par       reduce using rule 58 (value -> num_value .)
    colon           reduce using rule 58 (value -> num_value .)
    open_bracket    reduce using rule 58 (value -> num_value .)
    close_brace     reduce using rule 58 (value -> num_value .)
    plus            shift and go to state 154
    minus           shift and go to state 155
    times           shift and go to state 156
    divide          shift and go to state 157
    divide_divide   shift and go to state 158
    modulo          shift and go to state 159
    times_times     shift and go to state 160

    arithmetic_operators           shift and go to state 153

state 77

    (59) value -> lit_str .

    greater_than    reduce using rule 59 (value -> lit_str .)
    less_than       reduce using rule 59 (value -> lit_str .)
    equal_equal     reduce using rule 59 (value -> lit_str .)
    not_equal       reduce using rule 59 (value -> lit_str .)
    great_than_equal reduce using rule 59 (value -> lit_str .)
    less_than_equal reduce using rule 59 (value -> lit_str .)
    id              reduce using rule 59 (value -> lit_str .)
    For             reduce using rule 59 (value -> lit_str .)
    While           reduce using rule 59 (value -> lit_str .)
    If              reduce using rule 59 (value -> lit_str .)
    Switch          reduce using rule 59 (value -> lit_str .)
    Sys_Call        reduce using rule 59 (value -> lit_str .)
    Absorb          reduce using rule 59 (value -> lit_str .)
    Discharge       reduce using rule 59 (value -> lit_str .)
    Link_End        reduce using rule 59 (value -> lit_str .)
    Sys             reduce using rule 59 (value -> lit_str .)
    $end            reduce using rule 59 (value -> lit_str .)
    Break           reduce using rule 59 (value -> lit_str .)
    Continue        reduce using rule 59 (value -> lit_str .)
    Avoid           reduce using rule 59 (value -> lit_str .)
    close_bracket   reduce using rule 59 (value -> lit_str .)
    Elif            reduce using rule 59 (value -> lit_str .)
    Else            reduce using rule 59 (value -> lit_str .)
    Return          reduce using rule 59 (value -> lit_str .)
    comma           reduce using rule 59 (value -> lit_str .)
    Generate        reduce using rule 59 (value -> lit_str .)
    Struct          reduce using rule 59 (value -> lit_str .)
    Link_Start      reduce using rule 59 (value -> lit_str .)
    close_par       reduce using rule 59 (value -> lit_str .)
    colon           reduce using rule 59 (value -> lit_str .)
    open_bracket    reduce using rule 59 (value -> lit_str .)
    close_brace     reduce using rule 59 (value -> lit_str .)


state 78

    (65) num_value -> id_array . id_struct
    (102) id_struct -> . period id_array
    (103) id_struct -> .

    period          shift and go to state 120
    plus            reduce using rule 103 (id_struct -> .)
    minus           reduce using rule 103 (id_struct -> .)
    times           reduce using rule 103 (id_struct -> .)
    divide          reduce using rule 103 (id_struct -> .)
    divide_divide   reduce using rule 103 (id_struct -> .)
    modulo          reduce using rule 103 (id_struct -> .)
    times_times     reduce using rule 103 (id_struct -> .)
    greater_than    reduce using rule 103 (id_struct -> .)
    less_than       reduce using rule 103 (id_struct -> .)
    equal_equal     reduce using rule 103 (id_struct -> .)
    not_equal       reduce using rule 103 (id_struct -> .)
    great_than_equal reduce using rule 103 (id_struct -> .)
    less_than_equal reduce using rule 103 (id_struct -> .)
    id              reduce using rule 103 (id_struct -> .)
    For             reduce using rule 103 (id_struct -> .)
    While           reduce using rule 103 (id_struct -> .)
    If              reduce using rule 103 (id_struct -> .)
    Switch          reduce using rule 103 (id_struct -> .)
    Sys_Call        reduce using rule 103 (id_struct -> .)
    Absorb          reduce using rule 103 (id_struct -> .)
    Discharge       reduce using rule 103 (id_struct -> .)
    Link_End        reduce using rule 103 (id_struct -> .)
    Sys             reduce using rule 103 (id_struct -> .)
    $end            reduce using rule 103 (id_struct -> .)
    Break           reduce using rule 103 (id_struct -> .)
    Continue        reduce using rule 103 (id_struct -> .)
    Avoid           reduce using rule 103 (id_struct -> .)
    close_bracket   reduce using rule 103 (id_struct -> .)
    Elif            reduce using rule 103 (id_struct -> .)
    Else            reduce using rule 103 (id_struct -> .)
    Return          reduce using rule 103 (id_struct -> .)
    close_brace     reduce using rule 103 (id_struct -> .)
    comma           reduce using rule 103 (id_struct -> .)
    Generate        reduce using rule 103 (id_struct -> .)
    Struct          reduce using rule 103 (id_struct -> .)
    Link_Start      reduce using rule 103 (id_struct -> .)
    close_par       reduce using rule 103 (id_struct -> .)
    colon           reduce using rule 103 (id_struct -> .)
    open_bracket    reduce using rule 103 (id_struct -> .)

    id_struct                      shift and go to state 161

state 79

    (66) num_value -> literals .

    plus            reduce using rule 66 (num_value -> literals .)
    minus           reduce using rule 66 (num_value -> literals .)
    times           reduce using rule 66 (num_value -> literals .)
    divide          reduce using rule 66 (num_value -> literals .)
    divide_divide   reduce using rule 66 (num_value -> literals .)
    modulo          reduce using rule 66 (num_value -> literals .)
    times_times     reduce using rule 66 (num_value -> literals .)
    greater_than    reduce using rule 66 (num_value -> literals .)
    less_than       reduce using rule 66 (num_value -> literals .)
    equal_equal     reduce using rule 66 (num_value -> literals .)
    not_equal       reduce using rule 66 (num_value -> literals .)
    great_than_equal reduce using rule 66 (num_value -> literals .)
    less_than_equal reduce using rule 66 (num_value -> literals .)
    id              reduce using rule 66 (num_value -> literals .)
    For             reduce using rule 66 (num_value -> literals .)
    While           reduce using rule 66 (num_value -> literals .)
    If              reduce using rule 66 (num_value -> literals .)
    Switch          reduce using rule 66 (num_value -> literals .)
    Sys_Call        reduce using rule 66 (num_value -> literals .)
    Absorb          reduce using rule 66 (num_value -> literals .)
    Discharge       reduce using rule 66 (num_value -> literals .)
    Link_End        reduce using rule 66 (num_value -> literals .)
    Sys             reduce using rule 66 (num_value -> literals .)
    $end            reduce using rule 66 (num_value -> literals .)
    Break           reduce using rule 66 (num_value -> literals .)
    Continue        reduce using rule 66 (num_value -> literals .)
    Avoid           reduce using rule 66 (num_value -> literals .)
    close_bracket   reduce using rule 66 (num_value -> literals .)
    Elif            reduce using rule 66 (num_value -> literals .)
    Else            reduce using rule 66 (num_value -> literals .)
    Return          reduce using rule 66 (num_value -> literals .)
    close_brace     reduce using rule 66 (num_value -> literals .)
    comma           reduce using rule 66 (num_value -> literals .)
    Generate        reduce using rule 66 (num_value -> literals .)
    Struct          reduce using rule 66 (num_value -> literals .)
    Link_Start      reduce using rule 66 (num_value -> literals .)
    close_par       reduce using rule 66 (num_value -> literals .)
    colon           reduce using rule 66 (num_value -> literals .)
    open_bracket    reduce using rule 66 (num_value -> literals .)


state 80

    (67) num_value -> arithmetic_expression .

    plus            reduce using rule 67 (num_value -> arithmetic_expression .)
    minus           reduce using rule 67 (num_value -> arithmetic_expression .)
    times           reduce using rule 67 (num_value -> arithmetic_expression .)
    divide          reduce using rule 67 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 67 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 67 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 67 (num_value -> arithmetic_expression .)
    greater_than    reduce using rule 67 (num_value -> arithmetic_expression .)
    less_than       reduce using rule 67 (num_value -> arithmetic_expression .)
    equal_equal     reduce using rule 67 (num_value -> arithmetic_expression .)
    not_equal       reduce using rule 67 (num_value -> arithmetic_expression .)
    great_than_equal reduce using rule 67 (num_value -> arithmetic_expression .)
    less_than_equal reduce using rule 67 (num_value -> arithmetic_expression .)
    id              reduce using rule 67 (num_value -> arithmetic_expression .)
    For             reduce using rule 67 (num_value -> arithmetic_expression .)
    While           reduce using rule 67 (num_value -> arithmetic_expression .)
    If              reduce using rule 67 (num_value -> arithmetic_expression .)
    Switch          reduce using rule 67 (num_value -> arithmetic_expression .)
    Sys_Call        reduce using rule 67 (num_value -> arithmetic_expression .)
    Absorb          reduce using rule 67 (num_value -> arithmetic_expression .)
    Discharge       reduce using rule 67 (num_value -> arithmetic_expression .)
    Link_End        reduce using rule 67 (num_value -> arithmetic_expression .)
    Sys             reduce using rule 67 (num_value -> arithmetic_expression .)
    $end            reduce using rule 67 (num_value -> arithmetic_expression .)
    Break           reduce using rule 67 (num_value -> arithmetic_expression .)
    Continue        reduce using rule 67 (num_value -> arithmetic_expression .)
    Avoid           reduce using rule 67 (num_value -> arithmetic_expression .)
    close_bracket   reduce using rule 67 (num_value -> arithmetic_expression .)
    Elif            reduce using rule 67 (num_value -> arithmetic_expression .)
    Else            reduce using rule 67 (num_value -> arithmetic_expression .)
    Return          reduce using rule 67 (num_value -> arithmetic_expression .)
    close_brace     reduce using rule 67 (num_value -> arithmetic_expression .)
    comma           reduce using rule 67 (num_value -> arithmetic_expression .)
    Generate        reduce using rule 67 (num_value -> arithmetic_expression .)
    Struct          reduce using rule 67 (num_value -> arithmetic_expression .)
    Link_Start      reduce using rule 67 (num_value -> arithmetic_expression .)
    close_par       reduce using rule 67 (num_value -> arithmetic_expression .)
    colon           reduce using rule 67 (num_value -> arithmetic_expression .)
    open_bracket    reduce using rule 67 (num_value -> arithmetic_expression .)


state 81

    (68) num_value -> func_call .

    plus            reduce using rule 68 (num_value -> func_call .)
    minus           reduce using rule 68 (num_value -> func_call .)
    times           reduce using rule 68 (num_value -> func_call .)
    divide          reduce using rule 68 (num_value -> func_call .)
    divide_divide   reduce using rule 68 (num_value -> func_call .)
    modulo          reduce using rule 68 (num_value -> func_call .)
    times_times     reduce using rule 68 (num_value -> func_call .)
    greater_than    reduce using rule 68 (num_value -> func_call .)
    less_than       reduce using rule 68 (num_value -> func_call .)
    equal_equal     reduce using rule 68 (num_value -> func_call .)
    not_equal       reduce using rule 68 (num_value -> func_call .)
    great_than_equal reduce using rule 68 (num_value -> func_call .)
    less_than_equal reduce using rule 68 (num_value -> func_call .)
    id              reduce using rule 68 (num_value -> func_call .)
    For             reduce using rule 68 (num_value -> func_call .)
    While           reduce using rule 68 (num_value -> func_call .)
    If              reduce using rule 68 (num_value -> func_call .)
    Switch          reduce using rule 68 (num_value -> func_call .)
    Sys_Call        reduce using rule 68 (num_value -> func_call .)
    Absorb          reduce using rule 68 (num_value -> func_call .)
    Discharge       reduce using rule 68 (num_value -> func_call .)
    Link_End        reduce using rule 68 (num_value -> func_call .)
    Sys             reduce using rule 68 (num_value -> func_call .)
    $end            reduce using rule 68 (num_value -> func_call .)
    Break           reduce using rule 68 (num_value -> func_call .)
    Continue        reduce using rule 68 (num_value -> func_call .)
    Avoid           reduce using rule 68 (num_value -> func_call .)
    close_bracket   reduce using rule 68 (num_value -> func_call .)
    Elif            reduce using rule 68 (num_value -> func_call .)
    Else            reduce using rule 68 (num_value -> func_call .)
    Return          reduce using rule 68 (num_value -> func_call .)
    close_brace     reduce using rule 68 (num_value -> func_call .)
    comma           reduce using rule 68 (num_value -> func_call .)
    Generate        reduce using rule 68 (num_value -> func_call .)
    Struct          reduce using rule 68 (num_value -> func_call .)
    Link_Start      reduce using rule 68 (num_value -> func_call .)
    close_par       reduce using rule 68 (num_value -> func_call .)
    colon           reduce using rule 68 (num_value -> func_call .)
    open_bracket    reduce using rule 68 (num_value -> func_call .)


state 82

    (74) id_array -> id . array
    (77) array -> . open_brace num_value close_brace
    (78) array -> . open_brace close_brace
    (79) array -> .

    open_brace      shift and go to state 163
    period          reduce using rule 79 (array -> .)
    plus            reduce using rule 79 (array -> .)
    minus           reduce using rule 79 (array -> .)
    times           reduce using rule 79 (array -> .)
    divide          reduce using rule 79 (array -> .)
    divide_divide   reduce using rule 79 (array -> .)
    modulo          reduce using rule 79 (array -> .)
    times_times     reduce using rule 79 (array -> .)
    greater_than    reduce using rule 79 (array -> .)
    less_than       reduce using rule 79 (array -> .)
    equal_equal     reduce using rule 79 (array -> .)
    not_equal       reduce using rule 79 (array -> .)
    great_than_equal reduce using rule 79 (array -> .)
    less_than_equal reduce using rule 79 (array -> .)
    id              reduce using rule 79 (array -> .)
    For             reduce using rule 79 (array -> .)
    While           reduce using rule 79 (array -> .)
    If              reduce using rule 79 (array -> .)
    Switch          reduce using rule 79 (array -> .)
    Sys_Call        reduce using rule 79 (array -> .)
    Absorb          reduce using rule 79 (array -> .)
    Discharge       reduce using rule 79 (array -> .)
    Link_End        reduce using rule 79 (array -> .)
    Sys             reduce using rule 79 (array -> .)
    $end            reduce using rule 79 (array -> .)
    Break           reduce using rule 79 (array -> .)
    Continue        reduce using rule 79 (array -> .)
    Avoid           reduce using rule 79 (array -> .)
    close_bracket   reduce using rule 79 (array -> .)
    Elif            reduce using rule 79 (array -> .)
    Else            reduce using rule 79 (array -> .)
    Return          reduce using rule 79 (array -> .)
    comma           reduce using rule 79 (array -> .)
    Struct          reduce using rule 79 (array -> .)
    Generate        reduce using rule 79 (array -> .)
    Link_Start      reduce using rule 79 (array -> .)
    close_brace     reduce using rule 79 (array -> .)
    equal           reduce using rule 79 (array -> .)
    plus_equal      reduce using rule 79 (array -> .)
    minus_equal     reduce using rule 79 (array -> .)
    times_equal     reduce using rule 79 (array -> .)
    divide_equal    reduce using rule 79 (array -> .)
    divide_divide_equal reduce using rule 79 (array -> .)
    modulo_equal    reduce using rule 79 (array -> .)
    times_times_equal reduce using rule 79 (array -> .)
    close_par       reduce using rule 79 (array -> .)
    colon           reduce using rule 79 (array -> .)
    open_bracket    reduce using rule 79 (array -> .)

    array                          shift and go to state 162

state 83

    (84) literals -> lit_intposi .

    plus            reduce using rule 84 (literals -> lit_intposi .)
    minus           reduce using rule 84 (literals -> lit_intposi .)
    times           reduce using rule 84 (literals -> lit_intposi .)
    divide          reduce using rule 84 (literals -> lit_intposi .)
    divide_divide   reduce using rule 84 (literals -> lit_intposi .)
    modulo          reduce using rule 84 (literals -> lit_intposi .)
    times_times     reduce using rule 84 (literals -> lit_intposi .)
    greater_than    reduce using rule 84 (literals -> lit_intposi .)
    less_than       reduce using rule 84 (literals -> lit_intposi .)
    equal_equal     reduce using rule 84 (literals -> lit_intposi .)
    not_equal       reduce using rule 84 (literals -> lit_intposi .)
    great_than_equal reduce using rule 84 (literals -> lit_intposi .)
    less_than_equal reduce using rule 84 (literals -> lit_intposi .)
    id              reduce using rule 84 (literals -> lit_intposi .)
    For             reduce using rule 84 (literals -> lit_intposi .)
    While           reduce using rule 84 (literals -> lit_intposi .)
    If              reduce using rule 84 (literals -> lit_intposi .)
    Switch          reduce using rule 84 (literals -> lit_intposi .)
    Sys_Call        reduce using rule 84 (literals -> lit_intposi .)
    Absorb          reduce using rule 84 (literals -> lit_intposi .)
    Discharge       reduce using rule 84 (literals -> lit_intposi .)
    Link_End        reduce using rule 84 (literals -> lit_intposi .)
    Sys             reduce using rule 84 (literals -> lit_intposi .)
    $end            reduce using rule 84 (literals -> lit_intposi .)
    Break           reduce using rule 84 (literals -> lit_intposi .)
    Continue        reduce using rule 84 (literals -> lit_intposi .)
    Avoid           reduce using rule 84 (literals -> lit_intposi .)
    close_bracket   reduce using rule 84 (literals -> lit_intposi .)
    Elif            reduce using rule 84 (literals -> lit_intposi .)
    Else            reduce using rule 84 (literals -> lit_intposi .)
    Return          reduce using rule 84 (literals -> lit_intposi .)
    comma           reduce using rule 84 (literals -> lit_intposi .)
    Generate        reduce using rule 84 (literals -> lit_intposi .)
    Struct          reduce using rule 84 (literals -> lit_intposi .)
    Link_Start      reduce using rule 84 (literals -> lit_intposi .)
    close_par       reduce using rule 84 (literals -> lit_intposi .)
    colon           reduce using rule 84 (literals -> lit_intposi .)
    open_bracket    reduce using rule 84 (literals -> lit_intposi .)
    close_brace     reduce using rule 84 (literals -> lit_intposi .)


state 84

    (85) literals -> lit_intnega .

    plus            reduce using rule 85 (literals -> lit_intnega .)
    minus           reduce using rule 85 (literals -> lit_intnega .)
    times           reduce using rule 85 (literals -> lit_intnega .)
    divide          reduce using rule 85 (literals -> lit_intnega .)
    divide_divide   reduce using rule 85 (literals -> lit_intnega .)
    modulo          reduce using rule 85 (literals -> lit_intnega .)
    times_times     reduce using rule 85 (literals -> lit_intnega .)
    greater_than    reduce using rule 85 (literals -> lit_intnega .)
    less_than       reduce using rule 85 (literals -> lit_intnega .)
    equal_equal     reduce using rule 85 (literals -> lit_intnega .)
    not_equal       reduce using rule 85 (literals -> lit_intnega .)
    great_than_equal reduce using rule 85 (literals -> lit_intnega .)
    less_than_equal reduce using rule 85 (literals -> lit_intnega .)
    id              reduce using rule 85 (literals -> lit_intnega .)
    For             reduce using rule 85 (literals -> lit_intnega .)
    While           reduce using rule 85 (literals -> lit_intnega .)
    If              reduce using rule 85 (literals -> lit_intnega .)
    Switch          reduce using rule 85 (literals -> lit_intnega .)
    Sys_Call        reduce using rule 85 (literals -> lit_intnega .)
    Absorb          reduce using rule 85 (literals -> lit_intnega .)
    Discharge       reduce using rule 85 (literals -> lit_intnega .)
    Link_End        reduce using rule 85 (literals -> lit_intnega .)
    Sys             reduce using rule 85 (literals -> lit_intnega .)
    $end            reduce using rule 85 (literals -> lit_intnega .)
    Break           reduce using rule 85 (literals -> lit_intnega .)
    Continue        reduce using rule 85 (literals -> lit_intnega .)
    Avoid           reduce using rule 85 (literals -> lit_intnega .)
    close_bracket   reduce using rule 85 (literals -> lit_intnega .)
    Elif            reduce using rule 85 (literals -> lit_intnega .)
    Else            reduce using rule 85 (literals -> lit_intnega .)
    Return          reduce using rule 85 (literals -> lit_intnega .)
    close_brace     reduce using rule 85 (literals -> lit_intnega .)
    comma           reduce using rule 85 (literals -> lit_intnega .)
    Generate        reduce using rule 85 (literals -> lit_intnega .)
    Struct          reduce using rule 85 (literals -> lit_intnega .)
    Link_Start      reduce using rule 85 (literals -> lit_intnega .)
    close_par       reduce using rule 85 (literals -> lit_intnega .)
    colon           reduce using rule 85 (literals -> lit_intnega .)
    open_bracket    reduce using rule 85 (literals -> lit_intnega .)


state 85

    (86) literals -> lit_decposi .

    plus            reduce using rule 86 (literals -> lit_decposi .)
    minus           reduce using rule 86 (literals -> lit_decposi .)
    times           reduce using rule 86 (literals -> lit_decposi .)
    divide          reduce using rule 86 (literals -> lit_decposi .)
    divide_divide   reduce using rule 86 (literals -> lit_decposi .)
    modulo          reduce using rule 86 (literals -> lit_decposi .)
    times_times     reduce using rule 86 (literals -> lit_decposi .)
    greater_than    reduce using rule 86 (literals -> lit_decposi .)
    less_than       reduce using rule 86 (literals -> lit_decposi .)
    equal_equal     reduce using rule 86 (literals -> lit_decposi .)
    not_equal       reduce using rule 86 (literals -> lit_decposi .)
    great_than_equal reduce using rule 86 (literals -> lit_decposi .)
    less_than_equal reduce using rule 86 (literals -> lit_decposi .)
    id              reduce using rule 86 (literals -> lit_decposi .)
    For             reduce using rule 86 (literals -> lit_decposi .)
    While           reduce using rule 86 (literals -> lit_decposi .)
    If              reduce using rule 86 (literals -> lit_decposi .)
    Switch          reduce using rule 86 (literals -> lit_decposi .)
    Sys_Call        reduce using rule 86 (literals -> lit_decposi .)
    Absorb          reduce using rule 86 (literals -> lit_decposi .)
    Discharge       reduce using rule 86 (literals -> lit_decposi .)
    Link_End        reduce using rule 86 (literals -> lit_decposi .)
    Sys             reduce using rule 86 (literals -> lit_decposi .)
    $end            reduce using rule 86 (literals -> lit_decposi .)
    Break           reduce using rule 86 (literals -> lit_decposi .)
    Continue        reduce using rule 86 (literals -> lit_decposi .)
    Avoid           reduce using rule 86 (literals -> lit_decposi .)
    close_bracket   reduce using rule 86 (literals -> lit_decposi .)
    Elif            reduce using rule 86 (literals -> lit_decposi .)
    Else            reduce using rule 86 (literals -> lit_decposi .)
    Return          reduce using rule 86 (literals -> lit_decposi .)
    close_brace     reduce using rule 86 (literals -> lit_decposi .)
    comma           reduce using rule 86 (literals -> lit_decposi .)
    Generate        reduce using rule 86 (literals -> lit_decposi .)
    Struct          reduce using rule 86 (literals -> lit_decposi .)
    Link_Start      reduce using rule 86 (literals -> lit_decposi .)
    close_par       reduce using rule 86 (literals -> lit_decposi .)
    colon           reduce using rule 86 (literals -> lit_decposi .)
    open_bracket    reduce using rule 86 (literals -> lit_decposi .)


state 86

    (87) literals -> lit_decnega .

    plus            reduce using rule 87 (literals -> lit_decnega .)
    minus           reduce using rule 87 (literals -> lit_decnega .)
    times           reduce using rule 87 (literals -> lit_decnega .)
    divide          reduce using rule 87 (literals -> lit_decnega .)
    divide_divide   reduce using rule 87 (literals -> lit_decnega .)
    modulo          reduce using rule 87 (literals -> lit_decnega .)
    times_times     reduce using rule 87 (literals -> lit_decnega .)
    greater_than    reduce using rule 87 (literals -> lit_decnega .)
    less_than       reduce using rule 87 (literals -> lit_decnega .)
    equal_equal     reduce using rule 87 (literals -> lit_decnega .)
    not_equal       reduce using rule 87 (literals -> lit_decnega .)
    great_than_equal reduce using rule 87 (literals -> lit_decnega .)
    less_than_equal reduce using rule 87 (literals -> lit_decnega .)
    id              reduce using rule 87 (literals -> lit_decnega .)
    For             reduce using rule 87 (literals -> lit_decnega .)
    While           reduce using rule 87 (literals -> lit_decnega .)
    If              reduce using rule 87 (literals -> lit_decnega .)
    Switch          reduce using rule 87 (literals -> lit_decnega .)
    Sys_Call        reduce using rule 87 (literals -> lit_decnega .)
    Absorb          reduce using rule 87 (literals -> lit_decnega .)
    Discharge       reduce using rule 87 (literals -> lit_decnega .)
    Link_End        reduce using rule 87 (literals -> lit_decnega .)
    Sys             reduce using rule 87 (literals -> lit_decnega .)
    $end            reduce using rule 87 (literals -> lit_decnega .)
    Break           reduce using rule 87 (literals -> lit_decnega .)
    Continue        reduce using rule 87 (literals -> lit_decnega .)
    Avoid           reduce using rule 87 (literals -> lit_decnega .)
    close_bracket   reduce using rule 87 (literals -> lit_decnega .)
    Elif            reduce using rule 87 (literals -> lit_decnega .)
    Else            reduce using rule 87 (literals -> lit_decnega .)
    Return          reduce using rule 87 (literals -> lit_decnega .)
    close_brace     reduce using rule 87 (literals -> lit_decnega .)
    comma           reduce using rule 87 (literals -> lit_decnega .)
    Generate        reduce using rule 87 (literals -> lit_decnega .)
    Struct          reduce using rule 87 (literals -> lit_decnega .)
    Link_Start      reduce using rule 87 (literals -> lit_decnega .)
    close_par       reduce using rule 87 (literals -> lit_decnega .)
    colon           reduce using rule 87 (literals -> lit_decnega .)
    open_bracket    reduce using rule 87 (literals -> lit_decnega .)


state 87

    (210) switch_statements -> Switch id . colon open_bracket execute Default colon inside_statements close_bracket End_Switch

    colon           shift and go to state 164


state 88

    (221) func_call -> Sys_Call id . open_par function_param close_par

    open_par        shift and go to state 165


state 89

    (219) input_statements -> Absorb id_array . id_struct
    (102) id_struct -> . period id_array
    (103) id_struct -> .

    period          shift and go to state 120
    id              reduce using rule 103 (id_struct -> .)
    For             reduce using rule 103 (id_struct -> .)
    While           reduce using rule 103 (id_struct -> .)
    If              reduce using rule 103 (id_struct -> .)
    Switch          reduce using rule 103 (id_struct -> .)
    Sys_Call        reduce using rule 103 (id_struct -> .)
    Absorb          reduce using rule 103 (id_struct -> .)
    Discharge       reduce using rule 103 (id_struct -> .)
    Link_End        reduce using rule 103 (id_struct -> .)
    Sys             reduce using rule 103 (id_struct -> .)
    $end            reduce using rule 103 (id_struct -> .)
    Break           reduce using rule 103 (id_struct -> .)
    Continue        reduce using rule 103 (id_struct -> .)
    Avoid           reduce using rule 103 (id_struct -> .)
    close_bracket   reduce using rule 103 (id_struct -> .)
    Elif            reduce using rule 103 (id_struct -> .)
    Else            reduce using rule 103 (id_struct -> .)
    Return          reduce using rule 103 (id_struct -> .)

    id_struct                      shift and go to state 166

state 90

    (220) output_statements -> Discharge value .

    id              reduce using rule 220 (output_statements -> Discharge value .)
    For             reduce using rule 220 (output_statements -> Discharge value .)
    While           reduce using rule 220 (output_statements -> Discharge value .)
    If              reduce using rule 220 (output_statements -> Discharge value .)
    Switch          reduce using rule 220 (output_statements -> Discharge value .)
    Sys_Call        reduce using rule 220 (output_statements -> Discharge value .)
    Absorb          reduce using rule 220 (output_statements -> Discharge value .)
    Discharge       reduce using rule 220 (output_statements -> Discharge value .)
    Link_End        reduce using rule 220 (output_statements -> Discharge value .)
    Sys             reduce using rule 220 (output_statements -> Discharge value .)
    $end            reduce using rule 220 (output_statements -> Discharge value .)
    Break           reduce using rule 220 (output_statements -> Discharge value .)
    Continue        reduce using rule 220 (output_statements -> Discharge value .)
    Avoid           reduce using rule 220 (output_statements -> Discharge value .)
    close_bracket   reduce using rule 220 (output_statements -> Discharge value .)
    Elif            reduce using rule 220 (output_statements -> Discharge value .)
    Else            reduce using rule 220 (output_statements -> Discharge value .)
    Return          reduce using rule 220 (output_statements -> Discharge value .)


state 91

    (60) value -> lit_bool .

    id              reduce using rule 60 (value -> lit_bool .)
    For             reduce using rule 60 (value -> lit_bool .)
    While           reduce using rule 60 (value -> lit_bool .)
    If              reduce using rule 60 (value -> lit_bool .)
    Switch          reduce using rule 60 (value -> lit_bool .)
    Sys_Call        reduce using rule 60 (value -> lit_bool .)
    Absorb          reduce using rule 60 (value -> lit_bool .)
    Discharge       reduce using rule 60 (value -> lit_bool .)
    Link_End        reduce using rule 60 (value -> lit_bool .)
    Sys             reduce using rule 60 (value -> lit_bool .)
    $end            reduce using rule 60 (value -> lit_bool .)
    Break           reduce using rule 60 (value -> lit_bool .)
    Continue        reduce using rule 60 (value -> lit_bool .)
    Avoid           reduce using rule 60 (value -> lit_bool .)
    close_bracket   reduce using rule 60 (value -> lit_bool .)
    Elif            reduce using rule 60 (value -> lit_bool .)
    Else            reduce using rule 60 (value -> lit_bool .)
    Return          reduce using rule 60 (value -> lit_bool .)
    comma           reduce using rule 60 (value -> lit_bool .)
    Generate        reduce using rule 60 (value -> lit_bool .)
    Struct          reduce using rule 60 (value -> lit_bool .)
    Link_Start      reduce using rule 60 (value -> lit_bool .)
    close_par       reduce using rule 60 (value -> lit_bool .)
    colon           reduce using rule 60 (value -> lit_bool .)
    open_bracket    reduce using rule 60 (value -> lit_bool .)
    close_brace     reduce using rule 60 (value -> lit_bool .)


state 92

    (93) arithmetic_expression -> open_par . arithmetic_expression close_par
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
    open_par        shift and go to state 92
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]

    arithmetic_expression          shift and go to state 130
    num_value                      shift and go to state 167
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    func_call                      shift and go to state 81

state 93

    (8) struct_dec -> Struct id open_bracket struct_element1 . close_bracket id_array1
    (12) struct_dec -> Struct id open_bracket struct_element1 . id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    close_bracket   shift and go to state 168
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 169
    id_array                       shift and go to state 96

state 94

    (9) struct_dec -> Struct id struct_element1 id_array1 .

    Struct          reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Generate        reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Link_Start      reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    id              reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    For             reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    While           reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    If              reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Switch          reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Sys_Call        reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Absorb          reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Discharge       reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Link_End        reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    Sys             reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)
    $end            reduce using rule 9 (struct_dec -> Struct id struct_element1 id_array1 .)


state 95

    (13) struct_dec -> Struct id struct_element1 close_bracket . id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 170
    id_array                       shift and go to state 96

state 96

    (80) id_array1 -> id_array . id_array2
    (82) id_array2 -> . comma id_array1
    (83) id_array2 -> .

    comma           shift and go to state 172
    Struct          reduce using rule 83 (id_array2 -> .)
    Generate        reduce using rule 83 (id_array2 -> .)
    Link_Start      reduce using rule 83 (id_array2 -> .)
    id              reduce using rule 83 (id_array2 -> .)
    For             reduce using rule 83 (id_array2 -> .)
    While           reduce using rule 83 (id_array2 -> .)
    If              reduce using rule 83 (id_array2 -> .)
    Switch          reduce using rule 83 (id_array2 -> .)
    Sys_Call        reduce using rule 83 (id_array2 -> .)
    Absorb          reduce using rule 83 (id_array2 -> .)
    Discharge       reduce using rule 83 (id_array2 -> .)
    Link_End        reduce using rule 83 (id_array2 -> .)
    Sys             reduce using rule 83 (id_array2 -> .)
    $end            reduce using rule 83 (id_array2 -> .)

    id_array2                      shift and go to state 171

state 97

    (10) struct_dec -> Struct open_bracket struct_element1 id_array1 .

    Struct          reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Generate        reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Link_Start      reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    id              reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    For             reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    While           reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    If              reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Switch          reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Sys_Call        reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Absorb          reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Discharge       reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Link_End        reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    Sys             reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)
    $end            reduce using rule 10 (struct_dec -> Struct open_bracket struct_element1 id_array1 .)


state 98

    (14) struct_dec -> Struct open_bracket struct_element1 close_bracket . id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 173
    id_array                       shift and go to state 96

state 99

    (11) struct_dec -> Struct struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    id              reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    For             reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    While           reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    If              reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 11 (struct_dec -> Struct struct_element1 close_bracket id_array1 .)


state 100

    (16) struct_element1 -> data_type id_array_dec struct_element2 .

    close_bracket   reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    id              reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    comma           reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Struct          reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Generate        reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Link_Start      reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    For             reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    While           reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    If              reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Switch          reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Sys_Call        reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Absorb          reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Discharge       reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Link_End        reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    Sys             reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)
    $end            reduce using rule 16 (struct_element1 -> data_type id_array_dec struct_element2 .)


state 101

    (17) struct_element2 -> struct_element1 .

    close_bracket   reduce using rule 17 (struct_element2 -> struct_element1 .)
    id              reduce using rule 17 (struct_element2 -> struct_element1 .)
    comma           reduce using rule 17 (struct_element2 -> struct_element1 .)
    Struct          reduce using rule 17 (struct_element2 -> struct_element1 .)
    Generate        reduce using rule 17 (struct_element2 -> struct_element1 .)
    Link_Start      reduce using rule 17 (struct_element2 -> struct_element1 .)
    For             reduce using rule 17 (struct_element2 -> struct_element1 .)
    While           reduce using rule 17 (struct_element2 -> struct_element1 .)
    If              reduce using rule 17 (struct_element2 -> struct_element1 .)
    Switch          reduce using rule 17 (struct_element2 -> struct_element1 .)
    Sys_Call        reduce using rule 17 (struct_element2 -> struct_element1 .)
    Absorb          reduce using rule 17 (struct_element2 -> struct_element1 .)
    Discharge       reduce using rule 17 (struct_element2 -> struct_element1 .)
    Link_End        reduce using rule 17 (struct_element2 -> struct_element1 .)
    Sys             reduce using rule 17 (struct_element2 -> struct_element1 .)
    $end            reduce using rule 17 (struct_element2 -> struct_element1 .)


state 102

    (24) id_array_dec -> id id_array_dec2 .

    Integer         reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Decimal         reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    String          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Boolean         reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    id              reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    close_bracket   reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    comma           reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Struct          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Generate        reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Link_Start      reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    For             reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    While           reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    If              reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Switch          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Sys_Call        reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Absorb          reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Discharge       reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Link_End        reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    Sys             reduce using rule 24 (id_array_dec -> id id_array_dec2 .)
    $end            reduce using rule 24 (id_array_dec -> id id_array_dec2 .)


state 103

    (26) id_array_dec2 -> id_dec1 .

    Integer         reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Decimal         reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    String          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Boolean         reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    id              reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    close_bracket   reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    comma           reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Struct          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Generate        reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Link_Start      reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    For             reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    While           reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    If              reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Switch          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Sys_Call        reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Absorb          reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Discharge       reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Link_End        reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    Sys             reduce using rule 26 (id_array_dec2 -> id_dec1 .)
    $end            reduce using rule 26 (id_array_dec2 -> id_dec1 .)


state 104

    (27) id_array_dec2 -> open_brace . lit_intposi close_brace array_dec1

    lit_intposi     shift and go to state 174


state 105

    (28) id_dec1 -> comma . id id_dec1

    id              shift and go to state 175


state 106

    (34) const_var_dec -> Fixed data_type id_array_const .

    Generate        reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Struct          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Link_Start      reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    id              reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    For             reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    While           reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    If              reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Switch          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Sys_Call        reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Absorb          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Discharge       reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Link_End        reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Sys             reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    $end            reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    Return          reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)
    close_bracket   reduce using rule 34 (const_var_dec -> Fixed data_type id_array_const .)


state 107

    (37) id_array_const -> id . id_array_const2
    (39) id_array_const2 -> . open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (40) id_array_const2 -> . equal value id_const1
    (41) id_array_const2 -> .

    open_brace      shift and go to state 177
    equal           shift and go to state 178
    Generate        reduce using rule 41 (id_array_const2 -> .)
    Struct          reduce using rule 41 (id_array_const2 -> .)
    Link_Start      reduce using rule 41 (id_array_const2 -> .)
    id              reduce using rule 41 (id_array_const2 -> .)
    For             reduce using rule 41 (id_array_const2 -> .)
    While           reduce using rule 41 (id_array_const2 -> .)
    If              reduce using rule 41 (id_array_const2 -> .)
    Switch          reduce using rule 41 (id_array_const2 -> .)
    Sys_Call        reduce using rule 41 (id_array_const2 -> .)
    Absorb          reduce using rule 41 (id_array_const2 -> .)
    Discharge       reduce using rule 41 (id_array_const2 -> .)
    Link_End        reduce using rule 41 (id_array_const2 -> .)
    Sys             reduce using rule 41 (id_array_const2 -> .)
    $end            reduce using rule 41 (id_array_const2 -> .)
    Return          reduce using rule 41 (id_array_const2 -> .)
    close_bracket   reduce using rule 41 (id_array_const2 -> .)

    id_array_const2                shift and go to state 176

state 108

    (46) id_array_var -> id id_array_var2 .

    Generate        reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Struct          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Link_Start      reduce using rule 46 (id_array_var -> id id_array_var2 .)
    id              reduce using rule 46 (id_array_var -> id id_array_var2 .)
    For             reduce using rule 46 (id_array_var -> id id_array_var2 .)
    While           reduce using rule 46 (id_array_var -> id id_array_var2 .)
    If              reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Switch          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Sys_Call        reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Absorb          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Discharge       reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Link_End        reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Sys             reduce using rule 46 (id_array_var -> id id_array_var2 .)
    $end            reduce using rule 46 (id_array_var -> id id_array_var2 .)
    Return          reduce using rule 46 (id_array_var -> id id_array_var2 .)
    close_bracket   reduce using rule 46 (id_array_var -> id id_array_var2 .)


state 109

    (48) id_array_var2 -> var_init . id_var1
    (52) id_var1 -> . comma id var_init id_var1
    (53) id_var1 -> .

    comma           shift and go to state 180
    Generate        reduce using rule 53 (id_var1 -> .)
    Struct          reduce using rule 53 (id_var1 -> .)
    Link_Start      reduce using rule 53 (id_var1 -> .)
    id              reduce using rule 53 (id_var1 -> .)
    For             reduce using rule 53 (id_var1 -> .)
    While           reduce using rule 53 (id_var1 -> .)
    If              reduce using rule 53 (id_var1 -> .)
    Switch          reduce using rule 53 (id_var1 -> .)
    Sys_Call        reduce using rule 53 (id_var1 -> .)
    Absorb          reduce using rule 53 (id_var1 -> .)
    Discharge       reduce using rule 53 (id_var1 -> .)
    Link_End        reduce using rule 53 (id_var1 -> .)
    Sys             reduce using rule 53 (id_var1 -> .)
    $end            reduce using rule 53 (id_var1 -> .)
    Return          reduce using rule 53 (id_var1 -> .)
    close_bracket   reduce using rule 53 (id_var1 -> .)

    id_var1                        shift and go to state 179

state 110

    (49) id_array_var2 -> open_brace . lit_intposi close_brace array_init array_var1

    lit_intposi     shift and go to state 181


state 111

    (50) var_init -> equal . value id_var1
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    Generate        reduce using rule 61 (value -> .)
    Struct          reduce using rule 61 (value -> .)
    Link_Start      reduce using rule 61 (value -> .)
    For             reduce using rule 61 (value -> .)
    While           reduce using rule 61 (value -> .)
    If              reduce using rule 61 (value -> .)
    Switch          reduce using rule 61 (value -> .)
    Absorb          reduce using rule 61 (value -> .)
    Discharge       reduce using rule 61 (value -> .)
    Link_End        reduce using rule 61 (value -> .)
    Sys             reduce using rule 61 (value -> .)
    $end            reduce using rule 61 (value -> .)
    Return          reduce using rule 61 (value -> .)
    close_bracket   reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 61 (value -> .) ]
  ! Sys_Call        [ reduce using rule 61 (value -> .) ]
  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! Generate        [ reduce using rule 69 (num_value -> .) ]
  ! Struct          [ reduce using rule 69 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 69 (num_value -> .) ]
  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! For             [ reduce using rule 69 (num_value -> .) ]
  ! While           [ reduce using rule 69 (num_value -> .) ]
  ! If              [ reduce using rule 69 (num_value -> .) ]
  ! Switch          [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! Absorb          [ reduce using rule 69 (num_value -> .) ]
  ! Discharge       [ reduce using rule 69 (num_value -> .) ]
  ! Link_End        [ reduce using rule 69 (num_value -> .) ]
  ! Sys             [ reduce using rule 69 (num_value -> .) ]
  ! $end            [ reduce using rule 69 (num_value -> .) ]
  ! Return          [ reduce using rule 69 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! Generate        [ reduce using rule 75 (id_array -> .) ]
  ! Struct          [ reduce using rule 75 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! Generate        [ reduce using rule 88 (literals -> .) ]
  ! Struct          [ reduce using rule 88 (literals -> .) ]
  ! Link_Start      [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]

    value                          shift and go to state 182
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 112

    (1) program -> global_dec Link_Start declare_statements statements Link_End . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 183

state 113

    (2) program -> global_dec Link_Start declare_statements statements functions .

    $end            reduce using rule 2 (program -> global_dec Link_Start declare_statements statements functions .)


state 114

    (3) program -> global_dec declare_statements statements Link_End functions .

    $end            reduce using rule 3 (program -> global_dec declare_statements statements Link_End functions .)


state 115

    (227) functions -> Sys id . open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> Sys id . parameters declare_statements statements return_statement functions
    (233) functions -> Sys id . open_par parameters declare_statements statements return_statement functions
    (234) functions -> Sys id . parameters close_par declare_statements statements return_statement functions
    (235) functions -> Sys id . parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> Sys id . parameters declare_statements statements return_statement close_bracket functions
    (243) functions -> Sys id . open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> Sys id . open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> Sys id . open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> Sys id . parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> Sys id . parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> Sys id . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> Sys id . open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> Sys id . open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> Sys id . open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> Sys id . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (259) parameters -> . data_type id more_parameters
    (260) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
    open_par        shift and go to state 184
    close_par       reduce using rule 260 (parameters -> .)
    open_bracket    reduce using rule 260 (parameters -> .)
    Generate        reduce using rule 260 (parameters -> .)
    For             reduce using rule 260 (parameters -> .)
    While           reduce using rule 260 (parameters -> .)
    If              reduce using rule 260 (parameters -> .)
    Switch          reduce using rule 260 (parameters -> .)
    Sys_Call        reduce using rule 260 (parameters -> .)
    Absorb          reduce using rule 260 (parameters -> .)
    Discharge       reduce using rule 260 (parameters -> .)
    Return          reduce using rule 260 (parameters -> .)
    close_bracket   reduce using rule 260 (parameters -> .)
    Sys             reduce using rule 260 (parameters -> .)
    $end            reduce using rule 260 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 260 (parameters -> .) ]

    parameters                     shift and go to state 185
    data_type                      shift and go to state 118

state 116

    (229) functions -> Sys open_par . parameters declare_statements statements return_statement functions
    (237) functions -> Sys open_par . parameters close_par declare_statements statements return_statement functions
    (238) functions -> Sys open_par . parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> Sys open_par . parameters declare_statements statements return_statement close_bracket functions
    (249) functions -> Sys open_par . parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> Sys open_par . parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> Sys open_par . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> Sys open_par . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (259) parameters -> . data_type id more_parameters
    (260) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
    close_par       reduce using rule 260 (parameters -> .)
    open_bracket    reduce using rule 260 (parameters -> .)
    Generate        reduce using rule 260 (parameters -> .)
    For             reduce using rule 260 (parameters -> .)
    While           reduce using rule 260 (parameters -> .)
    If              reduce using rule 260 (parameters -> .)
    Switch          reduce using rule 260 (parameters -> .)
    Sys_Call        reduce using rule 260 (parameters -> .)
    Absorb          reduce using rule 260 (parameters -> .)
    Discharge       reduce using rule 260 (parameters -> .)
    Return          reduce using rule 260 (parameters -> .)
    close_bracket   reduce using rule 260 (parameters -> .)
    Sys             reduce using rule 260 (parameters -> .)
    $end            reduce using rule 260 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 260 (parameters -> .) ]

    parameters                     shift and go to state 186
    data_type                      shift and go to state 118

state 117

    (230) functions -> Sys parameters . close_par declare_statements statements return_statement functions
    (231) functions -> Sys parameters . open_bracket declare_statements statements return_statement functions
    (232) functions -> Sys parameters . declare_statements statements return_statement close_bracket functions
    (240) functions -> Sys parameters . close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> Sys parameters . close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> Sys parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> Sys parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 187
    open_bracket    shift and go to state 189
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 188

state 118

    (259) parameters -> data_type . id more_parameters

    id              shift and go to state 190


state 119

    (121) assignment_statements2 -> array id_struct . assignment_exp
    (123) assignment_exp -> . assignment_operators num_value
    (124) assignment_exp -> . equal assign_value
    (125) assignment_exp -> .
    (130) assignment_operators -> . plus_equal
    (131) assignment_operators -> . minus_equal
    (132) assignment_operators -> . times_equal
    (133) assignment_operators -> . divide_equal
    (134) assignment_operators -> . divide_divide_equal
    (135) assignment_operators -> . modulo_equal
    (136) assignment_operators -> . times_times_equal

    equal           shift and go to state 193
    id              reduce using rule 125 (assignment_exp -> .)
    For             reduce using rule 125 (assignment_exp -> .)
    While           reduce using rule 125 (assignment_exp -> .)
    If              reduce using rule 125 (assignment_exp -> .)
    Switch          reduce using rule 125 (assignment_exp -> .)
    Sys_Call        reduce using rule 125 (assignment_exp -> .)
    Absorb          reduce using rule 125 (assignment_exp -> .)
    Discharge       reduce using rule 125 (assignment_exp -> .)
    Link_End        reduce using rule 125 (assignment_exp -> .)
    Sys             reduce using rule 125 (assignment_exp -> .)
    $end            reduce using rule 125 (assignment_exp -> .)
    Break           reduce using rule 125 (assignment_exp -> .)
    Continue        reduce using rule 125 (assignment_exp -> .)
    Avoid           reduce using rule 125 (assignment_exp -> .)
    close_bracket   reduce using rule 125 (assignment_exp -> .)
    Elif            reduce using rule 125 (assignment_exp -> .)
    Else            reduce using rule 125 (assignment_exp -> .)
    Return          reduce using rule 125 (assignment_exp -> .)
    plus_equal      shift and go to state 194
    minus_equal     shift and go to state 195
    times_equal     shift and go to state 196
    divide_equal    shift and go to state 197
    divide_divide_equal shift and go to state 198
    modulo_equal    shift and go to state 199
    times_times_equal shift and go to state 200

    assignment_exp                 shift and go to state 191
    assignment_operators           shift and go to state 192

state 120

    (102) id_struct -> period . id_array
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
    id              shift and go to state 82
    equal           reduce using rule 75 (id_array -> .)
    plus_equal      reduce using rule 75 (id_array -> .)
    minus_equal     reduce using rule 75 (id_array -> .)
    times_equal     reduce using rule 75 (id_array -> .)
    divide_equal    reduce using rule 75 (id_array -> .)
    divide_divide_equal reduce using rule 75 (id_array -> .)
    modulo_equal    reduce using rule 75 (id_array -> .)
    times_times_equal reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)
    Break           reduce using rule 75 (id_array -> .)
    Continue        reduce using rule 75 (id_array -> .)
    Avoid           reduce using rule 75 (id_array -> .)
    close_bracket   reduce using rule 75 (id_array -> .)
    Elif            reduce using rule 75 (id_array -> .)
    Else            reduce using rule 75 (id_array -> .)
    Return          reduce using rule 75 (id_array -> .)
    plus            reduce using rule 75 (id_array -> .)
    minus           reduce using rule 75 (id_array -> .)
    times           reduce using rule 75 (id_array -> .)
    divide          reduce using rule 75 (id_array -> .)
    divide_divide   reduce using rule 75 (id_array -> .)
    modulo          reduce using rule 75 (id_array -> .)
    times_times     reduce using rule 75 (id_array -> .)
    greater_than    reduce using rule 75 (id_array -> .)
    less_than       reduce using rule 75 (id_array -> .)
    equal_equal     reduce using rule 75 (id_array -> .)
    not_equal       reduce using rule 75 (id_array -> .)
    great_than_equal reduce using rule 75 (id_array -> .)
    less_than_equal reduce using rule 75 (id_array -> .)
    close_brace     reduce using rule 75 (id_array -> .)
    comma           reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    close_par       reduce using rule 75 (id_array -> .)
    colon           reduce using rule 75 (id_array -> .)
    open_bracket    reduce using rule 75 (id_array -> .)

  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array                       shift and go to state 201

state 121

    (122) assignment_statements2 -> open_brace lit_intposi . close_brace more_array equal open_brace value1 close_brace
    (84) literals -> lit_intposi .

  ! shift/reduce conflict for close_brace resolved as shift
    close_brace     shift and go to state 202
    plus            reduce using rule 84 (literals -> lit_intposi .)
    minus           reduce using rule 84 (literals -> lit_intposi .)
    times           reduce using rule 84 (literals -> lit_intposi .)
    divide          reduce using rule 84 (literals -> lit_intposi .)
    divide_divide   reduce using rule 84 (literals -> lit_intposi .)
    modulo          reduce using rule 84 (literals -> lit_intposi .)
    times_times     reduce using rule 84 (literals -> lit_intposi .)

  ! close_brace     [ reduce using rule 84 (literals -> lit_intposi .) ]


state 122

    (78) array -> open_brace close_brace .

    period          reduce using rule 78 (array -> open_brace close_brace .)
    equal           reduce using rule 78 (array -> open_brace close_brace .)
    plus_equal      reduce using rule 78 (array -> open_brace close_brace .)
    minus_equal     reduce using rule 78 (array -> open_brace close_brace .)
    times_equal     reduce using rule 78 (array -> open_brace close_brace .)
    divide_equal    reduce using rule 78 (array -> open_brace close_brace .)
    divide_divide_equal reduce using rule 78 (array -> open_brace close_brace .)
    modulo_equal    reduce using rule 78 (array -> open_brace close_brace .)
    times_times_equal reduce using rule 78 (array -> open_brace close_brace .)
    id              reduce using rule 78 (array -> open_brace close_brace .)
    For             reduce using rule 78 (array -> open_brace close_brace .)
    While           reduce using rule 78 (array -> open_brace close_brace .)
    If              reduce using rule 78 (array -> open_brace close_brace .)
    Switch          reduce using rule 78 (array -> open_brace close_brace .)
    Sys_Call        reduce using rule 78 (array -> open_brace close_brace .)
    Absorb          reduce using rule 78 (array -> open_brace close_brace .)
    Discharge       reduce using rule 78 (array -> open_brace close_brace .)
    Link_End        reduce using rule 78 (array -> open_brace close_brace .)
    Sys             reduce using rule 78 (array -> open_brace close_brace .)
    $end            reduce using rule 78 (array -> open_brace close_brace .)
    Break           reduce using rule 78 (array -> open_brace close_brace .)
    Continue        reduce using rule 78 (array -> open_brace close_brace .)
    Avoid           reduce using rule 78 (array -> open_brace close_brace .)
    close_bracket   reduce using rule 78 (array -> open_brace close_brace .)
    Elif            reduce using rule 78 (array -> open_brace close_brace .)
    Else            reduce using rule 78 (array -> open_brace close_brace .)
    Return          reduce using rule 78 (array -> open_brace close_brace .)
    plus            reduce using rule 78 (array -> open_brace close_brace .)
    minus           reduce using rule 78 (array -> open_brace close_brace .)
    times           reduce using rule 78 (array -> open_brace close_brace .)
    divide          reduce using rule 78 (array -> open_brace close_brace .)
    divide_divide   reduce using rule 78 (array -> open_brace close_brace .)
    modulo          reduce using rule 78 (array -> open_brace close_brace .)
    times_times     reduce using rule 78 (array -> open_brace close_brace .)
    greater_than    reduce using rule 78 (array -> open_brace close_brace .)
    less_than       reduce using rule 78 (array -> open_brace close_brace .)
    equal_equal     reduce using rule 78 (array -> open_brace close_brace .)
    not_equal       reduce using rule 78 (array -> open_brace close_brace .)
    great_than_equal reduce using rule 78 (array -> open_brace close_brace .)
    less_than_equal reduce using rule 78 (array -> open_brace close_brace .)
    comma           reduce using rule 78 (array -> open_brace close_brace .)
    Struct          reduce using rule 78 (array -> open_brace close_brace .)
    Generate        reduce using rule 78 (array -> open_brace close_brace .)
    Link_Start      reduce using rule 78 (array -> open_brace close_brace .)
    close_brace     reduce using rule 78 (array -> open_brace close_brace .)
    close_par       reduce using rule 78 (array -> open_brace close_brace .)
    colon           reduce using rule 78 (array -> open_brace close_brace .)
    open_bracket    reduce using rule 78 (array -> open_brace close_brace .)


state 123

    (77) array -> open_brace num_value . close_brace
    (94) arithmetic_expression -> num_value . arithmetic_operators num_value
    (95) arithmetic_operators -> . plus
    (96) arithmetic_operators -> . minus
    (97) arithmetic_operators -> . times
    (98) arithmetic_operators -> . divide
    (99) arithmetic_operators -> . divide_divide
    (100) arithmetic_operators -> . modulo
    (101) arithmetic_operators -> . times_times

    close_brace     shift and go to state 203
    plus            shift and go to state 154
    minus           shift and go to state 155
    times           shift and go to state 156
    divide          shift and go to state 157
    divide_divide   shift and go to state 158
    modulo          shift and go to state 159
    times_times     shift and go to state 160

    arithmetic_operators           shift and go to state 153

state 124

    (139) for_statements -> For id In . id open_brace close_brace colon open_bracket inside_statements close_bracket

    id              shift and go to state 204


state 125

    (164) logical_expression -> open_par . logical_operand close_par logical_operators open_par logical_operand close_par
    (93) arithmetic_expression -> open_par . arithmetic_expression close_par
    (165) logical_operand -> . Not open_par logical_operand close_par
    (166) logical_operand -> . relational_expression
    (167) logical_operand -> . logical_expression
    (168) logical_operand -> . lit_bool
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    Not             shift and go to state 205
    lit_bool        shift and go to state 208
    open_par        shift and go to state 127
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    logical_operand                shift and go to state 129
    arithmetic_expression          shift and go to state 130
    relational_expression          shift and go to state 206
    logical_expression             shift and go to state 207
    num_value                      shift and go to state 135
    value                          shift and go to state 75
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    func_call                      shift and go to state 81

state 126

    (141) while_statements -> While open_par condition . close_par colon open_bracket inside_statements close_bracket

    close_par       shift and go to state 209


state 127

    (93) arithmetic_expression -> open_par . arithmetic_expression close_par
    (164) logical_expression -> open_par . logical_operand close_par logical_operators open_par logical_operand close_par
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (165) logical_operand -> . Not open_par logical_operand close_par
    (166) logical_operand -> . relational_expression
    (167) logical_operand -> . logical_expression
    (168) logical_operand -> . lit_bool
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .

  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    open_par        shift and go to state 127
    Not             shift and go to state 205
    lit_bool        shift and go to state 208
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    arithmetic_expression          shift and go to state 130
    logical_operand                shift and go to state 129
    num_value                      shift and go to state 135
    relational_expression          shift and go to state 206
    logical_expression             shift and go to state 207
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    func_call                      shift and go to state 81
    value                          shift and go to state 75

state 128

    (173) if_statement -> If open_par condition . close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> If open_par condition . inside_statements condition_else
    (179) if_statement -> If open_par condition . close_par inside_statements condition_else
    (180) if_statement -> If open_par condition . colon inside_statements condition_else
    (181) if_statement -> If open_par condition . open_bracket inside_statements condition_else
    (182) if_statement -> If open_par condition . inside_statements close_bracket condition_else
    (189) if_statement -> If open_par condition . close_par colon inside_statements condition_else
    (190) if_statement -> If open_par condition . close_par open_bracket inside_statements condition_else
    (191) if_statement -> If open_par condition . close_par inside_statements close_bracket condition_else
    (192) if_statement -> If open_par condition . colon open_bracket inside_statements condition_else
    (193) if_statement -> If open_par condition . colon inside_statements close_bracket condition_else
    (194) if_statement -> If open_par condition . open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> If open_par condition . close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> If open_par condition . close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> If open_par condition . close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> If open_par condition . colon open_bracket inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_par       shift and go to state 210
    colon           shift and go to state 211
    open_bracket    shift and go to state 212
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 213
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 129

    (164) logical_expression -> open_par logical_operand . close_par logical_operators open_par logical_operand close_par

    close_par       shift and go to state 214


state 130

    (93) arithmetic_expression -> open_par arithmetic_expression . close_par
    (67) num_value -> arithmetic_expression .

    close_par       shift and go to state 215
    plus            reduce using rule 67 (num_value -> arithmetic_expression .)
    minus           reduce using rule 67 (num_value -> arithmetic_expression .)
    times           reduce using rule 67 (num_value -> arithmetic_expression .)
    divide          reduce using rule 67 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 67 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 67 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 67 (num_value -> arithmetic_expression .)
    greater_than    reduce using rule 67 (num_value -> arithmetic_expression .)
    less_than       reduce using rule 67 (num_value -> arithmetic_expression .)
    equal_equal     reduce using rule 67 (num_value -> arithmetic_expression .)
    not_equal       reduce using rule 67 (num_value -> arithmetic_expression .)
    great_than_equal reduce using rule 67 (num_value -> arithmetic_expression .)
    less_than_equal reduce using rule 67 (num_value -> arithmetic_expression .)


state 131

    (150) condition -> relational_expression .
    (166) logical_operand -> relational_expression .

  ! reduce/reduce conflict for close_par resolved using rule 150 (condition -> relational_expression .)
    close_par       reduce using rule 150 (condition -> relational_expression .)
    colon           reduce using rule 150 (condition -> relational_expression .)
    open_bracket    reduce using rule 150 (condition -> relational_expression .)
    Break           reduce using rule 150 (condition -> relational_expression .)
    Continue        reduce using rule 150 (condition -> relational_expression .)
    Avoid           reduce using rule 150 (condition -> relational_expression .)
    id              reduce using rule 150 (condition -> relational_expression .)
    For             reduce using rule 150 (condition -> relational_expression .)
    While           reduce using rule 150 (condition -> relational_expression .)
    If              reduce using rule 150 (condition -> relational_expression .)
    Switch          reduce using rule 150 (condition -> relational_expression .)
    Sys_Call        reduce using rule 150 (condition -> relational_expression .)
    Absorb          reduce using rule 150 (condition -> relational_expression .)
    Discharge       reduce using rule 150 (condition -> relational_expression .)
    close_bracket   reduce using rule 150 (condition -> relational_expression .)
    Elif            reduce using rule 150 (condition -> relational_expression .)
    Else            reduce using rule 150 (condition -> relational_expression .)
    Link_End        reduce using rule 150 (condition -> relational_expression .)
    Sys             reduce using rule 150 (condition -> relational_expression .)
    $end            reduce using rule 150 (condition -> relational_expression .)
    Return          reduce using rule 150 (condition -> relational_expression .)

  ! close_par       [ reduce using rule 166 (logical_operand -> relational_expression .) ]


state 132

    (151) condition -> logical_expression .
    (167) logical_operand -> logical_expression .

  ! reduce/reduce conflict for close_par resolved using rule 151 (condition -> logical_expression .)
    close_par       reduce using rule 151 (condition -> logical_expression .)
    colon           reduce using rule 151 (condition -> logical_expression .)
    open_bracket    reduce using rule 151 (condition -> logical_expression .)
    Break           reduce using rule 151 (condition -> logical_expression .)
    Continue        reduce using rule 151 (condition -> logical_expression .)
    Avoid           reduce using rule 151 (condition -> logical_expression .)
    id              reduce using rule 151 (condition -> logical_expression .)
    For             reduce using rule 151 (condition -> logical_expression .)
    While           reduce using rule 151 (condition -> logical_expression .)
    If              reduce using rule 151 (condition -> logical_expression .)
    Switch          reduce using rule 151 (condition -> logical_expression .)
    Sys_Call        reduce using rule 151 (condition -> logical_expression .)
    Absorb          reduce using rule 151 (condition -> logical_expression .)
    Discharge       reduce using rule 151 (condition -> logical_expression .)
    close_bracket   reduce using rule 151 (condition -> logical_expression .)
    Elif            reduce using rule 151 (condition -> logical_expression .)
    Else            reduce using rule 151 (condition -> logical_expression .)
    Link_End        reduce using rule 151 (condition -> logical_expression .)
    Sys             reduce using rule 151 (condition -> logical_expression .)
    $end            reduce using rule 151 (condition -> logical_expression .)
    Return          reduce using rule 151 (condition -> logical_expression .)

  ! close_par       [ reduce using rule 167 (logical_operand -> logical_expression .) ]


state 133

    (152) condition -> Not . open_par condition_not close_par
    (165) logical_operand -> Not . open_par logical_operand close_par

    open_par        shift and go to state 216


state 134

    (153) condition -> lit_bool .
    (168) logical_operand -> lit_bool .
    (60) value -> lit_bool .

  ! reduce/reduce conflict for close_par resolved using rule 153 (condition -> lit_bool .)
    close_par       reduce using rule 153 (condition -> lit_bool .)
    colon           reduce using rule 153 (condition -> lit_bool .)
    open_bracket    reduce using rule 153 (condition -> lit_bool .)
    Break           reduce using rule 153 (condition -> lit_bool .)
    Continue        reduce using rule 153 (condition -> lit_bool .)
    Avoid           reduce using rule 153 (condition -> lit_bool .)
    id              reduce using rule 153 (condition -> lit_bool .)
    For             reduce using rule 153 (condition -> lit_bool .)
    While           reduce using rule 153 (condition -> lit_bool .)
    If              reduce using rule 153 (condition -> lit_bool .)
    Switch          reduce using rule 153 (condition -> lit_bool .)
    Sys_Call        reduce using rule 153 (condition -> lit_bool .)
    Absorb          reduce using rule 153 (condition -> lit_bool .)
    Discharge       reduce using rule 153 (condition -> lit_bool .)
    close_bracket   reduce using rule 153 (condition -> lit_bool .)
    Elif            reduce using rule 153 (condition -> lit_bool .)
    Else            reduce using rule 153 (condition -> lit_bool .)
    Link_End        reduce using rule 153 (condition -> lit_bool .)
    Sys             reduce using rule 153 (condition -> lit_bool .)
    $end            reduce using rule 153 (condition -> lit_bool .)
    Return          reduce using rule 153 (condition -> lit_bool .)
    greater_than    reduce using rule 60 (value -> lit_bool .)
    less_than       reduce using rule 60 (value -> lit_bool .)
    equal_equal     reduce using rule 60 (value -> lit_bool .)
    not_equal       reduce using rule 60 (value -> lit_bool .)
    great_than_equal reduce using rule 60 (value -> lit_bool .)
    less_than_equal reduce using rule 60 (value -> lit_bool .)

  ! close_par       [ reduce using rule 168 (logical_operand -> lit_bool .) ]


state 135

    (94) arithmetic_expression -> num_value . arithmetic_operators num_value
    (58) value -> num_value .
    (95) arithmetic_operators -> . plus
    (96) arithmetic_operators -> . minus
    (97) arithmetic_operators -> . times
    (98) arithmetic_operators -> . divide
    (99) arithmetic_operators -> . divide_divide
    (100) arithmetic_operators -> . modulo
    (101) arithmetic_operators -> . times_times

    greater_than    reduce using rule 58 (value -> num_value .)
    less_than       reduce using rule 58 (value -> num_value .)
    equal_equal     reduce using rule 58 (value -> num_value .)
    not_equal       reduce using rule 58 (value -> num_value .)
    great_than_equal reduce using rule 58 (value -> num_value .)
    less_than_equal reduce using rule 58 (value -> num_value .)
    plus            shift and go to state 154
    minus           shift and go to state 155
    times           shift and go to state 156
    divide          shift and go to state 157
    divide_divide   shift and go to state 158
    modulo          shift and go to state 159
    times_times     shift and go to state 160

    arithmetic_operators           shift and go to state 153

state 136

    (175) if_statement -> If condition close_par . inside_statements condition_else
    (183) if_statement -> If condition close_par . colon inside_statements condition_else
    (184) if_statement -> If condition close_par . open_bracket inside_statements condition_else
    (185) if_statement -> If condition close_par . inside_statements close_bracket condition_else
    (195) if_statement -> If condition close_par . colon open_bracket inside_statements condition_else
    (196) if_statement -> If condition close_par . colon inside_statements close_bracket condition_else
    (197) if_statement -> If condition close_par . open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> If condition close_par . colon open_bracket inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    colon           shift and go to state 218
    open_bracket    shift and go to state 219
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 217
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 137

    (178) if_statement -> If condition inside_statements . close_bracket condition_else

    close_bracket   shift and go to state 220


state 138

    (176) if_statement -> If condition colon . inside_statements condition_else
    (186) if_statement -> If condition colon . open_bracket inside_statements condition_else
    (187) if_statement -> If condition colon . inside_statements close_bracket condition_else
    (198) if_statement -> If condition colon . open_bracket inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    open_bracket    shift and go to state 222
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 221
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 139

    (177) if_statement -> If condition open_bracket . inside_statements condition_else
    (188) if_statement -> If condition open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 223
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 140

    (143) inside_statements -> statements . control_statements
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .

  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    close_bracket   reduce using rule 149 (control_statements -> .)
    Link_End        reduce using rule 149 (control_statements -> .)
    Sys             reduce using rule 149 (control_statements -> .)
    $end            reduce using rule 149 (control_statements -> .)
    Elif            reduce using rule 149 (control_statements -> .)
    Else            reduce using rule 149 (control_statements -> .)
    id              reduce using rule 149 (control_statements -> .)
    For             reduce using rule 149 (control_statements -> .)
    While           reduce using rule 149 (control_statements -> .)
    If              reduce using rule 149 (control_statements -> .)
    Switch          reduce using rule 149 (control_statements -> .)
    Sys_Call        reduce using rule 149 (control_statements -> .)
    Absorb          reduce using rule 149 (control_statements -> .)
    Discharge       reduce using rule 149 (control_statements -> .)
    Return          reduce using rule 149 (control_statements -> .)

  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]

    control_statements             shift and go to state 224

state 141

    (144) inside_statements -> control_statements . statements
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    Break           reduce using rule 118 (statements -> .)
    Continue        reduce using rule 118 (statements -> .)
    Avoid           reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 225
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 142

    (146) control_statements -> Break .

    id              reduce using rule 146 (control_statements -> Break .)
    For             reduce using rule 146 (control_statements -> Break .)
    While           reduce using rule 146 (control_statements -> Break .)
    If              reduce using rule 146 (control_statements -> Break .)
    Switch          reduce using rule 146 (control_statements -> Break .)
    Sys_Call        reduce using rule 146 (control_statements -> Break .)
    Absorb          reduce using rule 146 (control_statements -> Break .)
    Discharge       reduce using rule 146 (control_statements -> Break .)
    close_bracket   reduce using rule 146 (control_statements -> Break .)
    Link_End        reduce using rule 146 (control_statements -> Break .)
    Sys             reduce using rule 146 (control_statements -> Break .)
    $end            reduce using rule 146 (control_statements -> Break .)
    Break           reduce using rule 146 (control_statements -> Break .)
    Continue        reduce using rule 146 (control_statements -> Break .)
    Avoid           reduce using rule 146 (control_statements -> Break .)
    Elif            reduce using rule 146 (control_statements -> Break .)
    Else            reduce using rule 146 (control_statements -> Break .)
    Return          reduce using rule 146 (control_statements -> Break .)


state 143

    (147) control_statements -> Continue .

    id              reduce using rule 147 (control_statements -> Continue .)
    For             reduce using rule 147 (control_statements -> Continue .)
    While           reduce using rule 147 (control_statements -> Continue .)
    If              reduce using rule 147 (control_statements -> Continue .)
    Switch          reduce using rule 147 (control_statements -> Continue .)
    Sys_Call        reduce using rule 147 (control_statements -> Continue .)
    Absorb          reduce using rule 147 (control_statements -> Continue .)
    Discharge       reduce using rule 147 (control_statements -> Continue .)
    close_bracket   reduce using rule 147 (control_statements -> Continue .)
    Link_End        reduce using rule 147 (control_statements -> Continue .)
    Sys             reduce using rule 147 (control_statements -> Continue .)
    $end            reduce using rule 147 (control_statements -> Continue .)
    Break           reduce using rule 147 (control_statements -> Continue .)
    Continue        reduce using rule 147 (control_statements -> Continue .)
    Avoid           reduce using rule 147 (control_statements -> Continue .)
    Elif            reduce using rule 147 (control_statements -> Continue .)
    Else            reduce using rule 147 (control_statements -> Continue .)
    Return          reduce using rule 147 (control_statements -> Continue .)


state 144

    (148) control_statements -> Avoid .

    id              reduce using rule 148 (control_statements -> Avoid .)
    For             reduce using rule 148 (control_statements -> Avoid .)
    While           reduce using rule 148 (control_statements -> Avoid .)
    If              reduce using rule 148 (control_statements -> Avoid .)
    Switch          reduce using rule 148 (control_statements -> Avoid .)
    Sys_Call        reduce using rule 148 (control_statements -> Avoid .)
    Absorb          reduce using rule 148 (control_statements -> Avoid .)
    Discharge       reduce using rule 148 (control_statements -> Avoid .)
    close_bracket   reduce using rule 148 (control_statements -> Avoid .)
    Link_End        reduce using rule 148 (control_statements -> Avoid .)
    Sys             reduce using rule 148 (control_statements -> Avoid .)
    $end            reduce using rule 148 (control_statements -> Avoid .)
    Break           reduce using rule 148 (control_statements -> Avoid .)
    Continue        reduce using rule 148 (control_statements -> Avoid .)
    Avoid           reduce using rule 148 (control_statements -> Avoid .)
    Elif            reduce using rule 148 (control_statements -> Avoid .)
    Else            reduce using rule 148 (control_statements -> Avoid .)
    Return          reduce using rule 148 (control_statements -> Avoid .)


state 145

    (152) condition -> Not open_par . condition_not close_par
    (154) condition_not -> . relational_expression
    (155) condition_not -> . logical_expression
    (156) condition_not -> . lit_bool
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    lit_bool        shift and go to state 229
    open_par        shift and go to state 125
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    condition_not                  shift and go to state 226
    relational_expression          shift and go to state 227
    logical_expression             shift and go to state 228
    value                          shift and go to state 75
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 146

    (157) relational_expression -> value relational_operators . value
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for close_par resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for colon resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for open_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for colon resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for open_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for colon resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for open_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    close_par       reduce using rule 61 (value -> .)
    colon           reduce using rule 61 (value -> .)
    open_bracket    reduce using rule 61 (value -> .)
    Break           reduce using rule 61 (value -> .)
    Continue        reduce using rule 61 (value -> .)
    Avoid           reduce using rule 61 (value -> .)
    For             reduce using rule 61 (value -> .)
    While           reduce using rule 61 (value -> .)
    If              reduce using rule 61 (value -> .)
    Switch          reduce using rule 61 (value -> .)
    Absorb          reduce using rule 61 (value -> .)
    Discharge       reduce using rule 61 (value -> .)
    close_bracket   reduce using rule 61 (value -> .)
    Elif            reduce using rule 61 (value -> .)
    Else            reduce using rule 61 (value -> .)
    Link_End        reduce using rule 61 (value -> .)
    Sys             reduce using rule 61 (value -> .)
    $end            reduce using rule 61 (value -> .)
    Return          reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 61 (value -> .) ]
  ! Sys_Call        [ reduce using rule 61 (value -> .) ]
  ! close_par       [ reduce using rule 69 (num_value -> .) ]
  ! colon           [ reduce using rule 69 (num_value -> .) ]
  ! open_bracket    [ reduce using rule 69 (num_value -> .) ]
  ! Break           [ reduce using rule 69 (num_value -> .) ]
  ! Continue        [ reduce using rule 69 (num_value -> .) ]
  ! Avoid           [ reduce using rule 69 (num_value -> .) ]
  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! For             [ reduce using rule 69 (num_value -> .) ]
  ! While           [ reduce using rule 69 (num_value -> .) ]
  ! If              [ reduce using rule 69 (num_value -> .) ]
  ! Switch          [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! Absorb          [ reduce using rule 69 (num_value -> .) ]
  ! Discharge       [ reduce using rule 69 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 69 (num_value -> .) ]
  ! Elif            [ reduce using rule 69 (num_value -> .) ]
  ! Else            [ reduce using rule 69 (num_value -> .) ]
  ! Link_End        [ reduce using rule 69 (num_value -> .) ]
  ! Sys             [ reduce using rule 69 (num_value -> .) ]
  ! $end            [ reduce using rule 69 (num_value -> .) ]
  ! Return          [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! close_par       [ reduce using rule 75 (id_array -> .) ]
  ! colon           [ reduce using rule 75 (id_array -> .) ]
  ! open_bracket    [ reduce using rule 75 (id_array -> .) ]
  ! Break           [ reduce using rule 75 (id_array -> .) ]
  ! Continue        [ reduce using rule 75 (id_array -> .) ]
  ! Avoid           [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! Elif            [ reduce using rule 75 (id_array -> .) ]
  ! Else            [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! close_par       [ reduce using rule 88 (literals -> .) ]
  ! colon           [ reduce using rule 88 (literals -> .) ]
  ! open_bracket    [ reduce using rule 88 (literals -> .) ]
  ! Break           [ reduce using rule 88 (literals -> .) ]
  ! Continue        [ reduce using rule 88 (literals -> .) ]
  ! Avoid           [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]
  ! Elif            [ reduce using rule 88 (literals -> .) ]
  ! Else            [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]

    value                          shift and go to state 230
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 147

    (158) relational_operators -> greater_than .

    lit_str         reduce using rule 158 (relational_operators -> greater_than .)
    lit_bool        reduce using rule 158 (relational_operators -> greater_than .)
    id              reduce using rule 158 (relational_operators -> greater_than .)
    lit_intposi     reduce using rule 158 (relational_operators -> greater_than .)
    lit_intnega     reduce using rule 158 (relational_operators -> greater_than .)
    lit_decposi     reduce using rule 158 (relational_operators -> greater_than .)
    lit_decnega     reduce using rule 158 (relational_operators -> greater_than .)
    open_par        reduce using rule 158 (relational_operators -> greater_than .)
    Sys_Call        reduce using rule 158 (relational_operators -> greater_than .)
    plus            reduce using rule 158 (relational_operators -> greater_than .)
    minus           reduce using rule 158 (relational_operators -> greater_than .)
    times           reduce using rule 158 (relational_operators -> greater_than .)
    divide          reduce using rule 158 (relational_operators -> greater_than .)
    divide_divide   reduce using rule 158 (relational_operators -> greater_than .)
    modulo          reduce using rule 158 (relational_operators -> greater_than .)
    times_times     reduce using rule 158 (relational_operators -> greater_than .)
    period          reduce using rule 158 (relational_operators -> greater_than .)
    close_par       reduce using rule 158 (relational_operators -> greater_than .)
    colon           reduce using rule 158 (relational_operators -> greater_than .)
    open_bracket    reduce using rule 158 (relational_operators -> greater_than .)
    Break           reduce using rule 158 (relational_operators -> greater_than .)
    Continue        reduce using rule 158 (relational_operators -> greater_than .)
    Avoid           reduce using rule 158 (relational_operators -> greater_than .)
    For             reduce using rule 158 (relational_operators -> greater_than .)
    While           reduce using rule 158 (relational_operators -> greater_than .)
    If              reduce using rule 158 (relational_operators -> greater_than .)
    Switch          reduce using rule 158 (relational_operators -> greater_than .)
    Absorb          reduce using rule 158 (relational_operators -> greater_than .)
    Discharge       reduce using rule 158 (relational_operators -> greater_than .)
    close_bracket   reduce using rule 158 (relational_operators -> greater_than .)
    Elif            reduce using rule 158 (relational_operators -> greater_than .)
    Else            reduce using rule 158 (relational_operators -> greater_than .)
    Link_End        reduce using rule 158 (relational_operators -> greater_than .)
    Sys             reduce using rule 158 (relational_operators -> greater_than .)
    $end            reduce using rule 158 (relational_operators -> greater_than .)
    Return          reduce using rule 158 (relational_operators -> greater_than .)


state 148

    (159) relational_operators -> less_than .

    lit_str         reduce using rule 159 (relational_operators -> less_than .)
    lit_bool        reduce using rule 159 (relational_operators -> less_than .)
    id              reduce using rule 159 (relational_operators -> less_than .)
    lit_intposi     reduce using rule 159 (relational_operators -> less_than .)
    lit_intnega     reduce using rule 159 (relational_operators -> less_than .)
    lit_decposi     reduce using rule 159 (relational_operators -> less_than .)
    lit_decnega     reduce using rule 159 (relational_operators -> less_than .)
    open_par        reduce using rule 159 (relational_operators -> less_than .)
    Sys_Call        reduce using rule 159 (relational_operators -> less_than .)
    plus            reduce using rule 159 (relational_operators -> less_than .)
    minus           reduce using rule 159 (relational_operators -> less_than .)
    times           reduce using rule 159 (relational_operators -> less_than .)
    divide          reduce using rule 159 (relational_operators -> less_than .)
    divide_divide   reduce using rule 159 (relational_operators -> less_than .)
    modulo          reduce using rule 159 (relational_operators -> less_than .)
    times_times     reduce using rule 159 (relational_operators -> less_than .)
    period          reduce using rule 159 (relational_operators -> less_than .)
    close_par       reduce using rule 159 (relational_operators -> less_than .)
    colon           reduce using rule 159 (relational_operators -> less_than .)
    open_bracket    reduce using rule 159 (relational_operators -> less_than .)
    Break           reduce using rule 159 (relational_operators -> less_than .)
    Continue        reduce using rule 159 (relational_operators -> less_than .)
    Avoid           reduce using rule 159 (relational_operators -> less_than .)
    For             reduce using rule 159 (relational_operators -> less_than .)
    While           reduce using rule 159 (relational_operators -> less_than .)
    If              reduce using rule 159 (relational_operators -> less_than .)
    Switch          reduce using rule 159 (relational_operators -> less_than .)
    Absorb          reduce using rule 159 (relational_operators -> less_than .)
    Discharge       reduce using rule 159 (relational_operators -> less_than .)
    close_bracket   reduce using rule 159 (relational_operators -> less_than .)
    Elif            reduce using rule 159 (relational_operators -> less_than .)
    Else            reduce using rule 159 (relational_operators -> less_than .)
    Link_End        reduce using rule 159 (relational_operators -> less_than .)
    Sys             reduce using rule 159 (relational_operators -> less_than .)
    $end            reduce using rule 159 (relational_operators -> less_than .)
    Return          reduce using rule 159 (relational_operators -> less_than .)


state 149

    (160) relational_operators -> equal_equal .

    lit_str         reduce using rule 160 (relational_operators -> equal_equal .)
    lit_bool        reduce using rule 160 (relational_operators -> equal_equal .)
    id              reduce using rule 160 (relational_operators -> equal_equal .)
    lit_intposi     reduce using rule 160 (relational_operators -> equal_equal .)
    lit_intnega     reduce using rule 160 (relational_operators -> equal_equal .)
    lit_decposi     reduce using rule 160 (relational_operators -> equal_equal .)
    lit_decnega     reduce using rule 160 (relational_operators -> equal_equal .)
    open_par        reduce using rule 160 (relational_operators -> equal_equal .)
    Sys_Call        reduce using rule 160 (relational_operators -> equal_equal .)
    plus            reduce using rule 160 (relational_operators -> equal_equal .)
    minus           reduce using rule 160 (relational_operators -> equal_equal .)
    times           reduce using rule 160 (relational_operators -> equal_equal .)
    divide          reduce using rule 160 (relational_operators -> equal_equal .)
    divide_divide   reduce using rule 160 (relational_operators -> equal_equal .)
    modulo          reduce using rule 160 (relational_operators -> equal_equal .)
    times_times     reduce using rule 160 (relational_operators -> equal_equal .)
    period          reduce using rule 160 (relational_operators -> equal_equal .)
    close_par       reduce using rule 160 (relational_operators -> equal_equal .)
    colon           reduce using rule 160 (relational_operators -> equal_equal .)
    open_bracket    reduce using rule 160 (relational_operators -> equal_equal .)
    Break           reduce using rule 160 (relational_operators -> equal_equal .)
    Continue        reduce using rule 160 (relational_operators -> equal_equal .)
    Avoid           reduce using rule 160 (relational_operators -> equal_equal .)
    For             reduce using rule 160 (relational_operators -> equal_equal .)
    While           reduce using rule 160 (relational_operators -> equal_equal .)
    If              reduce using rule 160 (relational_operators -> equal_equal .)
    Switch          reduce using rule 160 (relational_operators -> equal_equal .)
    Absorb          reduce using rule 160 (relational_operators -> equal_equal .)
    Discharge       reduce using rule 160 (relational_operators -> equal_equal .)
    close_bracket   reduce using rule 160 (relational_operators -> equal_equal .)
    Elif            reduce using rule 160 (relational_operators -> equal_equal .)
    Else            reduce using rule 160 (relational_operators -> equal_equal .)
    Link_End        reduce using rule 160 (relational_operators -> equal_equal .)
    Sys             reduce using rule 160 (relational_operators -> equal_equal .)
    $end            reduce using rule 160 (relational_operators -> equal_equal .)
    Return          reduce using rule 160 (relational_operators -> equal_equal .)


state 150

    (161) relational_operators -> not_equal .

    lit_str         reduce using rule 161 (relational_operators -> not_equal .)
    lit_bool        reduce using rule 161 (relational_operators -> not_equal .)
    id              reduce using rule 161 (relational_operators -> not_equal .)
    lit_intposi     reduce using rule 161 (relational_operators -> not_equal .)
    lit_intnega     reduce using rule 161 (relational_operators -> not_equal .)
    lit_decposi     reduce using rule 161 (relational_operators -> not_equal .)
    lit_decnega     reduce using rule 161 (relational_operators -> not_equal .)
    open_par        reduce using rule 161 (relational_operators -> not_equal .)
    Sys_Call        reduce using rule 161 (relational_operators -> not_equal .)
    plus            reduce using rule 161 (relational_operators -> not_equal .)
    minus           reduce using rule 161 (relational_operators -> not_equal .)
    times           reduce using rule 161 (relational_operators -> not_equal .)
    divide          reduce using rule 161 (relational_operators -> not_equal .)
    divide_divide   reduce using rule 161 (relational_operators -> not_equal .)
    modulo          reduce using rule 161 (relational_operators -> not_equal .)
    times_times     reduce using rule 161 (relational_operators -> not_equal .)
    period          reduce using rule 161 (relational_operators -> not_equal .)
    close_par       reduce using rule 161 (relational_operators -> not_equal .)
    colon           reduce using rule 161 (relational_operators -> not_equal .)
    open_bracket    reduce using rule 161 (relational_operators -> not_equal .)
    Break           reduce using rule 161 (relational_operators -> not_equal .)
    Continue        reduce using rule 161 (relational_operators -> not_equal .)
    Avoid           reduce using rule 161 (relational_operators -> not_equal .)
    For             reduce using rule 161 (relational_operators -> not_equal .)
    While           reduce using rule 161 (relational_operators -> not_equal .)
    If              reduce using rule 161 (relational_operators -> not_equal .)
    Switch          reduce using rule 161 (relational_operators -> not_equal .)
    Absorb          reduce using rule 161 (relational_operators -> not_equal .)
    Discharge       reduce using rule 161 (relational_operators -> not_equal .)
    close_bracket   reduce using rule 161 (relational_operators -> not_equal .)
    Elif            reduce using rule 161 (relational_operators -> not_equal .)
    Else            reduce using rule 161 (relational_operators -> not_equal .)
    Link_End        reduce using rule 161 (relational_operators -> not_equal .)
    Sys             reduce using rule 161 (relational_operators -> not_equal .)
    $end            reduce using rule 161 (relational_operators -> not_equal .)
    Return          reduce using rule 161 (relational_operators -> not_equal .)


state 151

    (162) relational_operators -> great_than_equal .

    lit_str         reduce using rule 162 (relational_operators -> great_than_equal .)
    lit_bool        reduce using rule 162 (relational_operators -> great_than_equal .)
    id              reduce using rule 162 (relational_operators -> great_than_equal .)
    lit_intposi     reduce using rule 162 (relational_operators -> great_than_equal .)
    lit_intnega     reduce using rule 162 (relational_operators -> great_than_equal .)
    lit_decposi     reduce using rule 162 (relational_operators -> great_than_equal .)
    lit_decnega     reduce using rule 162 (relational_operators -> great_than_equal .)
    open_par        reduce using rule 162 (relational_operators -> great_than_equal .)
    Sys_Call        reduce using rule 162 (relational_operators -> great_than_equal .)
    plus            reduce using rule 162 (relational_operators -> great_than_equal .)
    minus           reduce using rule 162 (relational_operators -> great_than_equal .)
    times           reduce using rule 162 (relational_operators -> great_than_equal .)
    divide          reduce using rule 162 (relational_operators -> great_than_equal .)
    divide_divide   reduce using rule 162 (relational_operators -> great_than_equal .)
    modulo          reduce using rule 162 (relational_operators -> great_than_equal .)
    times_times     reduce using rule 162 (relational_operators -> great_than_equal .)
    period          reduce using rule 162 (relational_operators -> great_than_equal .)
    close_par       reduce using rule 162 (relational_operators -> great_than_equal .)
    colon           reduce using rule 162 (relational_operators -> great_than_equal .)
    open_bracket    reduce using rule 162 (relational_operators -> great_than_equal .)
    Break           reduce using rule 162 (relational_operators -> great_than_equal .)
    Continue        reduce using rule 162 (relational_operators -> great_than_equal .)
    Avoid           reduce using rule 162 (relational_operators -> great_than_equal .)
    For             reduce using rule 162 (relational_operators -> great_than_equal .)
    While           reduce using rule 162 (relational_operators -> great_than_equal .)
    If              reduce using rule 162 (relational_operators -> great_than_equal .)
    Switch          reduce using rule 162 (relational_operators -> great_than_equal .)
    Absorb          reduce using rule 162 (relational_operators -> great_than_equal .)
    Discharge       reduce using rule 162 (relational_operators -> great_than_equal .)
    close_bracket   reduce using rule 162 (relational_operators -> great_than_equal .)
    Elif            reduce using rule 162 (relational_operators -> great_than_equal .)
    Else            reduce using rule 162 (relational_operators -> great_than_equal .)
    Link_End        reduce using rule 162 (relational_operators -> great_than_equal .)
    Sys             reduce using rule 162 (relational_operators -> great_than_equal .)
    $end            reduce using rule 162 (relational_operators -> great_than_equal .)
    Return          reduce using rule 162 (relational_operators -> great_than_equal .)


state 152

    (163) relational_operators -> less_than_equal .

    lit_str         reduce using rule 163 (relational_operators -> less_than_equal .)
    lit_bool        reduce using rule 163 (relational_operators -> less_than_equal .)
    id              reduce using rule 163 (relational_operators -> less_than_equal .)
    lit_intposi     reduce using rule 163 (relational_operators -> less_than_equal .)
    lit_intnega     reduce using rule 163 (relational_operators -> less_than_equal .)
    lit_decposi     reduce using rule 163 (relational_operators -> less_than_equal .)
    lit_decnega     reduce using rule 163 (relational_operators -> less_than_equal .)
    open_par        reduce using rule 163 (relational_operators -> less_than_equal .)
    Sys_Call        reduce using rule 163 (relational_operators -> less_than_equal .)
    plus            reduce using rule 163 (relational_operators -> less_than_equal .)
    minus           reduce using rule 163 (relational_operators -> less_than_equal .)
    times           reduce using rule 163 (relational_operators -> less_than_equal .)
    divide          reduce using rule 163 (relational_operators -> less_than_equal .)
    divide_divide   reduce using rule 163 (relational_operators -> less_than_equal .)
    modulo          reduce using rule 163 (relational_operators -> less_than_equal .)
    times_times     reduce using rule 163 (relational_operators -> less_than_equal .)
    period          reduce using rule 163 (relational_operators -> less_than_equal .)
    close_par       reduce using rule 163 (relational_operators -> less_than_equal .)
    colon           reduce using rule 163 (relational_operators -> less_than_equal .)
    open_bracket    reduce using rule 163 (relational_operators -> less_than_equal .)
    Break           reduce using rule 163 (relational_operators -> less_than_equal .)
    Continue        reduce using rule 163 (relational_operators -> less_than_equal .)
    Avoid           reduce using rule 163 (relational_operators -> less_than_equal .)
    For             reduce using rule 163 (relational_operators -> less_than_equal .)
    While           reduce using rule 163 (relational_operators -> less_than_equal .)
    If              reduce using rule 163 (relational_operators -> less_than_equal .)
    Switch          reduce using rule 163 (relational_operators -> less_than_equal .)
    Absorb          reduce using rule 163 (relational_operators -> less_than_equal .)
    Discharge       reduce using rule 163 (relational_operators -> less_than_equal .)
    close_bracket   reduce using rule 163 (relational_operators -> less_than_equal .)
    Elif            reduce using rule 163 (relational_operators -> less_than_equal .)
    Else            reduce using rule 163 (relational_operators -> less_than_equal .)
    Link_End        reduce using rule 163 (relational_operators -> less_than_equal .)
    Sys             reduce using rule 163 (relational_operators -> less_than_equal .)
    $end            reduce using rule 163 (relational_operators -> less_than_equal .)
    Return          reduce using rule 163 (relational_operators -> less_than_equal .)


state 153

    (94) arithmetic_expression -> num_value arithmetic_operators . num_value
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Else resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for colon resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for open_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Else resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_par resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for colon resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for open_bracket resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    greater_than    reduce using rule 69 (num_value -> .)
    less_than       reduce using rule 69 (num_value -> .)
    equal_equal     reduce using rule 69 (num_value -> .)
    not_equal       reduce using rule 69 (num_value -> .)
    great_than_equal reduce using rule 69 (num_value -> .)
    less_than_equal reduce using rule 69 (num_value -> .)
    For             reduce using rule 69 (num_value -> .)
    While           reduce using rule 69 (num_value -> .)
    If              reduce using rule 69 (num_value -> .)
    Switch          reduce using rule 69 (num_value -> .)
    Absorb          reduce using rule 69 (num_value -> .)
    Discharge       reduce using rule 69 (num_value -> .)
    Link_End        reduce using rule 69 (num_value -> .)
    Sys             reduce using rule 69 (num_value -> .)
    $end            reduce using rule 69 (num_value -> .)
    Break           reduce using rule 69 (num_value -> .)
    Continue        reduce using rule 69 (num_value -> .)
    Avoid           reduce using rule 69 (num_value -> .)
    close_bracket   reduce using rule 69 (num_value -> .)
    Elif            reduce using rule 69 (num_value -> .)
    Else            reduce using rule 69 (num_value -> .)
    Return          reduce using rule 69 (num_value -> .)
    close_brace     reduce using rule 69 (num_value -> .)
    close_par       reduce using rule 69 (num_value -> .)
    comma           reduce using rule 69 (num_value -> .)
    Generate        reduce using rule 69 (num_value -> .)
    Struct          reduce using rule 69 (num_value -> .)
    Link_Start      reduce using rule 69 (num_value -> .)
    colon           reduce using rule 69 (num_value -> .)
    open_bracket    reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Break           [ reduce using rule 75 (id_array -> .) ]
  ! Continue        [ reduce using rule 75 (id_array -> .) ]
  ! Avoid           [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! Elif            [ reduce using rule 75 (id_array -> .) ]
  ! Else            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! close_par       [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! Generate        [ reduce using rule 75 (id_array -> .) ]
  ! Struct          [ reduce using rule 75 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 75 (id_array -> .) ]
  ! colon           [ reduce using rule 75 (id_array -> .) ]
  ! open_bracket    [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Break           [ reduce using rule 88 (literals -> .) ]
  ! Continue        [ reduce using rule 88 (literals -> .) ]
  ! Avoid           [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]
  ! Elif            [ reduce using rule 88 (literals -> .) ]
  ! Else            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]
  ! close_par       [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! Generate        [ reduce using rule 88 (literals -> .) ]
  ! Struct          [ reduce using rule 88 (literals -> .) ]
  ! Link_Start      [ reduce using rule 88 (literals -> .) ]
  ! colon           [ reduce using rule 88 (literals -> .) ]
  ! open_bracket    [ reduce using rule 88 (literals -> .) ]

    num_value                      shift and go to state 231
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 154

    (95) arithmetic_operators -> plus .

    id              reduce using rule 95 (arithmetic_operators -> plus .)
    lit_intposi     reduce using rule 95 (arithmetic_operators -> plus .)
    lit_intnega     reduce using rule 95 (arithmetic_operators -> plus .)
    lit_decposi     reduce using rule 95 (arithmetic_operators -> plus .)
    lit_decnega     reduce using rule 95 (arithmetic_operators -> plus .)
    open_par        reduce using rule 95 (arithmetic_operators -> plus .)
    Sys_Call        reduce using rule 95 (arithmetic_operators -> plus .)
    plus            reduce using rule 95 (arithmetic_operators -> plus .)
    minus           reduce using rule 95 (arithmetic_operators -> plus .)
    times           reduce using rule 95 (arithmetic_operators -> plus .)
    divide          reduce using rule 95 (arithmetic_operators -> plus .)
    divide_divide   reduce using rule 95 (arithmetic_operators -> plus .)
    modulo          reduce using rule 95 (arithmetic_operators -> plus .)
    times_times     reduce using rule 95 (arithmetic_operators -> plus .)
    period          reduce using rule 95 (arithmetic_operators -> plus .)
    greater_than    reduce using rule 95 (arithmetic_operators -> plus .)
    less_than       reduce using rule 95 (arithmetic_operators -> plus .)
    equal_equal     reduce using rule 95 (arithmetic_operators -> plus .)
    not_equal       reduce using rule 95 (arithmetic_operators -> plus .)
    great_than_equal reduce using rule 95 (arithmetic_operators -> plus .)
    less_than_equal reduce using rule 95 (arithmetic_operators -> plus .)
    For             reduce using rule 95 (arithmetic_operators -> plus .)
    While           reduce using rule 95 (arithmetic_operators -> plus .)
    If              reduce using rule 95 (arithmetic_operators -> plus .)
    Switch          reduce using rule 95 (arithmetic_operators -> plus .)
    Absorb          reduce using rule 95 (arithmetic_operators -> plus .)
    Discharge       reduce using rule 95 (arithmetic_operators -> plus .)
    Link_End        reduce using rule 95 (arithmetic_operators -> plus .)
    Sys             reduce using rule 95 (arithmetic_operators -> plus .)
    $end            reduce using rule 95 (arithmetic_operators -> plus .)
    Break           reduce using rule 95 (arithmetic_operators -> plus .)
    Continue        reduce using rule 95 (arithmetic_operators -> plus .)
    Avoid           reduce using rule 95 (arithmetic_operators -> plus .)
    close_bracket   reduce using rule 95 (arithmetic_operators -> plus .)
    Elif            reduce using rule 95 (arithmetic_operators -> plus .)
    Else            reduce using rule 95 (arithmetic_operators -> plus .)
    Return          reduce using rule 95 (arithmetic_operators -> plus .)
    comma           reduce using rule 95 (arithmetic_operators -> plus .)
    Generate        reduce using rule 95 (arithmetic_operators -> plus .)
    Struct          reduce using rule 95 (arithmetic_operators -> plus .)
    Link_Start      reduce using rule 95 (arithmetic_operators -> plus .)
    close_par       reduce using rule 95 (arithmetic_operators -> plus .)
    colon           reduce using rule 95 (arithmetic_operators -> plus .)
    open_bracket    reduce using rule 95 (arithmetic_operators -> plus .)
    close_brace     reduce using rule 95 (arithmetic_operators -> plus .)


state 155

    (96) arithmetic_operators -> minus .

    id              reduce using rule 96 (arithmetic_operators -> minus .)
    lit_intposi     reduce using rule 96 (arithmetic_operators -> minus .)
    lit_intnega     reduce using rule 96 (arithmetic_operators -> minus .)
    lit_decposi     reduce using rule 96 (arithmetic_operators -> minus .)
    lit_decnega     reduce using rule 96 (arithmetic_operators -> minus .)
    open_par        reduce using rule 96 (arithmetic_operators -> minus .)
    Sys_Call        reduce using rule 96 (arithmetic_operators -> minus .)
    plus            reduce using rule 96 (arithmetic_operators -> minus .)
    minus           reduce using rule 96 (arithmetic_operators -> minus .)
    times           reduce using rule 96 (arithmetic_operators -> minus .)
    divide          reduce using rule 96 (arithmetic_operators -> minus .)
    divide_divide   reduce using rule 96 (arithmetic_operators -> minus .)
    modulo          reduce using rule 96 (arithmetic_operators -> minus .)
    times_times     reduce using rule 96 (arithmetic_operators -> minus .)
    period          reduce using rule 96 (arithmetic_operators -> minus .)
    greater_than    reduce using rule 96 (arithmetic_operators -> minus .)
    less_than       reduce using rule 96 (arithmetic_operators -> minus .)
    equal_equal     reduce using rule 96 (arithmetic_operators -> minus .)
    not_equal       reduce using rule 96 (arithmetic_operators -> minus .)
    great_than_equal reduce using rule 96 (arithmetic_operators -> minus .)
    less_than_equal reduce using rule 96 (arithmetic_operators -> minus .)
    For             reduce using rule 96 (arithmetic_operators -> minus .)
    While           reduce using rule 96 (arithmetic_operators -> minus .)
    If              reduce using rule 96 (arithmetic_operators -> minus .)
    Switch          reduce using rule 96 (arithmetic_operators -> minus .)
    Absorb          reduce using rule 96 (arithmetic_operators -> minus .)
    Discharge       reduce using rule 96 (arithmetic_operators -> minus .)
    Link_End        reduce using rule 96 (arithmetic_operators -> minus .)
    Sys             reduce using rule 96 (arithmetic_operators -> minus .)
    $end            reduce using rule 96 (arithmetic_operators -> minus .)
    Break           reduce using rule 96 (arithmetic_operators -> minus .)
    Continue        reduce using rule 96 (arithmetic_operators -> minus .)
    Avoid           reduce using rule 96 (arithmetic_operators -> minus .)
    close_bracket   reduce using rule 96 (arithmetic_operators -> minus .)
    Elif            reduce using rule 96 (arithmetic_operators -> minus .)
    Else            reduce using rule 96 (arithmetic_operators -> minus .)
    Return          reduce using rule 96 (arithmetic_operators -> minus .)
    comma           reduce using rule 96 (arithmetic_operators -> minus .)
    Generate        reduce using rule 96 (arithmetic_operators -> minus .)
    Struct          reduce using rule 96 (arithmetic_operators -> minus .)
    Link_Start      reduce using rule 96 (arithmetic_operators -> minus .)
    close_par       reduce using rule 96 (arithmetic_operators -> minus .)
    colon           reduce using rule 96 (arithmetic_operators -> minus .)
    open_bracket    reduce using rule 96 (arithmetic_operators -> minus .)
    close_brace     reduce using rule 96 (arithmetic_operators -> minus .)


state 156

    (97) arithmetic_operators -> times .

    id              reduce using rule 97 (arithmetic_operators -> times .)
    lit_intposi     reduce using rule 97 (arithmetic_operators -> times .)
    lit_intnega     reduce using rule 97 (arithmetic_operators -> times .)
    lit_decposi     reduce using rule 97 (arithmetic_operators -> times .)
    lit_decnega     reduce using rule 97 (arithmetic_operators -> times .)
    open_par        reduce using rule 97 (arithmetic_operators -> times .)
    Sys_Call        reduce using rule 97 (arithmetic_operators -> times .)
    plus            reduce using rule 97 (arithmetic_operators -> times .)
    minus           reduce using rule 97 (arithmetic_operators -> times .)
    times           reduce using rule 97 (arithmetic_operators -> times .)
    divide          reduce using rule 97 (arithmetic_operators -> times .)
    divide_divide   reduce using rule 97 (arithmetic_operators -> times .)
    modulo          reduce using rule 97 (arithmetic_operators -> times .)
    times_times     reduce using rule 97 (arithmetic_operators -> times .)
    period          reduce using rule 97 (arithmetic_operators -> times .)
    greater_than    reduce using rule 97 (arithmetic_operators -> times .)
    less_than       reduce using rule 97 (arithmetic_operators -> times .)
    equal_equal     reduce using rule 97 (arithmetic_operators -> times .)
    not_equal       reduce using rule 97 (arithmetic_operators -> times .)
    great_than_equal reduce using rule 97 (arithmetic_operators -> times .)
    less_than_equal reduce using rule 97 (arithmetic_operators -> times .)
    For             reduce using rule 97 (arithmetic_operators -> times .)
    While           reduce using rule 97 (arithmetic_operators -> times .)
    If              reduce using rule 97 (arithmetic_operators -> times .)
    Switch          reduce using rule 97 (arithmetic_operators -> times .)
    Absorb          reduce using rule 97 (arithmetic_operators -> times .)
    Discharge       reduce using rule 97 (arithmetic_operators -> times .)
    Link_End        reduce using rule 97 (arithmetic_operators -> times .)
    Sys             reduce using rule 97 (arithmetic_operators -> times .)
    $end            reduce using rule 97 (arithmetic_operators -> times .)
    Break           reduce using rule 97 (arithmetic_operators -> times .)
    Continue        reduce using rule 97 (arithmetic_operators -> times .)
    Avoid           reduce using rule 97 (arithmetic_operators -> times .)
    close_bracket   reduce using rule 97 (arithmetic_operators -> times .)
    Elif            reduce using rule 97 (arithmetic_operators -> times .)
    Else            reduce using rule 97 (arithmetic_operators -> times .)
    Return          reduce using rule 97 (arithmetic_operators -> times .)
    comma           reduce using rule 97 (arithmetic_operators -> times .)
    Generate        reduce using rule 97 (arithmetic_operators -> times .)
    Struct          reduce using rule 97 (arithmetic_operators -> times .)
    Link_Start      reduce using rule 97 (arithmetic_operators -> times .)
    close_par       reduce using rule 97 (arithmetic_operators -> times .)
    colon           reduce using rule 97 (arithmetic_operators -> times .)
    open_bracket    reduce using rule 97 (arithmetic_operators -> times .)
    close_brace     reduce using rule 97 (arithmetic_operators -> times .)


state 157

    (98) arithmetic_operators -> divide .

    id              reduce using rule 98 (arithmetic_operators -> divide .)
    lit_intposi     reduce using rule 98 (arithmetic_operators -> divide .)
    lit_intnega     reduce using rule 98 (arithmetic_operators -> divide .)
    lit_decposi     reduce using rule 98 (arithmetic_operators -> divide .)
    lit_decnega     reduce using rule 98 (arithmetic_operators -> divide .)
    open_par        reduce using rule 98 (arithmetic_operators -> divide .)
    Sys_Call        reduce using rule 98 (arithmetic_operators -> divide .)
    plus            reduce using rule 98 (arithmetic_operators -> divide .)
    minus           reduce using rule 98 (arithmetic_operators -> divide .)
    times           reduce using rule 98 (arithmetic_operators -> divide .)
    divide          reduce using rule 98 (arithmetic_operators -> divide .)
    divide_divide   reduce using rule 98 (arithmetic_operators -> divide .)
    modulo          reduce using rule 98 (arithmetic_operators -> divide .)
    times_times     reduce using rule 98 (arithmetic_operators -> divide .)
    period          reduce using rule 98 (arithmetic_operators -> divide .)
    greater_than    reduce using rule 98 (arithmetic_operators -> divide .)
    less_than       reduce using rule 98 (arithmetic_operators -> divide .)
    equal_equal     reduce using rule 98 (arithmetic_operators -> divide .)
    not_equal       reduce using rule 98 (arithmetic_operators -> divide .)
    great_than_equal reduce using rule 98 (arithmetic_operators -> divide .)
    less_than_equal reduce using rule 98 (arithmetic_operators -> divide .)
    For             reduce using rule 98 (arithmetic_operators -> divide .)
    While           reduce using rule 98 (arithmetic_operators -> divide .)
    If              reduce using rule 98 (arithmetic_operators -> divide .)
    Switch          reduce using rule 98 (arithmetic_operators -> divide .)
    Absorb          reduce using rule 98 (arithmetic_operators -> divide .)
    Discharge       reduce using rule 98 (arithmetic_operators -> divide .)
    Link_End        reduce using rule 98 (arithmetic_operators -> divide .)
    Sys             reduce using rule 98 (arithmetic_operators -> divide .)
    $end            reduce using rule 98 (arithmetic_operators -> divide .)
    Break           reduce using rule 98 (arithmetic_operators -> divide .)
    Continue        reduce using rule 98 (arithmetic_operators -> divide .)
    Avoid           reduce using rule 98 (arithmetic_operators -> divide .)
    close_bracket   reduce using rule 98 (arithmetic_operators -> divide .)
    Elif            reduce using rule 98 (arithmetic_operators -> divide .)
    Else            reduce using rule 98 (arithmetic_operators -> divide .)
    Return          reduce using rule 98 (arithmetic_operators -> divide .)
    comma           reduce using rule 98 (arithmetic_operators -> divide .)
    Generate        reduce using rule 98 (arithmetic_operators -> divide .)
    Struct          reduce using rule 98 (arithmetic_operators -> divide .)
    Link_Start      reduce using rule 98 (arithmetic_operators -> divide .)
    close_par       reduce using rule 98 (arithmetic_operators -> divide .)
    colon           reduce using rule 98 (arithmetic_operators -> divide .)
    open_bracket    reduce using rule 98 (arithmetic_operators -> divide .)
    close_brace     reduce using rule 98 (arithmetic_operators -> divide .)


state 158

    (99) arithmetic_operators -> divide_divide .

    id              reduce using rule 99 (arithmetic_operators -> divide_divide .)
    lit_intposi     reduce using rule 99 (arithmetic_operators -> divide_divide .)
    lit_intnega     reduce using rule 99 (arithmetic_operators -> divide_divide .)
    lit_decposi     reduce using rule 99 (arithmetic_operators -> divide_divide .)
    lit_decnega     reduce using rule 99 (arithmetic_operators -> divide_divide .)
    open_par        reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Sys_Call        reduce using rule 99 (arithmetic_operators -> divide_divide .)
    plus            reduce using rule 99 (arithmetic_operators -> divide_divide .)
    minus           reduce using rule 99 (arithmetic_operators -> divide_divide .)
    times           reduce using rule 99 (arithmetic_operators -> divide_divide .)
    divide          reduce using rule 99 (arithmetic_operators -> divide_divide .)
    divide_divide   reduce using rule 99 (arithmetic_operators -> divide_divide .)
    modulo          reduce using rule 99 (arithmetic_operators -> divide_divide .)
    times_times     reduce using rule 99 (arithmetic_operators -> divide_divide .)
    period          reduce using rule 99 (arithmetic_operators -> divide_divide .)
    greater_than    reduce using rule 99 (arithmetic_operators -> divide_divide .)
    less_than       reduce using rule 99 (arithmetic_operators -> divide_divide .)
    equal_equal     reduce using rule 99 (arithmetic_operators -> divide_divide .)
    not_equal       reduce using rule 99 (arithmetic_operators -> divide_divide .)
    great_than_equal reduce using rule 99 (arithmetic_operators -> divide_divide .)
    less_than_equal reduce using rule 99 (arithmetic_operators -> divide_divide .)
    For             reduce using rule 99 (arithmetic_operators -> divide_divide .)
    While           reduce using rule 99 (arithmetic_operators -> divide_divide .)
    If              reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Switch          reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Absorb          reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Discharge       reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Link_End        reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Sys             reduce using rule 99 (arithmetic_operators -> divide_divide .)
    $end            reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Break           reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Continue        reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Avoid           reduce using rule 99 (arithmetic_operators -> divide_divide .)
    close_bracket   reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Elif            reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Else            reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Return          reduce using rule 99 (arithmetic_operators -> divide_divide .)
    comma           reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Generate        reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Struct          reduce using rule 99 (arithmetic_operators -> divide_divide .)
    Link_Start      reduce using rule 99 (arithmetic_operators -> divide_divide .)
    close_par       reduce using rule 99 (arithmetic_operators -> divide_divide .)
    colon           reduce using rule 99 (arithmetic_operators -> divide_divide .)
    open_bracket    reduce using rule 99 (arithmetic_operators -> divide_divide .)
    close_brace     reduce using rule 99 (arithmetic_operators -> divide_divide .)


state 159

    (100) arithmetic_operators -> modulo .

    id              reduce using rule 100 (arithmetic_operators -> modulo .)
    lit_intposi     reduce using rule 100 (arithmetic_operators -> modulo .)
    lit_intnega     reduce using rule 100 (arithmetic_operators -> modulo .)
    lit_decposi     reduce using rule 100 (arithmetic_operators -> modulo .)
    lit_decnega     reduce using rule 100 (arithmetic_operators -> modulo .)
    open_par        reduce using rule 100 (arithmetic_operators -> modulo .)
    Sys_Call        reduce using rule 100 (arithmetic_operators -> modulo .)
    plus            reduce using rule 100 (arithmetic_operators -> modulo .)
    minus           reduce using rule 100 (arithmetic_operators -> modulo .)
    times           reduce using rule 100 (arithmetic_operators -> modulo .)
    divide          reduce using rule 100 (arithmetic_operators -> modulo .)
    divide_divide   reduce using rule 100 (arithmetic_operators -> modulo .)
    modulo          reduce using rule 100 (arithmetic_operators -> modulo .)
    times_times     reduce using rule 100 (arithmetic_operators -> modulo .)
    period          reduce using rule 100 (arithmetic_operators -> modulo .)
    greater_than    reduce using rule 100 (arithmetic_operators -> modulo .)
    less_than       reduce using rule 100 (arithmetic_operators -> modulo .)
    equal_equal     reduce using rule 100 (arithmetic_operators -> modulo .)
    not_equal       reduce using rule 100 (arithmetic_operators -> modulo .)
    great_than_equal reduce using rule 100 (arithmetic_operators -> modulo .)
    less_than_equal reduce using rule 100 (arithmetic_operators -> modulo .)
    For             reduce using rule 100 (arithmetic_operators -> modulo .)
    While           reduce using rule 100 (arithmetic_operators -> modulo .)
    If              reduce using rule 100 (arithmetic_operators -> modulo .)
    Switch          reduce using rule 100 (arithmetic_operators -> modulo .)
    Absorb          reduce using rule 100 (arithmetic_operators -> modulo .)
    Discharge       reduce using rule 100 (arithmetic_operators -> modulo .)
    Link_End        reduce using rule 100 (arithmetic_operators -> modulo .)
    Sys             reduce using rule 100 (arithmetic_operators -> modulo .)
    $end            reduce using rule 100 (arithmetic_operators -> modulo .)
    Break           reduce using rule 100 (arithmetic_operators -> modulo .)
    Continue        reduce using rule 100 (arithmetic_operators -> modulo .)
    Avoid           reduce using rule 100 (arithmetic_operators -> modulo .)
    close_bracket   reduce using rule 100 (arithmetic_operators -> modulo .)
    Elif            reduce using rule 100 (arithmetic_operators -> modulo .)
    Else            reduce using rule 100 (arithmetic_operators -> modulo .)
    Return          reduce using rule 100 (arithmetic_operators -> modulo .)
    comma           reduce using rule 100 (arithmetic_operators -> modulo .)
    Generate        reduce using rule 100 (arithmetic_operators -> modulo .)
    Struct          reduce using rule 100 (arithmetic_operators -> modulo .)
    Link_Start      reduce using rule 100 (arithmetic_operators -> modulo .)
    close_par       reduce using rule 100 (arithmetic_operators -> modulo .)
    colon           reduce using rule 100 (arithmetic_operators -> modulo .)
    open_bracket    reduce using rule 100 (arithmetic_operators -> modulo .)
    close_brace     reduce using rule 100 (arithmetic_operators -> modulo .)


state 160

    (101) arithmetic_operators -> times_times .

    id              reduce using rule 101 (arithmetic_operators -> times_times .)
    lit_intposi     reduce using rule 101 (arithmetic_operators -> times_times .)
    lit_intnega     reduce using rule 101 (arithmetic_operators -> times_times .)
    lit_decposi     reduce using rule 101 (arithmetic_operators -> times_times .)
    lit_decnega     reduce using rule 101 (arithmetic_operators -> times_times .)
    open_par        reduce using rule 101 (arithmetic_operators -> times_times .)
    Sys_Call        reduce using rule 101 (arithmetic_operators -> times_times .)
    plus            reduce using rule 101 (arithmetic_operators -> times_times .)
    minus           reduce using rule 101 (arithmetic_operators -> times_times .)
    times           reduce using rule 101 (arithmetic_operators -> times_times .)
    divide          reduce using rule 101 (arithmetic_operators -> times_times .)
    divide_divide   reduce using rule 101 (arithmetic_operators -> times_times .)
    modulo          reduce using rule 101 (arithmetic_operators -> times_times .)
    times_times     reduce using rule 101 (arithmetic_operators -> times_times .)
    period          reduce using rule 101 (arithmetic_operators -> times_times .)
    greater_than    reduce using rule 101 (arithmetic_operators -> times_times .)
    less_than       reduce using rule 101 (arithmetic_operators -> times_times .)
    equal_equal     reduce using rule 101 (arithmetic_operators -> times_times .)
    not_equal       reduce using rule 101 (arithmetic_operators -> times_times .)
    great_than_equal reduce using rule 101 (arithmetic_operators -> times_times .)
    less_than_equal reduce using rule 101 (arithmetic_operators -> times_times .)
    For             reduce using rule 101 (arithmetic_operators -> times_times .)
    While           reduce using rule 101 (arithmetic_operators -> times_times .)
    If              reduce using rule 101 (arithmetic_operators -> times_times .)
    Switch          reduce using rule 101 (arithmetic_operators -> times_times .)
    Absorb          reduce using rule 101 (arithmetic_operators -> times_times .)
    Discharge       reduce using rule 101 (arithmetic_operators -> times_times .)
    Link_End        reduce using rule 101 (arithmetic_operators -> times_times .)
    Sys             reduce using rule 101 (arithmetic_operators -> times_times .)
    $end            reduce using rule 101 (arithmetic_operators -> times_times .)
    Break           reduce using rule 101 (arithmetic_operators -> times_times .)
    Continue        reduce using rule 101 (arithmetic_operators -> times_times .)
    Avoid           reduce using rule 101 (arithmetic_operators -> times_times .)
    close_bracket   reduce using rule 101 (arithmetic_operators -> times_times .)
    Elif            reduce using rule 101 (arithmetic_operators -> times_times .)
    Else            reduce using rule 101 (arithmetic_operators -> times_times .)
    Return          reduce using rule 101 (arithmetic_operators -> times_times .)
    comma           reduce using rule 101 (arithmetic_operators -> times_times .)
    Generate        reduce using rule 101 (arithmetic_operators -> times_times .)
    Struct          reduce using rule 101 (arithmetic_operators -> times_times .)
    Link_Start      reduce using rule 101 (arithmetic_operators -> times_times .)
    close_par       reduce using rule 101 (arithmetic_operators -> times_times .)
    colon           reduce using rule 101 (arithmetic_operators -> times_times .)
    open_bracket    reduce using rule 101 (arithmetic_operators -> times_times .)
    close_brace     reduce using rule 101 (arithmetic_operators -> times_times .)


state 161

    (65) num_value -> id_array id_struct .

    plus            reduce using rule 65 (num_value -> id_array id_struct .)
    minus           reduce using rule 65 (num_value -> id_array id_struct .)
    times           reduce using rule 65 (num_value -> id_array id_struct .)
    divide          reduce using rule 65 (num_value -> id_array id_struct .)
    divide_divide   reduce using rule 65 (num_value -> id_array id_struct .)
    modulo          reduce using rule 65 (num_value -> id_array id_struct .)
    times_times     reduce using rule 65 (num_value -> id_array id_struct .)
    greater_than    reduce using rule 65 (num_value -> id_array id_struct .)
    less_than       reduce using rule 65 (num_value -> id_array id_struct .)
    equal_equal     reduce using rule 65 (num_value -> id_array id_struct .)
    not_equal       reduce using rule 65 (num_value -> id_array id_struct .)
    great_than_equal reduce using rule 65 (num_value -> id_array id_struct .)
    less_than_equal reduce using rule 65 (num_value -> id_array id_struct .)
    id              reduce using rule 65 (num_value -> id_array id_struct .)
    For             reduce using rule 65 (num_value -> id_array id_struct .)
    While           reduce using rule 65 (num_value -> id_array id_struct .)
    If              reduce using rule 65 (num_value -> id_array id_struct .)
    Switch          reduce using rule 65 (num_value -> id_array id_struct .)
    Sys_Call        reduce using rule 65 (num_value -> id_array id_struct .)
    Absorb          reduce using rule 65 (num_value -> id_array id_struct .)
    Discharge       reduce using rule 65 (num_value -> id_array id_struct .)
    Link_End        reduce using rule 65 (num_value -> id_array id_struct .)
    Sys             reduce using rule 65 (num_value -> id_array id_struct .)
    $end            reduce using rule 65 (num_value -> id_array id_struct .)
    Break           reduce using rule 65 (num_value -> id_array id_struct .)
    Continue        reduce using rule 65 (num_value -> id_array id_struct .)
    Avoid           reduce using rule 65 (num_value -> id_array id_struct .)
    close_bracket   reduce using rule 65 (num_value -> id_array id_struct .)
    Elif            reduce using rule 65 (num_value -> id_array id_struct .)
    Else            reduce using rule 65 (num_value -> id_array id_struct .)
    Return          reduce using rule 65 (num_value -> id_array id_struct .)
    close_brace     reduce using rule 65 (num_value -> id_array id_struct .)
    comma           reduce using rule 65 (num_value -> id_array id_struct .)
    Generate        reduce using rule 65 (num_value -> id_array id_struct .)
    Struct          reduce using rule 65 (num_value -> id_array id_struct .)
    Link_Start      reduce using rule 65 (num_value -> id_array id_struct .)
    close_par       reduce using rule 65 (num_value -> id_array id_struct .)
    colon           reduce using rule 65 (num_value -> id_array id_struct .)
    open_bracket    reduce using rule 65 (num_value -> id_array id_struct .)


state 162

    (74) id_array -> id array .

    period          reduce using rule 74 (id_array -> id array .)
    plus            reduce using rule 74 (id_array -> id array .)
    minus           reduce using rule 74 (id_array -> id array .)
    times           reduce using rule 74 (id_array -> id array .)
    divide          reduce using rule 74 (id_array -> id array .)
    divide_divide   reduce using rule 74 (id_array -> id array .)
    modulo          reduce using rule 74 (id_array -> id array .)
    times_times     reduce using rule 74 (id_array -> id array .)
    greater_than    reduce using rule 74 (id_array -> id array .)
    less_than       reduce using rule 74 (id_array -> id array .)
    equal_equal     reduce using rule 74 (id_array -> id array .)
    not_equal       reduce using rule 74 (id_array -> id array .)
    great_than_equal reduce using rule 74 (id_array -> id array .)
    less_than_equal reduce using rule 74 (id_array -> id array .)
    id              reduce using rule 74 (id_array -> id array .)
    For             reduce using rule 74 (id_array -> id array .)
    While           reduce using rule 74 (id_array -> id array .)
    If              reduce using rule 74 (id_array -> id array .)
    Switch          reduce using rule 74 (id_array -> id array .)
    Sys_Call        reduce using rule 74 (id_array -> id array .)
    Absorb          reduce using rule 74 (id_array -> id array .)
    Discharge       reduce using rule 74 (id_array -> id array .)
    Link_End        reduce using rule 74 (id_array -> id array .)
    Sys             reduce using rule 74 (id_array -> id array .)
    $end            reduce using rule 74 (id_array -> id array .)
    Break           reduce using rule 74 (id_array -> id array .)
    Continue        reduce using rule 74 (id_array -> id array .)
    Avoid           reduce using rule 74 (id_array -> id array .)
    close_bracket   reduce using rule 74 (id_array -> id array .)
    Elif            reduce using rule 74 (id_array -> id array .)
    Else            reduce using rule 74 (id_array -> id array .)
    Return          reduce using rule 74 (id_array -> id array .)
    comma           reduce using rule 74 (id_array -> id array .)
    Struct          reduce using rule 74 (id_array -> id array .)
    Generate        reduce using rule 74 (id_array -> id array .)
    Link_Start      reduce using rule 74 (id_array -> id array .)
    close_brace     reduce using rule 74 (id_array -> id array .)
    equal           reduce using rule 74 (id_array -> id array .)
    plus_equal      reduce using rule 74 (id_array -> id array .)
    minus_equal     reduce using rule 74 (id_array -> id array .)
    times_equal     reduce using rule 74 (id_array -> id array .)
    divide_equal    reduce using rule 74 (id_array -> id array .)
    divide_divide_equal reduce using rule 74 (id_array -> id array .)
    modulo_equal    reduce using rule 74 (id_array -> id array .)
    times_times_equal reduce using rule 74 (id_array -> id array .)
    close_par       reduce using rule 74 (id_array -> id array .)
    colon           reduce using rule 74 (id_array -> id array .)
    open_bracket    reduce using rule 74 (id_array -> id array .)


state 163

    (77) array -> open_brace . num_value close_brace
    (78) array -> open_brace . close_brace
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
    close_brace     shift and go to state 122
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]

    num_value                      shift and go to state 123
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 164

    (210) switch_statements -> Switch id colon . open_bracket execute Default colon inside_statements close_bracket End_Switch

    open_bracket    shift and go to state 232


state 165

    (221) func_call -> Sys_Call id open_par . function_param close_par
    (222) function_param -> . id open_brace close_brace more_param
    (223) function_param -> . value1_opt more_param
    (224) function_param -> .
    (107) value1_opt -> . value_opt value2_opt
    (62) value_opt -> . num_value_opt
    (63) value_opt -> . lit_str
    (64) value_opt -> . lit_bool
    (70) num_value_opt -> . id_array_opt id_struct
    (71) num_value_opt -> . literals_opt
    (72) num_value_opt -> . arithmetic_expression
    (73) num_value_opt -> . func_call
    (76) id_array_opt -> . id array
    (89) literals_opt -> . lit_intposi
    (90) literals_opt -> . lit_intnega
    (91) literals_opt -> . lit_decposi
    (92) literals_opt -> . lit_decnega
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .

  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
    id              shift and go to state 233
    close_par       reduce using rule 224 (function_param -> .)
    lit_str         shift and go to state 238
    lit_bool        shift and go to state 239
    lit_intposi     shift and go to state 244
    lit_intnega     shift and go to state 245
    lit_decposi     shift and go to state 246
    lit_decnega     shift and go to state 247
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    period          reduce using rule 75 (id_array -> .)

  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]

    function_param                 shift and go to state 234
    value1_opt                     shift and go to state 235
    value_opt                      shift and go to state 236
    num_value_opt                  shift and go to state 237
    id_array_opt                   shift and go to state 240
    literals_opt                   shift and go to state 241
    arithmetic_expression          shift and go to state 242
    func_call                      shift and go to state 243
    num_value                      shift and go to state 167
    id_array                       shift and go to state 78
    literals                       shift and go to state 79

state 166

    (219) input_statements -> Absorb id_array id_struct .

    id              reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    For             reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    While           reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    If              reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Switch          reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Sys_Call        reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Absorb          reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Discharge       reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Link_End        reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Sys             reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    $end            reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Break           reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Continue        reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Avoid           reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    close_bracket   reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Elif            reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Else            reduce using rule 219 (input_statements -> Absorb id_array id_struct .)
    Return          reduce using rule 219 (input_statements -> Absorb id_array id_struct .)


state 167

    (94) arithmetic_expression -> num_value . arithmetic_operators num_value
    (95) arithmetic_operators -> . plus
    (96) arithmetic_operators -> . minus
    (97) arithmetic_operators -> . times
    (98) arithmetic_operators -> . divide
    (99) arithmetic_operators -> . divide_divide
    (100) arithmetic_operators -> . modulo
    (101) arithmetic_operators -> . times_times

    plus            shift and go to state 154
    minus           shift and go to state 155
    times           shift and go to state 156
    divide          shift and go to state 157
    divide_divide   shift and go to state 158
    modulo          shift and go to state 159
    times_times     shift and go to state 160

    arithmetic_operators           shift and go to state 153

state 168

    (8) struct_dec -> Struct id open_bracket struct_element1 close_bracket . id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 248
    id_array                       shift and go to state 96

state 169

    (12) struct_dec -> Struct id open_bracket struct_element1 id_array1 .

    Struct          reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Generate        reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Link_Start      reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    id              reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    For             reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    While           reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    If              reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Switch          reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Sys_Call        reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Absorb          reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Discharge       reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Link_End        reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    Sys             reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)
    $end            reduce using rule 12 (struct_dec -> Struct id open_bracket struct_element1 id_array1 .)


state 170

    (13) struct_dec -> Struct id struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    id              reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    For             reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    While           reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    If              reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 13 (struct_dec -> Struct id struct_element1 close_bracket id_array1 .)


state 171

    (80) id_array1 -> id_array id_array2 .

    Struct          reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Generate        reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Link_Start      reduce using rule 80 (id_array1 -> id_array id_array2 .)
    id              reduce using rule 80 (id_array1 -> id_array id_array2 .)
    For             reduce using rule 80 (id_array1 -> id_array id_array2 .)
    While           reduce using rule 80 (id_array1 -> id_array id_array2 .)
    If              reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Switch          reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Sys_Call        reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Absorb          reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Discharge       reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Link_End        reduce using rule 80 (id_array1 -> id_array id_array2 .)
    Sys             reduce using rule 80 (id_array1 -> id_array id_array2 .)
    $end            reduce using rule 80 (id_array1 -> id_array id_array2 .)


state 172

    (82) id_array2 -> comma . id_array1
    (80) id_array1 -> . id_array id_array2
    (81) id_array1 -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Struct resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Generate resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 75 (id_array -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for While resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for If resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Switch resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for Sys resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for $end resolved using rule 75 (id_array -> .)
    id              shift and go to state 82
    comma           reduce using rule 75 (id_array -> .)
    Struct          reduce using rule 75 (id_array -> .)
    Generate        reduce using rule 75 (id_array -> .)
    Link_Start      reduce using rule 75 (id_array -> .)
    For             reduce using rule 75 (id_array -> .)
    While           reduce using rule 75 (id_array -> .)
    If              reduce using rule 75 (id_array -> .)
    Switch          reduce using rule 75 (id_array -> .)
    Sys_Call        reduce using rule 75 (id_array -> .)
    Absorb          reduce using rule 75 (id_array -> .)
    Discharge       reduce using rule 75 (id_array -> .)
    Link_End        reduce using rule 75 (id_array -> .)
    Sys             reduce using rule 75 (id_array -> .)
    $end            reduce using rule 75 (id_array -> .)

  ! Struct          [ reduce using rule 81 (id_array1 -> .) ]
  ! Generate        [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_Start      [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 81 (id_array1 -> .) ]
  ! For             [ reduce using rule 81 (id_array1 -> .) ]
  ! While           [ reduce using rule 81 (id_array1 -> .) ]
  ! If              [ reduce using rule 81 (id_array1 -> .) ]
  ! Switch          [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys_Call        [ reduce using rule 81 (id_array1 -> .) ]
  ! Absorb          [ reduce using rule 81 (id_array1 -> .) ]
  ! Discharge       [ reduce using rule 81 (id_array1 -> .) ]
  ! Link_End        [ reduce using rule 81 (id_array1 -> .) ]
  ! Sys             [ reduce using rule 81 (id_array1 -> .) ]
  ! $end            [ reduce using rule 81 (id_array1 -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]

    id_array1                      shift and go to state 249
    id_array                       shift and go to state 96

state 173

    (14) struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    id              reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    For             reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    While           reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    If              reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 14 (struct_dec -> Struct open_bracket struct_element1 close_bracket id_array1 .)


state 174

    (27) id_array_dec2 -> open_brace lit_intposi . close_brace array_dec1

    close_brace     shift and go to state 250


state 175

    (28) id_dec1 -> comma id . id_dec1
    (28) id_dec1 -> . comma id id_dec1
    (29) id_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 105
    Integer         reduce using rule 29 (id_dec1 -> .)
    Decimal         reduce using rule 29 (id_dec1 -> .)
    String          reduce using rule 29 (id_dec1 -> .)
    Boolean         reduce using rule 29 (id_dec1 -> .)
    id              reduce using rule 29 (id_dec1 -> .)
    close_bracket   reduce using rule 29 (id_dec1 -> .)
    Struct          reduce using rule 29 (id_dec1 -> .)
    Generate        reduce using rule 29 (id_dec1 -> .)
    Link_Start      reduce using rule 29 (id_dec1 -> .)
    For             reduce using rule 29 (id_dec1 -> .)
    While           reduce using rule 29 (id_dec1 -> .)
    If              reduce using rule 29 (id_dec1 -> .)
    Switch          reduce using rule 29 (id_dec1 -> .)
    Sys_Call        reduce using rule 29 (id_dec1 -> .)
    Absorb          reduce using rule 29 (id_dec1 -> .)
    Discharge       reduce using rule 29 (id_dec1 -> .)
    Link_End        reduce using rule 29 (id_dec1 -> .)
    Sys             reduce using rule 29 (id_dec1 -> .)
    $end            reduce using rule 29 (id_dec1 -> .)

  ! comma           [ reduce using rule 29 (id_dec1 -> .) ]

    id_dec1                        shift and go to state 251

state 176

    (37) id_array_const -> id id_array_const2 .

    Generate        reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Struct          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Link_Start      reduce using rule 37 (id_array_const -> id id_array_const2 .)
    id              reduce using rule 37 (id_array_const -> id id_array_const2 .)
    For             reduce using rule 37 (id_array_const -> id id_array_const2 .)
    While           reduce using rule 37 (id_array_const -> id id_array_const2 .)
    If              reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Switch          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Sys_Call        reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Absorb          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Discharge       reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Link_End        reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Sys             reduce using rule 37 (id_array_const -> id id_array_const2 .)
    $end            reduce using rule 37 (id_array_const -> id id_array_const2 .)
    Return          reduce using rule 37 (id_array_const -> id id_array_const2 .)
    close_bracket   reduce using rule 37 (id_array_const -> id id_array_const2 .)


state 177

    (39) id_array_const2 -> open_brace . lit_intposi close_brace equal open_brace value1 close_brace array_const1

    lit_intposi     shift and go to state 252


state 178

    (40) id_array_const2 -> equal . value id_const1
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    Generate        reduce using rule 61 (value -> .)
    Struct          reduce using rule 61 (value -> .)
    Link_Start      reduce using rule 61 (value -> .)
    For             reduce using rule 61 (value -> .)
    While           reduce using rule 61 (value -> .)
    If              reduce using rule 61 (value -> .)
    Switch          reduce using rule 61 (value -> .)
    Absorb          reduce using rule 61 (value -> .)
    Discharge       reduce using rule 61 (value -> .)
    Link_End        reduce using rule 61 (value -> .)
    Sys             reduce using rule 61 (value -> .)
    $end            reduce using rule 61 (value -> .)
    Return          reduce using rule 61 (value -> .)
    close_bracket   reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 61 (value -> .) ]
  ! Sys_Call        [ reduce using rule 61 (value -> .) ]
  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! Generate        [ reduce using rule 69 (num_value -> .) ]
  ! Struct          [ reduce using rule 69 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 69 (num_value -> .) ]
  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! For             [ reduce using rule 69 (num_value -> .) ]
  ! While           [ reduce using rule 69 (num_value -> .) ]
  ! If              [ reduce using rule 69 (num_value -> .) ]
  ! Switch          [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! Absorb          [ reduce using rule 69 (num_value -> .) ]
  ! Discharge       [ reduce using rule 69 (num_value -> .) ]
  ! Link_End        [ reduce using rule 69 (num_value -> .) ]
  ! Sys             [ reduce using rule 69 (num_value -> .) ]
  ! $end            [ reduce using rule 69 (num_value -> .) ]
  ! Return          [ reduce using rule 69 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! Generate        [ reduce using rule 75 (id_array -> .) ]
  ! Struct          [ reduce using rule 75 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! Generate        [ reduce using rule 88 (literals -> .) ]
  ! Struct          [ reduce using rule 88 (literals -> .) ]
  ! Link_Start      [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]

    value                          shift and go to state 253
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 179

    (48) id_array_var2 -> var_init id_var1 .

    Generate        reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Struct          reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Link_Start      reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    id              reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    For             reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    While           reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    If              reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Switch          reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Sys_Call        reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Absorb          reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Discharge       reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Link_End        reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Sys             reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    $end            reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    Return          reduce using rule 48 (id_array_var2 -> var_init id_var1 .)
    close_bracket   reduce using rule 48 (id_array_var2 -> var_init id_var1 .)


state 180

    (52) id_var1 -> comma . id var_init id_var1

    id              shift and go to state 254


state 181

    (49) id_array_var2 -> open_brace lit_intposi . close_brace array_init array_var1

    close_brace     shift and go to state 255


state 182

    (50) var_init -> equal value . id_var1
    (52) id_var1 -> . comma id var_init id_var1
    (53) id_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 180
    Generate        reduce using rule 53 (id_var1 -> .)
    Struct          reduce using rule 53 (id_var1 -> .)
    Link_Start      reduce using rule 53 (id_var1 -> .)
    id              reduce using rule 53 (id_var1 -> .)
    For             reduce using rule 53 (id_var1 -> .)
    While           reduce using rule 53 (id_var1 -> .)
    If              reduce using rule 53 (id_var1 -> .)
    Switch          reduce using rule 53 (id_var1 -> .)
    Sys_Call        reduce using rule 53 (id_var1 -> .)
    Absorb          reduce using rule 53 (id_var1 -> .)
    Discharge       reduce using rule 53 (id_var1 -> .)
    Link_End        reduce using rule 53 (id_var1 -> .)
    Sys             reduce using rule 53 (id_var1 -> .)
    $end            reduce using rule 53 (id_var1 -> .)
    Return          reduce using rule 53 (id_var1 -> .)
    close_bracket   reduce using rule 53 (id_var1 -> .)

  ! comma           [ reduce using rule 53 (id_var1 -> .) ]

    id_var1                        shift and go to state 256

state 183

    (1) program -> global_dec Link_Start declare_statements statements Link_End functions .

    $end            reduce using rule 1 (program -> global_dec Link_Start declare_statements statements Link_End functions .)


state 184

    (227) functions -> Sys id open_par . parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (233) functions -> Sys id open_par . parameters declare_statements statements return_statement functions
    (243) functions -> Sys id open_par . parameters close_par declare_statements statements return_statement functions
    (244) functions -> Sys id open_par . parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> Sys id open_par . parameters declare_statements statements return_statement close_bracket functions
    (253) functions -> Sys id open_par . parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> Sys id open_par . parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> Sys id open_par . parameters open_bracket declare_statements statements return_statement close_bracket functions
    (259) parameters -> . data_type id more_parameters
    (260) parameters -> .
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

  ! reduce/reduce conflict for id resolved using rule 23 (data_type -> .)
    close_par       reduce using rule 260 (parameters -> .)
    open_bracket    reduce using rule 260 (parameters -> .)
    Generate        reduce using rule 260 (parameters -> .)
    For             reduce using rule 260 (parameters -> .)
    While           reduce using rule 260 (parameters -> .)
    If              reduce using rule 260 (parameters -> .)
    Switch          reduce using rule 260 (parameters -> .)
    Sys_Call        reduce using rule 260 (parameters -> .)
    Absorb          reduce using rule 260 (parameters -> .)
    Discharge       reduce using rule 260 (parameters -> .)
    Return          reduce using rule 260 (parameters -> .)
    close_bracket   reduce using rule 260 (parameters -> .)
    Sys             reduce using rule 260 (parameters -> .)
    $end            reduce using rule 260 (parameters -> .)
    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

  ! id              [ reduce using rule 260 (parameters -> .) ]

    parameters                     shift and go to state 257
    data_type                      shift and go to state 118

state 185

    (228) functions -> Sys id parameters . declare_statements statements return_statement functions
    (234) functions -> Sys id parameters . close_par declare_statements statements return_statement functions
    (235) functions -> Sys id parameters . open_bracket declare_statements statements return_statement functions
    (236) functions -> Sys id parameters . declare_statements statements return_statement close_bracket functions
    (246) functions -> Sys id parameters . close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> Sys id parameters . close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> Sys id parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> Sys id parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 259
    open_bracket    shift and go to state 260
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 258

state 186

    (229) functions -> Sys open_par parameters . declare_statements statements return_statement functions
    (237) functions -> Sys open_par parameters . close_par declare_statements statements return_statement functions
    (238) functions -> Sys open_par parameters . open_bracket declare_statements statements return_statement functions
    (239) functions -> Sys open_par parameters . declare_statements statements return_statement close_bracket functions
    (249) functions -> Sys open_par parameters . close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> Sys open_par parameters . close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> Sys open_par parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> Sys open_par parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 262
    open_bracket    shift and go to state 263
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 261

state 187

    (230) functions -> Sys parameters close_par . declare_statements statements return_statement functions
    (240) functions -> Sys parameters close_par . open_bracket declare_statements statements return_statement functions
    (241) functions -> Sys parameters close_par . declare_statements statements return_statement close_bracket functions
    (252) functions -> Sys parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 265
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 264

state 188

    (232) functions -> Sys parameters declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 266
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 189

    (231) functions -> Sys parameters open_bracket . declare_statements statements return_statement functions
    (242) functions -> Sys parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 267

state 190

    (259) parameters -> data_type id . more_parameters
    (261) more_parameters -> . comma data_type id more_parameters
    (262) more_parameters -> .

    comma           shift and go to state 269
    close_par       reduce using rule 262 (more_parameters -> .)
    open_bracket    reduce using rule 262 (more_parameters -> .)
    Generate        reduce using rule 262 (more_parameters -> .)
    id              reduce using rule 262 (more_parameters -> .)
    For             reduce using rule 262 (more_parameters -> .)
    While           reduce using rule 262 (more_parameters -> .)
    If              reduce using rule 262 (more_parameters -> .)
    Switch          reduce using rule 262 (more_parameters -> .)
    Sys_Call        reduce using rule 262 (more_parameters -> .)
    Absorb          reduce using rule 262 (more_parameters -> .)
    Discharge       reduce using rule 262 (more_parameters -> .)
    Return          reduce using rule 262 (more_parameters -> .)
    close_bracket   reduce using rule 262 (more_parameters -> .)
    Sys             reduce using rule 262 (more_parameters -> .)
    $end            reduce using rule 262 (more_parameters -> .)

    more_parameters                shift and go to state 268

state 191

    (121) assignment_statements2 -> array id_struct assignment_exp .

    id              reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    For             reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    While           reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    If              reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Switch          reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Sys_Call        reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Absorb          reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Discharge       reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Link_End        reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Sys             reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    $end            reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Break           reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Continue        reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Avoid           reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    close_bracket   reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Elif            reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Else            reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)
    Return          reduce using rule 121 (assignment_statements2 -> array id_struct assignment_exp .)


state 192

    (123) assignment_exp -> assignment_operators . num_value
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Else resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Else resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    For             reduce using rule 69 (num_value -> .)
    While           reduce using rule 69 (num_value -> .)
    If              reduce using rule 69 (num_value -> .)
    Switch          reduce using rule 69 (num_value -> .)
    Absorb          reduce using rule 69 (num_value -> .)
    Discharge       reduce using rule 69 (num_value -> .)
    Link_End        reduce using rule 69 (num_value -> .)
    Sys             reduce using rule 69 (num_value -> .)
    $end            reduce using rule 69 (num_value -> .)
    Break           reduce using rule 69 (num_value -> .)
    Continue        reduce using rule 69 (num_value -> .)
    Avoid           reduce using rule 69 (num_value -> .)
    close_bracket   reduce using rule 69 (num_value -> .)
    Elif            reduce using rule 69 (num_value -> .)
    Else            reduce using rule 69 (num_value -> .)
    Return          reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Break           [ reduce using rule 75 (id_array -> .) ]
  ! Continue        [ reduce using rule 75 (id_array -> .) ]
  ! Avoid           [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! Elif            [ reduce using rule 75 (id_array -> .) ]
  ! Else            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Break           [ reduce using rule 88 (literals -> .) ]
  ! Continue        [ reduce using rule 88 (literals -> .) ]
  ! Avoid           [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]
  ! Elif            [ reduce using rule 88 (literals -> .) ]
  ! Else            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]

    num_value                      shift and go to state 270
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 193

    (124) assignment_exp -> equal . assign_value
    (126) assign_value -> . num_value
    (127) assign_value -> . more_id value
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (128) more_id -> . id_array id_struct equal more_id
    (129) more_id -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for For resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Else resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for period resolved using rule 75 (id_array -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Else resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for lit_intposi resolved as shift
  ! shift/reduce conflict for lit_intnega resolved as shift
  ! shift/reduce conflict for lit_decposi resolved as shift
  ! shift/reduce conflict for lit_decnega resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for While resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for If resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for $end resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Break resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Else resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for Return resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for open_par resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    For             reduce using rule 69 (num_value -> .)
    While           reduce using rule 69 (num_value -> .)
    If              reduce using rule 69 (num_value -> .)
    Switch          reduce using rule 69 (num_value -> .)
    Absorb          reduce using rule 69 (num_value -> .)
    Discharge       reduce using rule 69 (num_value -> .)
    Link_End        reduce using rule 69 (num_value -> .)
    Sys             reduce using rule 69 (num_value -> .)
    $end            reduce using rule 69 (num_value -> .)
    Break           reduce using rule 69 (num_value -> .)
    Continue        reduce using rule 69 (num_value -> .)
    Avoid           reduce using rule 69 (num_value -> .)
    close_bracket   reduce using rule 69 (num_value -> .)
    Elif            reduce using rule 69 (num_value -> .)
    Else            reduce using rule 69 (num_value -> .)
    Return          reduce using rule 69 (num_value -> .)
    lit_str         reduce using rule 129 (more_id -> .)
    lit_bool        reduce using rule 129 (more_id -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    equal           reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! id              [ reduce using rule 129 (more_id -> .) ]
  ! lit_intposi     [ reduce using rule 129 (more_id -> .) ]
  ! lit_intnega     [ reduce using rule 129 (more_id -> .) ]
  ! lit_decposi     [ reduce using rule 129 (more_id -> .) ]
  ! lit_decnega     [ reduce using rule 129 (more_id -> .) ]
  ! open_par        [ reduce using rule 129 (more_id -> .) ]
  ! Sys_Call        [ reduce using rule 129 (more_id -> .) ]
  ! plus            [ reduce using rule 129 (more_id -> .) ]
  ! minus           [ reduce using rule 129 (more_id -> .) ]
  ! times           [ reduce using rule 129 (more_id -> .) ]
  ! divide          [ reduce using rule 129 (more_id -> .) ]
  ! divide_divide   [ reduce using rule 129 (more_id -> .) ]
  ! modulo          [ reduce using rule 129 (more_id -> .) ]
  ! times_times     [ reduce using rule 129 (more_id -> .) ]
  ! period          [ reduce using rule 129 (more_id -> .) ]
  ! For             [ reduce using rule 129 (more_id -> .) ]
  ! While           [ reduce using rule 129 (more_id -> .) ]
  ! If              [ reduce using rule 129 (more_id -> .) ]
  ! Switch          [ reduce using rule 129 (more_id -> .) ]
  ! Absorb          [ reduce using rule 129 (more_id -> .) ]
  ! Discharge       [ reduce using rule 129 (more_id -> .) ]
  ! Link_End        [ reduce using rule 129 (more_id -> .) ]
  ! Sys             [ reduce using rule 129 (more_id -> .) ]
  ! $end            [ reduce using rule 129 (more_id -> .) ]
  ! Break           [ reduce using rule 129 (more_id -> .) ]
  ! Continue        [ reduce using rule 129 (more_id -> .) ]
  ! Avoid           [ reduce using rule 129 (more_id -> .) ]
  ! close_bracket   [ reduce using rule 129 (more_id -> .) ]
  ! Elif            [ reduce using rule 129 (more_id -> .) ]
  ! Else            [ reduce using rule 129 (more_id -> .) ]
  ! Return          [ reduce using rule 129 (more_id -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Break           [ reduce using rule 75 (id_array -> .) ]
  ! Continue        [ reduce using rule 75 (id_array -> .) ]
  ! Avoid           [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! Elif            [ reduce using rule 75 (id_array -> .) ]
  ! Else            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Break           [ reduce using rule 88 (literals -> .) ]
  ! Continue        [ reduce using rule 88 (literals -> .) ]
  ! Avoid           [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]
  ! Elif            [ reduce using rule 88 (literals -> .) ]
  ! Else            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]

    assign_value                   shift and go to state 271
    num_value                      shift and go to state 272
    more_id                        shift and go to state 273
    id_array                       shift and go to state 274
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 194

    (130) assignment_operators -> plus_equal .

    id              reduce using rule 130 (assignment_operators -> plus_equal .)
    lit_intposi     reduce using rule 130 (assignment_operators -> plus_equal .)
    lit_intnega     reduce using rule 130 (assignment_operators -> plus_equal .)
    lit_decposi     reduce using rule 130 (assignment_operators -> plus_equal .)
    lit_decnega     reduce using rule 130 (assignment_operators -> plus_equal .)
    open_par        reduce using rule 130 (assignment_operators -> plus_equal .)
    Sys_Call        reduce using rule 130 (assignment_operators -> plus_equal .)
    plus            reduce using rule 130 (assignment_operators -> plus_equal .)
    minus           reduce using rule 130 (assignment_operators -> plus_equal .)
    times           reduce using rule 130 (assignment_operators -> plus_equal .)
    divide          reduce using rule 130 (assignment_operators -> plus_equal .)
    divide_divide   reduce using rule 130 (assignment_operators -> plus_equal .)
    modulo          reduce using rule 130 (assignment_operators -> plus_equal .)
    times_times     reduce using rule 130 (assignment_operators -> plus_equal .)
    period          reduce using rule 130 (assignment_operators -> plus_equal .)
    For             reduce using rule 130 (assignment_operators -> plus_equal .)
    While           reduce using rule 130 (assignment_operators -> plus_equal .)
    If              reduce using rule 130 (assignment_operators -> plus_equal .)
    Switch          reduce using rule 130 (assignment_operators -> plus_equal .)
    Absorb          reduce using rule 130 (assignment_operators -> plus_equal .)
    Discharge       reduce using rule 130 (assignment_operators -> plus_equal .)
    Link_End        reduce using rule 130 (assignment_operators -> plus_equal .)
    Sys             reduce using rule 130 (assignment_operators -> plus_equal .)
    $end            reduce using rule 130 (assignment_operators -> plus_equal .)
    Break           reduce using rule 130 (assignment_operators -> plus_equal .)
    Continue        reduce using rule 130 (assignment_operators -> plus_equal .)
    Avoid           reduce using rule 130 (assignment_operators -> plus_equal .)
    close_bracket   reduce using rule 130 (assignment_operators -> plus_equal .)
    Elif            reduce using rule 130 (assignment_operators -> plus_equal .)
    Else            reduce using rule 130 (assignment_operators -> plus_equal .)
    Return          reduce using rule 130 (assignment_operators -> plus_equal .)


state 195

    (131) assignment_operators -> minus_equal .

    id              reduce using rule 131 (assignment_operators -> minus_equal .)
    lit_intposi     reduce using rule 131 (assignment_operators -> minus_equal .)
    lit_intnega     reduce using rule 131 (assignment_operators -> minus_equal .)
    lit_decposi     reduce using rule 131 (assignment_operators -> minus_equal .)
    lit_decnega     reduce using rule 131 (assignment_operators -> minus_equal .)
    open_par        reduce using rule 131 (assignment_operators -> minus_equal .)
    Sys_Call        reduce using rule 131 (assignment_operators -> minus_equal .)
    plus            reduce using rule 131 (assignment_operators -> minus_equal .)
    minus           reduce using rule 131 (assignment_operators -> minus_equal .)
    times           reduce using rule 131 (assignment_operators -> minus_equal .)
    divide          reduce using rule 131 (assignment_operators -> minus_equal .)
    divide_divide   reduce using rule 131 (assignment_operators -> minus_equal .)
    modulo          reduce using rule 131 (assignment_operators -> minus_equal .)
    times_times     reduce using rule 131 (assignment_operators -> minus_equal .)
    period          reduce using rule 131 (assignment_operators -> minus_equal .)
    For             reduce using rule 131 (assignment_operators -> minus_equal .)
    While           reduce using rule 131 (assignment_operators -> minus_equal .)
    If              reduce using rule 131 (assignment_operators -> minus_equal .)
    Switch          reduce using rule 131 (assignment_operators -> minus_equal .)
    Absorb          reduce using rule 131 (assignment_operators -> minus_equal .)
    Discharge       reduce using rule 131 (assignment_operators -> minus_equal .)
    Link_End        reduce using rule 131 (assignment_operators -> minus_equal .)
    Sys             reduce using rule 131 (assignment_operators -> minus_equal .)
    $end            reduce using rule 131 (assignment_operators -> minus_equal .)
    Break           reduce using rule 131 (assignment_operators -> minus_equal .)
    Continue        reduce using rule 131 (assignment_operators -> minus_equal .)
    Avoid           reduce using rule 131 (assignment_operators -> minus_equal .)
    close_bracket   reduce using rule 131 (assignment_operators -> minus_equal .)
    Elif            reduce using rule 131 (assignment_operators -> minus_equal .)
    Else            reduce using rule 131 (assignment_operators -> minus_equal .)
    Return          reduce using rule 131 (assignment_operators -> minus_equal .)


state 196

    (132) assignment_operators -> times_equal .

    id              reduce using rule 132 (assignment_operators -> times_equal .)
    lit_intposi     reduce using rule 132 (assignment_operators -> times_equal .)
    lit_intnega     reduce using rule 132 (assignment_operators -> times_equal .)
    lit_decposi     reduce using rule 132 (assignment_operators -> times_equal .)
    lit_decnega     reduce using rule 132 (assignment_operators -> times_equal .)
    open_par        reduce using rule 132 (assignment_operators -> times_equal .)
    Sys_Call        reduce using rule 132 (assignment_operators -> times_equal .)
    plus            reduce using rule 132 (assignment_operators -> times_equal .)
    minus           reduce using rule 132 (assignment_operators -> times_equal .)
    times           reduce using rule 132 (assignment_operators -> times_equal .)
    divide          reduce using rule 132 (assignment_operators -> times_equal .)
    divide_divide   reduce using rule 132 (assignment_operators -> times_equal .)
    modulo          reduce using rule 132 (assignment_operators -> times_equal .)
    times_times     reduce using rule 132 (assignment_operators -> times_equal .)
    period          reduce using rule 132 (assignment_operators -> times_equal .)
    For             reduce using rule 132 (assignment_operators -> times_equal .)
    While           reduce using rule 132 (assignment_operators -> times_equal .)
    If              reduce using rule 132 (assignment_operators -> times_equal .)
    Switch          reduce using rule 132 (assignment_operators -> times_equal .)
    Absorb          reduce using rule 132 (assignment_operators -> times_equal .)
    Discharge       reduce using rule 132 (assignment_operators -> times_equal .)
    Link_End        reduce using rule 132 (assignment_operators -> times_equal .)
    Sys             reduce using rule 132 (assignment_operators -> times_equal .)
    $end            reduce using rule 132 (assignment_operators -> times_equal .)
    Break           reduce using rule 132 (assignment_operators -> times_equal .)
    Continue        reduce using rule 132 (assignment_operators -> times_equal .)
    Avoid           reduce using rule 132 (assignment_operators -> times_equal .)
    close_bracket   reduce using rule 132 (assignment_operators -> times_equal .)
    Elif            reduce using rule 132 (assignment_operators -> times_equal .)
    Else            reduce using rule 132 (assignment_operators -> times_equal .)
    Return          reduce using rule 132 (assignment_operators -> times_equal .)


state 197

    (133) assignment_operators -> divide_equal .

    id              reduce using rule 133 (assignment_operators -> divide_equal .)
    lit_intposi     reduce using rule 133 (assignment_operators -> divide_equal .)
    lit_intnega     reduce using rule 133 (assignment_operators -> divide_equal .)
    lit_decposi     reduce using rule 133 (assignment_operators -> divide_equal .)
    lit_decnega     reduce using rule 133 (assignment_operators -> divide_equal .)
    open_par        reduce using rule 133 (assignment_operators -> divide_equal .)
    Sys_Call        reduce using rule 133 (assignment_operators -> divide_equal .)
    plus            reduce using rule 133 (assignment_operators -> divide_equal .)
    minus           reduce using rule 133 (assignment_operators -> divide_equal .)
    times           reduce using rule 133 (assignment_operators -> divide_equal .)
    divide          reduce using rule 133 (assignment_operators -> divide_equal .)
    divide_divide   reduce using rule 133 (assignment_operators -> divide_equal .)
    modulo          reduce using rule 133 (assignment_operators -> divide_equal .)
    times_times     reduce using rule 133 (assignment_operators -> divide_equal .)
    period          reduce using rule 133 (assignment_operators -> divide_equal .)
    For             reduce using rule 133 (assignment_operators -> divide_equal .)
    While           reduce using rule 133 (assignment_operators -> divide_equal .)
    If              reduce using rule 133 (assignment_operators -> divide_equal .)
    Switch          reduce using rule 133 (assignment_operators -> divide_equal .)
    Absorb          reduce using rule 133 (assignment_operators -> divide_equal .)
    Discharge       reduce using rule 133 (assignment_operators -> divide_equal .)
    Link_End        reduce using rule 133 (assignment_operators -> divide_equal .)
    Sys             reduce using rule 133 (assignment_operators -> divide_equal .)
    $end            reduce using rule 133 (assignment_operators -> divide_equal .)
    Break           reduce using rule 133 (assignment_operators -> divide_equal .)
    Continue        reduce using rule 133 (assignment_operators -> divide_equal .)
    Avoid           reduce using rule 133 (assignment_operators -> divide_equal .)
    close_bracket   reduce using rule 133 (assignment_operators -> divide_equal .)
    Elif            reduce using rule 133 (assignment_operators -> divide_equal .)
    Else            reduce using rule 133 (assignment_operators -> divide_equal .)
    Return          reduce using rule 133 (assignment_operators -> divide_equal .)


state 198

    (134) assignment_operators -> divide_divide_equal .

    id              reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    lit_intposi     reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    lit_intnega     reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    lit_decposi     reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    lit_decnega     reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    open_par        reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Sys_Call        reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    plus            reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    minus           reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    times           reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    divide          reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    divide_divide   reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    modulo          reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    times_times     reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    period          reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    For             reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    While           reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    If              reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Switch          reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Absorb          reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Discharge       reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Link_End        reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Sys             reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    $end            reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Break           reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Continue        reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Avoid           reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    close_bracket   reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Elif            reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Else            reduce using rule 134 (assignment_operators -> divide_divide_equal .)
    Return          reduce using rule 134 (assignment_operators -> divide_divide_equal .)


state 199

    (135) assignment_operators -> modulo_equal .

    id              reduce using rule 135 (assignment_operators -> modulo_equal .)
    lit_intposi     reduce using rule 135 (assignment_operators -> modulo_equal .)
    lit_intnega     reduce using rule 135 (assignment_operators -> modulo_equal .)
    lit_decposi     reduce using rule 135 (assignment_operators -> modulo_equal .)
    lit_decnega     reduce using rule 135 (assignment_operators -> modulo_equal .)
    open_par        reduce using rule 135 (assignment_operators -> modulo_equal .)
    Sys_Call        reduce using rule 135 (assignment_operators -> modulo_equal .)
    plus            reduce using rule 135 (assignment_operators -> modulo_equal .)
    minus           reduce using rule 135 (assignment_operators -> modulo_equal .)
    times           reduce using rule 135 (assignment_operators -> modulo_equal .)
    divide          reduce using rule 135 (assignment_operators -> modulo_equal .)
    divide_divide   reduce using rule 135 (assignment_operators -> modulo_equal .)
    modulo          reduce using rule 135 (assignment_operators -> modulo_equal .)
    times_times     reduce using rule 135 (assignment_operators -> modulo_equal .)
    period          reduce using rule 135 (assignment_operators -> modulo_equal .)
    For             reduce using rule 135 (assignment_operators -> modulo_equal .)
    While           reduce using rule 135 (assignment_operators -> modulo_equal .)
    If              reduce using rule 135 (assignment_operators -> modulo_equal .)
    Switch          reduce using rule 135 (assignment_operators -> modulo_equal .)
    Absorb          reduce using rule 135 (assignment_operators -> modulo_equal .)
    Discharge       reduce using rule 135 (assignment_operators -> modulo_equal .)
    Link_End        reduce using rule 135 (assignment_operators -> modulo_equal .)
    Sys             reduce using rule 135 (assignment_operators -> modulo_equal .)
    $end            reduce using rule 135 (assignment_operators -> modulo_equal .)
    Break           reduce using rule 135 (assignment_operators -> modulo_equal .)
    Continue        reduce using rule 135 (assignment_operators -> modulo_equal .)
    Avoid           reduce using rule 135 (assignment_operators -> modulo_equal .)
    close_bracket   reduce using rule 135 (assignment_operators -> modulo_equal .)
    Elif            reduce using rule 135 (assignment_operators -> modulo_equal .)
    Else            reduce using rule 135 (assignment_operators -> modulo_equal .)
    Return          reduce using rule 135 (assignment_operators -> modulo_equal .)


state 200

    (136) assignment_operators -> times_times_equal .

    id              reduce using rule 136 (assignment_operators -> times_times_equal .)
    lit_intposi     reduce using rule 136 (assignment_operators -> times_times_equal .)
    lit_intnega     reduce using rule 136 (assignment_operators -> times_times_equal .)
    lit_decposi     reduce using rule 136 (assignment_operators -> times_times_equal .)
    lit_decnega     reduce using rule 136 (assignment_operators -> times_times_equal .)
    open_par        reduce using rule 136 (assignment_operators -> times_times_equal .)
    Sys_Call        reduce using rule 136 (assignment_operators -> times_times_equal .)
    plus            reduce using rule 136 (assignment_operators -> times_times_equal .)
    minus           reduce using rule 136 (assignment_operators -> times_times_equal .)
    times           reduce using rule 136 (assignment_operators -> times_times_equal .)
    divide          reduce using rule 136 (assignment_operators -> times_times_equal .)
    divide_divide   reduce using rule 136 (assignment_operators -> times_times_equal .)
    modulo          reduce using rule 136 (assignment_operators -> times_times_equal .)
    times_times     reduce using rule 136 (assignment_operators -> times_times_equal .)
    period          reduce using rule 136 (assignment_operators -> times_times_equal .)
    For             reduce using rule 136 (assignment_operators -> times_times_equal .)
    While           reduce using rule 136 (assignment_operators -> times_times_equal .)
    If              reduce using rule 136 (assignment_operators -> times_times_equal .)
    Switch          reduce using rule 136 (assignment_operators -> times_times_equal .)
    Absorb          reduce using rule 136 (assignment_operators -> times_times_equal .)
    Discharge       reduce using rule 136 (assignment_operators -> times_times_equal .)
    Link_End        reduce using rule 136 (assignment_operators -> times_times_equal .)
    Sys             reduce using rule 136 (assignment_operators -> times_times_equal .)
    $end            reduce using rule 136 (assignment_operators -> times_times_equal .)
    Break           reduce using rule 136 (assignment_operators -> times_times_equal .)
    Continue        reduce using rule 136 (assignment_operators -> times_times_equal .)
    Avoid           reduce using rule 136 (assignment_operators -> times_times_equal .)
    close_bracket   reduce using rule 136 (assignment_operators -> times_times_equal .)
    Elif            reduce using rule 136 (assignment_operators -> times_times_equal .)
    Else            reduce using rule 136 (assignment_operators -> times_times_equal .)
    Return          reduce using rule 136 (assignment_operators -> times_times_equal .)


state 201

    (102) id_struct -> period id_array .

    equal           reduce using rule 102 (id_struct -> period id_array .)
    plus_equal      reduce using rule 102 (id_struct -> period id_array .)
    minus_equal     reduce using rule 102 (id_struct -> period id_array .)
    times_equal     reduce using rule 102 (id_struct -> period id_array .)
    divide_equal    reduce using rule 102 (id_struct -> period id_array .)
    divide_divide_equal reduce using rule 102 (id_struct -> period id_array .)
    modulo_equal    reduce using rule 102 (id_struct -> period id_array .)
    times_times_equal reduce using rule 102 (id_struct -> period id_array .)
    id              reduce using rule 102 (id_struct -> period id_array .)
    For             reduce using rule 102 (id_struct -> period id_array .)
    While           reduce using rule 102 (id_struct -> period id_array .)
    If              reduce using rule 102 (id_struct -> period id_array .)
    Switch          reduce using rule 102 (id_struct -> period id_array .)
    Sys_Call        reduce using rule 102 (id_struct -> period id_array .)
    Absorb          reduce using rule 102 (id_struct -> period id_array .)
    Discharge       reduce using rule 102 (id_struct -> period id_array .)
    Link_End        reduce using rule 102 (id_struct -> period id_array .)
    Sys             reduce using rule 102 (id_struct -> period id_array .)
    $end            reduce using rule 102 (id_struct -> period id_array .)
    Break           reduce using rule 102 (id_struct -> period id_array .)
    Continue        reduce using rule 102 (id_struct -> period id_array .)
    Avoid           reduce using rule 102 (id_struct -> period id_array .)
    close_bracket   reduce using rule 102 (id_struct -> period id_array .)
    Elif            reduce using rule 102 (id_struct -> period id_array .)
    Else            reduce using rule 102 (id_struct -> period id_array .)
    Return          reduce using rule 102 (id_struct -> period id_array .)
    plus            reduce using rule 102 (id_struct -> period id_array .)
    minus           reduce using rule 102 (id_struct -> period id_array .)
    times           reduce using rule 102 (id_struct -> period id_array .)
    divide          reduce using rule 102 (id_struct -> period id_array .)
    divide_divide   reduce using rule 102 (id_struct -> period id_array .)
    modulo          reduce using rule 102 (id_struct -> period id_array .)
    times_times     reduce using rule 102 (id_struct -> period id_array .)
    greater_than    reduce using rule 102 (id_struct -> period id_array .)
    less_than       reduce using rule 102 (id_struct -> period id_array .)
    equal_equal     reduce using rule 102 (id_struct -> period id_array .)
    not_equal       reduce using rule 102 (id_struct -> period id_array .)
    great_than_equal reduce using rule 102 (id_struct -> period id_array .)
    less_than_equal reduce using rule 102 (id_struct -> period id_array .)
    close_brace     reduce using rule 102 (id_struct -> period id_array .)
    comma           reduce using rule 102 (id_struct -> period id_array .)
    Generate        reduce using rule 102 (id_struct -> period id_array .)
    Struct          reduce using rule 102 (id_struct -> period id_array .)
    Link_Start      reduce using rule 102 (id_struct -> period id_array .)
    close_par       reduce using rule 102 (id_struct -> period id_array .)
    colon           reduce using rule 102 (id_struct -> period id_array .)
    open_bracket    reduce using rule 102 (id_struct -> period id_array .)


state 202

    (122) assignment_statements2 -> open_brace lit_intposi close_brace . more_array equal open_brace value1 close_brace
    (137) more_array -> . equal id open_brace lit_intposi close_brace more_array
    (138) more_array -> .

  ! shift/reduce conflict for equal resolved as shift
    equal           shift and go to state 276

  ! equal           [ reduce using rule 138 (more_array -> .) ]

    more_array                     shift and go to state 275

state 203

    (77) array -> open_brace num_value close_brace .

    period          reduce using rule 77 (array -> open_brace num_value close_brace .)
    equal           reduce using rule 77 (array -> open_brace num_value close_brace .)
    plus_equal      reduce using rule 77 (array -> open_brace num_value close_brace .)
    minus_equal     reduce using rule 77 (array -> open_brace num_value close_brace .)
    times_equal     reduce using rule 77 (array -> open_brace num_value close_brace .)
    divide_equal    reduce using rule 77 (array -> open_brace num_value close_brace .)
    divide_divide_equal reduce using rule 77 (array -> open_brace num_value close_brace .)
    modulo_equal    reduce using rule 77 (array -> open_brace num_value close_brace .)
    times_times_equal reduce using rule 77 (array -> open_brace num_value close_brace .)
    id              reduce using rule 77 (array -> open_brace num_value close_brace .)
    For             reduce using rule 77 (array -> open_brace num_value close_brace .)
    While           reduce using rule 77 (array -> open_brace num_value close_brace .)
    If              reduce using rule 77 (array -> open_brace num_value close_brace .)
    Switch          reduce using rule 77 (array -> open_brace num_value close_brace .)
    Sys_Call        reduce using rule 77 (array -> open_brace num_value close_brace .)
    Absorb          reduce using rule 77 (array -> open_brace num_value close_brace .)
    Discharge       reduce using rule 77 (array -> open_brace num_value close_brace .)
    Link_End        reduce using rule 77 (array -> open_brace num_value close_brace .)
    Sys             reduce using rule 77 (array -> open_brace num_value close_brace .)
    $end            reduce using rule 77 (array -> open_brace num_value close_brace .)
    Break           reduce using rule 77 (array -> open_brace num_value close_brace .)
    Continue        reduce using rule 77 (array -> open_brace num_value close_brace .)
    Avoid           reduce using rule 77 (array -> open_brace num_value close_brace .)
    close_bracket   reduce using rule 77 (array -> open_brace num_value close_brace .)
    Elif            reduce using rule 77 (array -> open_brace num_value close_brace .)
    Else            reduce using rule 77 (array -> open_brace num_value close_brace .)
    Return          reduce using rule 77 (array -> open_brace num_value close_brace .)
    plus            reduce using rule 77 (array -> open_brace num_value close_brace .)
    minus           reduce using rule 77 (array -> open_brace num_value close_brace .)
    times           reduce using rule 77 (array -> open_brace num_value close_brace .)
    divide          reduce using rule 77 (array -> open_brace num_value close_brace .)
    divide_divide   reduce using rule 77 (array -> open_brace num_value close_brace .)
    modulo          reduce using rule 77 (array -> open_brace num_value close_brace .)
    times_times     reduce using rule 77 (array -> open_brace num_value close_brace .)
    greater_than    reduce using rule 77 (array -> open_brace num_value close_brace .)
    less_than       reduce using rule 77 (array -> open_brace num_value close_brace .)
    equal_equal     reduce using rule 77 (array -> open_brace num_value close_brace .)
    not_equal       reduce using rule 77 (array -> open_brace num_value close_brace .)
    great_than_equal reduce using rule 77 (array -> open_brace num_value close_brace .)
    less_than_equal reduce using rule 77 (array -> open_brace num_value close_brace .)
    comma           reduce using rule 77 (array -> open_brace num_value close_brace .)
    Struct          reduce using rule 77 (array -> open_brace num_value close_brace .)
    Generate        reduce using rule 77 (array -> open_brace num_value close_brace .)
    Link_Start      reduce using rule 77 (array -> open_brace num_value close_brace .)
    close_brace     reduce using rule 77 (array -> open_brace num_value close_brace .)
    close_par       reduce using rule 77 (array -> open_brace num_value close_brace .)
    colon           reduce using rule 77 (array -> open_brace num_value close_brace .)
    open_bracket    reduce using rule 77 (array -> open_brace num_value close_brace .)


state 204

    (139) for_statements -> For id In id . open_brace close_brace colon open_bracket inside_statements close_bracket

    open_brace      shift and go to state 277


state 205

    (165) logical_operand -> Not . open_par logical_operand close_par

    open_par        shift and go to state 278


state 206

    (166) logical_operand -> relational_expression .

    close_par       reduce using rule 166 (logical_operand -> relational_expression .)


state 207

    (167) logical_operand -> logical_expression .

    close_par       reduce using rule 167 (logical_operand -> logical_expression .)


state 208

    (168) logical_operand -> lit_bool .
    (60) value -> lit_bool .

    close_par       reduce using rule 168 (logical_operand -> lit_bool .)
    greater_than    reduce using rule 60 (value -> lit_bool .)
    less_than       reduce using rule 60 (value -> lit_bool .)
    equal_equal     reduce using rule 60 (value -> lit_bool .)
    not_equal       reduce using rule 60 (value -> lit_bool .)
    great_than_equal reduce using rule 60 (value -> lit_bool .)
    less_than_equal reduce using rule 60 (value -> lit_bool .)


state 209

    (141) while_statements -> While open_par condition close_par . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 279


state 210

    (173) if_statement -> If open_par condition close_par . colon open_bracket inside_statements close_bracket condition_else
    (179) if_statement -> If open_par condition close_par . inside_statements condition_else
    (189) if_statement -> If open_par condition close_par . colon inside_statements condition_else
    (190) if_statement -> If open_par condition close_par . open_bracket inside_statements condition_else
    (191) if_statement -> If open_par condition close_par . inside_statements close_bracket condition_else
    (199) if_statement -> If open_par condition close_par . colon open_bracket inside_statements condition_else
    (200) if_statement -> If open_par condition close_par . colon inside_statements close_bracket condition_else
    (201) if_statement -> If open_par condition close_par . open_bracket inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    colon           shift and go to state 280
    open_bracket    shift and go to state 281
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 282
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 211

    (180) if_statement -> If open_par condition colon . inside_statements condition_else
    (192) if_statement -> If open_par condition colon . open_bracket inside_statements condition_else
    (193) if_statement -> If open_par condition colon . inside_statements close_bracket condition_else
    (202) if_statement -> If open_par condition colon . open_bracket inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    open_bracket    shift and go to state 284
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 283
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 212

    (181) if_statement -> If open_par condition open_bracket . inside_statements condition_else
    (194) if_statement -> If open_par condition open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 285
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 213

    (174) if_statement -> If open_par condition inside_statements . condition_else
    (182) if_statement -> If open_par condition inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 287
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 286
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 214

    (164) logical_expression -> open_par logical_operand close_par . logical_operators open_par logical_operand close_par
    (169) logical_operators -> . And
    (170) logical_operators -> . Or

    And             shift and go to state 293
    Or              shift and go to state 294

    logical_operators              shift and go to state 292

state 215

    (93) arithmetic_expression -> open_par arithmetic_expression close_par .

    plus            reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    minus           reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    times           reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    divide          reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    divide_divide   reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    modulo          reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    times_times     reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    greater_than    reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    less_than       reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    equal_equal     reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    not_equal       reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    great_than_equal reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    less_than_equal reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    id              reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    For             reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    While           reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    If              reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Switch          reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Sys_Call        reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Absorb          reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Discharge       reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Link_End        reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Sys             reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    $end            reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Break           reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Continue        reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Avoid           reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_bracket   reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Elif            reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Else            reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Return          reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_brace     reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    close_par       reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    comma           reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Generate        reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Struct          reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    Link_Start      reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    colon           reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)
    open_bracket    reduce using rule 93 (arithmetic_expression -> open_par arithmetic_expression close_par .)


state 216

    (152) condition -> Not open_par . condition_not close_par
    (165) logical_operand -> Not open_par . logical_operand close_par
    (154) condition_not -> . relational_expression
    (155) condition_not -> . logical_expression
    (156) condition_not -> . lit_bool
    (165) logical_operand -> . Not open_par logical_operand close_par
    (166) logical_operand -> . relational_expression
    (167) logical_operand -> . logical_expression
    (168) logical_operand -> . lit_bool
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    lit_bool        shift and go to state 298
    Not             shift and go to state 205
    open_par        shift and go to state 125
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    condition_not                  shift and go to state 226
    logical_operand                shift and go to state 295
    relational_expression          shift and go to state 296
    logical_expression             shift and go to state 297
    value                          shift and go to state 75
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 217

    (175) if_statement -> If condition close_par inside_statements . condition_else
    (185) if_statement -> If condition close_par inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 300
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 299
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 218

    (183) if_statement -> If condition close_par colon . inside_statements condition_else
    (195) if_statement -> If condition close_par colon . open_bracket inside_statements condition_else
    (196) if_statement -> If condition close_par colon . inside_statements close_bracket condition_else
    (203) if_statement -> If condition close_par colon . open_bracket inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    open_bracket    shift and go to state 302
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 301
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 219

    (184) if_statement -> If condition close_par open_bracket . inside_statements condition_else
    (197) if_statement -> If condition close_par open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 303
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 220

    (178) if_statement -> If condition inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 304
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 221

    (176) if_statement -> If condition colon inside_statements . condition_else
    (187) if_statement -> If condition colon inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 306
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 305
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 222

    (186) if_statement -> If condition colon open_bracket . inside_statements condition_else
    (198) if_statement -> If condition colon open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 307
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 223

    (177) if_statement -> If condition open_bracket inside_statements . condition_else
    (188) if_statement -> If condition open_bracket inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 309
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 308
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 224

    (143) inside_statements -> statements control_statements .

    close_bracket   reduce using rule 143 (inside_statements -> statements control_statements .)
    Link_End        reduce using rule 143 (inside_statements -> statements control_statements .)
    Sys             reduce using rule 143 (inside_statements -> statements control_statements .)
    $end            reduce using rule 143 (inside_statements -> statements control_statements .)
    Break           reduce using rule 143 (inside_statements -> statements control_statements .)
    Continue        reduce using rule 143 (inside_statements -> statements control_statements .)
    Avoid           reduce using rule 143 (inside_statements -> statements control_statements .)
    Elif            reduce using rule 143 (inside_statements -> statements control_statements .)
    Else            reduce using rule 143 (inside_statements -> statements control_statements .)
    id              reduce using rule 143 (inside_statements -> statements control_statements .)
    For             reduce using rule 143 (inside_statements -> statements control_statements .)
    While           reduce using rule 143 (inside_statements -> statements control_statements .)
    If              reduce using rule 143 (inside_statements -> statements control_statements .)
    Switch          reduce using rule 143 (inside_statements -> statements control_statements .)
    Sys_Call        reduce using rule 143 (inside_statements -> statements control_statements .)
    Absorb          reduce using rule 143 (inside_statements -> statements control_statements .)
    Discharge       reduce using rule 143 (inside_statements -> statements control_statements .)
    Return          reduce using rule 143 (inside_statements -> statements control_statements .)


state 225

    (144) inside_statements -> control_statements statements .

    close_bracket   reduce using rule 144 (inside_statements -> control_statements statements .)
    Link_End        reduce using rule 144 (inside_statements -> control_statements statements .)
    Sys             reduce using rule 144 (inside_statements -> control_statements statements .)
    $end            reduce using rule 144 (inside_statements -> control_statements statements .)
    Break           reduce using rule 144 (inside_statements -> control_statements statements .)
    Continue        reduce using rule 144 (inside_statements -> control_statements statements .)
    Avoid           reduce using rule 144 (inside_statements -> control_statements statements .)
    Elif            reduce using rule 144 (inside_statements -> control_statements statements .)
    Else            reduce using rule 144 (inside_statements -> control_statements statements .)
    id              reduce using rule 144 (inside_statements -> control_statements statements .)
    For             reduce using rule 144 (inside_statements -> control_statements statements .)
    While           reduce using rule 144 (inside_statements -> control_statements statements .)
    If              reduce using rule 144 (inside_statements -> control_statements statements .)
    Switch          reduce using rule 144 (inside_statements -> control_statements statements .)
    Sys_Call        reduce using rule 144 (inside_statements -> control_statements statements .)
    Absorb          reduce using rule 144 (inside_statements -> control_statements statements .)
    Discharge       reduce using rule 144 (inside_statements -> control_statements statements .)
    Return          reduce using rule 144 (inside_statements -> control_statements statements .)


state 226

    (152) condition -> Not open_par condition_not . close_par

    close_par       shift and go to state 310


state 227

    (154) condition_not -> relational_expression .

    close_par       reduce using rule 154 (condition_not -> relational_expression .)


state 228

    (155) condition_not -> logical_expression .

    close_par       reduce using rule 155 (condition_not -> logical_expression .)


state 229

    (156) condition_not -> lit_bool .
    (60) value -> lit_bool .

    close_par       reduce using rule 156 (condition_not -> lit_bool .)
    greater_than    reduce using rule 60 (value -> lit_bool .)
    less_than       reduce using rule 60 (value -> lit_bool .)
    equal_equal     reduce using rule 60 (value -> lit_bool .)
    not_equal       reduce using rule 60 (value -> lit_bool .)
    great_than_equal reduce using rule 60 (value -> lit_bool .)
    less_than_equal reduce using rule 60 (value -> lit_bool .)


state 230

    (157) relational_expression -> value relational_operators value .

    close_par       reduce using rule 157 (relational_expression -> value relational_operators value .)
    colon           reduce using rule 157 (relational_expression -> value relational_operators value .)
    open_bracket    reduce using rule 157 (relational_expression -> value relational_operators value .)
    Break           reduce using rule 157 (relational_expression -> value relational_operators value .)
    Continue        reduce using rule 157 (relational_expression -> value relational_operators value .)
    Avoid           reduce using rule 157 (relational_expression -> value relational_operators value .)
    id              reduce using rule 157 (relational_expression -> value relational_operators value .)
    For             reduce using rule 157 (relational_expression -> value relational_operators value .)
    While           reduce using rule 157 (relational_expression -> value relational_operators value .)
    If              reduce using rule 157 (relational_expression -> value relational_operators value .)
    Switch          reduce using rule 157 (relational_expression -> value relational_operators value .)
    Sys_Call        reduce using rule 157 (relational_expression -> value relational_operators value .)
    Absorb          reduce using rule 157 (relational_expression -> value relational_operators value .)
    Discharge       reduce using rule 157 (relational_expression -> value relational_operators value .)
    close_bracket   reduce using rule 157 (relational_expression -> value relational_operators value .)
    Elif            reduce using rule 157 (relational_expression -> value relational_operators value .)
    Else            reduce using rule 157 (relational_expression -> value relational_operators value .)
    Link_End        reduce using rule 157 (relational_expression -> value relational_operators value .)
    Sys             reduce using rule 157 (relational_expression -> value relational_operators value .)
    $end            reduce using rule 157 (relational_expression -> value relational_operators value .)
    Return          reduce using rule 157 (relational_expression -> value relational_operators value .)


state 231

    (94) arithmetic_expression -> num_value arithmetic_operators num_value .
    (94) arithmetic_expression -> num_value . arithmetic_operators num_value
    (95) arithmetic_operators -> . plus
    (96) arithmetic_operators -> . minus
    (97) arithmetic_operators -> . times
    (98) arithmetic_operators -> . divide
    (99) arithmetic_operators -> . divide_divide
    (100) arithmetic_operators -> . modulo
    (101) arithmetic_operators -> . times_times

  ! shift/reduce conflict for plus resolved as shift
  ! shift/reduce conflict for minus resolved as shift
  ! shift/reduce conflict for times resolved as shift
  ! shift/reduce conflict for divide resolved as shift
  ! shift/reduce conflict for divide_divide resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for times_times resolved as shift
    greater_than    reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    less_than       reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    equal_equal     reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    not_equal       reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    great_than_equal reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    less_than_equal reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    id              reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    For             reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    While           reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    If              reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Switch          reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Sys_Call        reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Absorb          reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Discharge       reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Link_End        reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Sys             reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    $end            reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Break           reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Continue        reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Avoid           reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_bracket   reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Elif            reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Else            reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Return          reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_brace     reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    close_par       reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    comma           reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Generate        reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Struct          reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    Link_Start      reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    colon           reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    open_bracket    reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .)
    plus            shift and go to state 154
    minus           shift and go to state 155
    times           shift and go to state 156
    divide          shift and go to state 157
    divide_divide   shift and go to state 158
    modulo          shift and go to state 159
    times_times     shift and go to state 160

  ! plus            [ reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! minus           [ reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! times           [ reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! divide          [ reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! divide_divide   [ reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! modulo          [ reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]
  ! times_times     [ reduce using rule 94 (arithmetic_expression -> num_value arithmetic_operators num_value .) ]

    arithmetic_operators           shift and go to state 153

state 232

    (210) switch_statements -> Switch id colon open_bracket . execute Default colon inside_statements close_bracket End_Switch
    (211) execute -> . Execute switch_lit colon statements Break execute1

    Execute         shift and go to state 312

    execute                        shift and go to state 311

state 233

    (222) function_param -> id . open_brace close_brace more_param
    (76) id_array_opt -> id . array
    (74) id_array -> id . array
    (77) array -> . open_brace num_value close_brace
    (78) array -> . open_brace close_brace
    (79) array -> .

    open_brace      shift and go to state 313
    period          reduce using rule 79 (array -> .)
    comma           reduce using rule 79 (array -> .)
    close_par       reduce using rule 79 (array -> .)
    plus            reduce using rule 79 (array -> .)
    minus           reduce using rule 79 (array -> .)
    times           reduce using rule 79 (array -> .)
    divide          reduce using rule 79 (array -> .)
    divide_divide   reduce using rule 79 (array -> .)
    modulo          reduce using rule 79 (array -> .)
    times_times     reduce using rule 79 (array -> .)

    array                          shift and go to state 314

state 234

    (221) func_call -> Sys_Call id open_par function_param . close_par

    close_par       shift and go to state 315


state 235

    (223) function_param -> value1_opt . more_param
    (225) more_param -> . comma function_param
    (226) more_param -> .

    comma           shift and go to state 317
    close_par       reduce using rule 226 (more_param -> .)

    more_param                     shift and go to state 316

state 236

    (107) value1_opt -> value_opt . value2_opt
    (108) value2_opt -> . comma value1_opt
    (109) value2_opt -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 319
    close_par       reduce using rule 109 (value2_opt -> .)

  ! comma           [ reduce using rule 109 (value2_opt -> .) ]

    value2_opt                     shift and go to state 318

state 237

    (62) value_opt -> num_value_opt .

    comma           reduce using rule 62 (value_opt -> num_value_opt .)
    close_par       reduce using rule 62 (value_opt -> num_value_opt .)


state 238

    (63) value_opt -> lit_str .

    comma           reduce using rule 63 (value_opt -> lit_str .)
    close_par       reduce using rule 63 (value_opt -> lit_str .)


state 239

    (64) value_opt -> lit_bool .

    comma           reduce using rule 64 (value_opt -> lit_bool .)
    close_par       reduce using rule 64 (value_opt -> lit_bool .)


state 240

    (70) num_value_opt -> id_array_opt . id_struct
    (102) id_struct -> . period id_array
    (103) id_struct -> .

    period          shift and go to state 120
    comma           reduce using rule 103 (id_struct -> .)
    close_par       reduce using rule 103 (id_struct -> .)

    id_struct                      shift and go to state 320

state 241

    (71) num_value_opt -> literals_opt .

    comma           reduce using rule 71 (num_value_opt -> literals_opt .)
    close_par       reduce using rule 71 (num_value_opt -> literals_opt .)


state 242

    (72) num_value_opt -> arithmetic_expression .
    (67) num_value -> arithmetic_expression .

    comma           reduce using rule 72 (num_value_opt -> arithmetic_expression .)
    close_par       reduce using rule 72 (num_value_opt -> arithmetic_expression .)
    plus            reduce using rule 67 (num_value -> arithmetic_expression .)
    minus           reduce using rule 67 (num_value -> arithmetic_expression .)
    times           reduce using rule 67 (num_value -> arithmetic_expression .)
    divide          reduce using rule 67 (num_value -> arithmetic_expression .)
    divide_divide   reduce using rule 67 (num_value -> arithmetic_expression .)
    modulo          reduce using rule 67 (num_value -> arithmetic_expression .)
    times_times     reduce using rule 67 (num_value -> arithmetic_expression .)


state 243

    (73) num_value_opt -> func_call .
    (68) num_value -> func_call .

    comma           reduce using rule 73 (num_value_opt -> func_call .)
    close_par       reduce using rule 73 (num_value_opt -> func_call .)
    plus            reduce using rule 68 (num_value -> func_call .)
    minus           reduce using rule 68 (num_value -> func_call .)
    times           reduce using rule 68 (num_value -> func_call .)
    divide          reduce using rule 68 (num_value -> func_call .)
    divide_divide   reduce using rule 68 (num_value -> func_call .)
    modulo          reduce using rule 68 (num_value -> func_call .)
    times_times     reduce using rule 68 (num_value -> func_call .)


state 244

    (89) literals_opt -> lit_intposi .
    (84) literals -> lit_intposi .

    comma           reduce using rule 89 (literals_opt -> lit_intposi .)
    close_par       reduce using rule 89 (literals_opt -> lit_intposi .)
    plus            reduce using rule 84 (literals -> lit_intposi .)
    minus           reduce using rule 84 (literals -> lit_intposi .)
    times           reduce using rule 84 (literals -> lit_intposi .)
    divide          reduce using rule 84 (literals -> lit_intposi .)
    divide_divide   reduce using rule 84 (literals -> lit_intposi .)
    modulo          reduce using rule 84 (literals -> lit_intposi .)
    times_times     reduce using rule 84 (literals -> lit_intposi .)


state 245

    (90) literals_opt -> lit_intnega .
    (85) literals -> lit_intnega .

    comma           reduce using rule 90 (literals_opt -> lit_intnega .)
    close_par       reduce using rule 90 (literals_opt -> lit_intnega .)
    plus            reduce using rule 85 (literals -> lit_intnega .)
    minus           reduce using rule 85 (literals -> lit_intnega .)
    times           reduce using rule 85 (literals -> lit_intnega .)
    divide          reduce using rule 85 (literals -> lit_intnega .)
    divide_divide   reduce using rule 85 (literals -> lit_intnega .)
    modulo          reduce using rule 85 (literals -> lit_intnega .)
    times_times     reduce using rule 85 (literals -> lit_intnega .)


state 246

    (91) literals_opt -> lit_decposi .
    (86) literals -> lit_decposi .

    comma           reduce using rule 91 (literals_opt -> lit_decposi .)
    close_par       reduce using rule 91 (literals_opt -> lit_decposi .)
    plus            reduce using rule 86 (literals -> lit_decposi .)
    minus           reduce using rule 86 (literals -> lit_decposi .)
    times           reduce using rule 86 (literals -> lit_decposi .)
    divide          reduce using rule 86 (literals -> lit_decposi .)
    divide_divide   reduce using rule 86 (literals -> lit_decposi .)
    modulo          reduce using rule 86 (literals -> lit_decposi .)
    times_times     reduce using rule 86 (literals -> lit_decposi .)


state 247

    (92) literals_opt -> lit_decnega .
    (87) literals -> lit_decnega .

    comma           reduce using rule 92 (literals_opt -> lit_decnega .)
    close_par       reduce using rule 92 (literals_opt -> lit_decnega .)
    plus            reduce using rule 87 (literals -> lit_decnega .)
    minus           reduce using rule 87 (literals -> lit_decnega .)
    times           reduce using rule 87 (literals -> lit_decnega .)
    divide          reduce using rule 87 (literals -> lit_decnega .)
    divide_divide   reduce using rule 87 (literals -> lit_decnega .)
    modulo          reduce using rule 87 (literals -> lit_decnega .)
    times_times     reduce using rule 87 (literals -> lit_decnega .)


state 248

    (8) struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .

    Struct          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Generate        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Link_Start      reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    id              reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    For             reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    While           reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    If              reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Switch          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Sys_Call        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Absorb          reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Discharge       reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Link_End        reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    Sys             reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)
    $end            reduce using rule 8 (struct_dec -> Struct id open_bracket struct_element1 close_bracket id_array1 .)


state 249

    (82) id_array2 -> comma id_array1 .

    Struct          reduce using rule 82 (id_array2 -> comma id_array1 .)
    Generate        reduce using rule 82 (id_array2 -> comma id_array1 .)
    Link_Start      reduce using rule 82 (id_array2 -> comma id_array1 .)
    id              reduce using rule 82 (id_array2 -> comma id_array1 .)
    For             reduce using rule 82 (id_array2 -> comma id_array1 .)
    While           reduce using rule 82 (id_array2 -> comma id_array1 .)
    If              reduce using rule 82 (id_array2 -> comma id_array1 .)
    Switch          reduce using rule 82 (id_array2 -> comma id_array1 .)
    Sys_Call        reduce using rule 82 (id_array2 -> comma id_array1 .)
    Absorb          reduce using rule 82 (id_array2 -> comma id_array1 .)
    Discharge       reduce using rule 82 (id_array2 -> comma id_array1 .)
    Link_End        reduce using rule 82 (id_array2 -> comma id_array1 .)
    Sys             reduce using rule 82 (id_array2 -> comma id_array1 .)
    $end            reduce using rule 82 (id_array2 -> comma id_array1 .)


state 250

    (27) id_array_dec2 -> open_brace lit_intposi close_brace . array_dec1
    (30) array_dec1 -> . comma id open_brace lit_intposi close_brace array_dec1
    (31) array_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 322
    Integer         reduce using rule 31 (array_dec1 -> .)
    Decimal         reduce using rule 31 (array_dec1 -> .)
    String          reduce using rule 31 (array_dec1 -> .)
    Boolean         reduce using rule 31 (array_dec1 -> .)
    id              reduce using rule 31 (array_dec1 -> .)
    close_bracket   reduce using rule 31 (array_dec1 -> .)
    Struct          reduce using rule 31 (array_dec1 -> .)
    Generate        reduce using rule 31 (array_dec1 -> .)
    Link_Start      reduce using rule 31 (array_dec1 -> .)
    For             reduce using rule 31 (array_dec1 -> .)
    While           reduce using rule 31 (array_dec1 -> .)
    If              reduce using rule 31 (array_dec1 -> .)
    Switch          reduce using rule 31 (array_dec1 -> .)
    Sys_Call        reduce using rule 31 (array_dec1 -> .)
    Absorb          reduce using rule 31 (array_dec1 -> .)
    Discharge       reduce using rule 31 (array_dec1 -> .)
    Link_End        reduce using rule 31 (array_dec1 -> .)
    Sys             reduce using rule 31 (array_dec1 -> .)
    $end            reduce using rule 31 (array_dec1 -> .)

  ! comma           [ reduce using rule 31 (array_dec1 -> .) ]

    array_dec1                     shift and go to state 321

state 251

    (28) id_dec1 -> comma id id_dec1 .

    Integer         reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Decimal         reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    String          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Boolean         reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    id              reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    close_bracket   reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    comma           reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Struct          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Generate        reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Link_Start      reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    For             reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    While           reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    If              reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Switch          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Sys_Call        reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Absorb          reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Discharge       reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Link_End        reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    Sys             reduce using rule 28 (id_dec1 -> comma id id_dec1 .)
    $end            reduce using rule 28 (id_dec1 -> comma id id_dec1 .)


state 252

    (39) id_array_const2 -> open_brace lit_intposi . close_brace equal open_brace value1 close_brace array_const1

    close_brace     shift and go to state 323


state 253

    (40) id_array_const2 -> equal value . id_const1
    (42) id_const1 -> . comma id equal value id_const1
    (43) id_const1 -> .

    comma           shift and go to state 325
    Generate        reduce using rule 43 (id_const1 -> .)
    Struct          reduce using rule 43 (id_const1 -> .)
    Link_Start      reduce using rule 43 (id_const1 -> .)
    id              reduce using rule 43 (id_const1 -> .)
    For             reduce using rule 43 (id_const1 -> .)
    While           reduce using rule 43 (id_const1 -> .)
    If              reduce using rule 43 (id_const1 -> .)
    Switch          reduce using rule 43 (id_const1 -> .)
    Sys_Call        reduce using rule 43 (id_const1 -> .)
    Absorb          reduce using rule 43 (id_const1 -> .)
    Discharge       reduce using rule 43 (id_const1 -> .)
    Link_End        reduce using rule 43 (id_const1 -> .)
    Sys             reduce using rule 43 (id_const1 -> .)
    $end            reduce using rule 43 (id_const1 -> .)
    Return          reduce using rule 43 (id_const1 -> .)
    close_bracket   reduce using rule 43 (id_const1 -> .)

    id_const1                      shift and go to state 324

state 254

    (52) id_var1 -> comma id . var_init id_var1
    (50) var_init -> . equal value id_var1
    (51) var_init -> .

    equal           shift and go to state 111
    comma           reduce using rule 51 (var_init -> .)
    Generate        reduce using rule 51 (var_init -> .)
    Struct          reduce using rule 51 (var_init -> .)
    Link_Start      reduce using rule 51 (var_init -> .)
    id              reduce using rule 51 (var_init -> .)
    For             reduce using rule 51 (var_init -> .)
    While           reduce using rule 51 (var_init -> .)
    If              reduce using rule 51 (var_init -> .)
    Switch          reduce using rule 51 (var_init -> .)
    Sys_Call        reduce using rule 51 (var_init -> .)
    Absorb          reduce using rule 51 (var_init -> .)
    Discharge       reduce using rule 51 (var_init -> .)
    Link_End        reduce using rule 51 (var_init -> .)
    Sys             reduce using rule 51 (var_init -> .)
    $end            reduce using rule 51 (var_init -> .)
    Return          reduce using rule 51 (var_init -> .)
    close_bracket   reduce using rule 51 (var_init -> .)

    var_init                       shift and go to state 326

state 255

    (49) id_array_var2 -> open_brace lit_intposi close_brace . array_init array_var1
    (54) array_init -> . equal open_brace value1 close_brace array_var1
    (55) array_init -> .

    equal           shift and go to state 328
    comma           reduce using rule 55 (array_init -> .)
    Generate        reduce using rule 55 (array_init -> .)
    Struct          reduce using rule 55 (array_init -> .)
    Link_Start      reduce using rule 55 (array_init -> .)
    id              reduce using rule 55 (array_init -> .)
    For             reduce using rule 55 (array_init -> .)
    While           reduce using rule 55 (array_init -> .)
    If              reduce using rule 55 (array_init -> .)
    Switch          reduce using rule 55 (array_init -> .)
    Sys_Call        reduce using rule 55 (array_init -> .)
    Absorb          reduce using rule 55 (array_init -> .)
    Discharge       reduce using rule 55 (array_init -> .)
    Link_End        reduce using rule 55 (array_init -> .)
    Sys             reduce using rule 55 (array_init -> .)
    $end            reduce using rule 55 (array_init -> .)
    Return          reduce using rule 55 (array_init -> .)
    close_bracket   reduce using rule 55 (array_init -> .)

    array_init                     shift and go to state 327

state 256

    (50) var_init -> equal value id_var1 .

    comma           reduce using rule 50 (var_init -> equal value id_var1 .)
    Generate        reduce using rule 50 (var_init -> equal value id_var1 .)
    Struct          reduce using rule 50 (var_init -> equal value id_var1 .)
    Link_Start      reduce using rule 50 (var_init -> equal value id_var1 .)
    id              reduce using rule 50 (var_init -> equal value id_var1 .)
    For             reduce using rule 50 (var_init -> equal value id_var1 .)
    While           reduce using rule 50 (var_init -> equal value id_var1 .)
    If              reduce using rule 50 (var_init -> equal value id_var1 .)
    Switch          reduce using rule 50 (var_init -> equal value id_var1 .)
    Sys_Call        reduce using rule 50 (var_init -> equal value id_var1 .)
    Absorb          reduce using rule 50 (var_init -> equal value id_var1 .)
    Discharge       reduce using rule 50 (var_init -> equal value id_var1 .)
    Link_End        reduce using rule 50 (var_init -> equal value id_var1 .)
    Sys             reduce using rule 50 (var_init -> equal value id_var1 .)
    $end            reduce using rule 50 (var_init -> equal value id_var1 .)
    Return          reduce using rule 50 (var_init -> equal value id_var1 .)
    close_bracket   reduce using rule 50 (var_init -> equal value id_var1 .)


state 257

    (227) functions -> Sys id open_par parameters . close_par open_bracket declare_statements statements return_statement close_bracket functions
    (233) functions -> Sys id open_par parameters . declare_statements statements return_statement functions
    (243) functions -> Sys id open_par parameters . close_par declare_statements statements return_statement functions
    (244) functions -> Sys id open_par parameters . open_bracket declare_statements statements return_statement functions
    (245) functions -> Sys id open_par parameters . declare_statements statements return_statement close_bracket functions
    (253) functions -> Sys id open_par parameters . close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> Sys id open_par parameters . close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> Sys id open_par parameters . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    close_par       shift and go to state 329
    open_bracket    shift and go to state 330
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 331

state 258

    (228) functions -> Sys id parameters declare_statements . statements return_statement functions
    (236) functions -> Sys id parameters declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 332
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 259

    (234) functions -> Sys id parameters close_par . declare_statements statements return_statement functions
    (246) functions -> Sys id parameters close_par . open_bracket declare_statements statements return_statement functions
    (247) functions -> Sys id parameters close_par . declare_statements statements return_statement close_bracket functions
    (256) functions -> Sys id parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 334
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 333

state 260

    (235) functions -> Sys id parameters open_bracket . declare_statements statements return_statement functions
    (248) functions -> Sys id parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 335

state 261

    (229) functions -> Sys open_par parameters declare_statements . statements return_statement functions
    (239) functions -> Sys open_par parameters declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 336
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 262

    (237) functions -> Sys open_par parameters close_par . declare_statements statements return_statement functions
    (249) functions -> Sys open_par parameters close_par . open_bracket declare_statements statements return_statement functions
    (250) functions -> Sys open_par parameters close_par . declare_statements statements return_statement close_bracket functions
    (257) functions -> Sys open_par parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 338
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 337

state 263

    (238) functions -> Sys open_par parameters open_bracket . declare_statements statements return_statement functions
    (251) functions -> Sys open_par parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 339

state 264

    (230) functions -> Sys parameters close_par declare_statements . statements return_statement functions
    (241) functions -> Sys parameters close_par declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 340
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 265

    (240) functions -> Sys parameters close_par open_bracket . declare_statements statements return_statement functions
    (252) functions -> Sys parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 341

state 266

    (232) functions -> Sys parameters declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 342

state 267

    (231) functions -> Sys parameters open_bracket declare_statements . statements return_statement functions
    (242) functions -> Sys parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 344
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 268

    (259) parameters -> data_type id more_parameters .

    close_par       reduce using rule 259 (parameters -> data_type id more_parameters .)
    open_bracket    reduce using rule 259 (parameters -> data_type id more_parameters .)
    Generate        reduce using rule 259 (parameters -> data_type id more_parameters .)
    id              reduce using rule 259 (parameters -> data_type id more_parameters .)
    For             reduce using rule 259 (parameters -> data_type id more_parameters .)
    While           reduce using rule 259 (parameters -> data_type id more_parameters .)
    If              reduce using rule 259 (parameters -> data_type id more_parameters .)
    Switch          reduce using rule 259 (parameters -> data_type id more_parameters .)
    Sys_Call        reduce using rule 259 (parameters -> data_type id more_parameters .)
    Absorb          reduce using rule 259 (parameters -> data_type id more_parameters .)
    Discharge       reduce using rule 259 (parameters -> data_type id more_parameters .)
    Return          reduce using rule 259 (parameters -> data_type id more_parameters .)
    close_bracket   reduce using rule 259 (parameters -> data_type id more_parameters .)
    Sys             reduce using rule 259 (parameters -> data_type id more_parameters .)
    $end            reduce using rule 259 (parameters -> data_type id more_parameters .)


state 269

    (261) more_parameters -> comma . data_type id more_parameters
    (19) data_type -> . Integer
    (20) data_type -> . Decimal
    (21) data_type -> . String
    (22) data_type -> . Boolean
    (23) data_type -> .

    Integer         shift and go to state 15
    Decimal         shift and go to state 16
    String          shift and go to state 17
    Boolean         shift and go to state 18
    id              reduce using rule 23 (data_type -> .)

    data_type                      shift and go to state 345

state 270

    (123) assignment_exp -> assignment_operators num_value .
    (94) arithmetic_expression -> num_value . arithmetic_operators num_value
    (95) arithmetic_operators -> . plus
    (96) arithmetic_operators -> . minus
    (97) arithmetic_operators -> . times
    (98) arithmetic_operators -> . divide
    (99) arithmetic_operators -> . divide_divide
    (100) arithmetic_operators -> . modulo
    (101) arithmetic_operators -> . times_times

    id              reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    For             reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    While           reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    If              reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Switch          reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Sys_Call        reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Absorb          reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Discharge       reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Link_End        reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Sys             reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    $end            reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Break           reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Continue        reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Avoid           reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    close_bracket   reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Elif            reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Else            reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    Return          reduce using rule 123 (assignment_exp -> assignment_operators num_value .)
    plus            shift and go to state 154
    minus           shift and go to state 155
    times           shift and go to state 156
    divide          shift and go to state 157
    divide_divide   shift and go to state 158
    modulo          shift and go to state 159
    times_times     shift and go to state 160

    arithmetic_operators           shift and go to state 153

state 271

    (124) assignment_exp -> equal assign_value .

    id              reduce using rule 124 (assignment_exp -> equal assign_value .)
    For             reduce using rule 124 (assignment_exp -> equal assign_value .)
    While           reduce using rule 124 (assignment_exp -> equal assign_value .)
    If              reduce using rule 124 (assignment_exp -> equal assign_value .)
    Switch          reduce using rule 124 (assignment_exp -> equal assign_value .)
    Sys_Call        reduce using rule 124 (assignment_exp -> equal assign_value .)
    Absorb          reduce using rule 124 (assignment_exp -> equal assign_value .)
    Discharge       reduce using rule 124 (assignment_exp -> equal assign_value .)
    Link_End        reduce using rule 124 (assignment_exp -> equal assign_value .)
    Sys             reduce using rule 124 (assignment_exp -> equal assign_value .)
    $end            reduce using rule 124 (assignment_exp -> equal assign_value .)
    Break           reduce using rule 124 (assignment_exp -> equal assign_value .)
    Continue        reduce using rule 124 (assignment_exp -> equal assign_value .)
    Avoid           reduce using rule 124 (assignment_exp -> equal assign_value .)
    close_bracket   reduce using rule 124 (assignment_exp -> equal assign_value .)
    Elif            reduce using rule 124 (assignment_exp -> equal assign_value .)
    Else            reduce using rule 124 (assignment_exp -> equal assign_value .)
    Return          reduce using rule 124 (assignment_exp -> equal assign_value .)


state 272

    (126) assign_value -> num_value .
    (94) arithmetic_expression -> num_value . arithmetic_operators num_value
    (95) arithmetic_operators -> . plus
    (96) arithmetic_operators -> . minus
    (97) arithmetic_operators -> . times
    (98) arithmetic_operators -> . divide
    (99) arithmetic_operators -> . divide_divide
    (100) arithmetic_operators -> . modulo
    (101) arithmetic_operators -> . times_times

    id              reduce using rule 126 (assign_value -> num_value .)
    For             reduce using rule 126 (assign_value -> num_value .)
    While           reduce using rule 126 (assign_value -> num_value .)
    If              reduce using rule 126 (assign_value -> num_value .)
    Switch          reduce using rule 126 (assign_value -> num_value .)
    Sys_Call        reduce using rule 126 (assign_value -> num_value .)
    Absorb          reduce using rule 126 (assign_value -> num_value .)
    Discharge       reduce using rule 126 (assign_value -> num_value .)
    Link_End        reduce using rule 126 (assign_value -> num_value .)
    Sys             reduce using rule 126 (assign_value -> num_value .)
    $end            reduce using rule 126 (assign_value -> num_value .)
    Break           reduce using rule 126 (assign_value -> num_value .)
    Continue        reduce using rule 126 (assign_value -> num_value .)
    Avoid           reduce using rule 126 (assign_value -> num_value .)
    close_bracket   reduce using rule 126 (assign_value -> num_value .)
    Elif            reduce using rule 126 (assign_value -> num_value .)
    Else            reduce using rule 126 (assign_value -> num_value .)
    Return          reduce using rule 126 (assign_value -> num_value .)
    plus            shift and go to state 154
    minus           shift and go to state 155
    times           shift and go to state 156
    divide          shift and go to state 157
    divide_divide   shift and go to state 158
    modulo          shift and go to state 159
    times_times     shift and go to state 160

    arithmetic_operators           shift and go to state 153

state 273

    (127) assign_value -> more_id . value
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Break resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Continue resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Elif resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Else resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    For             reduce using rule 61 (value -> .)
    While           reduce using rule 61 (value -> .)
    If              reduce using rule 61 (value -> .)
    Switch          reduce using rule 61 (value -> .)
    Absorb          reduce using rule 61 (value -> .)
    Discharge       reduce using rule 61 (value -> .)
    Link_End        reduce using rule 61 (value -> .)
    Sys             reduce using rule 61 (value -> .)
    $end            reduce using rule 61 (value -> .)
    Break           reduce using rule 61 (value -> .)
    Continue        reduce using rule 61 (value -> .)
    Avoid           reduce using rule 61 (value -> .)
    close_bracket   reduce using rule 61 (value -> .)
    Elif            reduce using rule 61 (value -> .)
    Else            reduce using rule 61 (value -> .)
    Return          reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 61 (value -> .) ]
  ! Sys_Call        [ reduce using rule 61 (value -> .) ]
  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! For             [ reduce using rule 69 (num_value -> .) ]
  ! While           [ reduce using rule 69 (num_value -> .) ]
  ! If              [ reduce using rule 69 (num_value -> .) ]
  ! Switch          [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! Absorb          [ reduce using rule 69 (num_value -> .) ]
  ! Discharge       [ reduce using rule 69 (num_value -> .) ]
  ! Link_End        [ reduce using rule 69 (num_value -> .) ]
  ! Sys             [ reduce using rule 69 (num_value -> .) ]
  ! $end            [ reduce using rule 69 (num_value -> .) ]
  ! Break           [ reduce using rule 69 (num_value -> .) ]
  ! Continue        [ reduce using rule 69 (num_value -> .) ]
  ! Avoid           [ reduce using rule 69 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 69 (num_value -> .) ]
  ! Elif            [ reduce using rule 69 (num_value -> .) ]
  ! Else            [ reduce using rule 69 (num_value -> .) ]
  ! Return          [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Break           [ reduce using rule 75 (id_array -> .) ]
  ! Continue        [ reduce using rule 75 (id_array -> .) ]
  ! Avoid           [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! Elif            [ reduce using rule 75 (id_array -> .) ]
  ! Else            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Break           [ reduce using rule 88 (literals -> .) ]
  ! Continue        [ reduce using rule 88 (literals -> .) ]
  ! Avoid           [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]
  ! Elif            [ reduce using rule 88 (literals -> .) ]
  ! Else            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]

    value                          shift and go to state 346
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 274

    (65) num_value -> id_array . id_struct
    (128) more_id -> id_array . id_struct equal more_id
    (102) id_struct -> . period id_array
    (103) id_struct -> .

    period          shift and go to state 120
    equal           reduce using rule 103 (id_struct -> .)
    plus            reduce using rule 103 (id_struct -> .)
    minus           reduce using rule 103 (id_struct -> .)
    times           reduce using rule 103 (id_struct -> .)
    divide          reduce using rule 103 (id_struct -> .)
    divide_divide   reduce using rule 103 (id_struct -> .)
    modulo          reduce using rule 103 (id_struct -> .)
    times_times     reduce using rule 103 (id_struct -> .)
    id              reduce using rule 103 (id_struct -> .)
    For             reduce using rule 103 (id_struct -> .)
    While           reduce using rule 103 (id_struct -> .)
    If              reduce using rule 103 (id_struct -> .)
    Switch          reduce using rule 103 (id_struct -> .)
    Sys_Call        reduce using rule 103 (id_struct -> .)
    Absorb          reduce using rule 103 (id_struct -> .)
    Discharge       reduce using rule 103 (id_struct -> .)
    Link_End        reduce using rule 103 (id_struct -> .)
    Sys             reduce using rule 103 (id_struct -> .)
    $end            reduce using rule 103 (id_struct -> .)
    Break           reduce using rule 103 (id_struct -> .)
    Continue        reduce using rule 103 (id_struct -> .)
    Avoid           reduce using rule 103 (id_struct -> .)
    close_bracket   reduce using rule 103 (id_struct -> .)
    Elif            reduce using rule 103 (id_struct -> .)
    Else            reduce using rule 103 (id_struct -> .)
    Return          reduce using rule 103 (id_struct -> .)

    id_struct                      shift and go to state 347

state 275

    (122) assignment_statements2 -> open_brace lit_intposi close_brace more_array . equal open_brace value1 close_brace

    equal           shift and go to state 348


state 276

    (137) more_array -> equal . id open_brace lit_intposi close_brace more_array

    id              shift and go to state 349


state 277

    (139) for_statements -> For id In id open_brace . close_brace colon open_bracket inside_statements close_bracket

    close_brace     shift and go to state 350


state 278

    (165) logical_operand -> Not open_par . logical_operand close_par
    (165) logical_operand -> . Not open_par logical_operand close_par
    (166) logical_operand -> . relational_expression
    (167) logical_operand -> . logical_expression
    (168) logical_operand -> . lit_bool
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    Not             shift and go to state 205
    lit_bool        shift and go to state 208
    open_par        shift and go to state 125
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    logical_operand                shift and go to state 295
    relational_expression          shift and go to state 206
    logical_expression             shift and go to state 207
    value                          shift and go to state 75
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 279

    (141) while_statements -> While open_par condition close_par colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 351


state 280

    (173) if_statement -> If open_par condition close_par colon . open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> If open_par condition close_par colon . inside_statements condition_else
    (199) if_statement -> If open_par condition close_par colon . open_bracket inside_statements condition_else
    (200) if_statement -> If open_par condition close_par colon . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    open_bracket    shift and go to state 352
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 353
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 281

    (190) if_statement -> If open_par condition close_par open_bracket . inside_statements condition_else
    (201) if_statement -> If open_par condition close_par open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 354
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 282

    (179) if_statement -> If open_par condition close_par inside_statements . condition_else
    (191) if_statement -> If open_par condition close_par inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 356
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 355
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 283

    (180) if_statement -> If open_par condition colon inside_statements . condition_else
    (193) if_statement -> If open_par condition colon inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 358
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 357
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 284

    (192) if_statement -> If open_par condition colon open_bracket . inside_statements condition_else
    (202) if_statement -> If open_par condition colon open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 359
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 285

    (181) if_statement -> If open_par condition open_bracket inside_statements . condition_else
    (194) if_statement -> If open_par condition open_bracket inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 361
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 360
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 286

    (174) if_statement -> If open_par condition inside_statements condition_else .

    id              reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    For             reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    While           reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    If              reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Switch          reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Sys_Call        reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Absorb          reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Discharge       reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Link_End        reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Sys             reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    $end            reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Break           reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Continue        reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Avoid           reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    close_bracket   reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Elif            reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Else            reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)
    Return          reduce using rule 174 (if_statement -> If open_par condition inside_statements condition_else .)


state 287

    (182) if_statement -> If open_par condition inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 362
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 288

    (204) condition_else -> elif_statement .

    id              reduce using rule 204 (condition_else -> elif_statement .)
    For             reduce using rule 204 (condition_else -> elif_statement .)
    While           reduce using rule 204 (condition_else -> elif_statement .)
    If              reduce using rule 204 (condition_else -> elif_statement .)
    Switch          reduce using rule 204 (condition_else -> elif_statement .)
    Sys_Call        reduce using rule 204 (condition_else -> elif_statement .)
    Absorb          reduce using rule 204 (condition_else -> elif_statement .)
    Discharge       reduce using rule 204 (condition_else -> elif_statement .)
    Link_End        reduce using rule 204 (condition_else -> elif_statement .)
    Sys             reduce using rule 204 (condition_else -> elif_statement .)
    $end            reduce using rule 204 (condition_else -> elif_statement .)
    Break           reduce using rule 204 (condition_else -> elif_statement .)
    Continue        reduce using rule 204 (condition_else -> elif_statement .)
    Avoid           reduce using rule 204 (condition_else -> elif_statement .)
    close_bracket   reduce using rule 204 (condition_else -> elif_statement .)
    Elif            reduce using rule 204 (condition_else -> elif_statement .)
    Else            reduce using rule 204 (condition_else -> elif_statement .)
    Return          reduce using rule 204 (condition_else -> elif_statement .)


state 289

    (205) condition_else -> else_statement .

    id              reduce using rule 205 (condition_else -> else_statement .)
    For             reduce using rule 205 (condition_else -> else_statement .)
    While           reduce using rule 205 (condition_else -> else_statement .)
    If              reduce using rule 205 (condition_else -> else_statement .)
    Switch          reduce using rule 205 (condition_else -> else_statement .)
    Sys_Call        reduce using rule 205 (condition_else -> else_statement .)
    Absorb          reduce using rule 205 (condition_else -> else_statement .)
    Discharge       reduce using rule 205 (condition_else -> else_statement .)
    Link_End        reduce using rule 205 (condition_else -> else_statement .)
    Sys             reduce using rule 205 (condition_else -> else_statement .)
    $end            reduce using rule 205 (condition_else -> else_statement .)
    Break           reduce using rule 205 (condition_else -> else_statement .)
    Continue        reduce using rule 205 (condition_else -> else_statement .)
    Avoid           reduce using rule 205 (condition_else -> else_statement .)
    close_bracket   reduce using rule 205 (condition_else -> else_statement .)
    Elif            reduce using rule 205 (condition_else -> else_statement .)
    Else            reduce using rule 205 (condition_else -> else_statement .)
    Return          reduce using rule 205 (condition_else -> else_statement .)


state 290

    (207) elif_statement -> Elif . open_par condition close_par colon open_bracket inside_statements close_bracket condition_else

    open_par        shift and go to state 363


state 291

    (208) else_statement -> Else . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 364


state 292

    (164) logical_expression -> open_par logical_operand close_par logical_operators . open_par logical_operand close_par

    open_par        shift and go to state 365


state 293

    (169) logical_operators -> And .

    open_par        reduce using rule 169 (logical_operators -> And .)


state 294

    (170) logical_operators -> Or .

    open_par        reduce using rule 170 (logical_operators -> Or .)


state 295

    (165) logical_operand -> Not open_par logical_operand . close_par

    close_par       shift and go to state 366


state 296

    (154) condition_not -> relational_expression .
    (166) logical_operand -> relational_expression .

  ! reduce/reduce conflict for close_par resolved using rule 154 (condition_not -> relational_expression .)
    close_par       reduce using rule 154 (condition_not -> relational_expression .)

  ! close_par       [ reduce using rule 166 (logical_operand -> relational_expression .) ]


state 297

    (155) condition_not -> logical_expression .
    (167) logical_operand -> logical_expression .

  ! reduce/reduce conflict for close_par resolved using rule 155 (condition_not -> logical_expression .)
    close_par       reduce using rule 155 (condition_not -> logical_expression .)

  ! close_par       [ reduce using rule 167 (logical_operand -> logical_expression .) ]


state 298

    (156) condition_not -> lit_bool .
    (168) logical_operand -> lit_bool .
    (60) value -> lit_bool .

  ! reduce/reduce conflict for close_par resolved using rule 156 (condition_not -> lit_bool .)
    close_par       reduce using rule 156 (condition_not -> lit_bool .)
    greater_than    reduce using rule 60 (value -> lit_bool .)
    less_than       reduce using rule 60 (value -> lit_bool .)
    equal_equal     reduce using rule 60 (value -> lit_bool .)
    not_equal       reduce using rule 60 (value -> lit_bool .)
    great_than_equal reduce using rule 60 (value -> lit_bool .)
    less_than_equal reduce using rule 60 (value -> lit_bool .)

  ! close_par       [ reduce using rule 168 (logical_operand -> lit_bool .) ]


state 299

    (175) if_statement -> If condition close_par inside_statements condition_else .

    id              reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    For             reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    While           reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    If              reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Switch          reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Sys_Call        reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Absorb          reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Discharge       reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Link_End        reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Sys             reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    $end            reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Break           reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Continue        reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Avoid           reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    close_bracket   reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Elif            reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Else            reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)
    Return          reduce using rule 175 (if_statement -> If condition close_par inside_statements condition_else .)


state 300

    (185) if_statement -> If condition close_par inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 367
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 301

    (183) if_statement -> If condition close_par colon inside_statements . condition_else
    (196) if_statement -> If condition close_par colon inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 369
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 368
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 302

    (195) if_statement -> If condition close_par colon open_bracket . inside_statements condition_else
    (203) if_statement -> If condition close_par colon open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 370
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 303

    (184) if_statement -> If condition close_par open_bracket inside_statements . condition_else
    (197) if_statement -> If condition close_par open_bracket inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 372
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 371
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 304

    (178) if_statement -> If condition inside_statements close_bracket condition_else .

    id              reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    For             reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    While           reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    If              reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Switch          reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Sys             reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    $end            reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Break           reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Continue        reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Elif            reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Else            reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)
    Return          reduce using rule 178 (if_statement -> If condition inside_statements close_bracket condition_else .)


state 305

    (176) if_statement -> If condition colon inside_statements condition_else .

    id              reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    For             reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    While           reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    If              reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Switch          reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Sys_Call        reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Absorb          reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Discharge       reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Link_End        reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Sys             reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    $end            reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Break           reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Continue        reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Avoid           reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    close_bracket   reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Elif            reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Else            reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)
    Return          reduce using rule 176 (if_statement -> If condition colon inside_statements condition_else .)


state 306

    (187) if_statement -> If condition colon inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 373
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 307

    (186) if_statement -> If condition colon open_bracket inside_statements . condition_else
    (198) if_statement -> If condition colon open_bracket inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 375
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 374
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 308

    (177) if_statement -> If condition open_bracket inside_statements condition_else .

    id              reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    For             reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    While           reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    If              reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Switch          reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Sys             reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    $end            reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Break           reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Continue        reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Elif            reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Else            reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)
    Return          reduce using rule 177 (if_statement -> If condition open_bracket inside_statements condition_else .)


state 309

    (188) if_statement -> If condition open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 376
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 310

    (152) condition -> Not open_par condition_not close_par .

    close_par       reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    colon           reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    open_bracket    reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Break           reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Continue        reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Avoid           reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    id              reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    For             reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    While           reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    If              reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Switch          reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Sys_Call        reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Absorb          reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Discharge       reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    close_bracket   reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Elif            reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Else            reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Link_End        reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Sys             reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    $end            reduce using rule 152 (condition -> Not open_par condition_not close_par .)
    Return          reduce using rule 152 (condition -> Not open_par condition_not close_par .)


state 311

    (210) switch_statements -> Switch id colon open_bracket execute . Default colon inside_statements close_bracket End_Switch

    Default         shift and go to state 377


state 312

    (211) execute -> Execute . switch_lit colon statements Break execute1
    (212) switch_lit -> . lit_str
    (213) switch_lit -> . lit_intposi
    (214) switch_lit -> . lit_intnega

    lit_str         shift and go to state 379
    lit_intposi     shift and go to state 380
    lit_intnega     shift and go to state 381

    switch_lit                     shift and go to state 378

state 313

    (222) function_param -> id open_brace . close_brace more_param
    (77) array -> open_brace . num_value close_brace
    (78) array -> open_brace . close_brace
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! shift/reduce conflict for close_brace resolved as shift
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for close_brace resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
    close_brace     shift and go to state 382
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]

    num_value                      shift and go to state 123
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 314

    (76) id_array_opt -> id array .
    (74) id_array -> id array .

  ! reduce/reduce conflict for period resolved using rule 74 (id_array -> id array .)
    comma           reduce using rule 76 (id_array_opt -> id array .)
    close_par       reduce using rule 76 (id_array_opt -> id array .)
    period          reduce using rule 74 (id_array -> id array .)
    plus            reduce using rule 74 (id_array -> id array .)
    minus           reduce using rule 74 (id_array -> id array .)
    times           reduce using rule 74 (id_array -> id array .)
    divide          reduce using rule 74 (id_array -> id array .)
    divide_divide   reduce using rule 74 (id_array -> id array .)
    modulo          reduce using rule 74 (id_array -> id array .)
    times_times     reduce using rule 74 (id_array -> id array .)

  ! period          [ reduce using rule 76 (id_array_opt -> id array .) ]


state 315

    (221) func_call -> Sys_Call id open_par function_param close_par .

    id              reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    For             reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    While           reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    If              reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Switch          reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Sys_Call        reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Absorb          reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Discharge       reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Link_End        reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Sys             reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    $end            reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Break           reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Continue        reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Avoid           reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    close_bracket   reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Elif            reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Else            reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Return          reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    plus            reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    minus           reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    times           reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    divide          reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    divide_divide   reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    modulo          reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    times_times     reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    greater_than    reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    less_than       reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    equal_equal     reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    not_equal       reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    great_than_equal reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    less_than_equal reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    close_brace     reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    comma           reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Generate        reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Struct          reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    Link_Start      reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    close_par       reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    colon           reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)
    open_bracket    reduce using rule 221 (func_call -> Sys_Call id open_par function_param close_par .)


state 316

    (223) function_param -> value1_opt more_param .

    close_par       reduce using rule 223 (function_param -> value1_opt more_param .)


state 317

    (225) more_param -> comma . function_param
    (222) function_param -> . id open_brace close_brace more_param
    (223) function_param -> . value1_opt more_param
    (224) function_param -> .
    (107) value1_opt -> . value_opt value2_opt
    (62) value_opt -> . num_value_opt
    (63) value_opt -> . lit_str
    (64) value_opt -> . lit_bool
    (70) num_value_opt -> . id_array_opt id_struct
    (71) num_value_opt -> . literals_opt
    (72) num_value_opt -> . arithmetic_expression
    (73) num_value_opt -> . func_call
    (76) id_array_opt -> . id array
    (89) literals_opt -> . lit_intposi
    (90) literals_opt -> . lit_intnega
    (91) literals_opt -> . lit_decposi
    (92) literals_opt -> . lit_decnega
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .

  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
    id              shift and go to state 233
    close_par       reduce using rule 224 (function_param -> .)
    lit_str         shift and go to state 238
    lit_bool        shift and go to state 239
    lit_intposi     shift and go to state 244
    lit_intnega     shift and go to state 245
    lit_decposi     shift and go to state 246
    lit_decnega     shift and go to state 247
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    period          reduce using rule 75 (id_array -> .)

  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]

    function_param                 shift and go to state 383
    value1_opt                     shift and go to state 235
    value_opt                      shift and go to state 236
    num_value_opt                  shift and go to state 237
    id_array_opt                   shift and go to state 240
    literals_opt                   shift and go to state 241
    arithmetic_expression          shift and go to state 242
    func_call                      shift and go to state 243
    num_value                      shift and go to state 167
    id_array                       shift and go to state 78
    literals                       shift and go to state 79

state 318

    (107) value1_opt -> value_opt value2_opt .

    comma           reduce using rule 107 (value1_opt -> value_opt value2_opt .)
    close_par       reduce using rule 107 (value1_opt -> value_opt value2_opt .)


state 319

    (108) value2_opt -> comma . value1_opt
    (107) value1_opt -> . value_opt value2_opt
    (62) value_opt -> . num_value_opt
    (63) value_opt -> . lit_str
    (64) value_opt -> . lit_bool
    (70) num_value_opt -> . id_array_opt id_struct
    (71) num_value_opt -> . literals_opt
    (72) num_value_opt -> . arithmetic_expression
    (73) num_value_opt -> . func_call
    (76) id_array_opt -> . id array
    (89) literals_opt -> . lit_intposi
    (90) literals_opt -> . lit_intnega
    (91) literals_opt -> . lit_decposi
    (92) literals_opt -> . lit_decnega
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .

  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
    lit_str         shift and go to state 238
    lit_bool        shift and go to state 239
    id              shift and go to state 385
    lit_intposi     shift and go to state 244
    lit_intnega     shift and go to state 245
    lit_decposi     shift and go to state 246
    lit_decnega     shift and go to state 247
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    period          reduce using rule 75 (id_array -> .)

  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]

    value1_opt                     shift and go to state 384
    value_opt                      shift and go to state 236
    num_value_opt                  shift and go to state 237
    id_array_opt                   shift and go to state 240
    literals_opt                   shift and go to state 241
    arithmetic_expression          shift and go to state 242
    func_call                      shift and go to state 243
    num_value                      shift and go to state 167
    id_array                       shift and go to state 78
    literals                       shift and go to state 79

state 320

    (70) num_value_opt -> id_array_opt id_struct .

    comma           reduce using rule 70 (num_value_opt -> id_array_opt id_struct .)
    close_par       reduce using rule 70 (num_value_opt -> id_array_opt id_struct .)


state 321

    (27) id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .

    Integer         reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Decimal         reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    String          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Boolean         reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    id              reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    close_bracket   reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    comma           reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Struct          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Generate        reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Link_Start      reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    For             reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    While           reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    If              reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Switch          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Sys_Call        reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Absorb          reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Discharge       reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Link_End        reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    Sys             reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)
    $end            reduce using rule 27 (id_array_dec2 -> open_brace lit_intposi close_brace array_dec1 .)


state 322

    (30) array_dec1 -> comma . id open_brace lit_intposi close_brace array_dec1

    id              shift and go to state 386


state 323

    (39) id_array_const2 -> open_brace lit_intposi close_brace . equal open_brace value1 close_brace array_const1

    equal           shift and go to state 387


state 324

    (40) id_array_const2 -> equal value id_const1 .

    Generate        reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Struct          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Link_Start      reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    id              reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    For             reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    While           reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    If              reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Switch          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Sys_Call        reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Absorb          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Discharge       reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Link_End        reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Sys             reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    $end            reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    Return          reduce using rule 40 (id_array_const2 -> equal value id_const1 .)
    close_bracket   reduce using rule 40 (id_array_const2 -> equal value id_const1 .)


state 325

    (42) id_const1 -> comma . id equal value id_const1

    id              shift and go to state 388


state 326

    (52) id_var1 -> comma id var_init . id_var1
    (52) id_var1 -> . comma id var_init id_var1
    (53) id_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 180
    Generate        reduce using rule 53 (id_var1 -> .)
    Struct          reduce using rule 53 (id_var1 -> .)
    Link_Start      reduce using rule 53 (id_var1 -> .)
    id              reduce using rule 53 (id_var1 -> .)
    For             reduce using rule 53 (id_var1 -> .)
    While           reduce using rule 53 (id_var1 -> .)
    If              reduce using rule 53 (id_var1 -> .)
    Switch          reduce using rule 53 (id_var1 -> .)
    Sys_Call        reduce using rule 53 (id_var1 -> .)
    Absorb          reduce using rule 53 (id_var1 -> .)
    Discharge       reduce using rule 53 (id_var1 -> .)
    Link_End        reduce using rule 53 (id_var1 -> .)
    Sys             reduce using rule 53 (id_var1 -> .)
    $end            reduce using rule 53 (id_var1 -> .)
    Return          reduce using rule 53 (id_var1 -> .)
    close_bracket   reduce using rule 53 (id_var1 -> .)

  ! comma           [ reduce using rule 53 (id_var1 -> .) ]

    id_var1                        shift and go to state 389

state 327

    (49) id_array_var2 -> open_brace lit_intposi close_brace array_init . array_var1
    (56) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (57) array_var1 -> .

    comma           shift and go to state 391
    Generate        reduce using rule 57 (array_var1 -> .)
    Struct          reduce using rule 57 (array_var1 -> .)
    Link_Start      reduce using rule 57 (array_var1 -> .)
    id              reduce using rule 57 (array_var1 -> .)
    For             reduce using rule 57 (array_var1 -> .)
    While           reduce using rule 57 (array_var1 -> .)
    If              reduce using rule 57 (array_var1 -> .)
    Switch          reduce using rule 57 (array_var1 -> .)
    Sys_Call        reduce using rule 57 (array_var1 -> .)
    Absorb          reduce using rule 57 (array_var1 -> .)
    Discharge       reduce using rule 57 (array_var1 -> .)
    Link_End        reduce using rule 57 (array_var1 -> .)
    Sys             reduce using rule 57 (array_var1 -> .)
    $end            reduce using rule 57 (array_var1 -> .)
    Return          reduce using rule 57 (array_var1 -> .)
    close_bracket   reduce using rule 57 (array_var1 -> .)

    array_var1                     shift and go to state 390

state 328

    (54) array_init -> equal . open_brace value1 close_brace array_var1

    open_brace      shift and go to state 392


state 329

    (227) functions -> Sys id open_par parameters close_par . open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> Sys id open_par parameters close_par . declare_statements statements return_statement functions
    (253) functions -> Sys id open_par parameters close_par . open_bracket declare_statements statements return_statement functions
    (254) functions -> Sys id open_par parameters close_par . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    open_bracket    shift and go to state 393
    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 394

state 330

    (244) functions -> Sys id open_par parameters open_bracket . declare_statements statements return_statement functions
    (255) functions -> Sys id open_par parameters open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 395

state 331

    (233) functions -> Sys id open_par parameters declare_statements . statements return_statement functions
    (245) functions -> Sys id open_par parameters declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 396
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 332

    (228) functions -> Sys id parameters declare_statements statements . return_statement functions
    (236) functions -> Sys id parameters declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 397

state 333

    (234) functions -> Sys id parameters close_par declare_statements . statements return_statement functions
    (247) functions -> Sys id parameters close_par declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 398
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 334

    (246) functions -> Sys id parameters close_par open_bracket . declare_statements statements return_statement functions
    (256) functions -> Sys id parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 399

state 335

    (235) functions -> Sys id parameters open_bracket declare_statements . statements return_statement functions
    (248) functions -> Sys id parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 400
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 336

    (229) functions -> Sys open_par parameters declare_statements statements . return_statement functions
    (239) functions -> Sys open_par parameters declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 401

state 337

    (237) functions -> Sys open_par parameters close_par declare_statements . statements return_statement functions
    (250) functions -> Sys open_par parameters close_par declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 402
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 338

    (249) functions -> Sys open_par parameters close_par open_bracket . declare_statements statements return_statement functions
    (257) functions -> Sys open_par parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 403

state 339

    (238) functions -> Sys open_par parameters open_bracket declare_statements . statements return_statement functions
    (251) functions -> Sys open_par parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 404
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 340

    (230) functions -> Sys parameters close_par declare_statements statements . return_statement functions
    (241) functions -> Sys parameters close_par declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 405

state 341

    (240) functions -> Sys parameters close_par open_bracket declare_statements . statements return_statement functions
    (252) functions -> Sys parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 406
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 342

    (232) functions -> Sys parameters declare_statements statements return_statement . close_bracket functions

    close_bracket   shift and go to state 407


state 343

    (263) return_statement -> Return . value statements return_statement
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for id resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    For             reduce using rule 61 (value -> .)
    While           reduce using rule 61 (value -> .)
    If              reduce using rule 61 (value -> .)
    Switch          reduce using rule 61 (value -> .)
    Absorb          reduce using rule 61 (value -> .)
    Discharge       reduce using rule 61 (value -> .)
    Return          reduce using rule 61 (value -> .)
    close_bracket   reduce using rule 61 (value -> .)
    Sys             reduce using rule 61 (value -> .)
    $end            reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 61 (value -> .) ]
  ! Sys_Call        [ reduce using rule 61 (value -> .) ]
  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! For             [ reduce using rule 69 (num_value -> .) ]
  ! While           [ reduce using rule 69 (num_value -> .) ]
  ! If              [ reduce using rule 69 (num_value -> .) ]
  ! Switch          [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! Absorb          [ reduce using rule 69 (num_value -> .) ]
  ! Discharge       [ reduce using rule 69 (num_value -> .) ]
  ! Return          [ reduce using rule 69 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 69 (num_value -> .) ]
  ! Sys             [ reduce using rule 69 (num_value -> .) ]
  ! $end            [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]

    value                          shift and go to state 408
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 344

    (231) functions -> Sys parameters open_bracket declare_statements statements . return_statement functions
    (242) functions -> Sys parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 409

state 345

    (261) more_parameters -> comma data_type . id more_parameters

    id              shift and go to state 410


state 346

    (127) assign_value -> more_id value .

    id              reduce using rule 127 (assign_value -> more_id value .)
    For             reduce using rule 127 (assign_value -> more_id value .)
    While           reduce using rule 127 (assign_value -> more_id value .)
    If              reduce using rule 127 (assign_value -> more_id value .)
    Switch          reduce using rule 127 (assign_value -> more_id value .)
    Sys_Call        reduce using rule 127 (assign_value -> more_id value .)
    Absorb          reduce using rule 127 (assign_value -> more_id value .)
    Discharge       reduce using rule 127 (assign_value -> more_id value .)
    Link_End        reduce using rule 127 (assign_value -> more_id value .)
    Sys             reduce using rule 127 (assign_value -> more_id value .)
    $end            reduce using rule 127 (assign_value -> more_id value .)
    Break           reduce using rule 127 (assign_value -> more_id value .)
    Continue        reduce using rule 127 (assign_value -> more_id value .)
    Avoid           reduce using rule 127 (assign_value -> more_id value .)
    close_bracket   reduce using rule 127 (assign_value -> more_id value .)
    Elif            reduce using rule 127 (assign_value -> more_id value .)
    Else            reduce using rule 127 (assign_value -> more_id value .)
    Return          reduce using rule 127 (assign_value -> more_id value .)


state 347

    (65) num_value -> id_array id_struct .
    (128) more_id -> id_array id_struct . equal more_id

    plus            reduce using rule 65 (num_value -> id_array id_struct .)
    minus           reduce using rule 65 (num_value -> id_array id_struct .)
    times           reduce using rule 65 (num_value -> id_array id_struct .)
    divide          reduce using rule 65 (num_value -> id_array id_struct .)
    divide_divide   reduce using rule 65 (num_value -> id_array id_struct .)
    modulo          reduce using rule 65 (num_value -> id_array id_struct .)
    times_times     reduce using rule 65 (num_value -> id_array id_struct .)
    id              reduce using rule 65 (num_value -> id_array id_struct .)
    For             reduce using rule 65 (num_value -> id_array id_struct .)
    While           reduce using rule 65 (num_value -> id_array id_struct .)
    If              reduce using rule 65 (num_value -> id_array id_struct .)
    Switch          reduce using rule 65 (num_value -> id_array id_struct .)
    Sys_Call        reduce using rule 65 (num_value -> id_array id_struct .)
    Absorb          reduce using rule 65 (num_value -> id_array id_struct .)
    Discharge       reduce using rule 65 (num_value -> id_array id_struct .)
    Link_End        reduce using rule 65 (num_value -> id_array id_struct .)
    Sys             reduce using rule 65 (num_value -> id_array id_struct .)
    $end            reduce using rule 65 (num_value -> id_array id_struct .)
    Break           reduce using rule 65 (num_value -> id_array id_struct .)
    Continue        reduce using rule 65 (num_value -> id_array id_struct .)
    Avoid           reduce using rule 65 (num_value -> id_array id_struct .)
    close_bracket   reduce using rule 65 (num_value -> id_array id_struct .)
    Elif            reduce using rule 65 (num_value -> id_array id_struct .)
    Else            reduce using rule 65 (num_value -> id_array id_struct .)
    Return          reduce using rule 65 (num_value -> id_array id_struct .)
    equal           shift and go to state 411


state 348

    (122) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal . open_brace value1 close_brace

    open_brace      shift and go to state 412


state 349

    (137) more_array -> equal id . open_brace lit_intposi close_brace more_array

    open_brace      shift and go to state 413


state 350

    (139) for_statements -> For id In id open_brace close_brace . colon open_bracket inside_statements close_bracket

    colon           shift and go to state 414


state 351

    (141) while_statements -> While open_par condition close_par colon open_bracket . inside_statements close_bracket
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 415
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 352

    (173) if_statement -> If open_par condition close_par colon open_bracket . inside_statements close_bracket condition_else
    (199) if_statement -> If open_par condition close_par colon open_bracket . inside_statements condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Continue resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for id resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Elif resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Else resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Link_End        reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Elif            reduce using rule 118 (statements -> .)
    Else            reduce using rule 118 (statements -> .)
    Return          reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! Link_End        [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys             [ reduce using rule 145 (inside_statements -> .) ]
  ! $end            [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 145 (inside_statements -> .) ]
  ! Continue        [ reduce using rule 145 (inside_statements -> .) ]
  ! Avoid           [ reduce using rule 145 (inside_statements -> .) ]
  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Elif            [ reduce using rule 145 (inside_statements -> .) ]
  ! Else            [ reduce using rule 145 (inside_statements -> .) ]
  ! id              [ reduce using rule 145 (inside_statements -> .) ]
  ! For             [ reduce using rule 145 (inside_statements -> .) ]
  ! While           [ reduce using rule 145 (inside_statements -> .) ]
  ! If              [ reduce using rule 145 (inside_statements -> .) ]
  ! Switch          [ reduce using rule 145 (inside_statements -> .) ]
  ! Sys_Call        [ reduce using rule 145 (inside_statements -> .) ]
  ! Absorb          [ reduce using rule 145 (inside_statements -> .) ]
  ! Discharge       [ reduce using rule 145 (inside_statements -> .) ]
  ! Return          [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 118 (statements -> .) ]
  ! For             [ reduce using rule 118 (statements -> .) ]
  ! While           [ reduce using rule 118 (statements -> .) ]
  ! If              [ reduce using rule 118 (statements -> .) ]
  ! Switch          [ reduce using rule 118 (statements -> .) ]
  ! Sys_Call        [ reduce using rule 118 (statements -> .) ]
  ! Absorb          [ reduce using rule 118 (statements -> .) ]
  ! Discharge       [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! Link_End        [ reduce using rule 149 (control_statements -> .) ]
  ! Sys             [ reduce using rule 149 (control_statements -> .) ]
  ! $end            [ reduce using rule 149 (control_statements -> .) ]
  ! Break           [ reduce using rule 149 (control_statements -> .) ]
  ! Continue        [ reduce using rule 149 (control_statements -> .) ]
  ! Avoid           [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! Elif            [ reduce using rule 149 (control_statements -> .) ]
  ! Else            [ reduce using rule 149 (control_statements -> .) ]
  ! Return          [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Link_End        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Elif            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Else            [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Link_End        [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Elif            [ reduce using rule 140 (for_statements -> .) ]
  ! Else            [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Link_End        [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Elif            [ reduce using rule 142 (while_statements -> .) ]
  ! Else            [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 416
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 353

    (189) if_statement -> If open_par condition close_par colon inside_statements . condition_else
    (200) if_statement -> If open_par condition close_par colon inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 418
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 417
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 354

    (190) if_statement -> If open_par condition close_par open_bracket inside_statements . condition_else
    (201) if_statement -> If open_par condition close_par open_bracket inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 420
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 419
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 355

    (179) if_statement -> If open_par condition close_par inside_statements condition_else .

    id              reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    For             reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    While           reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    If              reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Switch          reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Sys_Call        reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Absorb          reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Discharge       reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Link_End        reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Sys             reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    $end            reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Break           reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Continue        reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Avoid           reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    close_bracket   reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Elif            reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Else            reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)
    Return          reduce using rule 179 (if_statement -> If open_par condition close_par inside_statements condition_else .)


state 356

    (191) if_statement -> If open_par condition close_par inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 421
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 357

    (180) if_statement -> If open_par condition colon inside_statements condition_else .

    id              reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    For             reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    While           reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    If              reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Switch          reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Sys_Call        reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Absorb          reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Discharge       reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Link_End        reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Sys             reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    $end            reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Break           reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Continue        reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Avoid           reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    close_bracket   reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Elif            reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Else            reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)
    Return          reduce using rule 180 (if_statement -> If open_par condition colon inside_statements condition_else .)


state 358

    (193) if_statement -> If open_par condition colon inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 422
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 359

    (192) if_statement -> If open_par condition colon open_bracket inside_statements . condition_else
    (202) if_statement -> If open_par condition colon open_bracket inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 424
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 423
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 360

    (181) if_statement -> If open_par condition open_bracket inside_statements condition_else .

    id              reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    For             reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    While           reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    If              reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Switch          reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Sys             reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    $end            reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Break           reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Continue        reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Elif            reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Else            reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)
    Return          reduce using rule 181 (if_statement -> If open_par condition open_bracket inside_statements condition_else .)


state 361

    (194) if_statement -> If open_par condition open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 425
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 362

    (182) if_statement -> If open_par condition inside_statements close_bracket condition_else .

    id              reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    For             reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    While           reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    If              reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Switch          reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Sys             reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    $end            reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Break           reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Continue        reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Elif            reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Else            reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)
    Return          reduce using rule 182 (if_statement -> If open_par condition inside_statements close_bracket condition_else .)


state 363

    (207) elif_statement -> Elif open_par . condition close_par colon open_bracket inside_statements close_bracket condition_else
    (150) condition -> . relational_expression
    (151) condition -> . logical_expression
    (152) condition -> . Not open_par condition_not close_par
    (153) condition -> . lit_bool
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    Not             shift and go to state 73
    lit_bool        shift and go to state 74
    open_par        shift and go to state 125
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    condition                      shift and go to state 426
    relational_expression          shift and go to state 71
    logical_expression             shift and go to state 72
    value                          shift and go to state 75
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 364

    (208) else_statement -> Else colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 427


state 365

    (164) logical_expression -> open_par logical_operand close_par logical_operators open_par . logical_operand close_par
    (165) logical_operand -> . Not open_par logical_operand close_par
    (166) logical_operand -> . relational_expression
    (167) logical_operand -> . logical_expression
    (168) logical_operand -> . lit_bool
    (157) relational_expression -> . value relational_operators value
    (164) logical_expression -> . open_par logical_operand close_par logical_operators open_par logical_operand close_par
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for greater_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for equal_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for not_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for great_than_equal resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for less_than_equal resolved using rule 61 (value -> .)
    Not             shift and go to state 205
    lit_bool        shift and go to state 208
    open_par        shift and go to state 125
    lit_str         shift and go to state 77
    greater_than    reduce using rule 61 (value -> .)
    less_than       reduce using rule 61 (value -> .)
    equal_equal     reduce using rule 61 (value -> .)
    not_equal       reduce using rule 61 (value -> .)
    great_than_equal reduce using rule 61 (value -> .)
    less_than_equal reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    Sys_Call        shift and go to state 39

  ! greater_than    [ reduce using rule 69 (num_value -> .) ]
  ! less_than       [ reduce using rule 69 (num_value -> .) ]
  ! equal_equal     [ reduce using rule 69 (num_value -> .) ]
  ! not_equal       [ reduce using rule 69 (num_value -> .) ]
  ! great_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! less_than_equal [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! greater_than    [ reduce using rule 75 (id_array -> .) ]
  ! less_than       [ reduce using rule 75 (id_array -> .) ]
  ! equal_equal     [ reduce using rule 75 (id_array -> .) ]
  ! not_equal       [ reduce using rule 75 (id_array -> .) ]
  ! great_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! less_than_equal [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! greater_than    [ reduce using rule 88 (literals -> .) ]
  ! less_than       [ reduce using rule 88 (literals -> .) ]
  ! equal_equal     [ reduce using rule 88 (literals -> .) ]
  ! not_equal       [ reduce using rule 88 (literals -> .) ]
  ! great_than_equal [ reduce using rule 88 (literals -> .) ]
  ! less_than_equal [ reduce using rule 88 (literals -> .) ]

    logical_operand                shift and go to state 428
    relational_expression          shift and go to state 206
    logical_expression             shift and go to state 207
    value                          shift and go to state 75
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 366

    (165) logical_operand -> Not open_par logical_operand close_par .

    close_par       reduce using rule 165 (logical_operand -> Not open_par logical_operand close_par .)


state 367

    (185) if_statement -> If condition close_par inside_statements close_bracket condition_else .

    id              reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    For             reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    While           reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    If              reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Switch          reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Sys             reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    $end            reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Break           reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Continue        reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Elif            reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Else            reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)
    Return          reduce using rule 185 (if_statement -> If condition close_par inside_statements close_bracket condition_else .)


state 368

    (183) if_statement -> If condition close_par colon inside_statements condition_else .

    id              reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    For             reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    While           reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    If              reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Switch          reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Sys_Call        reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Absorb          reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Discharge       reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Link_End        reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Sys             reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    $end            reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Break           reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Continue        reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Avoid           reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    close_bracket   reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Elif            reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Else            reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)
    Return          reduce using rule 183 (if_statement -> If condition close_par colon inside_statements condition_else .)


state 369

    (196) if_statement -> If condition close_par colon inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 429
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 370

    (195) if_statement -> If condition close_par colon open_bracket inside_statements . condition_else
    (203) if_statement -> If condition close_par colon open_bracket inside_statements . close_bracket condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 431
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 430
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 371

    (184) if_statement -> If condition close_par open_bracket inside_statements condition_else .

    id              reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    For             reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    While           reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    If              reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Switch          reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Sys             reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    $end            reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Break           reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Continue        reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Elif            reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Else            reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)
    Return          reduce using rule 184 (if_statement -> If condition close_par open_bracket inside_statements condition_else .)


state 372

    (197) if_statement -> If condition close_par open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 432
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 373

    (187) if_statement -> If condition colon inside_statements close_bracket condition_else .

    id              reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    For             reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    While           reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    If              reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Switch          reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Sys             reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    $end            reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Break           reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Continue        reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Elif            reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Else            reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)
    Return          reduce using rule 187 (if_statement -> If condition colon inside_statements close_bracket condition_else .)


state 374

    (186) if_statement -> If condition colon open_bracket inside_statements condition_else .

    id              reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    For             reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    While           reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    If              reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Switch          reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Sys             reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    $end            reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Break           reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Continue        reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Elif            reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Else            reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)
    Return          reduce using rule 186 (if_statement -> If condition colon open_bracket inside_statements condition_else .)


state 375

    (198) if_statement -> If condition colon open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 433
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 376

    (188) if_statement -> If condition open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 188 (if_statement -> If condition open_bracket inside_statements close_bracket condition_else .)


state 377

    (210) switch_statements -> Switch id colon open_bracket execute Default . colon inside_statements close_bracket End_Switch

    colon           shift and go to state 434


state 378

    (211) execute -> Execute switch_lit . colon statements Break execute1

    colon           shift and go to state 435


state 379

    (212) switch_lit -> lit_str .

    colon           reduce using rule 212 (switch_lit -> lit_str .)


state 380

    (213) switch_lit -> lit_intposi .

    colon           reduce using rule 213 (switch_lit -> lit_intposi .)


state 381

    (214) switch_lit -> lit_intnega .

    colon           reduce using rule 214 (switch_lit -> lit_intnega .)


state 382

    (222) function_param -> id open_brace close_brace . more_param
    (78) array -> open_brace close_brace .
    (225) more_param -> . comma function_param
    (226) more_param -> .

  ! shift/reduce conflict for comma resolved as shift
  ! reduce/reduce conflict for close_par resolved using rule 78 (array -> open_brace close_brace .)
    period          reduce using rule 78 (array -> open_brace close_brace .)
    close_par       reduce using rule 78 (array -> open_brace close_brace .)
    plus            reduce using rule 78 (array -> open_brace close_brace .)
    minus           reduce using rule 78 (array -> open_brace close_brace .)
    times           reduce using rule 78 (array -> open_brace close_brace .)
    divide          reduce using rule 78 (array -> open_brace close_brace .)
    divide_divide   reduce using rule 78 (array -> open_brace close_brace .)
    modulo          reduce using rule 78 (array -> open_brace close_brace .)
    times_times     reduce using rule 78 (array -> open_brace close_brace .)
    comma           shift and go to state 317

  ! comma           [ reduce using rule 78 (array -> open_brace close_brace .) ]
  ! close_par       [ reduce using rule 226 (more_param -> .) ]

    more_param                     shift and go to state 436

state 383

    (225) more_param -> comma function_param .

    close_par       reduce using rule 225 (more_param -> comma function_param .)


state 384

    (108) value2_opt -> comma value1_opt .

    comma           reduce using rule 108 (value2_opt -> comma value1_opt .)
    close_par       reduce using rule 108 (value2_opt -> comma value1_opt .)


state 385

    (76) id_array_opt -> id . array
    (74) id_array -> id . array
    (77) array -> . open_brace num_value close_brace
    (78) array -> . open_brace close_brace
    (79) array -> .

    open_brace      shift and go to state 163
    period          reduce using rule 79 (array -> .)
    comma           reduce using rule 79 (array -> .)
    close_par       reduce using rule 79 (array -> .)
    plus            reduce using rule 79 (array -> .)
    minus           reduce using rule 79 (array -> .)
    times           reduce using rule 79 (array -> .)
    divide          reduce using rule 79 (array -> .)
    divide_divide   reduce using rule 79 (array -> .)
    modulo          reduce using rule 79 (array -> .)
    times_times     reduce using rule 79 (array -> .)

    array                          shift and go to state 314

state 386

    (30) array_dec1 -> comma id . open_brace lit_intposi close_brace array_dec1

    open_brace      shift and go to state 437


state 387

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal . open_brace value1 close_brace array_const1

    open_brace      shift and go to state 438


state 388

    (42) id_const1 -> comma id . equal value id_const1

    equal           shift and go to state 439


state 389

    (52) id_var1 -> comma id var_init id_var1 .

    Generate        reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Struct          reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Link_Start      reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    id              reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    For             reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    While           reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    If              reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Switch          reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Sys_Call        reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Absorb          reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Discharge       reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Link_End        reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Sys             reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    $end            reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    Return          reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    close_bracket   reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)
    comma           reduce using rule 52 (id_var1 -> comma id var_init id_var1 .)


state 390

    (49) id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .

    Generate        reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Struct          reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Link_Start      reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    id              reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    For             reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    While           reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    If              reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Switch          reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Sys_Call        reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Absorb          reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Discharge       reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Link_End        reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Sys             reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    $end            reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    Return          reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)
    close_bracket   reduce using rule 49 (id_array_var2 -> open_brace lit_intposi close_brace array_init array_var1 .)


state 391

    (56) array_var1 -> comma . id open_brace lit_intposi close_brace array_init array_var1

    id              shift and go to state 440


state 392

    (54) array_init -> equal open_brace . value1 close_brace array_var1
    (104) value1 -> . value value2
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    close_brace     reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]

    value1                         shift and go to state 441
    value                          shift and go to state 442
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 393

    (227) functions -> Sys id open_par parameters close_par open_bracket . declare_statements statements return_statement close_bracket functions
    (253) functions -> Sys id open_par parameters close_par open_bracket . declare_statements statements return_statement functions
    (32) declare_statements -> . Generate const_var_dec declare_statements
    (33) declare_statements -> .

    Generate        shift and go to state 6
    id              reduce using rule 33 (declare_statements -> .)
    For             reduce using rule 33 (declare_statements -> .)
    While           reduce using rule 33 (declare_statements -> .)
    If              reduce using rule 33 (declare_statements -> .)
    Switch          reduce using rule 33 (declare_statements -> .)
    Sys_Call        reduce using rule 33 (declare_statements -> .)
    Absorb          reduce using rule 33 (declare_statements -> .)
    Discharge       reduce using rule 33 (declare_statements -> .)
    Return          reduce using rule 33 (declare_statements -> .)
    close_bracket   reduce using rule 33 (declare_statements -> .)
    Sys             reduce using rule 33 (declare_statements -> .)
    $end            reduce using rule 33 (declare_statements -> .)

    declare_statements             shift and go to state 443

state 394

    (243) functions -> Sys id open_par parameters close_par declare_statements . statements return_statement functions
    (254) functions -> Sys id open_par parameters close_par declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 444
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 395

    (244) functions -> Sys id open_par parameters open_bracket declare_statements . statements return_statement functions
    (255) functions -> Sys id open_par parameters open_bracket declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 445
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 396

    (233) functions -> Sys id open_par parameters declare_statements statements . return_statement functions
    (245) functions -> Sys id open_par parameters declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 446

state 397

    (228) functions -> Sys id parameters declare_statements statements return_statement . functions
    (236) functions -> Sys id parameters declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 448
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 447

state 398

    (234) functions -> Sys id parameters close_par declare_statements statements . return_statement functions
    (247) functions -> Sys id parameters close_par declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 449

state 399

    (246) functions -> Sys id parameters close_par open_bracket declare_statements . statements return_statement functions
    (256) functions -> Sys id parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 450
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 400

    (235) functions -> Sys id parameters open_bracket declare_statements statements . return_statement functions
    (248) functions -> Sys id parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 451

state 401

    (229) functions -> Sys open_par parameters declare_statements statements return_statement . functions
    (239) functions -> Sys open_par parameters declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 453
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 452

state 402

    (237) functions -> Sys open_par parameters close_par declare_statements statements . return_statement functions
    (250) functions -> Sys open_par parameters close_par declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 454

state 403

    (249) functions -> Sys open_par parameters close_par open_bracket declare_statements . statements return_statement functions
    (257) functions -> Sys open_par parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 455
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 404

    (238) functions -> Sys open_par parameters open_bracket declare_statements statements . return_statement functions
    (251) functions -> Sys open_par parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 456

state 405

    (230) functions -> Sys parameters close_par declare_statements statements return_statement . functions
    (241) functions -> Sys parameters close_par declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 458
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 457

state 406

    (240) functions -> Sys parameters close_par open_bracket declare_statements statements . return_statement functions
    (252) functions -> Sys parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 459

state 407

    (232) functions -> Sys parameters declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 460

state 408

    (263) return_statement -> Return value . statements return_statement
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 461
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 409

    (231) functions -> Sys parameters open_bracket declare_statements statements return_statement . functions
    (242) functions -> Sys parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 463
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 462

state 410

    (261) more_parameters -> comma data_type id . more_parameters
    (261) more_parameters -> . comma data_type id more_parameters
    (262) more_parameters -> .

    comma           shift and go to state 269
    close_par       reduce using rule 262 (more_parameters -> .)
    open_bracket    reduce using rule 262 (more_parameters -> .)
    Generate        reduce using rule 262 (more_parameters -> .)
    id              reduce using rule 262 (more_parameters -> .)
    For             reduce using rule 262 (more_parameters -> .)
    While           reduce using rule 262 (more_parameters -> .)
    If              reduce using rule 262 (more_parameters -> .)
    Switch          reduce using rule 262 (more_parameters -> .)
    Sys_Call        reduce using rule 262 (more_parameters -> .)
    Absorb          reduce using rule 262 (more_parameters -> .)
    Discharge       reduce using rule 262 (more_parameters -> .)
    Return          reduce using rule 262 (more_parameters -> .)
    close_bracket   reduce using rule 262 (more_parameters -> .)
    Sys             reduce using rule 262 (more_parameters -> .)
    $end            reduce using rule 262 (more_parameters -> .)

    more_parameters                shift and go to state 464

state 411

    (128) more_id -> id_array id_struct equal . more_id
    (128) more_id -> . id_array id_struct equal more_id
    (129) more_id -> .
    (74) id_array -> . id array
    (75) id_array -> .

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for period resolved using rule 75 (id_array -> .)
    lit_str         reduce using rule 129 (more_id -> .)
    lit_bool        reduce using rule 129 (more_id -> .)
    lit_intposi     reduce using rule 129 (more_id -> .)
    lit_intnega     reduce using rule 129 (more_id -> .)
    lit_decposi     reduce using rule 129 (more_id -> .)
    lit_decnega     reduce using rule 129 (more_id -> .)
    open_par        reduce using rule 129 (more_id -> .)
    Sys_Call        reduce using rule 129 (more_id -> .)
    plus            reduce using rule 129 (more_id -> .)
    minus           reduce using rule 129 (more_id -> .)
    times           reduce using rule 129 (more_id -> .)
    divide          reduce using rule 129 (more_id -> .)
    divide_divide   reduce using rule 129 (more_id -> .)
    modulo          reduce using rule 129 (more_id -> .)
    times_times     reduce using rule 129 (more_id -> .)
    For             reduce using rule 129 (more_id -> .)
    While           reduce using rule 129 (more_id -> .)
    If              reduce using rule 129 (more_id -> .)
    Switch          reduce using rule 129 (more_id -> .)
    Absorb          reduce using rule 129 (more_id -> .)
    Discharge       reduce using rule 129 (more_id -> .)
    Link_End        reduce using rule 129 (more_id -> .)
    Sys             reduce using rule 129 (more_id -> .)
    $end            reduce using rule 129 (more_id -> .)
    Break           reduce using rule 129 (more_id -> .)
    Continue        reduce using rule 129 (more_id -> .)
    Avoid           reduce using rule 129 (more_id -> .)
    close_bracket   reduce using rule 129 (more_id -> .)
    Elif            reduce using rule 129 (more_id -> .)
    Else            reduce using rule 129 (more_id -> .)
    Return          reduce using rule 129 (more_id -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    equal           reduce using rule 75 (id_array -> .)

  ! id              [ reduce using rule 129 (more_id -> .) ]
  ! period          [ reduce using rule 129 (more_id -> .) ]

    id_array                       shift and go to state 465
    more_id                        shift and go to state 466

state 412

    (122) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace . value1 close_brace
    (104) value1 -> . value value2
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    close_brace     reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]

    value1                         shift and go to state 467
    value                          shift and go to state 442
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 413

    (137) more_array -> equal id open_brace . lit_intposi close_brace more_array

    lit_intposi     shift and go to state 468


state 414

    (139) for_statements -> For id In id open_brace close_brace colon . open_bracket inside_statements close_bracket

    open_bracket    shift and go to state 469


state 415

    (141) while_statements -> While open_par condition close_par colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 470


state 416

    (173) if_statement -> If open_par condition close_par colon open_bracket inside_statements . close_bracket condition_else
    (199) if_statement -> If open_par condition close_par colon open_bracket inside_statements . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for close_bracket resolved as shift
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    close_bracket   shift and go to state 471
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! close_bracket   [ reduce using rule 206 (condition_else -> .) ]
  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 472
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 417

    (189) if_statement -> If open_par condition close_par colon inside_statements condition_else .

    id              reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    For             reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    While           reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    If              reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Switch          reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Sys_Call        reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Absorb          reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Discharge       reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Link_End        reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Sys             reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    $end            reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Break           reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Continue        reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Avoid           reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    close_bracket   reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Elif            reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Else            reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)
    Return          reduce using rule 189 (if_statement -> If open_par condition close_par colon inside_statements condition_else .)


state 418

    (200) if_statement -> If open_par condition close_par colon inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 473
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 419

    (190) if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .

    id              reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    For             reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    While           reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    If              reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Switch          reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Sys             reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    $end            reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Break           reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Continue        reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Elif            reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Else            reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)
    Return          reduce using rule 190 (if_statement -> If open_par condition close_par open_bracket inside_statements condition_else .)


state 420

    (201) if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 474
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 421

    (191) if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .

    id              reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    For             reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    While           reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    If              reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Switch          reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Sys             reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    $end            reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Break           reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Continue        reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Elif            reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Else            reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)
    Return          reduce using rule 191 (if_statement -> If open_par condition close_par inside_statements close_bracket condition_else .)


state 422

    (193) if_statement -> If open_par condition colon inside_statements close_bracket condition_else .

    id              reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    For             reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    While           reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    If              reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Switch          reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Sys             reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    $end            reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Break           reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Continue        reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Elif            reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Else            reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)
    Return          reduce using rule 193 (if_statement -> If open_par condition colon inside_statements close_bracket condition_else .)


state 423

    (192) if_statement -> If open_par condition colon open_bracket inside_statements condition_else .

    id              reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    For             reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    While           reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    If              reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Switch          reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Sys             reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    $end            reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Break           reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Continue        reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Elif            reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Else            reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)
    Return          reduce using rule 192 (if_statement -> If open_par condition colon open_bracket inside_statements condition_else .)


state 424

    (202) if_statement -> If open_par condition colon open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 475
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 425

    (194) if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 194 (if_statement -> If open_par condition open_bracket inside_statements close_bracket condition_else .)


state 426

    (207) elif_statement -> Elif open_par condition . close_par colon open_bracket inside_statements close_bracket condition_else

    close_par       shift and go to state 476


state 427

    (208) else_statement -> Else colon open_bracket . inside_statements close_bracket
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 477
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 428

    (164) logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand . close_par

    close_par       shift and go to state 478


state 429

    (196) if_statement -> If condition close_par colon inside_statements close_bracket condition_else .

    id              reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    For             reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    While           reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    If              reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Switch          reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Sys             reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    $end            reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Break           reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Continue        reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Elif            reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Else            reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)
    Return          reduce using rule 196 (if_statement -> If condition close_par colon inside_statements close_bracket condition_else .)


state 430

    (195) if_statement -> If condition close_par colon open_bracket inside_statements condition_else .

    id              reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    For             reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    While           reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    If              reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Switch          reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Sys             reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    $end            reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Break           reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Continue        reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Elif            reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Else            reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)
    Return          reduce using rule 195 (if_statement -> If condition close_par colon open_bracket inside_statements condition_else .)


state 431

    (203) if_statement -> If condition close_par colon open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 479
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 432

    (197) if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 197 (if_statement -> If condition close_par open_bracket inside_statements close_bracket condition_else .)


state 433

    (198) if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 198 (if_statement -> If condition colon open_bracket inside_statements close_bracket condition_else .)


state 434

    (210) switch_statements -> Switch id colon open_bracket execute Default colon . inside_statements close_bracket End_Switch
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 480
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 435

    (211) execute -> Execute switch_lit colon . statements Break execute1
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Break resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Break           reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 481
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 436

    (222) function_param -> id open_brace close_brace more_param .

    close_par       reduce using rule 222 (function_param -> id open_brace close_brace more_param .)


state 437

    (30) array_dec1 -> comma id open_brace . lit_intposi close_brace array_dec1

    lit_intposi     shift and go to state 482


state 438

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace . value1 close_brace array_const1
    (104) value1 -> . value value2
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    close_brace     reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]

    value1                         shift and go to state 483
    value                          shift and go to state 442
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 439

    (42) id_const1 -> comma id equal . value id_const1
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for id resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Generate resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Struct resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_Start resolved using rule 61 (value -> .)
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for While resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for If resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Switch resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Sys resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for $end resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for Return resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 61 (value -> .)
  ! shift/reduce conflict for Sys_Call resolved as shift
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    Generate        reduce using rule 61 (value -> .)
    Struct          reduce using rule 61 (value -> .)
    Link_Start      reduce using rule 61 (value -> .)
    For             reduce using rule 61 (value -> .)
    While           reduce using rule 61 (value -> .)
    If              reduce using rule 61 (value -> .)
    Switch          reduce using rule 61 (value -> .)
    Absorb          reduce using rule 61 (value -> .)
    Discharge       reduce using rule 61 (value -> .)
    Link_End        reduce using rule 61 (value -> .)
    Sys             reduce using rule 61 (value -> .)
    $end            reduce using rule 61 (value -> .)
    Return          reduce using rule 61 (value -> .)
    close_bracket   reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! id              [ reduce using rule 61 (value -> .) ]
  ! Sys_Call        [ reduce using rule 61 (value -> .) ]
  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! Generate        [ reduce using rule 69 (num_value -> .) ]
  ! Struct          [ reduce using rule 69 (num_value -> .) ]
  ! Link_Start      [ reduce using rule 69 (num_value -> .) ]
  ! id              [ reduce using rule 69 (num_value -> .) ]
  ! For             [ reduce using rule 69 (num_value -> .) ]
  ! While           [ reduce using rule 69 (num_value -> .) ]
  ! If              [ reduce using rule 69 (num_value -> .) ]
  ! Switch          [ reduce using rule 69 (num_value -> .) ]
  ! Sys_Call        [ reduce using rule 69 (num_value -> .) ]
  ! Absorb          [ reduce using rule 69 (num_value -> .) ]
  ! Discharge       [ reduce using rule 69 (num_value -> .) ]
  ! Link_End        [ reduce using rule 69 (num_value -> .) ]
  ! Sys             [ reduce using rule 69 (num_value -> .) ]
  ! $end            [ reduce using rule 69 (num_value -> .) ]
  ! Return          [ reduce using rule 69 (num_value -> .) ]
  ! close_bracket   [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! Generate        [ reduce using rule 75 (id_array -> .) ]
  ! Struct          [ reduce using rule 75 (id_array -> .) ]
  ! Link_Start      [ reduce using rule 75 (id_array -> .) ]
  ! id              [ reduce using rule 75 (id_array -> .) ]
  ! For             [ reduce using rule 75 (id_array -> .) ]
  ! While           [ reduce using rule 75 (id_array -> .) ]
  ! If              [ reduce using rule 75 (id_array -> .) ]
  ! Switch          [ reduce using rule 75 (id_array -> .) ]
  ! Sys_Call        [ reduce using rule 75 (id_array -> .) ]
  ! Absorb          [ reduce using rule 75 (id_array -> .) ]
  ! Discharge       [ reduce using rule 75 (id_array -> .) ]
  ! Link_End        [ reduce using rule 75 (id_array -> .) ]
  ! Sys             [ reduce using rule 75 (id_array -> .) ]
  ! $end            [ reduce using rule 75 (id_array -> .) ]
  ! Return          [ reduce using rule 75 (id_array -> .) ]
  ! close_bracket   [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! Generate        [ reduce using rule 88 (literals -> .) ]
  ! Struct          [ reduce using rule 88 (literals -> .) ]
  ! Link_Start      [ reduce using rule 88 (literals -> .) ]
  ! id              [ reduce using rule 88 (literals -> .) ]
  ! For             [ reduce using rule 88 (literals -> .) ]
  ! While           [ reduce using rule 88 (literals -> .) ]
  ! If              [ reduce using rule 88 (literals -> .) ]
  ! Switch          [ reduce using rule 88 (literals -> .) ]
  ! Sys_Call        [ reduce using rule 88 (literals -> .) ]
  ! Absorb          [ reduce using rule 88 (literals -> .) ]
  ! Discharge       [ reduce using rule 88 (literals -> .) ]
  ! Link_End        [ reduce using rule 88 (literals -> .) ]
  ! Sys             [ reduce using rule 88 (literals -> .) ]
  ! $end            [ reduce using rule 88 (literals -> .) ]
  ! Return          [ reduce using rule 88 (literals -> .) ]
  ! close_bracket   [ reduce using rule 88 (literals -> .) ]

    value                          shift and go to state 484
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 440

    (56) array_var1 -> comma id . open_brace lit_intposi close_brace array_init array_var1

    open_brace      shift and go to state 485


state 441

    (54) array_init -> equal open_brace value1 . close_brace array_var1

    close_brace     shift and go to state 486


state 442

    (104) value1 -> value . value2
    (105) value2 -> . comma value1
    (106) value2 -> .

    comma           shift and go to state 488
    close_brace     reduce using rule 106 (value2 -> .)

    value2                         shift and go to state 487

state 443

    (227) functions -> Sys id open_par parameters close_par open_bracket declare_statements . statements return_statement close_bracket functions
    (253) functions -> Sys id open_par parameters close_par open_bracket declare_statements . statements return_statement functions
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Return resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for Sys resolved using rule 118 (statements -> .)
  ! reduce/reduce conflict for $end resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    Return          reduce using rule 118 (statements -> .)
    close_bracket   reduce using rule 118 (statements -> .)
    Sys             reduce using rule 118 (statements -> .)
    $end            reduce using rule 118 (statements -> .)
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Return          [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys             [ reduce using rule 120 (assignment_statements -> .) ]
  ! $end            [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Return          [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! Sys             [ reduce using rule 140 (for_statements -> .) ]
  ! $end            [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Return          [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]
  ! Sys             [ reduce using rule 142 (while_statements -> .) ]
  ! $end            [ reduce using rule 142 (while_statements -> .) ]

    statements                     shift and go to state 489
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 444

    (243) functions -> Sys id open_par parameters close_par declare_statements statements . return_statement functions
    (254) functions -> Sys id open_par parameters close_par declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 490

state 445

    (244) functions -> Sys id open_par parameters open_bracket declare_statements statements . return_statement functions
    (255) functions -> Sys id open_par parameters open_bracket declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 491

state 446

    (233) functions -> Sys id open_par parameters declare_statements statements return_statement . functions
    (245) functions -> Sys id open_par parameters declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 493
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 492

state 447

    (228) functions -> Sys id parameters declare_statements statements return_statement functions .

    $end            reduce using rule 228 (functions -> Sys id parameters declare_statements statements return_statement functions .)


state 448

    (236) functions -> Sys id parameters declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 494

state 449

    (234) functions -> Sys id parameters close_par declare_statements statements return_statement . functions
    (247) functions -> Sys id parameters close_par declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 496
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 495

state 450

    (246) functions -> Sys id parameters close_par open_bracket declare_statements statements . return_statement functions
    (256) functions -> Sys id parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 497

state 451

    (235) functions -> Sys id parameters open_bracket declare_statements statements return_statement . functions
    (248) functions -> Sys id parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 499
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 498

state 452

    (229) functions -> Sys open_par parameters declare_statements statements return_statement functions .

    $end            reduce using rule 229 (functions -> Sys open_par parameters declare_statements statements return_statement functions .)


state 453

    (239) functions -> Sys open_par parameters declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 500

state 454

    (237) functions -> Sys open_par parameters close_par declare_statements statements return_statement . functions
    (250) functions -> Sys open_par parameters close_par declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 502
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 501

state 455

    (249) functions -> Sys open_par parameters close_par open_bracket declare_statements statements . return_statement functions
    (257) functions -> Sys open_par parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 503

state 456

    (238) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement . functions
    (251) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 505
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 504

state 457

    (230) functions -> Sys parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 230 (functions -> Sys parameters close_par declare_statements statements return_statement functions .)


state 458

    (241) functions -> Sys parameters close_par declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 506

state 459

    (240) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement . functions
    (252) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 508
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 507

state 460

    (232) functions -> Sys parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 232 (functions -> Sys parameters declare_statements statements return_statement close_bracket functions .)


state 461

    (263) return_statement -> Return value statements . return_statement
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 509

state 462

    (231) functions -> Sys parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 231 (functions -> Sys parameters open_bracket declare_statements statements return_statement functions .)


state 463

    (242) functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 510

state 464

    (261) more_parameters -> comma data_type id more_parameters .

    close_par       reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    open_bracket    reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    Generate        reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    id              reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    For             reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    While           reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    If              reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    Switch          reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    Sys_Call        reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    Absorb          reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    Discharge       reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    Return          reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    close_bracket   reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    Sys             reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)
    $end            reduce using rule 261 (more_parameters -> comma data_type id more_parameters .)


state 465

    (128) more_id -> id_array . id_struct equal more_id
    (102) id_struct -> . period id_array
    (103) id_struct -> .

    period          shift and go to state 120
    equal           reduce using rule 103 (id_struct -> .)

    id_struct                      shift and go to state 511

state 466

    (128) more_id -> id_array id_struct equal more_id .

    lit_str         reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    lit_bool        reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    id              reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    lit_intposi     reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    lit_intnega     reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    lit_decposi     reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    lit_decnega     reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    open_par        reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Sys_Call        reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    plus            reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    minus           reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    times           reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    divide          reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    divide_divide   reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    modulo          reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    times_times     reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    period          reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    For             reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    While           reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    If              reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Switch          reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Absorb          reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Discharge       reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Link_End        reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Sys             reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    $end            reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Break           reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Continue        reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Avoid           reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    close_bracket   reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Elif            reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Else            reduce using rule 128 (more_id -> id_array id_struct equal more_id .)
    Return          reduce using rule 128 (more_id -> id_array id_struct equal more_id .)


state 467

    (122) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 . close_brace

    close_brace     shift and go to state 512


state 468

    (137) more_array -> equal id open_brace lit_intposi . close_brace more_array

    close_brace     shift and go to state 513


state 469

    (139) for_statements -> For id In id open_brace close_brace colon open_bracket . inside_statements close_bracket
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 514
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 470

    (141) while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .

    id              reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Elif            reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Else            reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 141 (while_statements -> While open_par condition close_par colon open_bracket inside_statements close_bracket .)


state 471

    (173) if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 515
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 472

    (199) if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .

    id              reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    For             reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    While           reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    If              reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Switch          reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Sys_Call        reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Absorb          reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Discharge       reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Link_End        reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Sys             reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    $end            reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Break           reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Continue        reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Avoid           reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    close_bracket   reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Elif            reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Else            reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)
    Return          reduce using rule 199 (if_statement -> If open_par condition close_par colon open_bracket inside_statements condition_else .)


state 473

    (200) if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .

    id              reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    For             reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    While           reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    If              reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Switch          reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Sys             reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    $end            reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Break           reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Continue        reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Elif            reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Else            reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)
    Return          reduce using rule 200 (if_statement -> If open_par condition close_par colon inside_statements close_bracket condition_else .)


state 474

    (201) if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 201 (if_statement -> If open_par condition close_par open_bracket inside_statements close_bracket condition_else .)


state 475

    (202) if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 202 (if_statement -> If open_par condition colon open_bracket inside_statements close_bracket condition_else .)


state 476

    (207) elif_statement -> Elif open_par condition close_par . colon open_bracket inside_statements close_bracket condition_else

    colon           shift and go to state 516


state 477

    (208) else_statement -> Else colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 517


state 478

    (164) logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .

    close_par       reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    colon           reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    open_bracket    reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Break           reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Continue        reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Avoid           reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    id              reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    For             reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    While           reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    If              reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Switch          reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Sys_Call        reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Absorb          reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Discharge       reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    close_bracket   reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Elif            reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Else            reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Link_End        reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Sys             reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    $end            reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)
    Return          reduce using rule 164 (logical_expression -> open_par logical_operand close_par logical_operators open_par logical_operand close_par .)


state 479

    (203) if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 203 (if_statement -> If condition close_par colon open_bracket inside_statements close_bracket condition_else .)


state 480

    (210) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements . close_bracket End_Switch

    close_bracket   shift and go to state 518


state 481

    (211) execute -> Execute switch_lit colon statements . Break execute1

    Break           shift and go to state 519


state 482

    (30) array_dec1 -> comma id open_brace lit_intposi . close_brace array_dec1

    close_brace     shift and go to state 520


state 483

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 . close_brace array_const1

    close_brace     shift and go to state 521


state 484

    (42) id_const1 -> comma id equal value . id_const1
    (42) id_const1 -> . comma id equal value id_const1
    (43) id_const1 -> .

    comma           shift and go to state 325
    Generate        reduce using rule 43 (id_const1 -> .)
    Struct          reduce using rule 43 (id_const1 -> .)
    Link_Start      reduce using rule 43 (id_const1 -> .)
    id              reduce using rule 43 (id_const1 -> .)
    For             reduce using rule 43 (id_const1 -> .)
    While           reduce using rule 43 (id_const1 -> .)
    If              reduce using rule 43 (id_const1 -> .)
    Switch          reduce using rule 43 (id_const1 -> .)
    Sys_Call        reduce using rule 43 (id_const1 -> .)
    Absorb          reduce using rule 43 (id_const1 -> .)
    Discharge       reduce using rule 43 (id_const1 -> .)
    Link_End        reduce using rule 43 (id_const1 -> .)
    Sys             reduce using rule 43 (id_const1 -> .)
    $end            reduce using rule 43 (id_const1 -> .)
    Return          reduce using rule 43 (id_const1 -> .)
    close_bracket   reduce using rule 43 (id_const1 -> .)

    id_const1                      shift and go to state 522

state 485

    (56) array_var1 -> comma id open_brace . lit_intposi close_brace array_init array_var1

    lit_intposi     shift and go to state 523


state 486

    (54) array_init -> equal open_brace value1 close_brace . array_var1
    (56) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (57) array_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 391
    Generate        reduce using rule 57 (array_var1 -> .)
    Struct          reduce using rule 57 (array_var1 -> .)
    Link_Start      reduce using rule 57 (array_var1 -> .)
    id              reduce using rule 57 (array_var1 -> .)
    For             reduce using rule 57 (array_var1 -> .)
    While           reduce using rule 57 (array_var1 -> .)
    If              reduce using rule 57 (array_var1 -> .)
    Switch          reduce using rule 57 (array_var1 -> .)
    Sys_Call        reduce using rule 57 (array_var1 -> .)
    Absorb          reduce using rule 57 (array_var1 -> .)
    Discharge       reduce using rule 57 (array_var1 -> .)
    Link_End        reduce using rule 57 (array_var1 -> .)
    Sys             reduce using rule 57 (array_var1 -> .)
    $end            reduce using rule 57 (array_var1 -> .)
    Return          reduce using rule 57 (array_var1 -> .)
    close_bracket   reduce using rule 57 (array_var1 -> .)

  ! comma           [ reduce using rule 57 (array_var1 -> .) ]

    array_var1                     shift and go to state 524

state 487

    (104) value1 -> value value2 .

    close_brace     reduce using rule 104 (value1 -> value value2 .)


state 488

    (105) value2 -> comma . value1
    (104) value1 -> . value value2
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    close_brace     reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]

    value1                         shift and go to state 525
    value                          shift and go to state 442
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 489

    (227) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements . return_statement close_bracket functions
    (253) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements . return_statement functions
    (263) return_statement -> . Return value statements return_statement
    (264) return_statement -> .

    Return          shift and go to state 343
    close_bracket   reduce using rule 264 (return_statement -> .)
    Sys             reduce using rule 264 (return_statement -> .)
    $end            reduce using rule 264 (return_statement -> .)

    return_statement               shift and go to state 526

state 490

    (243) functions -> Sys id open_par parameters close_par declare_statements statements return_statement . functions
    (254) functions -> Sys id open_par parameters close_par declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 528
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 527

state 491

    (244) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement . functions
    (255) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 530
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 529

state 492

    (233) functions -> Sys id open_par parameters declare_statements statements return_statement functions .

    $end            reduce using rule 233 (functions -> Sys id open_par parameters declare_statements statements return_statement functions .)


state 493

    (245) functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 531

state 494

    (236) functions -> Sys id parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 236 (functions -> Sys id parameters declare_statements statements return_statement close_bracket functions .)


state 495

    (234) functions -> Sys id parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 234 (functions -> Sys id parameters close_par declare_statements statements return_statement functions .)


state 496

    (247) functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 532

state 497

    (246) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement . functions
    (256) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 534
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 533

state 498

    (235) functions -> Sys id parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 235 (functions -> Sys id parameters open_bracket declare_statements statements return_statement functions .)


state 499

    (248) functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 535

state 500

    (239) functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 239 (functions -> Sys open_par parameters declare_statements statements return_statement close_bracket functions .)


state 501

    (237) functions -> Sys open_par parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 237 (functions -> Sys open_par parameters close_par declare_statements statements return_statement functions .)


state 502

    (250) functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 536

state 503

    (249) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement . functions
    (257) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 538
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 537

state 504

    (238) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 238 (functions -> Sys open_par parameters open_bracket declare_statements statements return_statement functions .)


state 505

    (251) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 539

state 506

    (241) functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 241 (functions -> Sys parameters close_par declare_statements statements return_statement close_bracket functions .)


state 507

    (240) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 240 (functions -> Sys parameters close_par open_bracket declare_statements statements return_statement functions .)


state 508

    (252) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 540

state 509

    (263) return_statement -> Return value statements return_statement .

    close_bracket   reduce using rule 263 (return_statement -> Return value statements return_statement .)
    Sys             reduce using rule 263 (return_statement -> Return value statements return_statement .)
    $end            reduce using rule 263 (return_statement -> Return value statements return_statement .)


state 510

    (242) functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 242 (functions -> Sys parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 511

    (128) more_id -> id_array id_struct . equal more_id

    equal           shift and go to state 411


state 512

    (122) assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .

    id              reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    For             reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    While           reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    If              reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Switch          reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Sys_Call        reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Absorb          reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Discharge       reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Link_End        reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Sys             reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    $end            reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Break           reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Continue        reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Avoid           reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    close_bracket   reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Elif            reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Else            reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)
    Return          reduce using rule 122 (assignment_statements2 -> open_brace lit_intposi close_brace more_array equal open_brace value1 close_brace .)


state 513

    (137) more_array -> equal id open_brace lit_intposi close_brace . more_array
    (137) more_array -> . equal id open_brace lit_intposi close_brace more_array
    (138) more_array -> .

  ! shift/reduce conflict for equal resolved as shift
    equal           shift and go to state 276

  ! equal           [ reduce using rule 138 (more_array -> .) ]

    more_array                     shift and go to state 541

state 514

    (139) for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements . close_bracket

    close_bracket   shift and go to state 542


state 515

    (173) if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 173 (if_statement -> If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)


state 516

    (207) elif_statement -> Elif open_par condition close_par colon . open_bracket inside_statements close_bracket condition_else

    open_bracket    shift and go to state 543


state 517

    (208) else_statement -> Else colon open_bracket inside_statements close_bracket .

    id              reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Elif            reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Else            reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 208 (else_statement -> Else colon open_bracket inside_statements close_bracket .)


state 518

    (210) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket . End_Switch

    End_Switch      shift and go to state 544


state 519

    (211) execute -> Execute switch_lit colon statements Break . execute1
    (215) execute1 -> . execute
    (216) execute1 -> .
    (211) execute -> . Execute switch_lit colon statements Break execute1

    Default         reduce using rule 216 (execute1 -> .)
    Execute         shift and go to state 312

    execute1                       shift and go to state 545
    execute                        shift and go to state 546

state 520

    (30) array_dec1 -> comma id open_brace lit_intposi close_brace . array_dec1
    (30) array_dec1 -> . comma id open_brace lit_intposi close_brace array_dec1
    (31) array_dec1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 322
    Integer         reduce using rule 31 (array_dec1 -> .)
    Decimal         reduce using rule 31 (array_dec1 -> .)
    String          reduce using rule 31 (array_dec1 -> .)
    Boolean         reduce using rule 31 (array_dec1 -> .)
    id              reduce using rule 31 (array_dec1 -> .)
    close_bracket   reduce using rule 31 (array_dec1 -> .)
    Struct          reduce using rule 31 (array_dec1 -> .)
    Generate        reduce using rule 31 (array_dec1 -> .)
    Link_Start      reduce using rule 31 (array_dec1 -> .)
    For             reduce using rule 31 (array_dec1 -> .)
    While           reduce using rule 31 (array_dec1 -> .)
    If              reduce using rule 31 (array_dec1 -> .)
    Switch          reduce using rule 31 (array_dec1 -> .)
    Sys_Call        reduce using rule 31 (array_dec1 -> .)
    Absorb          reduce using rule 31 (array_dec1 -> .)
    Discharge       reduce using rule 31 (array_dec1 -> .)
    Link_End        reduce using rule 31 (array_dec1 -> .)
    Sys             reduce using rule 31 (array_dec1 -> .)
    $end            reduce using rule 31 (array_dec1 -> .)

  ! comma           [ reduce using rule 31 (array_dec1 -> .) ]

    array_dec1                     shift and go to state 547

state 521

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace . array_const1
    (44) array_const1 -> . comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (45) array_const1 -> .

    comma           shift and go to state 549
    Generate        reduce using rule 45 (array_const1 -> .)
    Struct          reduce using rule 45 (array_const1 -> .)
    Link_Start      reduce using rule 45 (array_const1 -> .)
    id              reduce using rule 45 (array_const1 -> .)
    For             reduce using rule 45 (array_const1 -> .)
    While           reduce using rule 45 (array_const1 -> .)
    If              reduce using rule 45 (array_const1 -> .)
    Switch          reduce using rule 45 (array_const1 -> .)
    Sys_Call        reduce using rule 45 (array_const1 -> .)
    Absorb          reduce using rule 45 (array_const1 -> .)
    Discharge       reduce using rule 45 (array_const1 -> .)
    Link_End        reduce using rule 45 (array_const1 -> .)
    Sys             reduce using rule 45 (array_const1 -> .)
    $end            reduce using rule 45 (array_const1 -> .)
    Return          reduce using rule 45 (array_const1 -> .)
    close_bracket   reduce using rule 45 (array_const1 -> .)

    array_const1                   shift and go to state 548

state 522

    (42) id_const1 -> comma id equal value id_const1 .

    Generate        reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Struct          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Link_Start      reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    id              reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    For             reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    While           reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    If              reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Switch          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Sys_Call        reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Absorb          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Discharge       reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Link_End        reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Sys             reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    $end            reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    Return          reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)
    close_bracket   reduce using rule 42 (id_const1 -> comma id equal value id_const1 .)


state 523

    (56) array_var1 -> comma id open_brace lit_intposi . close_brace array_init array_var1

    close_brace     shift and go to state 550


state 524

    (54) array_init -> equal open_brace value1 close_brace array_var1 .

    comma           reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Generate        reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Struct          reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Link_Start      reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    id              reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    For             reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    While           reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    If              reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Switch          reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Sys_Call        reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Absorb          reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Discharge       reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Link_End        reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Sys             reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    $end            reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    Return          reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)
    close_bracket   reduce using rule 54 (array_init -> equal open_brace value1 close_brace array_var1 .)


state 525

    (105) value2 -> comma value1 .

    close_brace     reduce using rule 105 (value2 -> comma value1 .)


state 526

    (227) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement . close_bracket functions
    (253) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    close_bracket   shift and go to state 551
    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 552

state 527

    (243) functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions .

    $end            reduce using rule 243 (functions -> Sys id open_par parameters close_par declare_statements statements return_statement functions .)


state 528

    (254) functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 553

state 529

    (244) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 244 (functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement functions .)


state 530

    (255) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 554

state 531

    (245) functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 245 (functions -> Sys id open_par parameters declare_statements statements return_statement close_bracket functions .)


state 532

    (247) functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 247 (functions -> Sys id parameters close_par declare_statements statements return_statement close_bracket functions .)


state 533

    (246) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 246 (functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement functions .)


state 534

    (256) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 555

state 535

    (248) functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 248 (functions -> Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 536

    (250) functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 250 (functions -> Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions .)


state 537

    (249) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 249 (functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions .)


state 538

    (257) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 556

state 539

    (251) functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 251 (functions -> Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 540

    (252) functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 252 (functions -> Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 541

    (137) more_array -> equal id open_brace lit_intposi close_brace more_array .

    equal           reduce using rule 137 (more_array -> equal id open_brace lit_intposi close_brace more_array .)


state 542

    (139) for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .

    id              reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    For             reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    While           reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    If              reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Switch          reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Sys_Call        reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Absorb          reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Discharge       reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Link_End        reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Sys             reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    $end            reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Break           reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Continue        reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Avoid           reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    close_bracket   reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Elif            reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Else            reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)
    Return          reduce using rule 139 (for_statements -> For id In id open_brace close_brace colon open_bracket inside_statements close_bracket .)


state 543

    (207) elif_statement -> Elif open_par condition close_par colon open_bracket . inside_statements close_bracket condition_else
    (143) inside_statements -> . statements control_statements
    (144) inside_statements -> . control_statements statements
    (145) inside_statements -> .
    (110) statements -> . assignment_statements statements
    (111) statements -> . for_statements statements
    (112) statements -> . while_statements statements
    (113) statements -> . if_statement statements
    (114) statements -> . switch_statements statements
    (115) statements -> . conditional_statements statements
    (116) statements -> . io_statements statements
    (117) statements -> . func_call statements
    (118) statements -> .
    (146) control_statements -> . Break
    (147) control_statements -> . Continue
    (148) control_statements -> . Avoid
    (149) control_statements -> .
    (119) assignment_statements -> . id assignment_statements2
    (120) assignment_statements -> .
    (139) for_statements -> . For id In id open_brace close_brace colon open_bracket inside_statements close_bracket
    (140) for_statements -> .
    (141) while_statements -> . While open_par condition close_par colon open_bracket inside_statements close_bracket
    (142) while_statements -> .
    (173) if_statement -> . If open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (174) if_statement -> . If open_par condition inside_statements condition_else
    (175) if_statement -> . If condition close_par inside_statements condition_else
    (176) if_statement -> . If condition colon inside_statements condition_else
    (177) if_statement -> . If condition open_bracket inside_statements condition_else
    (178) if_statement -> . If condition inside_statements close_bracket condition_else
    (179) if_statement -> . If open_par condition close_par inside_statements condition_else
    (180) if_statement -> . If open_par condition colon inside_statements condition_else
    (181) if_statement -> . If open_par condition open_bracket inside_statements condition_else
    (182) if_statement -> . If open_par condition inside_statements close_bracket condition_else
    (183) if_statement -> . If condition close_par colon inside_statements condition_else
    (184) if_statement -> . If condition close_par open_bracket inside_statements condition_else
    (185) if_statement -> . If condition close_par inside_statements close_bracket condition_else
    (186) if_statement -> . If condition colon open_bracket inside_statements condition_else
    (187) if_statement -> . If condition colon inside_statements close_bracket condition_else
    (188) if_statement -> . If condition open_bracket inside_statements close_bracket condition_else
    (189) if_statement -> . If open_par condition close_par colon inside_statements condition_else
    (190) if_statement -> . If open_par condition close_par open_bracket inside_statements condition_else
    (191) if_statement -> . If open_par condition close_par inside_statements close_bracket condition_else
    (192) if_statement -> . If open_par condition colon open_bracket inside_statements condition_else
    (193) if_statement -> . If open_par condition colon inside_statements close_bracket condition_else
    (194) if_statement -> . If open_par condition open_bracket inside_statements close_bracket condition_else
    (195) if_statement -> . If condition close_par colon open_bracket inside_statements condition_else
    (196) if_statement -> . If condition close_par colon inside_statements close_bracket condition_else
    (197) if_statement -> . If condition close_par open_bracket inside_statements close_bracket condition_else
    (198) if_statement -> . If condition colon open_bracket inside_statements close_bracket condition_else
    (199) if_statement -> . If open_par condition close_par colon open_bracket inside_statements condition_else
    (200) if_statement -> . If open_par condition close_par colon inside_statements close_bracket condition_else
    (201) if_statement -> . If open_par condition close_par open_bracket inside_statements close_bracket condition_else
    (202) if_statement -> . If open_par condition colon open_bracket inside_statements close_bracket condition_else
    (203) if_statement -> . If condition close_par colon open_bracket inside_statements close_bracket condition_else
    (210) switch_statements -> . Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch
    (171) conditional_statements -> . if_statement
    (172) conditional_statements -> . switch_statements
    (217) io_statements -> . input_statements
    (218) io_statements -> . output_statements
    (221) func_call -> . Sys_Call id open_par function_param close_par
    (219) input_statements -> . Absorb id_array id_struct
    (220) output_statements -> . Discharge value

  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! reduce/reduce conflict for For resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! reduce/reduce conflict for While resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for While resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for For resolved as shift
  ! shift/reduce conflict for While resolved as shift
  ! reduce/reduce conflict for If resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Switch resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 120 (assignment_statements -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 120 (assignment_statements -> .)
  ! shift/reduce conflict for Break resolved as shift
  ! shift/reduce conflict for Continue resolved as shift
  ! shift/reduce conflict for Avoid resolved as shift
  ! reduce/reduce conflict for close_bracket resolved using rule 118 (statements -> .)
  ! shift/reduce conflict for If resolved as shift
  ! shift/reduce conflict for Switch resolved as shift
  ! shift/reduce conflict for Sys_Call resolved as shift
  ! shift/reduce conflict for Absorb resolved as shift
  ! shift/reduce conflict for Discharge resolved as shift
    close_bracket   reduce using rule 118 (statements -> .)
    Break           shift and go to state 142
    Continue        shift and go to state 143
    Avoid           shift and go to state 144
    id              shift and go to state 32
    For             shift and go to state 33
    While           shift and go to state 34
    If              shift and go to state 35
    Switch          shift and go to state 36
    Sys_Call        shift and go to state 39
    Absorb          shift and go to state 40
    Discharge       shift and go to state 41

  ! close_bracket   [ reduce using rule 145 (inside_statements -> .) ]
  ! Break           [ reduce using rule 118 (statements -> .) ]
  ! Continue        [ reduce using rule 118 (statements -> .) ]
  ! Avoid           [ reduce using rule 118 (statements -> .) ]
  ! id              [ reduce using rule 149 (control_statements -> .) ]
  ! For             [ reduce using rule 149 (control_statements -> .) ]
  ! While           [ reduce using rule 149 (control_statements -> .) ]
  ! If              [ reduce using rule 149 (control_statements -> .) ]
  ! Switch          [ reduce using rule 149 (control_statements -> .) ]
  ! Sys_Call        [ reduce using rule 149 (control_statements -> .) ]
  ! Absorb          [ reduce using rule 149 (control_statements -> .) ]
  ! Discharge       [ reduce using rule 149 (control_statements -> .) ]
  ! close_bracket   [ reduce using rule 149 (control_statements -> .) ]
  ! id              [ reduce using rule 120 (assignment_statements -> .) ]
  ! For             [ reduce using rule 120 (assignment_statements -> .) ]
  ! While           [ reduce using rule 120 (assignment_statements -> .) ]
  ! If              [ reduce using rule 120 (assignment_statements -> .) ]
  ! Switch          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Sys_Call        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Absorb          [ reduce using rule 120 (assignment_statements -> .) ]
  ! Discharge       [ reduce using rule 120 (assignment_statements -> .) ]
  ! Break           [ reduce using rule 120 (assignment_statements -> .) ]
  ! Continue        [ reduce using rule 120 (assignment_statements -> .) ]
  ! Avoid           [ reduce using rule 120 (assignment_statements -> .) ]
  ! close_bracket   [ reduce using rule 120 (assignment_statements -> .) ]
  ! id              [ reduce using rule 140 (for_statements -> .) ]
  ! For             [ reduce using rule 140 (for_statements -> .) ]
  ! While           [ reduce using rule 140 (for_statements -> .) ]
  ! If              [ reduce using rule 140 (for_statements -> .) ]
  ! Switch          [ reduce using rule 140 (for_statements -> .) ]
  ! Sys_Call        [ reduce using rule 140 (for_statements -> .) ]
  ! Absorb          [ reduce using rule 140 (for_statements -> .) ]
  ! Discharge       [ reduce using rule 140 (for_statements -> .) ]
  ! Break           [ reduce using rule 140 (for_statements -> .) ]
  ! Continue        [ reduce using rule 140 (for_statements -> .) ]
  ! Avoid           [ reduce using rule 140 (for_statements -> .) ]
  ! close_bracket   [ reduce using rule 140 (for_statements -> .) ]
  ! id              [ reduce using rule 142 (while_statements -> .) ]
  ! For             [ reduce using rule 142 (while_statements -> .) ]
  ! While           [ reduce using rule 142 (while_statements -> .) ]
  ! If              [ reduce using rule 142 (while_statements -> .) ]
  ! Switch          [ reduce using rule 142 (while_statements -> .) ]
  ! Sys_Call        [ reduce using rule 142 (while_statements -> .) ]
  ! Absorb          [ reduce using rule 142 (while_statements -> .) ]
  ! Discharge       [ reduce using rule 142 (while_statements -> .) ]
  ! Break           [ reduce using rule 142 (while_statements -> .) ]
  ! Continue        [ reduce using rule 142 (while_statements -> .) ]
  ! Avoid           [ reduce using rule 142 (while_statements -> .) ]
  ! close_bracket   [ reduce using rule 142 (while_statements -> .) ]

    inside_statements              shift and go to state 557
    statements                     shift and go to state 140
    control_statements             shift and go to state 141
    assignment_statements          shift and go to state 24
    for_statements                 shift and go to state 25
    while_statements               shift and go to state 26
    if_statement                   shift and go to state 27
    switch_statements              shift and go to state 28
    conditional_statements         shift and go to state 29
    io_statements                  shift and go to state 30
    func_call                      shift and go to state 31
    input_statements               shift and go to state 37
    output_statements              shift and go to state 38

state 544

    (210) switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .

    id              reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    For             reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    While           reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    If              reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Switch          reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Sys_Call        reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Absorb          reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Discharge       reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Link_End        reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Sys             reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    $end            reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Break           reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Continue        reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Avoid           reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    close_bracket   reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Elif            reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Else            reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)
    Return          reduce using rule 210 (switch_statements -> Switch id colon open_bracket execute Default colon inside_statements close_bracket End_Switch .)


state 545

    (211) execute -> Execute switch_lit colon statements Break execute1 .

    Default         reduce using rule 211 (execute -> Execute switch_lit colon statements Break execute1 .)


state 546

    (215) execute1 -> execute .

    Default         reduce using rule 215 (execute1 -> execute .)


state 547

    (30) array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .

    Integer         reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Decimal         reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    String          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Boolean         reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    id              reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    close_bracket   reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    comma           reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Struct          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Generate        reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Link_Start      reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    For             reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    While           reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    If              reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Switch          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Sys_Call        reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Absorb          reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Discharge       reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Link_End        reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    Sys             reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)
    $end            reduce using rule 30 (array_dec1 -> comma id open_brace lit_intposi close_brace array_dec1 .)


state 548

    (39) id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .

    Generate        reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Struct          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_Start      reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    id              reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    For             reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    While           reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    If              reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Switch          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys_Call        reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Absorb          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Discharge       reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_End        reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys             reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    $end            reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Return          reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    close_bracket   reduce using rule 39 (id_array_const2 -> open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)


state 549

    (44) array_const1 -> comma . id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1

    id              shift and go to state 558


state 550

    (56) array_var1 -> comma id open_brace lit_intposi close_brace . array_init array_var1
    (54) array_init -> . equal open_brace value1 close_brace array_var1
    (55) array_init -> .

    equal           shift and go to state 328
    comma           reduce using rule 55 (array_init -> .)
    Generate        reduce using rule 55 (array_init -> .)
    Struct          reduce using rule 55 (array_init -> .)
    Link_Start      reduce using rule 55 (array_init -> .)
    id              reduce using rule 55 (array_init -> .)
    For             reduce using rule 55 (array_init -> .)
    While           reduce using rule 55 (array_init -> .)
    If              reduce using rule 55 (array_init -> .)
    Switch          reduce using rule 55 (array_init -> .)
    Sys_Call        reduce using rule 55 (array_init -> .)
    Absorb          reduce using rule 55 (array_init -> .)
    Discharge       reduce using rule 55 (array_init -> .)
    Link_End        reduce using rule 55 (array_init -> .)
    Sys             reduce using rule 55 (array_init -> .)
    $end            reduce using rule 55 (array_init -> .)
    Return          reduce using rule 55 (array_init -> .)
    close_bracket   reduce using rule 55 (array_init -> .)

    array_init                     shift and go to state 559

state 551

    (227) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket . functions
    (227) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (228) functions -> . Sys id parameters declare_statements statements return_statement functions
    (229) functions -> . Sys open_par parameters declare_statements statements return_statement functions
    (230) functions -> . Sys parameters close_par declare_statements statements return_statement functions
    (231) functions -> . Sys parameters open_bracket declare_statements statements return_statement functions
    (232) functions -> . Sys parameters declare_statements statements return_statement close_bracket functions
    (233) functions -> . Sys id open_par parameters declare_statements statements return_statement functions
    (234) functions -> . Sys id parameters close_par declare_statements statements return_statement functions
    (235) functions -> . Sys id parameters open_bracket declare_statements statements return_statement functions
    (236) functions -> . Sys id parameters declare_statements statements return_statement close_bracket functions
    (237) functions -> . Sys open_par parameters close_par declare_statements statements return_statement functions
    (238) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement functions
    (239) functions -> . Sys open_par parameters declare_statements statements return_statement close_bracket functions
    (240) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement functions
    (241) functions -> . Sys parameters close_par declare_statements statements return_statement close_bracket functions
    (242) functions -> . Sys parameters open_bracket declare_statements statements return_statement close_bracket functions
    (243) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement functions
    (244) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement functions
    (245) functions -> . Sys id open_par parameters declare_statements statements return_statement close_bracket functions
    (246) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement functions
    (247) functions -> . Sys id parameters close_par declare_statements statements return_statement close_bracket functions
    (248) functions -> . Sys id parameters open_bracket declare_statements statements return_statement close_bracket functions
    (249) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (250) functions -> . Sys open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (251) functions -> . Sys open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (252) functions -> . Sys parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (253) functions -> . Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions
    (254) functions -> . Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions
    (255) functions -> . Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions
    (256) functions -> . Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (257) functions -> . Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions
    (258) functions -> .

    Sys             shift and go to state 55
    $end            reduce using rule 258 (functions -> .)

    functions                      shift and go to state 560

state 552

    (253) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions .

    $end            reduce using rule 253 (functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement functions .)


state 553

    (254) functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 254 (functions -> Sys id open_par parameters close_par declare_statements statements return_statement close_bracket functions .)


state 554

    (255) functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 255 (functions -> Sys id open_par parameters open_bracket declare_statements statements return_statement close_bracket functions .)


state 555

    (256) functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 256 (functions -> Sys id parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 556

    (257) functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 257 (functions -> Sys open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 557

    (207) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements . close_bracket condition_else

    close_bracket   shift and go to state 561


state 558

    (44) array_const1 -> comma id . open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1

    open_brace      shift and go to state 562


state 559

    (56) array_var1 -> comma id open_brace lit_intposi close_brace array_init . array_var1
    (56) array_var1 -> . comma id open_brace lit_intposi close_brace array_init array_var1
    (57) array_var1 -> .

  ! shift/reduce conflict for comma resolved as shift
    comma           shift and go to state 391
    Generate        reduce using rule 57 (array_var1 -> .)
    Struct          reduce using rule 57 (array_var1 -> .)
    Link_Start      reduce using rule 57 (array_var1 -> .)
    id              reduce using rule 57 (array_var1 -> .)
    For             reduce using rule 57 (array_var1 -> .)
    While           reduce using rule 57 (array_var1 -> .)
    If              reduce using rule 57 (array_var1 -> .)
    Switch          reduce using rule 57 (array_var1 -> .)
    Sys_Call        reduce using rule 57 (array_var1 -> .)
    Absorb          reduce using rule 57 (array_var1 -> .)
    Discharge       reduce using rule 57 (array_var1 -> .)
    Link_End        reduce using rule 57 (array_var1 -> .)
    Sys             reduce using rule 57 (array_var1 -> .)
    $end            reduce using rule 57 (array_var1 -> .)
    Return          reduce using rule 57 (array_var1 -> .)
    close_bracket   reduce using rule 57 (array_var1 -> .)

  ! comma           [ reduce using rule 57 (array_var1 -> .) ]

    array_var1                     shift and go to state 563

state 560

    (227) functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .

    $end            reduce using rule 227 (functions -> Sys id open_par parameters close_par open_bracket declare_statements statements return_statement close_bracket functions .)


state 561

    (207) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket . condition_else
    (204) condition_else -> . elif_statement
    (205) condition_else -> . else_statement
    (206) condition_else -> .
    (207) elif_statement -> . Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else
    (208) else_statement -> . Else colon open_bracket inside_statements close_bracket
    (209) else_statement -> .

  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for id resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for For resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for While resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for If resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Switch resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys_Call resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Absorb resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Discharge resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Link_End resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Sys resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for $end resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Break resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Continue resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for Avoid resolved using rule 206 (condition_else -> .)
  ! reduce/reduce conflict for close_bracket resolved using rule 206 (condition_else -> .)
  ! shift/reduce conflict for Elif resolved as shift
  ! shift/reduce conflict for Else resolved as shift
  ! reduce/reduce conflict for Return resolved using rule 206 (condition_else -> .)
    id              reduce using rule 206 (condition_else -> .)
    For             reduce using rule 206 (condition_else -> .)
    While           reduce using rule 206 (condition_else -> .)
    If              reduce using rule 206 (condition_else -> .)
    Switch          reduce using rule 206 (condition_else -> .)
    Sys_Call        reduce using rule 206 (condition_else -> .)
    Absorb          reduce using rule 206 (condition_else -> .)
    Discharge       reduce using rule 206 (condition_else -> .)
    Link_End        reduce using rule 206 (condition_else -> .)
    Sys             reduce using rule 206 (condition_else -> .)
    $end            reduce using rule 206 (condition_else -> .)
    Break           reduce using rule 206 (condition_else -> .)
    Continue        reduce using rule 206 (condition_else -> .)
    Avoid           reduce using rule 206 (condition_else -> .)
    close_bracket   reduce using rule 206 (condition_else -> .)
    Return          reduce using rule 206 (condition_else -> .)
    Elif            shift and go to state 290
    Else            shift and go to state 291

  ! Elif            [ reduce using rule 206 (condition_else -> .) ]
  ! Else            [ reduce using rule 206 (condition_else -> .) ]
  ! id              [ reduce using rule 209 (else_statement -> .) ]
  ! For             [ reduce using rule 209 (else_statement -> .) ]
  ! While           [ reduce using rule 209 (else_statement -> .) ]
  ! If              [ reduce using rule 209 (else_statement -> .) ]
  ! Switch          [ reduce using rule 209 (else_statement -> .) ]
  ! Sys_Call        [ reduce using rule 209 (else_statement -> .) ]
  ! Absorb          [ reduce using rule 209 (else_statement -> .) ]
  ! Discharge       [ reduce using rule 209 (else_statement -> .) ]
  ! Link_End        [ reduce using rule 209 (else_statement -> .) ]
  ! Sys             [ reduce using rule 209 (else_statement -> .) ]
  ! $end            [ reduce using rule 209 (else_statement -> .) ]
  ! Break           [ reduce using rule 209 (else_statement -> .) ]
  ! Continue        [ reduce using rule 209 (else_statement -> .) ]
  ! Avoid           [ reduce using rule 209 (else_statement -> .) ]
  ! close_bracket   [ reduce using rule 209 (else_statement -> .) ]
  ! Elif            [ reduce using rule 209 (else_statement -> .) ]
  ! Else            [ reduce using rule 209 (else_statement -> .) ]
  ! Return          [ reduce using rule 209 (else_statement -> .) ]

    condition_else                 shift and go to state 564
    elif_statement                 shift and go to state 288
    else_statement                 shift and go to state 289

state 562

    (44) array_const1 -> comma id open_brace . lit_intposi close_brace equal open_brace value1 close_brace array_const1

    lit_intposi     shift and go to state 565


state 563

    (56) array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .

    Generate        reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Struct          reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Link_Start      reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    id              reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    For             reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    While           reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    If              reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Switch          reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Sys_Call        reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Absorb          reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Discharge       reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Link_End        reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Sys             reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    $end            reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    Return          reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    close_bracket   reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)
    comma           reduce using rule 56 (array_var1 -> comma id open_brace lit_intposi close_brace array_init array_var1 .)


state 564

    (207) elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .

    id              reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    For             reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    While           reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    If              reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Switch          reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys_Call        reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Absorb          reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Discharge       reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Link_End        reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Sys             reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    $end            reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Break           reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Continue        reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Avoid           reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    close_bracket   reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Elif            reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Else            reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)
    Return          reduce using rule 207 (elif_statement -> Elif open_par condition close_par colon open_bracket inside_statements close_bracket condition_else .)


state 565

    (44) array_const1 -> comma id open_brace lit_intposi . close_brace equal open_brace value1 close_brace array_const1

    close_brace     shift and go to state 566


state 566

    (44) array_const1 -> comma id open_brace lit_intposi close_brace . equal open_brace value1 close_brace array_const1

    equal           shift and go to state 567


state 567

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal . open_brace value1 close_brace array_const1

    open_brace      shift and go to state 568


state 568

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace . value1 close_brace array_const1
    (104) value1 -> . value value2
    (58) value -> . num_value
    (59) value -> . lit_str
    (60) value -> . lit_bool
    (61) value -> .
    (65) num_value -> . id_array id_struct
    (66) num_value -> . literals
    (67) num_value -> . arithmetic_expression
    (68) num_value -> . func_call
    (69) num_value -> .
    (74) id_array -> . id array
    (75) id_array -> .
    (84) literals -> . lit_intposi
    (85) literals -> . lit_intnega
    (86) literals -> . lit_decposi
    (87) literals -> . lit_decnega
    (88) literals -> .
    (93) arithmetic_expression -> . open_par arithmetic_expression close_par
    (94) arithmetic_expression -> . num_value arithmetic_operators num_value
    (221) func_call -> . Sys_Call id open_par function_param close_par

  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for plus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for minus resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for divide_divide resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for modulo resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for times_times resolved using rule 69 (num_value -> .)
  ! reduce/reduce conflict for comma resolved using rule 61 (value -> .)
  ! reduce/reduce conflict for close_brace resolved using rule 61 (value -> .)
    lit_str         shift and go to state 77
    lit_bool        shift and go to state 91
    comma           reduce using rule 61 (value -> .)
    close_brace     reduce using rule 61 (value -> .)
    plus            reduce using rule 69 (num_value -> .)
    minus           reduce using rule 69 (num_value -> .)
    times           reduce using rule 69 (num_value -> .)
    divide          reduce using rule 69 (num_value -> .)
    divide_divide   reduce using rule 69 (num_value -> .)
    modulo          reduce using rule 69 (num_value -> .)
    times_times     reduce using rule 69 (num_value -> .)
    id              shift and go to state 82
    period          reduce using rule 75 (id_array -> .)
    lit_intposi     shift and go to state 83
    lit_intnega     shift and go to state 84
    lit_decposi     shift and go to state 85
    lit_decnega     shift and go to state 86
    open_par        shift and go to state 92
    Sys_Call        shift and go to state 39

  ! comma           [ reduce using rule 69 (num_value -> .) ]
  ! close_brace     [ reduce using rule 69 (num_value -> .) ]
  ! plus            [ reduce using rule 75 (id_array -> .) ]
  ! minus           [ reduce using rule 75 (id_array -> .) ]
  ! times           [ reduce using rule 75 (id_array -> .) ]
  ! divide          [ reduce using rule 75 (id_array -> .) ]
  ! divide_divide   [ reduce using rule 75 (id_array -> .) ]
  ! modulo          [ reduce using rule 75 (id_array -> .) ]
  ! times_times     [ reduce using rule 75 (id_array -> .) ]
  ! comma           [ reduce using rule 75 (id_array -> .) ]
  ! close_brace     [ reduce using rule 75 (id_array -> .) ]
  ! plus            [ reduce using rule 88 (literals -> .) ]
  ! minus           [ reduce using rule 88 (literals -> .) ]
  ! times           [ reduce using rule 88 (literals -> .) ]
  ! divide          [ reduce using rule 88 (literals -> .) ]
  ! divide_divide   [ reduce using rule 88 (literals -> .) ]
  ! modulo          [ reduce using rule 88 (literals -> .) ]
  ! times_times     [ reduce using rule 88 (literals -> .) ]
  ! comma           [ reduce using rule 88 (literals -> .) ]
  ! close_brace     [ reduce using rule 88 (literals -> .) ]

    value1                         shift and go to state 569
    value                          shift and go to state 442
    num_value                      shift and go to state 76
    id_array                       shift and go to state 78
    literals                       shift and go to state 79
    arithmetic_expression          shift and go to state 80
    func_call                      shift and go to state 81

state 569

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 . close_brace array_const1

    close_brace     shift and go to state 570


state 570

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace . array_const1
    (44) array_const1 -> . comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1
    (45) array_const1 -> .

    comma           shift and go to state 549
    Generate        reduce using rule 45 (array_const1 -> .)
    Struct          reduce using rule 45 (array_const1 -> .)
    Link_Start      reduce using rule 45 (array_const1 -> .)
    id              reduce using rule 45 (array_const1 -> .)
    For             reduce using rule 45 (array_const1 -> .)
    While           reduce using rule 45 (array_const1 -> .)
    If              reduce using rule 45 (array_const1 -> .)
    Switch          reduce using rule 45 (array_const1 -> .)
    Sys_Call        reduce using rule 45 (array_const1 -> .)
    Absorb          reduce using rule 45 (array_const1 -> .)
    Discharge       reduce using rule 45 (array_const1 -> .)
    Link_End        reduce using rule 45 (array_const1 -> .)
    Sys             reduce using rule 45 (array_const1 -> .)
    $end            reduce using rule 45 (array_const1 -> .)
    Return          reduce using rule 45 (array_const1 -> .)
    close_bracket   reduce using rule 45 (array_const1 -> .)

    array_const1                   shift and go to state 571

state 571

    (44) array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .

    Generate        reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Struct          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_Start      reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    id              reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    For             reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    While           reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    If              reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Switch          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys_Call        reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Absorb          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Discharge       reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Link_End        reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Sys             reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    $end            reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    Return          reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)
    close_bracket   reduce using rule 44 (array_const1 -> comma id open_brace lit_intposi close_brace equal open_brace value1 close_brace array_const1 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Struct in state 0 resolved as shift
WARNING: shift/reduce conflict for Generate in state 0 resolved as shift
WARNING: shift/reduce conflict for Struct in state 0 resolved as shift
WARNING: shift/reduce conflict for Generate in state 0 resolved as shift
WARNING: shift/reduce conflict for Struct in state 3 resolved as shift
WARNING: shift/reduce conflict for Generate in state 3 resolved as shift
WARNING: shift/reduce conflict for Struct in state 3 resolved as shift
WARNING: shift/reduce conflict for Generate in state 3 resolved as shift
WARNING: shift/reduce conflict for Struct in state 4 resolved as shift
WARNING: shift/reduce conflict for Generate in state 4 resolved as shift
WARNING: shift/reduce conflict for Struct in state 4 resolved as shift
WARNING: shift/reduce conflict for Generate in state 4 resolved as shift
WARNING: shift/reduce conflict for id in state 5 resolved as shift
WARNING: shift/reduce conflict for Integer in state 5 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 5 resolved as shift
WARNING: shift/reduce conflict for String in state 5 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 5 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for id in state 8 resolved as shift
WARNING: shift/reduce conflict for For in state 8 resolved as shift
WARNING: shift/reduce conflict for While in state 8 resolved as shift
WARNING: shift/reduce conflict for If in state 8 resolved as shift
WARNING: shift/reduce conflict for Switch in state 8 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 8 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 8 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 8 resolved as shift
WARNING: shift/reduce conflict for Integer in state 11 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 11 resolved as shift
WARNING: shift/reduce conflict for String in state 11 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 11 resolved as shift
WARNING: shift/reduce conflict for Integer in state 12 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 12 resolved as shift
WARNING: shift/reduce conflict for String in state 12 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 12 resolved as shift
WARNING: shift/reduce conflict for id in state 14 resolved as shift
WARNING: shift/reduce conflict for Generate in state 19 resolved as shift
WARNING: shift/reduce conflict for id in state 21 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 22 resolved as shift
WARNING: shift/reduce conflict for For in state 22 resolved as shift
WARNING: shift/reduce conflict for While in state 22 resolved as shift
WARNING: shift/reduce conflict for If in state 22 resolved as shift
WARNING: shift/reduce conflict for Switch in state 22 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 22 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 22 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 22 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 24 resolved as shift
WARNING: shift/reduce conflict for For in state 24 resolved as shift
WARNING: shift/reduce conflict for While in state 24 resolved as shift
WARNING: shift/reduce conflict for If in state 24 resolved as shift
WARNING: shift/reduce conflict for Switch in state 24 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 24 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 24 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 24 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 25 resolved as shift
WARNING: shift/reduce conflict for For in state 25 resolved as shift
WARNING: shift/reduce conflict for While in state 25 resolved as shift
WARNING: shift/reduce conflict for If in state 25 resolved as shift
WARNING: shift/reduce conflict for Switch in state 25 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 25 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 25 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 25 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 26 resolved as shift
WARNING: shift/reduce conflict for For in state 26 resolved as shift
WARNING: shift/reduce conflict for While in state 26 resolved as shift
WARNING: shift/reduce conflict for If in state 26 resolved as shift
WARNING: shift/reduce conflict for Switch in state 26 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 26 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 26 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 26 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 27 resolved as shift
WARNING: shift/reduce conflict for For in state 27 resolved as shift
WARNING: shift/reduce conflict for While in state 27 resolved as shift
WARNING: shift/reduce conflict for If in state 27 resolved as shift
WARNING: shift/reduce conflict for Switch in state 27 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 27 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 27 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 27 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 28 resolved as shift
WARNING: shift/reduce conflict for For in state 28 resolved as shift
WARNING: shift/reduce conflict for While in state 28 resolved as shift
WARNING: shift/reduce conflict for If in state 28 resolved as shift
WARNING: shift/reduce conflict for Switch in state 28 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 28 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 28 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 28 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 29 resolved as shift
WARNING: shift/reduce conflict for For in state 29 resolved as shift
WARNING: shift/reduce conflict for While in state 29 resolved as shift
WARNING: shift/reduce conflict for If in state 29 resolved as shift
WARNING: shift/reduce conflict for Switch in state 29 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 29 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 29 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 29 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for For in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for For in state 30 resolved as shift
WARNING: shift/reduce conflict for While in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 30 resolved as shift
WARNING: shift/reduce conflict for For in state 30 resolved as shift
WARNING: shift/reduce conflict for While in state 30 resolved as shift
WARNING: shift/reduce conflict for If in state 30 resolved as shift
WARNING: shift/reduce conflict for Switch in state 30 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 30 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 30 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 30 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for For in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for For in state 31 resolved as shift
WARNING: shift/reduce conflict for While in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 31 resolved as shift
WARNING: shift/reduce conflict for For in state 31 resolved as shift
WARNING: shift/reduce conflict for While in state 31 resolved as shift
WARNING: shift/reduce conflict for If in state 31 resolved as shift
WARNING: shift/reduce conflict for Switch in state 31 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 31 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 31 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 31 resolved as shift
WARNING: shift/reduce conflict for id in state 40 resolved as shift
WARNING: shift/reduce conflict for id in state 41 resolved as shift
WARNING: shift/reduce conflict for id in state 41 resolved as shift
WARNING: shift/reduce conflict for id in state 41 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 41 resolved as shift
WARNING: shift/reduce conflict for Integer in state 42 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 42 resolved as shift
WARNING: shift/reduce conflict for String in state 42 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 42 resolved as shift
WARNING: shift/reduce conflict for id in state 43 resolved as shift
WARNING: shift/reduce conflict for id in state 43 resolved as shift
WARNING: shift/reduce conflict for id in state 44 resolved as shift
WARNING: shift/reduce conflict for id in state 44 resolved as shift
WARNING: shift/reduce conflict for id in state 45 resolved as shift
WARNING: shift/reduce conflict for id in state 45 resolved as shift
WARNING: shift/reduce conflict for Integer in state 46 resolved as shift
WARNING: shift/reduce conflict for Decimal in state 46 resolved as shift
WARNING: shift/reduce conflict for String in state 46 resolved as shift
WARNING: shift/reduce conflict for Boolean in state 46 resolved as shift
WARNING: shift/reduce conflict for comma in state 47 resolved as shift
WARNING: shift/reduce conflict for id in state 49 resolved as shift
WARNING: shift/reduce conflict for id in state 55 resolved as shift
WARNING: shift/reduce conflict for id in state 55 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 66 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 66 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 66 resolved as shift
WARNING: shift/reduce conflict for Break in state 70 resolved as shift
WARNING: shift/reduce conflict for Continue in state 70 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 70 resolved as shift
WARNING: shift/reduce conflict for id in state 70 resolved as shift
WARNING: shift/reduce conflict for id in state 70 resolved as shift
WARNING: shift/reduce conflict for Break in state 70 resolved as shift
WARNING: shift/reduce conflict for Continue in state 70 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 70 resolved as shift
WARNING: shift/reduce conflict for For in state 70 resolved as shift
WARNING: shift/reduce conflict for id in state 70 resolved as shift
WARNING: shift/reduce conflict for For in state 70 resolved as shift
WARNING: shift/reduce conflict for Break in state 70 resolved as shift
WARNING: shift/reduce conflict for Continue in state 70 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 70 resolved as shift
WARNING: shift/reduce conflict for While in state 70 resolved as shift
WARNING: shift/reduce conflict for id in state 70 resolved as shift
WARNING: shift/reduce conflict for For in state 70 resolved as shift
WARNING: shift/reduce conflict for While in state 70 resolved as shift
WARNING: shift/reduce conflict for Break in state 70 resolved as shift
WARNING: shift/reduce conflict for Continue in state 70 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 70 resolved as shift
WARNING: shift/reduce conflict for If in state 70 resolved as shift
WARNING: shift/reduce conflict for Switch in state 70 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 70 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 70 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 70 resolved as shift
WARNING: shift/reduce conflict for id in state 93 resolved as shift
WARNING: shift/reduce conflict for id in state 93 resolved as shift
WARNING: shift/reduce conflict for id in state 95 resolved as shift
WARNING: shift/reduce conflict for id in state 95 resolved as shift
WARNING: shift/reduce conflict for id in state 98 resolved as shift
WARNING: shift/reduce conflict for id in state 98 resolved as shift
WARNING: shift/reduce conflict for id in state 111 resolved as shift
WARNING: shift/reduce conflict for id in state 111 resolved as shift
WARNING: shift/reduce conflict for id in state 111 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 111 resolved as shift
WARNING: shift/reduce conflict for id in state 120 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 121 resolved as shift
WARNING: shift/reduce conflict for Break in state 128 resolved as shift
WARNING: shift/reduce conflict for Continue in state 128 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 128 resolved as shift
WARNING: shift/reduce conflict for Break in state 128 resolved as shift
WARNING: shift/reduce conflict for Continue in state 128 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 128 resolved as shift
WARNING: shift/reduce conflict for id in state 128 resolved as shift
WARNING: shift/reduce conflict for id in state 128 resolved as shift
WARNING: shift/reduce conflict for Break in state 128 resolved as shift
WARNING: shift/reduce conflict for Continue in state 128 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 128 resolved as shift
WARNING: shift/reduce conflict for For in state 128 resolved as shift
WARNING: shift/reduce conflict for id in state 128 resolved as shift
WARNING: shift/reduce conflict for For in state 128 resolved as shift
WARNING: shift/reduce conflict for Break in state 128 resolved as shift
WARNING: shift/reduce conflict for Continue in state 128 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 128 resolved as shift
WARNING: shift/reduce conflict for While in state 128 resolved as shift
WARNING: shift/reduce conflict for id in state 128 resolved as shift
WARNING: shift/reduce conflict for For in state 128 resolved as shift
WARNING: shift/reduce conflict for While in state 128 resolved as shift
WARNING: shift/reduce conflict for Break in state 128 resolved as shift
WARNING: shift/reduce conflict for Continue in state 128 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 128 resolved as shift
WARNING: shift/reduce conflict for If in state 128 resolved as shift
WARNING: shift/reduce conflict for Switch in state 128 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 128 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 128 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 128 resolved as shift
WARNING: shift/reduce conflict for Break in state 136 resolved as shift
WARNING: shift/reduce conflict for Continue in state 136 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 136 resolved as shift
WARNING: shift/reduce conflict for Break in state 136 resolved as shift
WARNING: shift/reduce conflict for Continue in state 136 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 136 resolved as shift
WARNING: shift/reduce conflict for id in state 136 resolved as shift
WARNING: shift/reduce conflict for id in state 136 resolved as shift
WARNING: shift/reduce conflict for Break in state 136 resolved as shift
WARNING: shift/reduce conflict for Continue in state 136 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 136 resolved as shift
WARNING: shift/reduce conflict for For in state 136 resolved as shift
WARNING: shift/reduce conflict for id in state 136 resolved as shift
WARNING: shift/reduce conflict for For in state 136 resolved as shift
WARNING: shift/reduce conflict for Break in state 136 resolved as shift
WARNING: shift/reduce conflict for Continue in state 136 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 136 resolved as shift
WARNING: shift/reduce conflict for While in state 136 resolved as shift
WARNING: shift/reduce conflict for id in state 136 resolved as shift
WARNING: shift/reduce conflict for For in state 136 resolved as shift
WARNING: shift/reduce conflict for While in state 136 resolved as shift
WARNING: shift/reduce conflict for Break in state 136 resolved as shift
WARNING: shift/reduce conflict for Continue in state 136 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 136 resolved as shift
WARNING: shift/reduce conflict for If in state 136 resolved as shift
WARNING: shift/reduce conflict for Switch in state 136 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 136 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 136 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 136 resolved as shift
WARNING: shift/reduce conflict for Break in state 138 resolved as shift
WARNING: shift/reduce conflict for Continue in state 138 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 138 resolved as shift
WARNING: shift/reduce conflict for Break in state 138 resolved as shift
WARNING: shift/reduce conflict for Continue in state 138 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 138 resolved as shift
WARNING: shift/reduce conflict for id in state 138 resolved as shift
WARNING: shift/reduce conflict for id in state 138 resolved as shift
WARNING: shift/reduce conflict for Break in state 138 resolved as shift
WARNING: shift/reduce conflict for Continue in state 138 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 138 resolved as shift
WARNING: shift/reduce conflict for For in state 138 resolved as shift
WARNING: shift/reduce conflict for id in state 138 resolved as shift
WARNING: shift/reduce conflict for For in state 138 resolved as shift
WARNING: shift/reduce conflict for Break in state 138 resolved as shift
WARNING: shift/reduce conflict for Continue in state 138 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 138 resolved as shift
WARNING: shift/reduce conflict for While in state 138 resolved as shift
WARNING: shift/reduce conflict for id in state 138 resolved as shift
WARNING: shift/reduce conflict for For in state 138 resolved as shift
WARNING: shift/reduce conflict for While in state 138 resolved as shift
WARNING: shift/reduce conflict for Break in state 138 resolved as shift
WARNING: shift/reduce conflict for Continue in state 138 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 138 resolved as shift
WARNING: shift/reduce conflict for If in state 138 resolved as shift
WARNING: shift/reduce conflict for Switch in state 138 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 138 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 138 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 138 resolved as shift
WARNING: shift/reduce conflict for Break in state 139 resolved as shift
WARNING: shift/reduce conflict for Continue in state 139 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 139 resolved as shift
WARNING: shift/reduce conflict for Break in state 139 resolved as shift
WARNING: shift/reduce conflict for Continue in state 139 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 139 resolved as shift
WARNING: shift/reduce conflict for id in state 139 resolved as shift
WARNING: shift/reduce conflict for id in state 139 resolved as shift
WARNING: shift/reduce conflict for Break in state 139 resolved as shift
WARNING: shift/reduce conflict for Continue in state 139 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 139 resolved as shift
WARNING: shift/reduce conflict for For in state 139 resolved as shift
WARNING: shift/reduce conflict for id in state 139 resolved as shift
WARNING: shift/reduce conflict for For in state 139 resolved as shift
WARNING: shift/reduce conflict for Break in state 139 resolved as shift
WARNING: shift/reduce conflict for Continue in state 139 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 139 resolved as shift
WARNING: shift/reduce conflict for While in state 139 resolved as shift
WARNING: shift/reduce conflict for id in state 139 resolved as shift
WARNING: shift/reduce conflict for For in state 139 resolved as shift
WARNING: shift/reduce conflict for While in state 139 resolved as shift
WARNING: shift/reduce conflict for Break in state 139 resolved as shift
WARNING: shift/reduce conflict for Continue in state 139 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 139 resolved as shift
WARNING: shift/reduce conflict for If in state 139 resolved as shift
WARNING: shift/reduce conflict for Switch in state 139 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 139 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 139 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 139 resolved as shift
WARNING: shift/reduce conflict for Break in state 140 resolved as shift
WARNING: shift/reduce conflict for Continue in state 140 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 140 resolved as shift
WARNING: shift/reduce conflict for id in state 141 resolved as shift
WARNING: shift/reduce conflict for id in state 141 resolved as shift
WARNING: shift/reduce conflict for For in state 141 resolved as shift
WARNING: shift/reduce conflict for id in state 141 resolved as shift
WARNING: shift/reduce conflict for For in state 141 resolved as shift
WARNING: shift/reduce conflict for While in state 141 resolved as shift
WARNING: shift/reduce conflict for id in state 141 resolved as shift
WARNING: shift/reduce conflict for For in state 141 resolved as shift
WARNING: shift/reduce conflict for While in state 141 resolved as shift
WARNING: shift/reduce conflict for If in state 141 resolved as shift
WARNING: shift/reduce conflict for Switch in state 141 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 141 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 141 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 141 resolved as shift
WARNING: shift/reduce conflict for id in state 146 resolved as shift
WARNING: shift/reduce conflict for id in state 146 resolved as shift
WARNING: shift/reduce conflict for id in state 146 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 146 resolved as shift
WARNING: shift/reduce conflict for id in state 153 resolved as shift
WARNING: shift/reduce conflict for id in state 153 resolved as shift
WARNING: shift/reduce conflict for id in state 153 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 153 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 163 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 163 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 163 resolved as shift
WARNING: shift/reduce conflict for id in state 168 resolved as shift
WARNING: shift/reduce conflict for id in state 168 resolved as shift
WARNING: shift/reduce conflict for id in state 172 resolved as shift
WARNING: shift/reduce conflict for id in state 172 resolved as shift
WARNING: shift/reduce conflict for comma in state 175 resolved as shift
WARNING: shift/reduce conflict for id in state 178 resolved as shift
WARNING: shift/reduce conflict for id in state 178 resolved as shift
WARNING: shift/reduce conflict for id in state 178 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 178 resolved as shift
WARNING: shift/reduce conflict for comma in state 182 resolved as shift
WARNING: shift/reduce conflict for id in state 188 resolved as shift
WARNING: shift/reduce conflict for For in state 188 resolved as shift
WARNING: shift/reduce conflict for id in state 188 resolved as shift
WARNING: shift/reduce conflict for For in state 188 resolved as shift
WARNING: shift/reduce conflict for While in state 188 resolved as shift
WARNING: shift/reduce conflict for id in state 188 resolved as shift
WARNING: shift/reduce conflict for For in state 188 resolved as shift
WARNING: shift/reduce conflict for While in state 188 resolved as shift
WARNING: shift/reduce conflict for If in state 188 resolved as shift
WARNING: shift/reduce conflict for Switch in state 188 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 188 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 188 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 188 resolved as shift
WARNING: shift/reduce conflict for id in state 192 resolved as shift
WARNING: shift/reduce conflict for id in state 192 resolved as shift
WARNING: shift/reduce conflict for id in state 192 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 192 resolved as shift
WARNING: shift/reduce conflict for id in state 193 resolved as shift
WARNING: shift/reduce conflict for id in state 193 resolved as shift
WARNING: shift/reduce conflict for lit_intposi in state 193 resolved as shift
WARNING: shift/reduce conflict for lit_intnega in state 193 resolved as shift
WARNING: shift/reduce conflict for lit_decposi in state 193 resolved as shift
WARNING: shift/reduce conflict for lit_decnega in state 193 resolved as shift
WARNING: shift/reduce conflict for id in state 193 resolved as shift
WARNING: shift/reduce conflict for open_par in state 193 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 193 resolved as shift
WARNING: shift/reduce conflict for equal in state 202 resolved as shift
WARNING: shift/reduce conflict for Break in state 210 resolved as shift
WARNING: shift/reduce conflict for Continue in state 210 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 210 resolved as shift
WARNING: shift/reduce conflict for Break in state 210 resolved as shift
WARNING: shift/reduce conflict for Continue in state 210 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 210 resolved as shift
WARNING: shift/reduce conflict for id in state 210 resolved as shift
WARNING: shift/reduce conflict for id in state 210 resolved as shift
WARNING: shift/reduce conflict for Break in state 210 resolved as shift
WARNING: shift/reduce conflict for Continue in state 210 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 210 resolved as shift
WARNING: shift/reduce conflict for For in state 210 resolved as shift
WARNING: shift/reduce conflict for id in state 210 resolved as shift
WARNING: shift/reduce conflict for For in state 210 resolved as shift
WARNING: shift/reduce conflict for Break in state 210 resolved as shift
WARNING: shift/reduce conflict for Continue in state 210 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 210 resolved as shift
WARNING: shift/reduce conflict for While in state 210 resolved as shift
WARNING: shift/reduce conflict for id in state 210 resolved as shift
WARNING: shift/reduce conflict for For in state 210 resolved as shift
WARNING: shift/reduce conflict for While in state 210 resolved as shift
WARNING: shift/reduce conflict for Break in state 210 resolved as shift
WARNING: shift/reduce conflict for Continue in state 210 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 210 resolved as shift
WARNING: shift/reduce conflict for If in state 210 resolved as shift
WARNING: shift/reduce conflict for Switch in state 210 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 210 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 210 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 210 resolved as shift
WARNING: shift/reduce conflict for Break in state 211 resolved as shift
WARNING: shift/reduce conflict for Continue in state 211 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 211 resolved as shift
WARNING: shift/reduce conflict for Break in state 211 resolved as shift
WARNING: shift/reduce conflict for Continue in state 211 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 211 resolved as shift
WARNING: shift/reduce conflict for id in state 211 resolved as shift
WARNING: shift/reduce conflict for id in state 211 resolved as shift
WARNING: shift/reduce conflict for Break in state 211 resolved as shift
WARNING: shift/reduce conflict for Continue in state 211 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 211 resolved as shift
WARNING: shift/reduce conflict for For in state 211 resolved as shift
WARNING: shift/reduce conflict for id in state 211 resolved as shift
WARNING: shift/reduce conflict for For in state 211 resolved as shift
WARNING: shift/reduce conflict for Break in state 211 resolved as shift
WARNING: shift/reduce conflict for Continue in state 211 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 211 resolved as shift
WARNING: shift/reduce conflict for While in state 211 resolved as shift
WARNING: shift/reduce conflict for id in state 211 resolved as shift
WARNING: shift/reduce conflict for For in state 211 resolved as shift
WARNING: shift/reduce conflict for While in state 211 resolved as shift
WARNING: shift/reduce conflict for Break in state 211 resolved as shift
WARNING: shift/reduce conflict for Continue in state 211 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 211 resolved as shift
WARNING: shift/reduce conflict for If in state 211 resolved as shift
WARNING: shift/reduce conflict for Switch in state 211 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 211 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 211 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 211 resolved as shift
WARNING: shift/reduce conflict for Break in state 212 resolved as shift
WARNING: shift/reduce conflict for Continue in state 212 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 212 resolved as shift
WARNING: shift/reduce conflict for Break in state 212 resolved as shift
WARNING: shift/reduce conflict for Continue in state 212 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 212 resolved as shift
WARNING: shift/reduce conflict for id in state 212 resolved as shift
WARNING: shift/reduce conflict for id in state 212 resolved as shift
WARNING: shift/reduce conflict for Break in state 212 resolved as shift
WARNING: shift/reduce conflict for Continue in state 212 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 212 resolved as shift
WARNING: shift/reduce conflict for For in state 212 resolved as shift
WARNING: shift/reduce conflict for id in state 212 resolved as shift
WARNING: shift/reduce conflict for For in state 212 resolved as shift
WARNING: shift/reduce conflict for Break in state 212 resolved as shift
WARNING: shift/reduce conflict for Continue in state 212 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 212 resolved as shift
WARNING: shift/reduce conflict for While in state 212 resolved as shift
WARNING: shift/reduce conflict for id in state 212 resolved as shift
WARNING: shift/reduce conflict for For in state 212 resolved as shift
WARNING: shift/reduce conflict for While in state 212 resolved as shift
WARNING: shift/reduce conflict for Break in state 212 resolved as shift
WARNING: shift/reduce conflict for Continue in state 212 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 212 resolved as shift
WARNING: shift/reduce conflict for If in state 212 resolved as shift
WARNING: shift/reduce conflict for Switch in state 212 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 212 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 212 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 212 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 213 resolved as shift
WARNING: shift/reduce conflict for Elif in state 213 resolved as shift
WARNING: shift/reduce conflict for Else in state 213 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 213 resolved as shift
WARNING: shift/reduce conflict for Elif in state 213 resolved as shift
WARNING: shift/reduce conflict for Else in state 213 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 217 resolved as shift
WARNING: shift/reduce conflict for Elif in state 217 resolved as shift
WARNING: shift/reduce conflict for Else in state 217 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 217 resolved as shift
WARNING: shift/reduce conflict for Elif in state 217 resolved as shift
WARNING: shift/reduce conflict for Else in state 217 resolved as shift
WARNING: shift/reduce conflict for Break in state 218 resolved as shift
WARNING: shift/reduce conflict for Continue in state 218 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 218 resolved as shift
WARNING: shift/reduce conflict for Break in state 218 resolved as shift
WARNING: shift/reduce conflict for Continue in state 218 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 218 resolved as shift
WARNING: shift/reduce conflict for id in state 218 resolved as shift
WARNING: shift/reduce conflict for id in state 218 resolved as shift
WARNING: shift/reduce conflict for Break in state 218 resolved as shift
WARNING: shift/reduce conflict for Continue in state 218 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 218 resolved as shift
WARNING: shift/reduce conflict for For in state 218 resolved as shift
WARNING: shift/reduce conflict for id in state 218 resolved as shift
WARNING: shift/reduce conflict for For in state 218 resolved as shift
WARNING: shift/reduce conflict for Break in state 218 resolved as shift
WARNING: shift/reduce conflict for Continue in state 218 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 218 resolved as shift
WARNING: shift/reduce conflict for While in state 218 resolved as shift
WARNING: shift/reduce conflict for id in state 218 resolved as shift
WARNING: shift/reduce conflict for For in state 218 resolved as shift
WARNING: shift/reduce conflict for While in state 218 resolved as shift
WARNING: shift/reduce conflict for Break in state 218 resolved as shift
WARNING: shift/reduce conflict for Continue in state 218 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 218 resolved as shift
WARNING: shift/reduce conflict for If in state 218 resolved as shift
WARNING: shift/reduce conflict for Switch in state 218 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 218 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 218 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 218 resolved as shift
WARNING: shift/reduce conflict for Break in state 219 resolved as shift
WARNING: shift/reduce conflict for Continue in state 219 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 219 resolved as shift
WARNING: shift/reduce conflict for Break in state 219 resolved as shift
WARNING: shift/reduce conflict for Continue in state 219 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 219 resolved as shift
WARNING: shift/reduce conflict for id in state 219 resolved as shift
WARNING: shift/reduce conflict for id in state 219 resolved as shift
WARNING: shift/reduce conflict for Break in state 219 resolved as shift
WARNING: shift/reduce conflict for Continue in state 219 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 219 resolved as shift
WARNING: shift/reduce conflict for For in state 219 resolved as shift
WARNING: shift/reduce conflict for id in state 219 resolved as shift
WARNING: shift/reduce conflict for For in state 219 resolved as shift
WARNING: shift/reduce conflict for Break in state 219 resolved as shift
WARNING: shift/reduce conflict for Continue in state 219 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 219 resolved as shift
WARNING: shift/reduce conflict for While in state 219 resolved as shift
WARNING: shift/reduce conflict for id in state 219 resolved as shift
WARNING: shift/reduce conflict for For in state 219 resolved as shift
WARNING: shift/reduce conflict for While in state 219 resolved as shift
WARNING: shift/reduce conflict for Break in state 219 resolved as shift
WARNING: shift/reduce conflict for Continue in state 219 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 219 resolved as shift
WARNING: shift/reduce conflict for If in state 219 resolved as shift
WARNING: shift/reduce conflict for Switch in state 219 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 219 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 219 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 219 resolved as shift
WARNING: shift/reduce conflict for Elif in state 220 resolved as shift
WARNING: shift/reduce conflict for Else in state 220 resolved as shift
WARNING: shift/reduce conflict for Elif in state 220 resolved as shift
WARNING: shift/reduce conflict for Else in state 220 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 221 resolved as shift
WARNING: shift/reduce conflict for Elif in state 221 resolved as shift
WARNING: shift/reduce conflict for Else in state 221 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 221 resolved as shift
WARNING: shift/reduce conflict for Elif in state 221 resolved as shift
WARNING: shift/reduce conflict for Else in state 221 resolved as shift
WARNING: shift/reduce conflict for Break in state 222 resolved as shift
WARNING: shift/reduce conflict for Continue in state 222 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 222 resolved as shift
WARNING: shift/reduce conflict for Break in state 222 resolved as shift
WARNING: shift/reduce conflict for Continue in state 222 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 222 resolved as shift
WARNING: shift/reduce conflict for id in state 222 resolved as shift
WARNING: shift/reduce conflict for id in state 222 resolved as shift
WARNING: shift/reduce conflict for Break in state 222 resolved as shift
WARNING: shift/reduce conflict for Continue in state 222 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 222 resolved as shift
WARNING: shift/reduce conflict for For in state 222 resolved as shift
WARNING: shift/reduce conflict for id in state 222 resolved as shift
WARNING: shift/reduce conflict for For in state 222 resolved as shift
WARNING: shift/reduce conflict for Break in state 222 resolved as shift
WARNING: shift/reduce conflict for Continue in state 222 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 222 resolved as shift
WARNING: shift/reduce conflict for While in state 222 resolved as shift
WARNING: shift/reduce conflict for id in state 222 resolved as shift
WARNING: shift/reduce conflict for For in state 222 resolved as shift
WARNING: shift/reduce conflict for While in state 222 resolved as shift
WARNING: shift/reduce conflict for Break in state 222 resolved as shift
WARNING: shift/reduce conflict for Continue in state 222 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 222 resolved as shift
WARNING: shift/reduce conflict for If in state 222 resolved as shift
WARNING: shift/reduce conflict for Switch in state 222 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 222 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 222 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 222 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 223 resolved as shift
WARNING: shift/reduce conflict for Elif in state 223 resolved as shift
WARNING: shift/reduce conflict for Else in state 223 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 223 resolved as shift
WARNING: shift/reduce conflict for Elif in state 223 resolved as shift
WARNING: shift/reduce conflict for Else in state 223 resolved as shift
WARNING: shift/reduce conflict for plus in state 231 resolved as shift
WARNING: shift/reduce conflict for minus in state 231 resolved as shift
WARNING: shift/reduce conflict for times in state 231 resolved as shift
WARNING: shift/reduce conflict for divide in state 231 resolved as shift
WARNING: shift/reduce conflict for divide_divide in state 231 resolved as shift
WARNING: shift/reduce conflict for modulo in state 231 resolved as shift
WARNING: shift/reduce conflict for times_times in state 231 resolved as shift
WARNING: shift/reduce conflict for comma in state 236 resolved as shift
WARNING: shift/reduce conflict for comma in state 250 resolved as shift
WARNING: shift/reduce conflict for id in state 258 resolved as shift
WARNING: shift/reduce conflict for For in state 258 resolved as shift
WARNING: shift/reduce conflict for id in state 258 resolved as shift
WARNING: shift/reduce conflict for For in state 258 resolved as shift
WARNING: shift/reduce conflict for While in state 258 resolved as shift
WARNING: shift/reduce conflict for id in state 258 resolved as shift
WARNING: shift/reduce conflict for For in state 258 resolved as shift
WARNING: shift/reduce conflict for While in state 258 resolved as shift
WARNING: shift/reduce conflict for If in state 258 resolved as shift
WARNING: shift/reduce conflict for Switch in state 258 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 258 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 258 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 258 resolved as shift
WARNING: shift/reduce conflict for id in state 261 resolved as shift
WARNING: shift/reduce conflict for For in state 261 resolved as shift
WARNING: shift/reduce conflict for id in state 261 resolved as shift
WARNING: shift/reduce conflict for For in state 261 resolved as shift
WARNING: shift/reduce conflict for While in state 261 resolved as shift
WARNING: shift/reduce conflict for id in state 261 resolved as shift
WARNING: shift/reduce conflict for For in state 261 resolved as shift
WARNING: shift/reduce conflict for While in state 261 resolved as shift
WARNING: shift/reduce conflict for If in state 261 resolved as shift
WARNING: shift/reduce conflict for Switch in state 261 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 261 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 261 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 261 resolved as shift
WARNING: shift/reduce conflict for id in state 264 resolved as shift
WARNING: shift/reduce conflict for For in state 264 resolved as shift
WARNING: shift/reduce conflict for id in state 264 resolved as shift
WARNING: shift/reduce conflict for For in state 264 resolved as shift
WARNING: shift/reduce conflict for While in state 264 resolved as shift
WARNING: shift/reduce conflict for id in state 264 resolved as shift
WARNING: shift/reduce conflict for For in state 264 resolved as shift
WARNING: shift/reduce conflict for While in state 264 resolved as shift
WARNING: shift/reduce conflict for If in state 264 resolved as shift
WARNING: shift/reduce conflict for Switch in state 264 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 264 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 264 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 264 resolved as shift
WARNING: shift/reduce conflict for id in state 267 resolved as shift
WARNING: shift/reduce conflict for For in state 267 resolved as shift
WARNING: shift/reduce conflict for id in state 267 resolved as shift
WARNING: shift/reduce conflict for For in state 267 resolved as shift
WARNING: shift/reduce conflict for While in state 267 resolved as shift
WARNING: shift/reduce conflict for id in state 267 resolved as shift
WARNING: shift/reduce conflict for For in state 267 resolved as shift
WARNING: shift/reduce conflict for While in state 267 resolved as shift
WARNING: shift/reduce conflict for If in state 267 resolved as shift
WARNING: shift/reduce conflict for Switch in state 267 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 267 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 267 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 267 resolved as shift
WARNING: shift/reduce conflict for id in state 273 resolved as shift
WARNING: shift/reduce conflict for id in state 273 resolved as shift
WARNING: shift/reduce conflict for id in state 273 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 273 resolved as shift
WARNING: shift/reduce conflict for Break in state 280 resolved as shift
WARNING: shift/reduce conflict for Continue in state 280 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 280 resolved as shift
WARNING: shift/reduce conflict for Break in state 280 resolved as shift
WARNING: shift/reduce conflict for Continue in state 280 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for Break in state 280 resolved as shift
WARNING: shift/reduce conflict for Continue in state 280 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 280 resolved as shift
WARNING: shift/reduce conflict for For in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for For in state 280 resolved as shift
WARNING: shift/reduce conflict for Break in state 280 resolved as shift
WARNING: shift/reduce conflict for Continue in state 280 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 280 resolved as shift
WARNING: shift/reduce conflict for While in state 280 resolved as shift
WARNING: shift/reduce conflict for id in state 280 resolved as shift
WARNING: shift/reduce conflict for For in state 280 resolved as shift
WARNING: shift/reduce conflict for While in state 280 resolved as shift
WARNING: shift/reduce conflict for Break in state 280 resolved as shift
WARNING: shift/reduce conflict for Continue in state 280 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 280 resolved as shift
WARNING: shift/reduce conflict for If in state 280 resolved as shift
WARNING: shift/reduce conflict for Switch in state 280 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 280 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 280 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 280 resolved as shift
WARNING: shift/reduce conflict for Break in state 281 resolved as shift
WARNING: shift/reduce conflict for Continue in state 281 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 281 resolved as shift
WARNING: shift/reduce conflict for Break in state 281 resolved as shift
WARNING: shift/reduce conflict for Continue in state 281 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 281 resolved as shift
WARNING: shift/reduce conflict for id in state 281 resolved as shift
WARNING: shift/reduce conflict for id in state 281 resolved as shift
WARNING: shift/reduce conflict for Break in state 281 resolved as shift
WARNING: shift/reduce conflict for Continue in state 281 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 281 resolved as shift
WARNING: shift/reduce conflict for For in state 281 resolved as shift
WARNING: shift/reduce conflict for id in state 281 resolved as shift
WARNING: shift/reduce conflict for For in state 281 resolved as shift
WARNING: shift/reduce conflict for Break in state 281 resolved as shift
WARNING: shift/reduce conflict for Continue in state 281 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 281 resolved as shift
WARNING: shift/reduce conflict for While in state 281 resolved as shift
WARNING: shift/reduce conflict for id in state 281 resolved as shift
WARNING: shift/reduce conflict for For in state 281 resolved as shift
WARNING: shift/reduce conflict for While in state 281 resolved as shift
WARNING: shift/reduce conflict for Break in state 281 resolved as shift
WARNING: shift/reduce conflict for Continue in state 281 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 281 resolved as shift
WARNING: shift/reduce conflict for If in state 281 resolved as shift
WARNING: shift/reduce conflict for Switch in state 281 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 281 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 281 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 281 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 282 resolved as shift
WARNING: shift/reduce conflict for Elif in state 282 resolved as shift
WARNING: shift/reduce conflict for Else in state 282 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 282 resolved as shift
WARNING: shift/reduce conflict for Elif in state 282 resolved as shift
WARNING: shift/reduce conflict for Else in state 282 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 283 resolved as shift
WARNING: shift/reduce conflict for Elif in state 283 resolved as shift
WARNING: shift/reduce conflict for Else in state 283 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 283 resolved as shift
WARNING: shift/reduce conflict for Elif in state 283 resolved as shift
WARNING: shift/reduce conflict for Else in state 283 resolved as shift
WARNING: shift/reduce conflict for Break in state 284 resolved as shift
WARNING: shift/reduce conflict for Continue in state 284 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 284 resolved as shift
WARNING: shift/reduce conflict for Break in state 284 resolved as shift
WARNING: shift/reduce conflict for Continue in state 284 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for Break in state 284 resolved as shift
WARNING: shift/reduce conflict for Continue in state 284 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 284 resolved as shift
WARNING: shift/reduce conflict for For in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for For in state 284 resolved as shift
WARNING: shift/reduce conflict for Break in state 284 resolved as shift
WARNING: shift/reduce conflict for Continue in state 284 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 284 resolved as shift
WARNING: shift/reduce conflict for While in state 284 resolved as shift
WARNING: shift/reduce conflict for id in state 284 resolved as shift
WARNING: shift/reduce conflict for For in state 284 resolved as shift
WARNING: shift/reduce conflict for While in state 284 resolved as shift
WARNING: shift/reduce conflict for Break in state 284 resolved as shift
WARNING: shift/reduce conflict for Continue in state 284 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 284 resolved as shift
WARNING: shift/reduce conflict for If in state 284 resolved as shift
WARNING: shift/reduce conflict for Switch in state 284 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 284 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 284 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 284 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 285 resolved as shift
WARNING: shift/reduce conflict for Elif in state 285 resolved as shift
WARNING: shift/reduce conflict for Else in state 285 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 285 resolved as shift
WARNING: shift/reduce conflict for Elif in state 285 resolved as shift
WARNING: shift/reduce conflict for Else in state 285 resolved as shift
WARNING: shift/reduce conflict for Elif in state 287 resolved as shift
WARNING: shift/reduce conflict for Else in state 287 resolved as shift
WARNING: shift/reduce conflict for Elif in state 287 resolved as shift
WARNING: shift/reduce conflict for Else in state 287 resolved as shift
WARNING: shift/reduce conflict for Elif in state 300 resolved as shift
WARNING: shift/reduce conflict for Else in state 300 resolved as shift
WARNING: shift/reduce conflict for Elif in state 300 resolved as shift
WARNING: shift/reduce conflict for Else in state 300 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 301 resolved as shift
WARNING: shift/reduce conflict for Elif in state 301 resolved as shift
WARNING: shift/reduce conflict for Else in state 301 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 301 resolved as shift
WARNING: shift/reduce conflict for Elif in state 301 resolved as shift
WARNING: shift/reduce conflict for Else in state 301 resolved as shift
WARNING: shift/reduce conflict for Break in state 302 resolved as shift
WARNING: shift/reduce conflict for Continue in state 302 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 302 resolved as shift
WARNING: shift/reduce conflict for Break in state 302 resolved as shift
WARNING: shift/reduce conflict for Continue in state 302 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 302 resolved as shift
WARNING: shift/reduce conflict for id in state 302 resolved as shift
WARNING: shift/reduce conflict for id in state 302 resolved as shift
WARNING: shift/reduce conflict for Break in state 302 resolved as shift
WARNING: shift/reduce conflict for Continue in state 302 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 302 resolved as shift
WARNING: shift/reduce conflict for For in state 302 resolved as shift
WARNING: shift/reduce conflict for id in state 302 resolved as shift
WARNING: shift/reduce conflict for For in state 302 resolved as shift
WARNING: shift/reduce conflict for Break in state 302 resolved as shift
WARNING: shift/reduce conflict for Continue in state 302 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 302 resolved as shift
WARNING: shift/reduce conflict for While in state 302 resolved as shift
WARNING: shift/reduce conflict for id in state 302 resolved as shift
WARNING: shift/reduce conflict for For in state 302 resolved as shift
WARNING: shift/reduce conflict for While in state 302 resolved as shift
WARNING: shift/reduce conflict for Break in state 302 resolved as shift
WARNING: shift/reduce conflict for Continue in state 302 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 302 resolved as shift
WARNING: shift/reduce conflict for If in state 302 resolved as shift
WARNING: shift/reduce conflict for Switch in state 302 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 302 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 302 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 302 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 303 resolved as shift
WARNING: shift/reduce conflict for Elif in state 303 resolved as shift
WARNING: shift/reduce conflict for Else in state 303 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 303 resolved as shift
WARNING: shift/reduce conflict for Elif in state 303 resolved as shift
WARNING: shift/reduce conflict for Else in state 303 resolved as shift
WARNING: shift/reduce conflict for Elif in state 306 resolved as shift
WARNING: shift/reduce conflict for Else in state 306 resolved as shift
WARNING: shift/reduce conflict for Elif in state 306 resolved as shift
WARNING: shift/reduce conflict for Else in state 306 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 307 resolved as shift
WARNING: shift/reduce conflict for Elif in state 307 resolved as shift
WARNING: shift/reduce conflict for Else in state 307 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 307 resolved as shift
WARNING: shift/reduce conflict for Elif in state 307 resolved as shift
WARNING: shift/reduce conflict for Else in state 307 resolved as shift
WARNING: shift/reduce conflict for Elif in state 309 resolved as shift
WARNING: shift/reduce conflict for Else in state 309 resolved as shift
WARNING: shift/reduce conflict for Elif in state 309 resolved as shift
WARNING: shift/reduce conflict for Else in state 309 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 313 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 313 resolved as shift
WARNING: shift/reduce conflict for close_brace in state 313 resolved as shift
WARNING: shift/reduce conflict for comma in state 326 resolved as shift
WARNING: shift/reduce conflict for id in state 331 resolved as shift
WARNING: shift/reduce conflict for For in state 331 resolved as shift
WARNING: shift/reduce conflict for id in state 331 resolved as shift
WARNING: shift/reduce conflict for For in state 331 resolved as shift
WARNING: shift/reduce conflict for While in state 331 resolved as shift
WARNING: shift/reduce conflict for id in state 331 resolved as shift
WARNING: shift/reduce conflict for For in state 331 resolved as shift
WARNING: shift/reduce conflict for While in state 331 resolved as shift
WARNING: shift/reduce conflict for If in state 331 resolved as shift
WARNING: shift/reduce conflict for Switch in state 331 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 331 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 331 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 331 resolved as shift
WARNING: shift/reduce conflict for id in state 333 resolved as shift
WARNING: shift/reduce conflict for For in state 333 resolved as shift
WARNING: shift/reduce conflict for id in state 333 resolved as shift
WARNING: shift/reduce conflict for For in state 333 resolved as shift
WARNING: shift/reduce conflict for While in state 333 resolved as shift
WARNING: shift/reduce conflict for id in state 333 resolved as shift
WARNING: shift/reduce conflict for For in state 333 resolved as shift
WARNING: shift/reduce conflict for While in state 333 resolved as shift
WARNING: shift/reduce conflict for If in state 333 resolved as shift
WARNING: shift/reduce conflict for Switch in state 333 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 333 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 333 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 333 resolved as shift
WARNING: shift/reduce conflict for id in state 335 resolved as shift
WARNING: shift/reduce conflict for For in state 335 resolved as shift
WARNING: shift/reduce conflict for id in state 335 resolved as shift
WARNING: shift/reduce conflict for For in state 335 resolved as shift
WARNING: shift/reduce conflict for While in state 335 resolved as shift
WARNING: shift/reduce conflict for id in state 335 resolved as shift
WARNING: shift/reduce conflict for For in state 335 resolved as shift
WARNING: shift/reduce conflict for While in state 335 resolved as shift
WARNING: shift/reduce conflict for If in state 335 resolved as shift
WARNING: shift/reduce conflict for Switch in state 335 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 335 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 335 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 335 resolved as shift
WARNING: shift/reduce conflict for id in state 337 resolved as shift
WARNING: shift/reduce conflict for For in state 337 resolved as shift
WARNING: shift/reduce conflict for id in state 337 resolved as shift
WARNING: shift/reduce conflict for For in state 337 resolved as shift
WARNING: shift/reduce conflict for While in state 337 resolved as shift
WARNING: shift/reduce conflict for id in state 337 resolved as shift
WARNING: shift/reduce conflict for For in state 337 resolved as shift
WARNING: shift/reduce conflict for While in state 337 resolved as shift
WARNING: shift/reduce conflict for If in state 337 resolved as shift
WARNING: shift/reduce conflict for Switch in state 337 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 337 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 337 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 337 resolved as shift
WARNING: shift/reduce conflict for id in state 339 resolved as shift
WARNING: shift/reduce conflict for For in state 339 resolved as shift
WARNING: shift/reduce conflict for id in state 339 resolved as shift
WARNING: shift/reduce conflict for For in state 339 resolved as shift
WARNING: shift/reduce conflict for While in state 339 resolved as shift
WARNING: shift/reduce conflict for id in state 339 resolved as shift
WARNING: shift/reduce conflict for For in state 339 resolved as shift
WARNING: shift/reduce conflict for While in state 339 resolved as shift
WARNING: shift/reduce conflict for If in state 339 resolved as shift
WARNING: shift/reduce conflict for Switch in state 339 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 339 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 339 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 339 resolved as shift
WARNING: shift/reduce conflict for id in state 341 resolved as shift
WARNING: shift/reduce conflict for For in state 341 resolved as shift
WARNING: shift/reduce conflict for id in state 341 resolved as shift
WARNING: shift/reduce conflict for For in state 341 resolved as shift
WARNING: shift/reduce conflict for While in state 341 resolved as shift
WARNING: shift/reduce conflict for id in state 341 resolved as shift
WARNING: shift/reduce conflict for For in state 341 resolved as shift
WARNING: shift/reduce conflict for While in state 341 resolved as shift
WARNING: shift/reduce conflict for If in state 341 resolved as shift
WARNING: shift/reduce conflict for Switch in state 341 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 341 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 341 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 341 resolved as shift
WARNING: shift/reduce conflict for id in state 343 resolved as shift
WARNING: shift/reduce conflict for id in state 343 resolved as shift
WARNING: shift/reduce conflict for id in state 343 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 343 resolved as shift
WARNING: shift/reduce conflict for Break in state 351 resolved as shift
WARNING: shift/reduce conflict for Continue in state 351 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 351 resolved as shift
WARNING: shift/reduce conflict for id in state 351 resolved as shift
WARNING: shift/reduce conflict for id in state 351 resolved as shift
WARNING: shift/reduce conflict for Break in state 351 resolved as shift
WARNING: shift/reduce conflict for Continue in state 351 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 351 resolved as shift
WARNING: shift/reduce conflict for For in state 351 resolved as shift
WARNING: shift/reduce conflict for id in state 351 resolved as shift
WARNING: shift/reduce conflict for For in state 351 resolved as shift
WARNING: shift/reduce conflict for Break in state 351 resolved as shift
WARNING: shift/reduce conflict for Continue in state 351 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 351 resolved as shift
WARNING: shift/reduce conflict for While in state 351 resolved as shift
WARNING: shift/reduce conflict for id in state 351 resolved as shift
WARNING: shift/reduce conflict for For in state 351 resolved as shift
WARNING: shift/reduce conflict for While in state 351 resolved as shift
WARNING: shift/reduce conflict for Break in state 351 resolved as shift
WARNING: shift/reduce conflict for Continue in state 351 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 351 resolved as shift
WARNING: shift/reduce conflict for If in state 351 resolved as shift
WARNING: shift/reduce conflict for Switch in state 351 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 351 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 351 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 351 resolved as shift
WARNING: shift/reduce conflict for Break in state 352 resolved as shift
WARNING: shift/reduce conflict for Continue in state 352 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 352 resolved as shift
WARNING: shift/reduce conflict for Break in state 352 resolved as shift
WARNING: shift/reduce conflict for Continue in state 352 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 352 resolved as shift
WARNING: shift/reduce conflict for id in state 352 resolved as shift
WARNING: shift/reduce conflict for id in state 352 resolved as shift
WARNING: shift/reduce conflict for Break in state 352 resolved as shift
WARNING: shift/reduce conflict for Continue in state 352 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 352 resolved as shift
WARNING: shift/reduce conflict for For in state 352 resolved as shift
WARNING: shift/reduce conflict for id in state 352 resolved as shift
WARNING: shift/reduce conflict for For in state 352 resolved as shift
WARNING: shift/reduce conflict for Break in state 352 resolved as shift
WARNING: shift/reduce conflict for Continue in state 352 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 352 resolved as shift
WARNING: shift/reduce conflict for While in state 352 resolved as shift
WARNING: shift/reduce conflict for id in state 352 resolved as shift
WARNING: shift/reduce conflict for For in state 352 resolved as shift
WARNING: shift/reduce conflict for While in state 352 resolved as shift
WARNING: shift/reduce conflict for Break in state 352 resolved as shift
WARNING: shift/reduce conflict for Continue in state 352 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 352 resolved as shift
WARNING: shift/reduce conflict for If in state 352 resolved as shift
WARNING: shift/reduce conflict for Switch in state 352 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 352 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 352 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 352 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 353 resolved as shift
WARNING: shift/reduce conflict for Elif in state 353 resolved as shift
WARNING: shift/reduce conflict for Else in state 353 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 353 resolved as shift
WARNING: shift/reduce conflict for Elif in state 353 resolved as shift
WARNING: shift/reduce conflict for Else in state 353 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 354 resolved as shift
WARNING: shift/reduce conflict for Elif in state 354 resolved as shift
WARNING: shift/reduce conflict for Else in state 354 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 354 resolved as shift
WARNING: shift/reduce conflict for Elif in state 354 resolved as shift
WARNING: shift/reduce conflict for Else in state 354 resolved as shift
WARNING: shift/reduce conflict for Elif in state 356 resolved as shift
WARNING: shift/reduce conflict for Else in state 356 resolved as shift
WARNING: shift/reduce conflict for Elif in state 356 resolved as shift
WARNING: shift/reduce conflict for Else in state 356 resolved as shift
WARNING: shift/reduce conflict for Elif in state 358 resolved as shift
WARNING: shift/reduce conflict for Else in state 358 resolved as shift
WARNING: shift/reduce conflict for Elif in state 358 resolved as shift
WARNING: shift/reduce conflict for Else in state 358 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 359 resolved as shift
WARNING: shift/reduce conflict for Elif in state 359 resolved as shift
WARNING: shift/reduce conflict for Else in state 359 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 359 resolved as shift
WARNING: shift/reduce conflict for Elif in state 359 resolved as shift
WARNING: shift/reduce conflict for Else in state 359 resolved as shift
WARNING: shift/reduce conflict for Elif in state 361 resolved as shift
WARNING: shift/reduce conflict for Else in state 361 resolved as shift
WARNING: shift/reduce conflict for Elif in state 361 resolved as shift
WARNING: shift/reduce conflict for Else in state 361 resolved as shift
WARNING: shift/reduce conflict for Elif in state 369 resolved as shift
WARNING: shift/reduce conflict for Else in state 369 resolved as shift
WARNING: shift/reduce conflict for Elif in state 369 resolved as shift
WARNING: shift/reduce conflict for Else in state 369 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 370 resolved as shift
WARNING: shift/reduce conflict for Elif in state 370 resolved as shift
WARNING: shift/reduce conflict for Else in state 370 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 370 resolved as shift
WARNING: shift/reduce conflict for Elif in state 370 resolved as shift
WARNING: shift/reduce conflict for Else in state 370 resolved as shift
WARNING: shift/reduce conflict for Elif in state 372 resolved as shift
WARNING: shift/reduce conflict for Else in state 372 resolved as shift
WARNING: shift/reduce conflict for Elif in state 372 resolved as shift
WARNING: shift/reduce conflict for Else in state 372 resolved as shift
WARNING: shift/reduce conflict for Elif in state 375 resolved as shift
WARNING: shift/reduce conflict for Else in state 375 resolved as shift
WARNING: shift/reduce conflict for Elif in state 375 resolved as shift
WARNING: shift/reduce conflict for Else in state 375 resolved as shift
WARNING: shift/reduce conflict for comma in state 382 resolved as shift
WARNING: shift/reduce conflict for id in state 394 resolved as shift
WARNING: shift/reduce conflict for For in state 394 resolved as shift
WARNING: shift/reduce conflict for id in state 394 resolved as shift
WARNING: shift/reduce conflict for For in state 394 resolved as shift
WARNING: shift/reduce conflict for While in state 394 resolved as shift
WARNING: shift/reduce conflict for id in state 394 resolved as shift
WARNING: shift/reduce conflict for For in state 394 resolved as shift
WARNING: shift/reduce conflict for While in state 394 resolved as shift
WARNING: shift/reduce conflict for If in state 394 resolved as shift
WARNING: shift/reduce conflict for Switch in state 394 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 394 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 394 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 394 resolved as shift
WARNING: shift/reduce conflict for id in state 395 resolved as shift
WARNING: shift/reduce conflict for For in state 395 resolved as shift
WARNING: shift/reduce conflict for id in state 395 resolved as shift
WARNING: shift/reduce conflict for For in state 395 resolved as shift
WARNING: shift/reduce conflict for While in state 395 resolved as shift
WARNING: shift/reduce conflict for id in state 395 resolved as shift
WARNING: shift/reduce conflict for For in state 395 resolved as shift
WARNING: shift/reduce conflict for While in state 395 resolved as shift
WARNING: shift/reduce conflict for If in state 395 resolved as shift
WARNING: shift/reduce conflict for Switch in state 395 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 395 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 395 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 395 resolved as shift
WARNING: shift/reduce conflict for id in state 399 resolved as shift
WARNING: shift/reduce conflict for For in state 399 resolved as shift
WARNING: shift/reduce conflict for id in state 399 resolved as shift
WARNING: shift/reduce conflict for For in state 399 resolved as shift
WARNING: shift/reduce conflict for While in state 399 resolved as shift
WARNING: shift/reduce conflict for id in state 399 resolved as shift
WARNING: shift/reduce conflict for For in state 399 resolved as shift
WARNING: shift/reduce conflict for While in state 399 resolved as shift
WARNING: shift/reduce conflict for If in state 399 resolved as shift
WARNING: shift/reduce conflict for Switch in state 399 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 399 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 399 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 399 resolved as shift
WARNING: shift/reduce conflict for id in state 403 resolved as shift
WARNING: shift/reduce conflict for For in state 403 resolved as shift
WARNING: shift/reduce conflict for id in state 403 resolved as shift
WARNING: shift/reduce conflict for For in state 403 resolved as shift
WARNING: shift/reduce conflict for While in state 403 resolved as shift
WARNING: shift/reduce conflict for id in state 403 resolved as shift
WARNING: shift/reduce conflict for For in state 403 resolved as shift
WARNING: shift/reduce conflict for While in state 403 resolved as shift
WARNING: shift/reduce conflict for If in state 403 resolved as shift
WARNING: shift/reduce conflict for Switch in state 403 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 403 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 403 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 403 resolved as shift
WARNING: shift/reduce conflict for id in state 408 resolved as shift
WARNING: shift/reduce conflict for For in state 408 resolved as shift
WARNING: shift/reduce conflict for id in state 408 resolved as shift
WARNING: shift/reduce conflict for For in state 408 resolved as shift
WARNING: shift/reduce conflict for While in state 408 resolved as shift
WARNING: shift/reduce conflict for id in state 408 resolved as shift
WARNING: shift/reduce conflict for For in state 408 resolved as shift
WARNING: shift/reduce conflict for While in state 408 resolved as shift
WARNING: shift/reduce conflict for If in state 408 resolved as shift
WARNING: shift/reduce conflict for Switch in state 408 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 408 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 408 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 408 resolved as shift
WARNING: shift/reduce conflict for id in state 411 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 416 resolved as shift
WARNING: shift/reduce conflict for Elif in state 416 resolved as shift
WARNING: shift/reduce conflict for Else in state 416 resolved as shift
WARNING: shift/reduce conflict for close_bracket in state 416 resolved as shift
WARNING: shift/reduce conflict for Elif in state 416 resolved as shift
WARNING: shift/reduce conflict for Else in state 416 resolved as shift
WARNING: shift/reduce conflict for Elif in state 418 resolved as shift
WARNING: shift/reduce conflict for Else in state 418 resolved as shift
WARNING: shift/reduce conflict for Elif in state 418 resolved as shift
WARNING: shift/reduce conflict for Else in state 418 resolved as shift
WARNING: shift/reduce conflict for Elif in state 420 resolved as shift
WARNING: shift/reduce conflict for Else in state 420 resolved as shift
WARNING: shift/reduce conflict for Elif in state 420 resolved as shift
WARNING: shift/reduce conflict for Else in state 420 resolved as shift
WARNING: shift/reduce conflict for Elif in state 424 resolved as shift
WARNING: shift/reduce conflict for Else in state 424 resolved as shift
WARNING: shift/reduce conflict for Elif in state 424 resolved as shift
WARNING: shift/reduce conflict for Else in state 424 resolved as shift
WARNING: shift/reduce conflict for Break in state 427 resolved as shift
WARNING: shift/reduce conflict for Continue in state 427 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 427 resolved as shift
WARNING: shift/reduce conflict for id in state 427 resolved as shift
WARNING: shift/reduce conflict for id in state 427 resolved as shift
WARNING: shift/reduce conflict for Break in state 427 resolved as shift
WARNING: shift/reduce conflict for Continue in state 427 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 427 resolved as shift
WARNING: shift/reduce conflict for For in state 427 resolved as shift
WARNING: shift/reduce conflict for id in state 427 resolved as shift
WARNING: shift/reduce conflict for For in state 427 resolved as shift
WARNING: shift/reduce conflict for Break in state 427 resolved as shift
WARNING: shift/reduce conflict for Continue in state 427 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 427 resolved as shift
WARNING: shift/reduce conflict for While in state 427 resolved as shift
WARNING: shift/reduce conflict for id in state 427 resolved as shift
WARNING: shift/reduce conflict for For in state 427 resolved as shift
WARNING: shift/reduce conflict for While in state 427 resolved as shift
WARNING: shift/reduce conflict for Break in state 427 resolved as shift
WARNING: shift/reduce conflict for Continue in state 427 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 427 resolved as shift
WARNING: shift/reduce conflict for If in state 427 resolved as shift
WARNING: shift/reduce conflict for Switch in state 427 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 427 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 427 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 427 resolved as shift
WARNING: shift/reduce conflict for Elif in state 431 resolved as shift
WARNING: shift/reduce conflict for Else in state 431 resolved as shift
WARNING: shift/reduce conflict for Elif in state 431 resolved as shift
WARNING: shift/reduce conflict for Else in state 431 resolved as shift
WARNING: shift/reduce conflict for Break in state 434 resolved as shift
WARNING: shift/reduce conflict for Continue in state 434 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 434 resolved as shift
WARNING: shift/reduce conflict for id in state 434 resolved as shift
WARNING: shift/reduce conflict for id in state 434 resolved as shift
WARNING: shift/reduce conflict for Break in state 434 resolved as shift
WARNING: shift/reduce conflict for Continue in state 434 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 434 resolved as shift
WARNING: shift/reduce conflict for For in state 434 resolved as shift
WARNING: shift/reduce conflict for id in state 434 resolved as shift
WARNING: shift/reduce conflict for For in state 434 resolved as shift
WARNING: shift/reduce conflict for Break in state 434 resolved as shift
WARNING: shift/reduce conflict for Continue in state 434 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 434 resolved as shift
WARNING: shift/reduce conflict for While in state 434 resolved as shift
WARNING: shift/reduce conflict for id in state 434 resolved as shift
WARNING: shift/reduce conflict for For in state 434 resolved as shift
WARNING: shift/reduce conflict for While in state 434 resolved as shift
WARNING: shift/reduce conflict for Break in state 434 resolved as shift
WARNING: shift/reduce conflict for Continue in state 434 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 434 resolved as shift
WARNING: shift/reduce conflict for If in state 434 resolved as shift
WARNING: shift/reduce conflict for Switch in state 434 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 434 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 434 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 434 resolved as shift
WARNING: shift/reduce conflict for id in state 435 resolved as shift
WARNING: shift/reduce conflict for For in state 435 resolved as shift
WARNING: shift/reduce conflict for id in state 435 resolved as shift
WARNING: shift/reduce conflict for For in state 435 resolved as shift
WARNING: shift/reduce conflict for While in state 435 resolved as shift
WARNING: shift/reduce conflict for id in state 435 resolved as shift
WARNING: shift/reduce conflict for For in state 435 resolved as shift
WARNING: shift/reduce conflict for While in state 435 resolved as shift
WARNING: shift/reduce conflict for If in state 435 resolved as shift
WARNING: shift/reduce conflict for Switch in state 435 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 435 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 435 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 435 resolved as shift
WARNING: shift/reduce conflict for id in state 439 resolved as shift
WARNING: shift/reduce conflict for id in state 439 resolved as shift
WARNING: shift/reduce conflict for id in state 439 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 439 resolved as shift
WARNING: shift/reduce conflict for id in state 443 resolved as shift
WARNING: shift/reduce conflict for For in state 443 resolved as shift
WARNING: shift/reduce conflict for id in state 443 resolved as shift
WARNING: shift/reduce conflict for For in state 443 resolved as shift
WARNING: shift/reduce conflict for While in state 443 resolved as shift
WARNING: shift/reduce conflict for id in state 443 resolved as shift
WARNING: shift/reduce conflict for For in state 443 resolved as shift
WARNING: shift/reduce conflict for While in state 443 resolved as shift
WARNING: shift/reduce conflict for If in state 443 resolved as shift
WARNING: shift/reduce conflict for Switch in state 443 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 443 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 443 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 443 resolved as shift
WARNING: shift/reduce conflict for Break in state 469 resolved as shift
WARNING: shift/reduce conflict for Continue in state 469 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 469 resolved as shift
WARNING: shift/reduce conflict for id in state 469 resolved as shift
WARNING: shift/reduce conflict for id in state 469 resolved as shift
WARNING: shift/reduce conflict for Break in state 469 resolved as shift
WARNING: shift/reduce conflict for Continue in state 469 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 469 resolved as shift
WARNING: shift/reduce conflict for For in state 469 resolved as shift
WARNING: shift/reduce conflict for id in state 469 resolved as shift
WARNING: shift/reduce conflict for For in state 469 resolved as shift
WARNING: shift/reduce conflict for Break in state 469 resolved as shift
WARNING: shift/reduce conflict for Continue in state 469 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 469 resolved as shift
WARNING: shift/reduce conflict for While in state 469 resolved as shift
WARNING: shift/reduce conflict for id in state 469 resolved as shift
WARNING: shift/reduce conflict for For in state 469 resolved as shift
WARNING: shift/reduce conflict for While in state 469 resolved as shift
WARNING: shift/reduce conflict for Break in state 469 resolved as shift
WARNING: shift/reduce conflict for Continue in state 469 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 469 resolved as shift
WARNING: shift/reduce conflict for If in state 469 resolved as shift
WARNING: shift/reduce conflict for Switch in state 469 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 469 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 469 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 469 resolved as shift
WARNING: shift/reduce conflict for Elif in state 471 resolved as shift
WARNING: shift/reduce conflict for Else in state 471 resolved as shift
WARNING: shift/reduce conflict for Elif in state 471 resolved as shift
WARNING: shift/reduce conflict for Else in state 471 resolved as shift
WARNING: shift/reduce conflict for comma in state 486 resolved as shift
WARNING: shift/reduce conflict for equal in state 513 resolved as shift
WARNING: shift/reduce conflict for comma in state 520 resolved as shift
WARNING: shift/reduce conflict for Break in state 543 resolved as shift
WARNING: shift/reduce conflict for Continue in state 543 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 543 resolved as shift
WARNING: shift/reduce conflict for id in state 543 resolved as shift
WARNING: shift/reduce conflict for id in state 543 resolved as shift
WARNING: shift/reduce conflict for Break in state 543 resolved as shift
WARNING: shift/reduce conflict for Continue in state 543 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 543 resolved as shift
WARNING: shift/reduce conflict for For in state 543 resolved as shift
WARNING: shift/reduce conflict for id in state 543 resolved as shift
WARNING: shift/reduce conflict for For in state 543 resolved as shift
WARNING: shift/reduce conflict for Break in state 543 resolved as shift
WARNING: shift/reduce conflict for Continue in state 543 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 543 resolved as shift
WARNING: shift/reduce conflict for While in state 543 resolved as shift
WARNING: shift/reduce conflict for id in state 543 resolved as shift
WARNING: shift/reduce conflict for For in state 543 resolved as shift
WARNING: shift/reduce conflict for While in state 543 resolved as shift
WARNING: shift/reduce conflict for Break in state 543 resolved as shift
WARNING: shift/reduce conflict for Continue in state 543 resolved as shift
WARNING: shift/reduce conflict for Avoid in state 543 resolved as shift
WARNING: shift/reduce conflict for If in state 543 resolved as shift
WARNING: shift/reduce conflict for Switch in state 543 resolved as shift
WARNING: shift/reduce conflict for Sys_Call in state 543 resolved as shift
WARNING: shift/reduce conflict for Absorb in state 543 resolved as shift
WARNING: shift/reduce conflict for Discharge in state 543 resolved as shift
WARNING: shift/reduce conflict for comma in state 559 resolved as shift
WARNING: shift/reduce conflict for Elif in state 561 resolved as shift
WARNING: shift/reduce conflict for Else in state 561 resolved as shift
WARNING: shift/reduce conflict for Elif in state 561 resolved as shift
WARNING: shift/reduce conflict for Else in state 561 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 0 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 3 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (struct_dec -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 4 resolved using rule (global_dec -> <empty>)
WARNING: rejected rule (declare_statements -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 6 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (const_var_dec -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 8 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 8
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 22 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 25 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 25
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (conditional_statements -> if_statement) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 27 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (conditional_statements -> switch_statements) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 29
WARNING: reduce/reduce conflict in state 30 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 31 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 35 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 41 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 43 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 44 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 44
WARNING: reduce/reduce conflict in state 45 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 45
WARNING: reduce/reduce conflict in state 46 resolved using rule (struct_element2 -> <empty>)
WARNING: rejected rule (data_type -> <empty>) in state 46
WARNING: reduce/reduce conflict in state 66 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 66 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 66
WARNING: reduce/reduce conflict in state 68 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 68 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 68
WARNING: reduce/reduce conflict in state 69 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 69 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 70 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 92 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 93 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 93
WARNING: reduce/reduce conflict in state 95 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 95
WARNING: reduce/reduce conflict in state 98 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 98
WARNING: reduce/reduce conflict in state 111 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 111
WARNING: reduce/reduce conflict in state 115 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (parameters -> <empty>) in state 115
WARNING: reduce/reduce conflict in state 116 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (parameters -> <empty>) in state 116
WARNING: reduce/reduce conflict in state 125 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 127 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 127 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 127 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 128 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 128 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 128 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 128 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 128 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 131 resolved using rule (condition -> relational_expression)
WARNING: rejected rule (logical_operand -> relational_expression) in state 131
WARNING: reduce/reduce conflict in state 132 resolved using rule (condition -> logical_expression)
WARNING: rejected rule (logical_operand -> logical_expression) in state 132
WARNING: reduce/reduce conflict in state 134 resolved using rule (condition -> lit_bool)
WARNING: rejected rule (logical_operand -> lit_bool) in state 134
WARNING: reduce/reduce conflict in state 136 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 136
WARNING: reduce/reduce conflict in state 138 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 141 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 141
WARNING: reduce/reduce conflict in state 141 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 141
WARNING: reduce/reduce conflict in state 141 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 141
WARNING: reduce/reduce conflict in state 145 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 153 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 163 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 165 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 168 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 168
WARNING: reduce/reduce conflict in state 172 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (id_array1 -> <empty>) in state 172
WARNING: reduce/reduce conflict in state 178 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 184 resolved using rule (data_type -> <empty>)
WARNING: rejected rule (parameters -> <empty>) in state 184
WARNING: reduce/reduce conflict in state 188 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 192 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 192
WARNING: reduce/reduce conflict in state 192 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 192
WARNING: reduce/reduce conflict in state 193 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 193
WARNING: reduce/reduce conflict in state 193 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 193
WARNING: reduce/reduce conflict in state 193 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 193
WARNING: reduce/reduce conflict in state 193 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 193
WARNING: reduce/reduce conflict in state 210 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 210
WARNING: reduce/reduce conflict in state 211 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 211
WARNING: reduce/reduce conflict in state 212 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 213 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 213
WARNING: reduce/reduce conflict in state 216 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 217 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 217
WARNING: reduce/reduce conflict in state 218 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 218 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 218
WARNING: reduce/reduce conflict in state 219 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 219
WARNING: reduce/reduce conflict in state 219 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 219
WARNING: reduce/reduce conflict in state 219 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 219
WARNING: reduce/reduce conflict in state 219 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 219
WARNING: reduce/reduce conflict in state 219 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 219
WARNING: reduce/reduce conflict in state 220 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 220
WARNING: reduce/reduce conflict in state 221 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 221
WARNING: reduce/reduce conflict in state 222 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 222 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 222 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 222 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 222 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 223 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 223
WARNING: reduce/reduce conflict in state 258 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 258
WARNING: reduce/reduce conflict in state 258 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 258
WARNING: reduce/reduce conflict in state 258 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 258
WARNING: reduce/reduce conflict in state 258 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 258
WARNING: reduce/reduce conflict in state 258 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 258
WARNING: reduce/reduce conflict in state 261 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 261 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 261 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 261 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 261 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 264 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 264 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 264 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 264 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 264 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 264
WARNING: reduce/reduce conflict in state 267 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 267
WARNING: reduce/reduce conflict in state 267 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 267
WARNING: reduce/reduce conflict in state 267 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 267
WARNING: reduce/reduce conflict in state 267 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 267
WARNING: reduce/reduce conflict in state 267 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 267
WARNING: reduce/reduce conflict in state 273 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 273
WARNING: reduce/reduce conflict in state 273 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 273
WARNING: reduce/reduce conflict in state 273 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 273
WARNING: reduce/reduce conflict in state 273 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 273
WARNING: reduce/reduce conflict in state 273 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 273
WARNING: reduce/reduce conflict in state 278 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 278
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 281 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 282 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 283 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 283
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 284 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 285 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 287 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 287
WARNING: reduce/reduce conflict in state 296 resolved using rule (condition_not -> relational_expression)
WARNING: rejected rule (logical_operand -> relational_expression) in state 296
WARNING: reduce/reduce conflict in state 297 resolved using rule (condition_not -> logical_expression)
WARNING: rejected rule (logical_operand -> logical_expression) in state 297
WARNING: reduce/reduce conflict in state 298 resolved using rule (condition_not -> lit_bool)
WARNING: rejected rule (logical_operand -> lit_bool) in state 298
WARNING: reduce/reduce conflict in state 300 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 300
WARNING: reduce/reduce conflict in state 301 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 301
WARNING: reduce/reduce conflict in state 302 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 302
WARNING: reduce/reduce conflict in state 303 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 303
WARNING: reduce/reduce conflict in state 306 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 306
WARNING: reduce/reduce conflict in state 307 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 307
WARNING: reduce/reduce conflict in state 309 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 309
WARNING: reduce/reduce conflict in state 313 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 313
WARNING: reduce/reduce conflict in state 313 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 313
WARNING: reduce/reduce conflict in state 314 resolved using rule (id_array -> id array)
WARNING: rejected rule (id_array_opt -> id array) in state 314
WARNING: reduce/reduce conflict in state 317 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 317
WARNING: reduce/reduce conflict in state 317 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 317
WARNING: reduce/reduce conflict in state 319 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 331 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 331
WARNING: reduce/reduce conflict in state 331 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 331
WARNING: reduce/reduce conflict in state 331 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 331
WARNING: reduce/reduce conflict in state 331 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 331
WARNING: reduce/reduce conflict in state 331 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 331
WARNING: reduce/reduce conflict in state 333 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 333
WARNING: reduce/reduce conflict in state 333 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 333
WARNING: reduce/reduce conflict in state 333 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 333
WARNING: reduce/reduce conflict in state 333 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 333
WARNING: reduce/reduce conflict in state 333 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 333
WARNING: reduce/reduce conflict in state 335 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 335 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 335 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 335 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 335 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 337 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 337
WARNING: reduce/reduce conflict in state 337 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 337
WARNING: reduce/reduce conflict in state 337 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 337
WARNING: reduce/reduce conflict in state 337 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 337
WARNING: reduce/reduce conflict in state 337 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 337
WARNING: reduce/reduce conflict in state 339 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 339 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 339
WARNING: reduce/reduce conflict in state 341 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 341
WARNING: reduce/reduce conflict in state 341 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 341
WARNING: reduce/reduce conflict in state 341 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 341
WARNING: reduce/reduce conflict in state 341 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 341
WARNING: reduce/reduce conflict in state 341 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 341
WARNING: reduce/reduce conflict in state 343 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 343 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 343
WARNING: reduce/reduce conflict in state 351 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 351
WARNING: reduce/reduce conflict in state 352 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 352
WARNING: reduce/reduce conflict in state 353 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 353
WARNING: reduce/reduce conflict in state 354 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 354
WARNING: reduce/reduce conflict in state 356 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 356
WARNING: reduce/reduce conflict in state 358 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 358
WARNING: reduce/reduce conflict in state 359 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 359
WARNING: reduce/reduce conflict in state 361 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 361
WARNING: reduce/reduce conflict in state 363 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 363
WARNING: reduce/reduce conflict in state 363 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 363
WARNING: reduce/reduce conflict in state 363 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 363
WARNING: reduce/reduce conflict in state 363 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 363
WARNING: reduce/reduce conflict in state 363 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 363
WARNING: reduce/reduce conflict in state 365 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 365
WARNING: reduce/reduce conflict in state 365 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 365
WARNING: reduce/reduce conflict in state 365 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 365
WARNING: reduce/reduce conflict in state 365 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 365
WARNING: reduce/reduce conflict in state 365 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 365
WARNING: reduce/reduce conflict in state 369 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 369
WARNING: reduce/reduce conflict in state 370 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 370
WARNING: reduce/reduce conflict in state 372 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 372
WARNING: reduce/reduce conflict in state 375 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 375
WARNING: reduce/reduce conflict in state 382 resolved using rule (array -> open_brace close_brace)
WARNING: rejected rule (more_param -> <empty>) in state 382
WARNING: reduce/reduce conflict in state 392 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 392
WARNING: reduce/reduce conflict in state 392 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 392
WARNING: reduce/reduce conflict in state 392 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 392
WARNING: reduce/reduce conflict in state 392 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 392
WARNING: reduce/reduce conflict in state 392 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 392
WARNING: reduce/reduce conflict in state 394 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 394
WARNING: reduce/reduce conflict in state 394 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 394
WARNING: reduce/reduce conflict in state 394 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 394
WARNING: reduce/reduce conflict in state 394 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 394
WARNING: reduce/reduce conflict in state 394 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 394
WARNING: reduce/reduce conflict in state 395 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 395
WARNING: reduce/reduce conflict in state 395 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 395
WARNING: reduce/reduce conflict in state 395 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 395
WARNING: reduce/reduce conflict in state 395 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 395
WARNING: reduce/reduce conflict in state 395 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 395
WARNING: reduce/reduce conflict in state 399 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 399
WARNING: reduce/reduce conflict in state 399 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 399
WARNING: reduce/reduce conflict in state 399 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 399
WARNING: reduce/reduce conflict in state 399 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 399
WARNING: reduce/reduce conflict in state 399 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 399
WARNING: reduce/reduce conflict in state 403 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 403
WARNING: reduce/reduce conflict in state 403 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 403
WARNING: reduce/reduce conflict in state 403 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 403
WARNING: reduce/reduce conflict in state 403 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 403
WARNING: reduce/reduce conflict in state 403 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 403
WARNING: reduce/reduce conflict in state 408 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 408
WARNING: reduce/reduce conflict in state 408 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 408
WARNING: reduce/reduce conflict in state 408 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 408
WARNING: reduce/reduce conflict in state 408 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 408
WARNING: reduce/reduce conflict in state 408 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 408
WARNING: reduce/reduce conflict in state 411 resolved using rule (id_array -> <empty>)
WARNING: rejected rule (more_id -> <empty>) in state 411
WARNING: reduce/reduce conflict in state 412 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 412
WARNING: reduce/reduce conflict in state 412 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 412
WARNING: reduce/reduce conflict in state 412 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 412
WARNING: reduce/reduce conflict in state 412 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 412
WARNING: reduce/reduce conflict in state 412 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 412
WARNING: reduce/reduce conflict in state 416 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 416
WARNING: reduce/reduce conflict in state 418 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 418
WARNING: reduce/reduce conflict in state 420 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 420
WARNING: reduce/reduce conflict in state 424 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 424
WARNING: reduce/reduce conflict in state 427 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 427 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 427 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 427 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 427 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 427 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 427 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 427 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 427
WARNING: reduce/reduce conflict in state 431 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 431
WARNING: reduce/reduce conflict in state 434 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 434 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 434 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 434 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 434 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 434 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 434 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 434 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 434
WARNING: reduce/reduce conflict in state 435 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 435
WARNING: reduce/reduce conflict in state 435 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 435
WARNING: reduce/reduce conflict in state 435 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 435
WARNING: reduce/reduce conflict in state 435 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 435
WARNING: reduce/reduce conflict in state 435 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 435
WARNING: reduce/reduce conflict in state 438 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 438
WARNING: reduce/reduce conflict in state 438 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 438
WARNING: reduce/reduce conflict in state 438 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 438
WARNING: reduce/reduce conflict in state 438 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 438
WARNING: reduce/reduce conflict in state 438 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 438
WARNING: reduce/reduce conflict in state 439 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 439
WARNING: reduce/reduce conflict in state 439 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 439
WARNING: reduce/reduce conflict in state 439 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 439
WARNING: reduce/reduce conflict in state 439 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 439
WARNING: reduce/reduce conflict in state 439 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 439
WARNING: reduce/reduce conflict in state 443 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 443
WARNING: reduce/reduce conflict in state 443 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 443
WARNING: reduce/reduce conflict in state 443 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 443
WARNING: reduce/reduce conflict in state 443 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 443
WARNING: reduce/reduce conflict in state 443 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 443
WARNING: reduce/reduce conflict in state 469 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 469 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 469 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 469 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 469 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 469 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 469 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 469 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 469
WARNING: reduce/reduce conflict in state 471 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 471
WARNING: reduce/reduce conflict in state 488 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 488
WARNING: reduce/reduce conflict in state 488 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 488
WARNING: reduce/reduce conflict in state 488 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 488
WARNING: reduce/reduce conflict in state 488 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 488
WARNING: reduce/reduce conflict in state 488 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 488
WARNING: reduce/reduce conflict in state 543 resolved using rule (statements -> <empty>)
WARNING: rejected rule (inside_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 543 resolved using rule (statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 543 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (control_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 543 resolved using rule (statements -> <empty>)
WARNING: rejected rule (assignment_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 543 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 543 resolved using rule (statements -> <empty>)
WARNING: rejected rule (for_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 543 resolved using rule (assignment_statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 543 resolved using rule (statements -> <empty>)
WARNING: rejected rule (while_statements -> <empty>) in state 543
WARNING: reduce/reduce conflict in state 561 resolved using rule (condition_else -> <empty>)
WARNING: rejected rule (else_statement -> <empty>) in state 561
WARNING: reduce/reduce conflict in state 568 resolved using rule (value -> <empty>)
WARNING: rejected rule (num_value -> <empty>) in state 568
WARNING: reduce/reduce conflict in state 568 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 568
WARNING: reduce/reduce conflict in state 568 resolved using rule (value -> <empty>)
WARNING: rejected rule (id_array -> <empty>) in state 568
WARNING: reduce/reduce conflict in state 568 resolved using rule (num_value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 568
WARNING: reduce/reduce conflict in state 568 resolved using rule (value -> <empty>)
WARNING: rejected rule (literals -> <empty>) in state 568
WARNING: Rule (struct_dec -> <empty>) is never reduced
WARNING: Rule (const_var_dec -> <empty>) is never reduced
WARNING: Rule (assignment_statements -> <empty>) is never reduced
WARNING: Rule (for_statements -> <empty>) is never reduced
WARNING: Rule (while_statements -> <empty>) is never reduced
WARNING: Rule (conditional_statements -> if_statement) is never reduced
WARNING: Rule (conditional_statements -> switch_statements) is never reduced
WARNING: Rule (literals -> <empty>) is never reduced
WARNING: Rule (id_array1 -> <empty>) is never reduced
WARNING: Rule (inside_statements -> <empty>) is never reduced
WARNING: Rule (else_statement -> <empty>) is never reduced
